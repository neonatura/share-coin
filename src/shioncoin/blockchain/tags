!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCADDRF_DERIVE	../server/account.h	39;"	d
ACCADDRF_DILITHIUM	../server/account.h	43;"	d
ACCADDRF_STATIC	../server/account.h	41;"	d
ACCADDRF_WITNESS	../server/account.h	37;"	d
ACCADDR_CHANGE	../server/wallet.h	64;"	d
ACCADDR_EXEC	../server/wallet.h	66;"	d
ACCADDR_EXT	../server/wallet.h	70;"	d
ACCADDR_HDKEY	../server/wallet.h	68;"	d
ACCADDR_MINER	../server/wallet.h	74;"	d
ACCADDR_NOTARY	../server/wallet.h	72;"	d
ACCADDR_RECV	../server/wallet.h	62;"	d
ADDR_BASE58	../server/coinaddr.h	42;"	d
ADDR_BECH32	../server/coinaddr.h	43;"	d
ADDR_UNKNOWN	../server/coinaddr.h	41;"	d
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	class:BlockTransactions
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	class:BlockTransactionsRequest
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	class:CBlockHeaderAndShortTxIDs
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	struct:TransactionCompressor
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^	ADD_SERIALIZE_METHODS;$/;"	m	struct:PrefilledTransaction
ALGOBITS_NUM_BITS	../server/algobits.h	53;"	d
ALGOBITS_TOP_BITS	../server/algobits.h	49;"	d
ALGOBITS_TOP_MASK	../server/algobits.h	51;"	d
ALGO_BLAKE2S	../server/algobits.h	33;"	d
ALGO_GROESTL	../server/algobits.h	35;"	d
ALGO_KECCAK	../server/algobits.h	31;"	d
ALGO_QUBIT	../server/algobits.h	34;"	d
ALGO_SCRYPT	../server/algobits.h	29;"	d
ALGO_SHA256D	../server/algobits.h	30;"	d
ALGO_SKEIN	../server/algobits.h	36;"	d
ALGO_X11	../server/algobits.h	32;"	d
AbortMessage	../server/net.h	/^    void AbortMessage()$/;"	f	class:CNode
AbstractThresholdConditionChecker	../server/versionbits.h	/^class AbstractThresholdConditionChecker {$/;"	c
AddAddressKnown	../server/net.h	/^    void AddAddressKnown(const CAddress& addr)$/;"	f	class:CNode
AddCell	../server/matrix.h	/^		void AddCell(int row, int col, unsigned int val)$/;"	f	class:CTxMatrix
AddInput	../server/txmempool.h	/^    void AddInput(CTransaction prevTx)$/;"	f	class:CPoolTx
AddInventoryKnown	../server/net.h	/^    void AddInventoryKnown(const CInv& inv)$/;"	f	class:CNode
AddRef	../server/net.h	/^    CNode* AddRef(int64 nTimeout=0)$/;"	f	class:CNode
AllowFree	../server/wallet.h	/^		bool AllowFree(double dPriority)$/;"	f	class:CWallet
ApiItems	../shapi/shapi_api.h	/^typedef vector<Object> ApiItems;$/;"	t
ApiItems	../stratum/stratum_api.h	/^typedef vector<Object> ApiItems;$/;"	t
AskFor	../server/net.h	/^    void AskFor(CInv& inv)$/;"	f	class:CNode
BASE58_DEFAULT_PUBKEY_ADDRESS	../proto/coin_proto.h	39;"	d
BASE58_DEFAULT_SCRIPT_ADDRESS	../proto/coin_proto.h	40;"	d
BASE58_DEFAULT_SCRIPT_ADDRESS	../server/base58.h	36;"	d
BASE58_DEFAULT_SECRET_KEY	../proto/coin_proto.h	41;"	d
BASE58_EXT_PUBLIC_KEY	../proto/coin_proto.h	172;"	d
BASE58_EXT_PUBLIC_KEY	../server/coinaddr.h	/^			BASE58_EXT_PUBLIC_KEY,$/;"	e	enum:CCoinAddr::__anon3
BASE58_EXT_SECRET_KEY	../proto/coin_proto.h	174;"	d
BASE58_EXT_SECRET_KEY	../server/coinaddr.h	/^			BASE58_EXT_SECRET_KEY,$/;"	e	enum:CCoinAddr::__anon3
BASE58_PUBKEY_ADDRESS	../proto/coin_proto.h	164;"	d
BASE58_PUBKEY_ADDRESS	../server/coinaddr.h	/^			BASE58_PUBKEY_ADDRESS,$/;"	e	enum:CCoinAddr::__anon3
BASE58_SCRIPT_ADDRESS	../proto/coin_proto.h	166;"	d
BASE58_SCRIPT_ADDRESS	../server/coinaddr.h	/^			BASE58_SCRIPT_ADDRESS,$/;"	e	enum:CCoinAddr::__anon3
BASE58_SCRIPT_ADDRESS2	../server/coinaddr.h	/^			BASE58_SCRIPT_ADDRESS2,$/;"	e	enum:CCoinAddr::__anon3
BASE58_SCRIPT_ADDRESS_2	../proto/coin_proto.h	168;"	d
BASE58_SECRET_KEY	../proto/coin_proto.h	170;"	d
BASE58_SECRET_KEY	../server/coinaddr.h	/^			BASE58_SECRET_KEY,$/;"	e	enum:CCoinAddr::__anon3
BCMAP_IDLE_TIME	../blockchain/bc_block.c	34;"	d	file:
BCMAP_LOCK	../blockchain/bc.h	50;"	d
BCOP_DOWNLOAD	../server/chain.h	36;"	d
BCOP_EXPORT	../server/chain.h	35;"	d
BCOP_IMPORT	../server/chain.h	34;"	d
BCOP_MINER	../server/chain.h	38;"	d
BCOP_NONE	../server/chain.h	33;"	d
BCOP_VALIDATE	../server/chain.h	37;"	d
BC_ARCH_EXTENSION	../blockchain/bc_arch.c	32;"	d	file:
BC_BLOCKS_PER_JOURNAL	../blockchain/bc.h	46;"	d
BC_INDEX_EXTENSION	../blockchain/bc_index.c	33;"	d	file:
BC_MAP_BLOCK_SIZE	../blockchain/bc_fmap.c	39;"	d	file:
BC_MAP_BLOCK_SIZE	../blockchain/bc_fmap.c	41;"	d	file:
BC_MAX_NAME_LENGTH	../blockchain/bc.h	48;"	d
BC_TABLE_EXTENSION	../blockchain/bc_table.h	42;"	d
BC_TABLE_NULL_POS	../blockchain/bc_table.h	39;"	d
BC_TABLE_POS_MASK	../blockchain/bc_table.h	38;"	d
BC_TABLE_SEARCH_POS	../blockchain/bc_table.h	40;"	d
BC_TABLE_SIZE	../blockchain/bc_table.h	36;"	d
BIP16Height	../proto/coin_proto.h	/^	int BIP16Height;$/;"	m	struct:coin_iface_t
BIP30Height	../proto/coin_proto.h	/^	int BIP30Height;$/;"	m	struct:coin_iface_t
BIP32_EXTKEY_SIZE	../server/eckey.h	/^const unsigned int BIP32_EXTKEY_SIZE = 74;$/;"	v
BIP32_HARDENED_KEY_LIMIT	../server/wallet.h	/^const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;$/;"	v
BIP34Height	../proto/coin_proto.h	/^	int BIP34Height;$/;"	m	struct:coin_iface_t
BIP65Height	../proto/coin_proto.h	/^	int BIP65Height;$/;"	m	struct:coin_iface_t
BIP66Height	../proto/coin_proto.h	/^	int BIP66Height;$/;"	m	struct:coin_iface_t
BIP9Deployment	../proto/coin_proto.h	/^struct BIP9Deployment {$/;"	s
BIP9Deployment	../proto/coin_proto.h	/^typedef struct BIP9Deployment BIP9Deployment;$/;"	t	typeref:struct:BIP9Deployment
BIP9DeploymentInfo	../server/versionbits.h	/^struct BIP9DeploymentInfo {$/;"	s
BLAKE2S_WORK_CYCLE_TIME	../stratum/stratum_blake2s.c	33;"	d	file:
BLKERR_BAD_SESSION	../server_iface.h	31;"	d
BLKERR_CHECKPOINT	../server_iface.h	38;"	d
BLKERR_DUPLICATE_BLOCK	../server_iface.h	33;"	d
BLKERR_INVALID_BLOCK	../server_iface.h	36;"	d
BLKERR_INVALID_FORMAT	../server_iface.h	37;"	d
BLKERR_INVALID_JOB	../server_iface.h	32;"	d
BLKERR_LOW_DIFFICULTY	../server_iface.h	34;"	d
BLKERR_UNKNOWN	../server_iface.h	35;"	d
BLOCK_ALGO_BLAKE2S	../server/algobits.h	43;"	d
BLOCK_ALGO_GROESTL	../server/algobits.h	45;"	d
BLOCK_ALGO_KECCAK	../server/algobits.h	41;"	d
BLOCK_ALGO_QUBIT	../server/algobits.h	44;"	d
BLOCK_ALGO_SCRYPT	../server/algobits.h	39;"	d
BLOCK_ALGO_SHA256D	../server/algobits.h	40;"	d
BLOCK_ALGO_SKEIN	../server/algobits.h	46;"	d
BLOCK_ALGO_X11	../server/algobits.h	42;"	d
BLOCK_DOWNLOAD_WINDOW	../proto/coin_proto.h	/^static const unsigned int BLOCK_DOWNLOAD_WINDOW = 1024;$/;"	v
BLOCK_FAILED_CHILD	../server/block.h	/^    BLOCK_FAILED_CHILD       =   64, \/\/!< descends from failed block$/;"	e	enum:BlockStatus
BLOCK_FAILED_MASK	../server/block.h	/^    BLOCK_FAILED_MASK        =   BLOCK_FAILED_VALID | BLOCK_FAILED_CHILD,$/;"	e	enum:BlockStatus
BLOCK_FAILED_VALID	../server/block.h	/^    BLOCK_FAILED_VALID       =   32, \/\/!< stage after last reached validness failed$/;"	e	enum:BlockStatus
BLOCK_HAVE_DATA	../server/block.h	/^    BLOCK_HAVE_DATA          =    8, \/\/!< full block available in blk*.dat$/;"	e	enum:BlockStatus
BLOCK_HAVE_MASK	../server/block.h	/^    BLOCK_HAVE_MASK          =   BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO,$/;"	e	enum:BlockStatus
BLOCK_HAVE_UNDO	../server/block.h	/^    BLOCK_HAVE_UNDO          =   16, \/\/!< undo data available in rev*.dat$/;"	e	enum:BlockStatus
BLOCK_OPT_WITNESS	../server/block.h	/^    BLOCK_OPT_WITNESS       =   128, \/\/!< block data in blk*.data was received with a witness-enforcing client$/;"	e	enum:BlockStatus
BLOCK_STALLING_TIMEOUT	../proto/coin_proto.h	/^static const unsigned int BLOCK_STALLING_TIMEOUT = 2;$/;"	v
BLOCK_VALID_CHAIN	../server/block.h	/^    BLOCK_VALID_CHAIN        =    4,$/;"	e	enum:BlockStatus
BLOCK_VALID_HEADER	../server/block.h	/^    BLOCK_VALID_HEADER       =    1,$/;"	e	enum:BlockStatus
BLOCK_VALID_MASK	../server/block.h	/^    BLOCK_VALID_MASK         =   BLOCK_VALID_HEADER | BLOCK_VALID_TREE | BLOCK_VALID_TRANSACTIONS |$/;"	e	enum:BlockStatus
BLOCK_VALID_SCRIPTS	../server/block.h	/^    BLOCK_VALID_SCRIPTS      =    5,$/;"	e	enum:BlockStatus
BLOCK_VALID_TRANSACTIONS	../server/block.h	/^    BLOCK_VALID_TRANSACTIONS =    3,$/;"	e	enum:BlockStatus
BLOCK_VALID_TREE	../server/block.h	/^    BLOCK_VALID_TREE         =    2,$/;"	e	enum:BlockStatus
BLOCK_VALID_UNKNOWN	../server/block.h	/^    BLOCK_VALID_UNKNOWN      =    0,$/;"	e	enum:BlockStatus
BLOCK_VERSION	../stratum/stratum_task.c	35;"	d	file:
BLOOM_TEST	../server/net.h	103;"	d
BLOOM_UPDATE_ALL	../server/net.h	/^  BLOOM_UPDATE_ALL = 1,$/;"	e	enum:bloomflags
BLOOM_UPDATE_MASK	../server/net.h	/^  BLOOM_UPDATE_MASK = 3 $/;"	e	enum:bloomflags
BLOOM_UPDATE_NONE	../server/net.h	/^  BLOOM_UPDATE_NONE = 0,$/;"	e	enum:bloomflags
BLOOM_UPDATE_P2PUBKEY_ONLY	../server/net.h	/^  BLOOM_UPDATE_P2PUBKEY_ONLY = 2,$/;"	e	enum:bloomflags
BOOST_NO_CXX11_SCOPED_ENUMS	../shcoind.h	102;"	d
BOOST_NO_CXX11_SCOPED_ENUMS	../shcoind.h	104;"	d
BeginMessage	../server/net.h	/^    void BeginMessage(const char* pszCommand)$/;"	f	class:CNode
BindWallet	../server/wallet.h	/^			 void BindWallet(CWallet *pwalletIn)$/;"	f	class:CWalletTx
BlockStatus	../server/block.h	/^enum BlockStatus {$/;"	g
BlockTransactions	../server/block_cmpct.h	/^		BlockTransactions() {}$/;"	f	class:BlockTransactions
BlockTransactions	../server/block_cmpct.h	/^		explicit BlockTransactions(const BlockTransactionsRequest& req) :$/;"	f	class:BlockTransactions
BlockTransactions	../server/block_cmpct.h	/^class BlockTransactions $/;"	c
BlockTransactionsRequest	../server/block_cmpct.h	/^class BlockTransactionsRequest $/;"	c
BlockTxCount	../server/block_cmpct.h	/^		size_t BlockTxCount() const { return shorttxids.size() + prefilledtxn.size(); }$/;"	f	class:CBlockHeaderAndShortTxIDs
CAccount	../server/wallet.h	/^		CAccount()$/;"	f	class:CAccount
CAccount	../server/wallet.h	/^		CAccount(const CAccount& accountIn)$/;"	f	class:CAccount
CAccount	../server/wallet.h	/^class CAccount$/;"	c
CAccountCache	../server/account.h	/^		CAccountCache(CWallet *walletIn) { $/;"	f	class:CAccountCache
CAccountCache	../server/account.h	/^		CAccountCache(CWallet *walletIn, CAccount accountIn, string strAccountIn = "")$/;"	f	class:CAccountCache
CAccountCache	../server/account.h	/^		CAccountCache(CWallet *walletIn, CPubKey vchPubKeyIn, string strAccountIn = "")$/;"	f	class:CAccountCache
CAccountCache	../server/account.h	/^class CAccountCache$/;"	c
CAccountingEntry	../server/wallet.h	/^		CAccountingEntry()$/;"	f	class:CAccountingEntry
CAccountingEntry	../server/wallet.h	/^class CAccountingEntry$/;"	c
CAmount	../server/coin.h	/^typedef int64 CAmount;$/;"	t
CAmount	../server/txfeerate.h	/^typedef int64 CAmount;$/;"	t
CBase58Data	../server/base58.h	/^		CBase58Data()$/;"	f	class:CBase58Data
CBase58Data	../server/base58.h	/^class CBase58Data$/;"	c
CBasicKeyStore	../server/keystore.h	/^class CBasicKeyStore : public CKeyStore$/;"	c
CBlock	../server/block.h	/^    CBlock()$/;"	f	class:CBlock
CBlock	../server/block.h	/^    CBlock(const CBlock& in_block)$/;"	f	class:CBlock
CBlock	../server/block.h	/^    CBlock(const CBlockHeader &header)$/;"	f	class:CBlock
CBlock	../server/block.h	/^class CBlock : public CBlockHeader$/;"	c
CBlockChain	../blockchain/bc.h	/^typedef struct bc_t CBlockChain;$/;"	t	typeref:struct:bc_t
CBlockHeader	../server/block.h	/^    CBlockHeader()$/;"	f	class:CBlockHeader
CBlockHeader	../server/block.h	/^class CBlockHeader$/;"	c
CBlockHeaderAndShortTxIDs	../server/block_cmpct.h	/^		CBlockHeaderAndShortTxIDs() {}$/;"	f	class:CBlockHeaderAndShortTxIDs
CBlockHeaderAndShortTxIDs	../server/block_cmpct.h	/^class CBlockHeaderAndShortTxIDs $/;"	c
CBlockIndex	../server/block.h	/^    CBlockIndex()$/;"	f	class:CBlockIndex
CBlockIndex	../server/block.h	/^    CBlockIndex(CBlockHeader& block)$/;"	f	class:CBlockIndex
CBlockIndex	../server/block.h	/^class CBlockIndex$/;"	c
CBlockIndexWorkComparator	../server/block.h	/^struct CBlockIndexWorkComparator$/;"	s
CBlockLocator	../server/block.h	/^		CBlockLocator() { }$/;"	f	class:CBlockLocator
CBlockLocator	../server/block.h	/^		explicit CBlockLocator(const std::vector<uint256>& vHaveIn) : vHave(vHaveIn) {}$/;"	f	class:CBlockLocator
CBlockLocator	../server/block.h	/^class CBlockLocator$/;"	c
CBlockPolicyEstimator	../server/txfeerate.h	/^class CBlockPolicyEstimator$/;"	c
CBloomFilter	../server/net.h	/^    CBloomFilter(int ifaceIndexIn)$/;"	f	class:CBloomFilter
CBloomFilter	../server/net.h	/^class CBloomFilter$/;"	c
CCheckpoints	../server/checkpoints.h	/^		CCheckpoints(int ifaceIndexIn)$/;"	f	class:CCheckpoints
CCheckpoints	../server/checkpoints.h	/^		CCheckpoints(int ifaceIndexIn, MapCheckpoints mapIn)$/;"	f	class:CCheckpoints
CCheckpoints	../server/checkpoints.h	/^class CCheckpoints$/;"	c
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr()$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const CScript& script)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const CTxDestination &dest)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const char* pszAddress)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const std::string& strAddress)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^class CCoinAddr : public CBase58Data$/;"	c
CCoinAddrVisitor	../server/coinaddr.h	/^    CCoinAddrVisitor(CCoinAddr *addrIn) : addr(addrIn) { }$/;"	f	class:CCoinAddrVisitor
CCoinAddrVisitor	../server/coinaddr.h	/^class CCoinAddrVisitor : public boost::static_visitor<bool>$/;"	c
CCoinSecret	../server/base58.h	/^		CCoinSecret()$/;"	f	class:CCoinSecret
CCoinSecret	../server/base58.h	/^		CCoinSecret(int ifaceIndex, const CSecret& vchSecret, bool fCompressed)$/;"	f	class:CCoinSecret
CCoinSecret	../server/base58.h	/^class CCoinSecret : public CBase58Data$/;"	c
CCrypter	../server/crypter.h	/^    CCrypter()$/;"	f	class:CCrypter
CCrypter	../server/crypter.h	/^class CCrypter$/;"	c
CDB	../server/txidx.h	/^class CDB$/;"	c
CDBEnv	../server/txidx.h	/^class CDBEnv$/;"	c
CDiskBlockIndex	../server/block.h	/^    CDiskBlockIndex()$/;"	f	class:CDiskBlockIndex
CDiskBlockIndex	../server/block.h	/^    explicit CDiskBlockIndex(CBlockIndex* pindex) : CBlockIndex(*pindex)$/;"	f	class:CDiskBlockIndex
CDiskBlockIndex	../server/block.h	/^class CDiskBlockIndex : public CBlockIndex$/;"	c
CDiskTxPos	../server/block.h	/^    CDiskTxPos()$/;"	f	class:CDiskTxPos
CDiskTxPos	../server/block.h	/^    CDiskTxPos(unsigned int nFileIn, unsigned int nBlockPosIn, unsigned int nTxPosIn)$/;"	f	class:CDiskTxPos
CDiskTxPos	../server/block.h	/^class CDiskTxPos$/;"	c
CENT	../proto/conversion.h	/^static const int64 CENT = 1000000;$/;"	v
CFeeRate	../server/txfeerate.h	/^    CFeeRate()$/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^    CFeeRate(const CFeeRate& other)$/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^    explicit CFeeRate(const CAmount& _nCoinPerK) $/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^class CFeeRate$/;"	c
CHKIP_HTML_TEMPLATE	../unet/unet_local.c	36;"	d	file:
CHKIP_IP_TAG	../unet/unet_local.c	/^static const char *CHKIP_IP_TAG = "Current IP Address: ";$/;"	v	file:
CIface	../proto/coin_proto.h	/^typedef struct coin_iface_t CIface;$/;"	t	typeref:struct:coin_iface_t
CInPoint	../server/block.h	/^    CInPoint() { SetNull(); }$/;"	f	class:CInPoint
CInPoint	../server/block.h	/^    CInPoint(CTransaction* ptxIn, unsigned int nIn) { ptx = ptxIn; n = nIn; }$/;"	f	class:CInPoint
CInPoint	../server/block.h	/^class CInPoint$/;"	c
CKey	../server/key.h	/^    CKey()$/;"	f	class:CKey
CKey	../server/key.h	/^    CKey(const CKey& b)$/;"	f	class:CKey
CKey	../server/key.h	/^class CKey : public CKeyMetadata$/;"	c
CKeyID	../server/key.h	/^    CKeyID() : uint160(0) { }$/;"	f	class:CKeyID
CKeyID	../server/key.h	/^    CKeyID(const uint160 &in) : uint160(in) { }$/;"	f	class:CKeyID
CKeyID	../server/key.h	/^class CKeyID : public uint160$/;"	c
CKeyMetadata	../server/key.h	/^		CKeyMetadata()$/;"	f	class:CKeyMetadata
CKeyMetadata	../server/key.h	/^		explicit CKeyMetadata(int64_t nCreateTime_)$/;"	f	class:CKeyMetadata
CKeyMetadata	../server/key.h	/^class CKeyMetadata$/;"	c
CKeyStore	../server/keystore.h	/^class CKeyStore$/;"	c
CKeyingMaterial	../server/crypter.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;$/;"	t
CLAIM_FD	../shcoind_descriptor.h	51;"	d
CLIENT_VERSION	../shcoind_version.h	40;"	d
CMasterKey	../server/crypter.h	/^    CMasterKey()$/;"	f	class:CMasterKey
CMasterKey	../server/crypter.h	/^class CMasterKey$/;"	c
CMerkleBlock	../server/bloom.h	/^class CMerkleBlock$/;"	c
CMerkleTx	../server/main.h	/^    CMerkleTx()$/;"	f	class:CMerkleTx
CMerkleTx	../server/main.h	/^    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)$/;"	f	class:CMerkleTx
CMerkleTx	../server/main.h	/^class CMerkleTx : public CTransaction$/;"	c
CNoDestination	../server/script.h	/^class CNoDestination {$/;"	c
CNode	../server/net.h	/^    CNode(int ifaceIndexIn, unsigned int hSocketIn, CAddress addrIn, std::string addrNameIn = "", bool fInboundIn=false) : vSend(SER_NETWORK, MIN_PROTO_VERSION), vRecv(SER_NETWORK, MIN_PROTO_VERSION)$/;"	f	class:CNode
CNode	../server/net.h	/^class CNode$/;"	c
CNodeStats	../server/net.h	/^class CNodeStats$/;"	c
COIN	../proto/conversion.h	/^static const int64 COIN = 100000000;$/;"	v
COINF	../proto/coin_proto.h	158;"	d
COINF_DL_SCAN	../proto/coin_proto.h	138;"	d
COINF_DL_SYNC	../proto/coin_proto.h	139;"	d
COINF_PEER_SCAN	../proto/coin_proto.h	142;"	d
COINF_PEER_SYNC	../proto/coin_proto.h	143;"	d
COINF_VALIDATE_SCAN	../proto/coin_proto.h	144;"	d
COINF_VALIDATE_SYNC	../proto/coin_proto.h	145;"	d
COINF_WALLET_SCAN	../proto/coin_proto.h	140;"	d
COINF_WALLET_SYNC	../proto/coin_proto.h	141;"	d
COIN_IFACE_VERSION	../proto/coin_proto.h	43;"	d
COIN_SERVICES	../proto/coin_proto.h	110;"	d
COLORCoinAddr	../server/coinaddr.h	/^    COLORCoinAddr() : CCoinAddr(COLOR_COIN_IFACE)$/;"	f	class:COLORCoinAddr
COLORCoinAddr	../server/coinaddr.h	/^    COLORCoinAddr(const CTxDestination &dest) : CCoinAddr(COLOR_COIN_IFACE)$/;"	f	class:COLORCoinAddr
COLORCoinAddr	../server/coinaddr.h	/^    COLORCoinAddr(const std::string& strAddress) : CCoinAddr(COLOR_COIN_IFACE)$/;"	f	class:COLORCoinAddr
COLORCoinAddr	../server/coinaddr.h	/^class COLORCoinAddr : public CCoinAddr$/;"	c
COLOR_COIN	../proto/color_proto.h	64;"	d
COLOR_COINBASE_MATURITY	../proto/color_proto.h	/^static const int COLOR_COINBASE_MATURITY = 90;$/;"	v
COLOR_COIN_DAEMON_PORT	../proto/color_proto.h	36;"	d
COLOR_COIN_IFACE	../proto/coin_proto.h	133;"	d
COLOR_DEFAULT_BYTES_PER_SIGOP	../proto/color_proto.h	77;"	d
COLOR_MAX_BLOCK_SIZE	../proto/color_proto.h	69;"	d
COLOR_MAX_DRIFT_TIME	../proto/color_proto.h	54;"	d
COLOR_MAX_FREE_TX_SIZE	../proto/color_proto.h	80;"	d
COLOR_MAX_GETADDR	../proto/color_proto.h	39;"	d
COLOR_MAX_MONEY	../proto/color_proto.h	/^static const int64 COLOR_MAX_MONEY = 722388 * COLOR_COIN; \/* ~ 0.7mil max @ height 1.44mil *\/$/;"	v
COLOR_MAX_ORPHAN_TRANSACTIONS	../proto/color_proto.h	41;"	d
COLOR_MAX_SCRIPT_ELEMENT_SIZE	../proto/color_proto.h	51;"	d
COLOR_MAX_SCRIPT_SIZE	../proto/color_proto.h	49;"	d
COLOR_MAX_SIGOPS	../proto/color_proto.h	47;"	d
COLOR_MAX_STANDARD_TX_SIGOP_COST	../proto/color_proto.h	75;"	d
COLOR_MAX_STANDARD_TX_WEIGHT	../proto/color_proto.h	73;"	d
COLOR_MAX_TRANSACTION_WEIGHT	../proto/color_proto.h	71;"	d
COLOR_MAX_TX_FEE	../proto/color_proto.h	/^static const int64 COLOR_MAX_TX_FEE = 1000 * COLOR_COIN;$/;"	v
COLOR_MIN_INPUT	../proto/color_proto.h	/^static const int64 COLOR_MIN_INPUT = 1;$/;"	v
COLOR_MIN_RELAY_TX_FEE	../proto/color_proto.h	/^static const int64 COLOR_MIN_RELAY_TX_FEE = 1000;$/;"	v
COLOR_MIN_TX_FEE	../proto/color_proto.h	/^static const int64 COLOR_MIN_TX_FEE = 1000;$/;"	v
COLOR_PROTOCOL_VERSION	../proto/color_proto.h	/^static const int COLOR_PROTOCOL_VERSION = 2000000;$/;"	v
COLOR_VERSION_BUILD	../proto/color_proto.h	33;"	d
COLOR_VERSION_MAJOR	../proto/color_proto.h	30;"	d
COLOR_VERSION_MINOR	../proto/color_proto.h	31;"	d
COLOR_VERSION_REVISION	../proto/color_proto.h	32;"	d
COLOR_WITNESS_SCALE_FACTOR	../proto/color_proto.h	/^static const int COLOR_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
CONSENSUS_VERSIONBITS_H	../server/versionbits.h	2;"	d
COutPoint	../server/block.h	/^    COutPoint() { SetNull(); }$/;"	f	class:COutPoint
COutPoint	../server/block.h	/^    COutPoint(uint256 hashIn, unsigned int nIn) { hash = hashIn; n = nIn; }$/;"	f	class:COutPoint
COutPoint	../server/block.h	/^class COutPoint$/;"	c
COutput	../server/wallet.h	/^		COutput(const CWalletTx *txIn, int iIn, int nDepthIn)$/;"	f	class:COutput
COutput	../server/wallet.h	/^class COutput$/;"	c
CPUMINER_WORKER	../stratum/stratum_task.c	42;"	d	file:
CPartialMerkleTree	../server/bloom.h	/^class CPartialMerkleTree$/;"	c
CPool	../server/txmempool.h	/^    CPool(int ifaceIndexIn)$/;"	f	class:CPool
CPool	../server/txmempool.h	/^class CPool : public CTxMemPool$/;"	c
CPoolTx	../server/txmempool.h	/^    CPoolTx()$/;"	f	class:CPoolTx
CPoolTx	../server/txmempool.h	/^    CPoolTx(const CPoolTx& ptxIn)$/;"	f	class:CPoolTx
CPoolTx	../server/txmempool.h	/^    CPoolTx(const CTransaction& txIn)$/;"	f	class:CPoolTx
CPoolTx	../server/txmempool.h	/^class CPoolTx$/;"	c
CPrivKey	../server/key.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;$/;"	t
CPubKey	../server/key.h	/^		CPubKey()$/;"	f	class:CPubKey
CPubKey	../server/key.h	/^		CPubKey(const std::vector<unsigned char> &vchPubKeyIn) : vchPubKey(vchPubKeyIn) { }$/;"	f	class:CPubKey
CPubKey	../server/key.h	/^class CPubKey $/;"	c
CRED_SECRET_LEN	../shcoind_rpc.c	34;"	d	file:
CRequestTracker	../server/net.h	/^    explicit CRequestTracker(void (*fnIn)(void*, CDataStream&)=NULL, void* param1In=NULL)$/;"	f	class:CRequestTracker
CRequestTracker	../server/net.h	/^class CRequestTracker$/;"	c
CScript	../server/script.h	/^    CScript() { }$/;"	f	class:CScript
CScript	../server/script.h	/^    CScript(const CScript& b) : std::vector<unsigned char>(b.begin(), b.end()) { }$/;"	f	class:CScript
CScript	../server/script.h	/^    CScript(const unsigned char* pbegin, const unsigned char* pend) : std::vector<unsigned char>(pbegin, pend) { }$/;"	f	class:CScript
CScript	../server/script.h	/^    CScript(const_iterator pbegin, const_iterator pend) : std::vector<unsigned char>(pbegin, pend) { }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const CBigNum& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const CScriptNum& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const std::vector<unsigned char>& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const uint256& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(int b)            { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(int64 b)          { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(long b)           { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(opcodetype b)     { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(short b)          { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(signed char b)    { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(uint64 b)         { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned char b)  { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned int b)   { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned long b)  { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned short b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^class CScript : public std::vector<unsigned char>$/;"	c
CScriptID	../server/key.h	/^    CScriptID() : uint160(0) { }$/;"	f	class:CScriptID
CScriptID	../server/key.h	/^    CScriptID(const uint160 &in) : uint160(in) { }$/;"	f	class:CScriptID
CScriptID	../server/key.h	/^class CScriptID : public uint160$/;"	c
CScriptNum	../server/script.h	/^    explicit CScriptNum(const int64_t& n)$/;"	f	class:CScriptNum
CScriptNum	../server/script.h	/^    explicit CScriptNum(const std::vector<unsigned char>& vch, bool fRequireMinimal,$/;"	f	class:CScriptNum
CScriptNum	../server/script.h	/^class CScriptNum$/;"	c
CScriptWitness	../server/block.h	/^    CScriptWitness() { }$/;"	f	struct:CScriptWitness
CScriptWitness	../server/block.h	/^struct CScriptWitness$/;"	s
CSecret	../server/key.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CSecret;$/;"	t
CSignature	../server/txsignature.h	/^		CSignature(int ifaceIndexIn, CTransaction *txIn, unsigned int nIn, int nHashTypeIn=SIGHASH_ALL)$/;"	f	class:CSignature
CSignature	../server/txsignature.h	/^class CSignature$/;"	c
CTransaction	../server/block.h	/^		CTransaction(const CAltTx& tx)$/;"	f	class:CTransaction
CTransaction	../server/block.h	/^    CTransaction()$/;"	f	class:CTransaction
CTransaction	../server/block.h	/^    CTransaction(const CTransaction& tx)$/;"	f	class:CTransaction
CTransaction	../server/block.h	/^class CTransaction : public CTransactionCore$/;"	c
CTransactionCore	../server/block.h	/^    CTransactionCore()$/;"	f	class:CTransactionCore
CTransactionCore	../server/block.h	/^class CTransactionCore$/;"	c
CTxBatchCreator	../server/txcreator.h	/^    CTxBatchCreator(CWallet *wallet, string strAccountIn, CScript scriptPubIn, int64 nValue) : CTxCreator(wallet, strAccountIn)$/;"	f	class:CTxBatchCreator
CTxBatchCreator	../server/txcreator.h	/^class CTxBatchCreator : public CTxCreator$/;"	c
CTxCreator	../server/txcreator.h	/^    CTxCreator(CWallet *wallet)$/;"	f	class:CTxCreator
CTxCreator	../server/txcreator.h	/^    CTxCreator(CWallet *wallet, string strAccountIn) : CWalletTx(wallet)$/;"	f	class:CTxCreator
CTxCreator	../server/txcreator.h	/^    CTxCreator(CWallet* wallet, const CTransaction& txIn) : CWalletTx(wallet, txIn)$/;"	f	class:CTxCreator
CTxCreator	../server/txcreator.h	/^class CTxCreator : public CWalletTx$/;"	c
CTxDB	../server/txidx.h	/^    CTxDB(const char *fname, int index, const char* pszMode="r+") : CDB(fname, pszMode) { ifaceIndex = index; }$/;"	f	class:CTxDB
CTxDB	../server/txidx.h	/^class CTxDB : public CDB$/;"	c
CTxDestination	../server/script.h	/^typedef boost::variant<CNoDestination, CKeyID, CScriptID, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessV14ScriptHash, WitnessV14KeyHash, WitnessUnknown> CTxDestination;$/;"	t
CTxIn	../server/block.h	/^    CTxIn()$/;"	f	class:CTxIn
CTxIn	../server/block.h	/^    CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=SEQUENCE_FINAL)$/;"	f	class:CTxIn
CTxIn	../server/block.h	/^    explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=SEQUENCE_FINAL)$/;"	f	class:CTxIn
CTxIn	../server/block.h	/^class CTxIn$/;"	c
CTxInWitness	../server/block.h	/^    CTxInWitness() { }$/;"	f	class:CTxInWitness
CTxInWitness	../server/block.h	/^class CTxInWitness$/;"	c
CTxIndex	../server/block.h	/^    CTxIndex()$/;"	f	class:CTxIndex
CTxIndex	../server/block.h	/^    CTxIndex(const CDiskTxPos& posIn, unsigned int nOutputs)$/;"	f	class:CTxIndex
CTxIndex	../server/block.h	/^class CTxIndex$/;"	c
CTxMatrix	../server/matrix.h	/^		CTxMatrix()$/;"	f	class:CTxMatrix
CTxMatrix	../server/matrix.h	/^		CTxMatrix(const CTxMatrix& matrix)$/;"	f	class:CTxMatrix
CTxMatrix	../server/matrix.h	/^class CTxMatrix$/;"	c
CTxMemPool	../server/txmempool.h	/^class CTxMemPool$/;"	c
CTxOut	../server/block.h	/^		CTxOut()$/;"	f	class:CTxOut
CTxOut	../server/block.h	/^		CTxOut(int64 nValueIn, CScript scriptPubKeyIn)$/;"	f	class:CTxOut
CTxOut	../server/block.h	/^class CTxOut$/;"	c
CTxWitness	../server/block.h	/^class CTxWitness$/;"	c
CUSTOM_ERROR	../shcoind_error.h	39;"	d
CUTEST_VERSION	../test/CuTest.h	53;"	d
CU_ALLOC	../test/CuTest.h	60;"	d
CU_TEST_H	../test/CuTest.h	44;"	d
CValidateState	../server/net.h	/^class CValidateState$/;"	c
CWallet	../server/wallet.h	/^		CWallet(int index)$/;"	f	class:CWallet
CWallet	../server/wallet.h	/^		CWallet(int index, std::string strWalletFileIn)$/;"	f	class:CWallet
CWallet	../server/wallet.h	/^class CWallet : public CBasicKeyStore$/;"	c
CWalletDB	../server/walletdb.h	/^    CWalletDB(std::string strFilename, const char* pszMode="r+") : CDB(strFilename.c_str(), pszMode)$/;"	f	class:CWalletDB
CWalletDB	../server/walletdb.h	/^class CWalletDB : public CDB$/;"	c
CWalletKey	../server/wallet.h	/^		CWalletKey(int64 nExpires=0)$/;"	f	class:CWalletKey
CWalletKey	../server/wallet.h	/^class CWalletKey$/;"	c
CWalletTx	../server/wallet.h	/^		CWalletTx()$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet *pwalletIn, const CTransaction& txIn) : CMerkleTx(txIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet *pwalletIn, const CTransaction& txIn, mapval_t mapValue) : CMerkleTx(txIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet* pwalletIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet* pwalletIn, const CMerkleTx& txIn) : CMerkleTx(txIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^class CWalletTx : public CMerkleTx$/;"	c
CalcTreeWidth	../server/bloom.h	/^    unsigned int CalcTreeWidth(int height) {$/;"	f	class:CPartialMerkleTree
CanSupportFeature	../server/wallet.h	/^		bool CanSupportFeature(enum WalletFeature wf) { return true; }$/;"	f	class:CWallet
ChainCode	../server/key.h	/^typedef uint256 ChainCode;$/;"	t
ChainOp	../server/chain.h	/^typedef struct ChainOp$/;"	s
ChainOp	../server/chain.h	/^} ChainOp;$/;"	t	typeref:struct:ChainOp
CheckIndex	../server/block.h	/^    bool CheckIndex() const$/;"	f	class:CBlockIndex
ChgSrvCfg2_t	../shcoind_svc.c	/^typedef WINADVAPI BOOL		(WINAPI *ChgSrvCfg2_t)(SC_HANDLE hService,$/;"	t	file:
CleanKey	../server/crypter.h	/^    void CleanKey()$/;"	f	class:CCrypter
ClearBloomFilter	../server/net.h	/^    void ClearBloomFilter()$/;"	f	class:CNode
ClearInputs	../server/txmempool.h	/^    void ClearInputs()$/;"	f	class:CPoolTx
CompareCells	../server/matrix.h	/^		bool CompareCells(const CTxMatrix& b) const$/;"	f	class:CTxMatrix
CompareTo	../server/base58.h	/^		int CompareTo(const CBase58Data& b58) const$/;"	f	class:CBase58Data
CryptedKeyMap	../server/keystore.h	/^typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;$/;"	t
CuAssert	../test/CuTest.h	123;"	d
CuAssertDblEquals	../test/CuTest.h	130;"	d
CuAssertDblEquals_LineMsg	../test/CuTest.c	/^void CuAssertDblEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertDblEquals_Msg	../test/CuTest.h	131;"	d
CuAssertIntEquals	../test/CuTest.h	128;"	d
CuAssertIntEquals_LineMsg	../test/CuTest.c	/^void CuAssertIntEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertIntEquals_Msg	../test/CuTest.h	129;"	d
CuAssertPtrEquals	../test/CuTest.h	132;"	d
CuAssertPtrEquals_LineMsg	../test/CuTest.c	/^void CuAssertPtrEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertPtrEquals_Msg	../test/CuTest.h	133;"	d
CuAssertPtrNotNull	../test/CuTest.h	135;"	d
CuAssertPtrNotNullMsg	../test/CuTest.h	136;"	d
CuAssertStrEquals	../test/CuTest.h	126;"	d
CuAssertStrEquals_LineMsg	../test/CuTest.c	/^void CuAssertStrEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertStrEquals_Msg	../test/CuTest.h	127;"	d
CuAssertTrue	../test/CuTest.h	124;"	d
CuAssert_Line	../test/CuTest.c	/^void CuAssert_Line(CuTest* tc, const char* file, int line, const char* message, int condition)$/;"	f
CuFail	../test/CuTest.h	122;"	d
CuFailInternal	../test/CuTest.c	/^static void CuFailInternal(CuTest* tc, const char* file, int line, CuString* string)$/;"	f	file:
CuFail_Line	../test/CuTest.c	/^void CuFail_Line(CuTest* tc, const char* file, int line, const char* message2, const char* message)$/;"	f
CuStrAlloc	../test/CuTest.c	/^char* CuStrAlloc(int size)$/;"	f
CuStrCopy	../test/CuTest.c	/^char* CuStrCopy(const char* old)$/;"	f
CuString	../test/CuTest.h	/^} CuString;$/;"	t	typeref:struct:__anon9
CuStringAppend	../test/CuTest.c	/^void CuStringAppend(CuString* str, const char* text)$/;"	f
CuStringAppendChar	../test/CuTest.c	/^void CuStringAppendChar(CuString* str, char ch)$/;"	f
CuStringAppendFormat	../test/CuTest.c	/^void CuStringAppendFormat(CuString* str, const char* format, ...)$/;"	f
CuStringDelete	../test/CuTest.c	/^void CuStringDelete(CuString *str)$/;"	f
CuStringInit	../test/CuTest.c	/^void CuStringInit(CuString* str)$/;"	f
CuStringInsert	../test/CuTest.c	/^void CuStringInsert(CuString* str, const char* text, int pos)$/;"	f
CuStringNew	../test/CuTest.c	/^CuString* CuStringNew(void)$/;"	f
CuStringResize	../test/CuTest.c	/^void CuStringResize(CuString* str, int newSize)$/;"	f
CuSuite	../test/CuTest.h	/^} CuSuite;$/;"	t	typeref:struct:__anon10
CuSuiteAdd	../test/CuTest.c	/^void CuSuiteAdd(CuSuite* testSuite, CuTest *testCase)$/;"	f
CuSuiteAddSuite	../test/CuTest.c	/^void CuSuiteAddSuite(CuSuite* testSuite, CuSuite* testSuite2)$/;"	f
CuSuiteDelete	../test/CuTest.c	/^void CuSuiteDelete(CuSuite *testSuite)$/;"	f
CuSuiteDetails	../test/CuTest.c	/^void CuSuiteDetails(CuSuite* testSuite, CuString* details)$/;"	f
CuSuiteInit	../test/CuTest.c	/^void CuSuiteInit(CuSuite* testSuite)$/;"	f
CuSuiteNew	../test/CuTest.c	/^CuSuite* CuSuiteNew(void)$/;"	f
CuSuiteRun	../test/CuTest.c	/^void CuSuiteRun(CuSuite* testSuite)$/;"	f
CuSuiteSummary	../test/CuTest.c	/^void CuSuiteSummary(CuSuite* testSuite, CuString* summary)$/;"	f
CuTest	../test/CuTest.h	/^struct CuTest$/;"	s
CuTest	../test/CuTest.h	/^typedef struct CuTest CuTest;$/;"	t	typeref:struct:CuTest
CuTestDelete	../test/CuTest.c	/^void CuTestDelete(CuTest *t)$/;"	f
CuTestInit	../test/CuTest.c	/^void CuTestInit(CuTest* t, const char* name, TestFunction function)$/;"	f
CuTestNew	../test/CuTest.c	/^CuTest* CuTestNew(const char* name, TestFunction function)$/;"	f
CuTestRun	../test/CuTest.c	/^void CuTestRun(CuTest* tc)$/;"	f
DBErrors	../server/walletdb.h	/^enum DBErrors$/;"	g
DB_CORRUPT	../server/walletdb.h	/^    DB_CORRUPT,$/;"	e	enum:DBErrors
DB_LOAD_FAIL	../server/walletdb.h	/^    DB_LOAD_FAIL,$/;"	e	enum:DBErrors
DB_LOAD_OK	../server/walletdb.h	/^    DB_LOAD_OK,$/;"	e	enum:DBErrors
DB_NEED_REWRITE	../server/walletdb.h	/^    DB_NEED_REWRITE$/;"	e	enum:DBErrors
DB_TOO_NEW	../server/walletdb.h	/^    DB_TOO_NEW,$/;"	e	enum:DBErrors
DEFAULT_DECAY	../server/txfeerate.h	/^static const double DEFAULT_DECAY = .998;$/;"	v
DEFAULT_MAX_BLOCK_SIZE	../proto/coin_proto.h	66;"	d
DEFAULT_MIN_RELAY_TX_FEE	../proto/coin_proto.h	98;"	d
DEFAULT_SHUTDOWN_CYCLES	../shcoind_signal.c	56;"	d	file:
DEFAULT_WORK_DIFFICULTY	../stratum/stratum_protocol.c	33;"	d	file:
DEPLOYMENT_ALGO	../proto/coin_proto.h	/^    DEPLOYMENT_ALGO,$/;"	e	enum:DeploymentPos
DEPLOYMENT_BOLO	../proto/coin_proto.h	/^    DEPLOYMENT_BOLO,$/;"	e	enum:DeploymentPos
DEPLOYMENT_CSV	../proto/coin_proto.h	/^    DEPLOYMENT_CSV, \/\/ Deployment of BIP68, BIP112, and BIP113.$/;"	e	enum:DeploymentPos
DEPLOYMENT_PARAM	../proto/coin_proto.h	/^    DEPLOYMENT_PARAM,$/;"	e	enum:DeploymentPos
DEPLOYMENT_RESERVED_0	../proto/coin_proto.h	/^    DEPLOYMENT_RESERVED_0,$/;"	e	enum:DeploymentPos
DEPLOYMENT_RESERVED_1	../proto/coin_proto.h	/^    DEPLOYMENT_RESERVED_1,$/;"	e	enum:DeploymentPos
DEPLOYMENT_RESERVED_2	../proto/coin_proto.h	/^    DEPLOYMENT_RESERVED_2,$/;"	e	enum:DeploymentPos
DEPLOYMENT_SEGWIT	../proto/coin_proto.h	/^    DEPLOYMENT_SEGWIT, \/\/ Deployment of BIP141, BIP143, and BIP147.$/;"	e	enum:DeploymentPos
DEPLOYMENT_TESTDUMMY	../proto/coin_proto.h	/^    DEPLOYMENT_TESTDUMMY,$/;"	e	enum:DeploymentPos
DF_ESL	../shcoind_descriptor.h	47;"	d
DF_FILE	../shcoind_descriptor.h	38;"	d
DF_INBOUND	../shcoind_descriptor.h	43;"	d
DF_LISTEN	../shcoind_descriptor.h	44;"	d
DF_MAP	../shcoind_descriptor.h	45;"	d
DF_PEER_SCAN	../shcoind_descriptor.h	42;"	d
DF_SERVICE	../shcoind_descriptor.h	40;"	d
DF_SHUTDOWN	../shcoind_descriptor.h	41;"	d
DF_SOCK	../shcoind_descriptor.h	39;"	d
DF_SYNC	../shcoind_descriptor.h	46;"	d
DIExtKey	../server/dikey.h	/^struct DIExtKey$/;"	s
DIExtPubKey	../server/dikey.h	/^struct DIExtPubKey $/;"	s
DIKey	../server/dikey.h	/^    DIKey()$/;"	f	class:DIKey
DIKey	../server/dikey.h	/^    DIKey(CSecret secret)$/;"	f	class:DIKey
DIKey	../server/dikey.h	/^    DIKey(const DIKey& b)$/;"	f	class:DIKey
DIKey	../server/dikey.h	/^class DIKey : public CKey$/;"	c
DIKeyMap	../server/keystore.h	/^typedef std::map<CKeyID, DIKey> DIKeyMap;$/;"	t
DILITHIUM_PRIVATE_KEY_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_PRIVATE_KEY_SIZE = 3504;$/;"	m	class:DIKey
DILITHIUM_PUBLIC_KEY_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_PUBLIC_KEY_SIZE = 1472; $/;"	m	class:DIKey
DILITHIUM_SECRET_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_SECRET_SIZE = 96; $/;"	m	class:DIKey
DILITHIUM_SIGNATURE_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_SIGNATURE_SIZE = 2701;$/;"	m	class:DIKey
DILITHIUM_VERSION	../server/dikey.h	52;"	d
DISK_VERSION	../shcoind_version.h	36;"	d
DISK_VERSION_BUILD	../shcoind_version.h	34;"	d
DISK_VERSION_MAJOR	../shcoind_version.h	31;"	d
DISK_VERSION_MINOR	../shcoind_version.h	32;"	d
DISK_VERSION_REVISION	../shcoind_version.h	33;"	d
DUST_RELAY_TX_FEE	../proto/coin_proto.h	101;"	d
DecodeBase58	../server/base58.h	/^inline bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet)$/;"	f
DecodeBase58Check	../server/base58.h	/^inline bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)$/;"	f
DecodeBase58Check	../server/base58.h	/^inline bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet)$/;"	f
DecodeOP_N	../server/script.h	/^    static int DecodeOP_N(opcodetype opcode)$/;"	f	class:CScript
DeploymentPos	../proto/coin_proto.h	/^enum DeploymentPos$/;"	g
ECExtKey	../server/eckey.h	/^struct ECExtKey$/;"	s
ECExtPubKey	../server/eckey.h	/^struct ECExtPubKey $/;"	s
ECKey	../server/eckey.h	/^    ECKey()$/;"	f	class:ECKey
ECKey	../server/eckey.h	/^    ECKey(CSecret secret, bool fCompressed = true)$/;"	f	class:ECKey
ECKey	../server/eckey.h	/^    ECKey(const ECKey& b)$/;"	f	class:ECKey
ECKey	../server/eckey.h	/^class ECKey : public CKey$/;"	c
ECKeyMap	../server/keystore.h	/^typedef std::map<CKeyID, ECKey> ECKeyMap;$/;"	t
EMC2CoinAddr	../server/coinaddr.h	/^    EMC2CoinAddr() : CCoinAddr(EMC2_COIN_IFACE)$/;"	f	class:EMC2CoinAddr
EMC2CoinAddr	../server/coinaddr.h	/^    EMC2CoinAddr(const CTxDestination &dest) : CCoinAddr(EMC2_COIN_IFACE)$/;"	f	class:EMC2CoinAddr
EMC2CoinAddr	../server/coinaddr.h	/^    EMC2CoinAddr(const std::string& strAddress) : CCoinAddr(EMC2_COIN_IFACE)$/;"	f	class:EMC2CoinAddr
EMC2CoinAddr	../server/coinaddr.h	/^class EMC2CoinAddr : public CCoinAddr$/;"	c
EMC2_COIN	../proto/emc2_proto.h	54;"	d
EMC2_COINBASE_MATURITY	../proto/emc2_proto.h	/^static const int EMC2_COINBASE_MATURITY = 100;$/;"	v
EMC2_COIN_DAEMON_PORT	../proto/emc2_proto.h	34;"	d
EMC2_COIN_IFACE	../proto/coin_proto.h	124;"	d
EMC2_DEFAULT_BYTES_PER_SIGOP	../proto/emc2_proto.h	59;"	d
EMC2_MAX_BLOCK_SERIALIZED_SIZE	../proto/emc2_proto.h	/^static const unsigned int EMC2_MAX_BLOCK_SERIALIZED_SIZE = 4000000;$/;"	v
EMC2_MAX_BLOCK_SIZE	../proto/emc2_proto.h	57;"	d
EMC2_MAX_BLOCK_WEIGHT	../proto/emc2_proto.h	/^static const unsigned int EMC2_MAX_BLOCK_WEIGHT = 4000000;$/;"	v
EMC2_MAX_DRIFT_TIME	../proto/emc2_proto.h	50;"	d
EMC2_MAX_FREE_TX_SIZE	../proto/emc2_proto.h	65;"	d
EMC2_MAX_GETADDR	../proto/emc2_proto.h	36;"	d
EMC2_MAX_MONEY	../proto/emc2_proto.h	/^static const int64 EMC2_MAX_MONEY = 298937393 * EMC2_COIN;$/;"	v
EMC2_MAX_ORPHAN_TRANSACTIONS	../proto/emc2_proto.h	38;"	d
EMC2_MAX_SCRIPT_ELEMENT_SIZE	../proto/emc2_proto.h	47;"	d
EMC2_MAX_SCRIPT_SIZE	../proto/emc2_proto.h	45;"	d
EMC2_MAX_SIGOPS	../proto/emc2_proto.h	42;"	d
EMC2_MAX_STANDARD_TX_SIGOP_COST	../proto/emc2_proto.h	62;"	d
EMC2_MAX_STANDARD_TX_WEIGHT	../proto/emc2_proto.h	61;"	d
EMC2_MAX_TRANSACTION_WEIGHT	../proto/emc2_proto.h	40;"	d
EMC2_MAX_TX_FEE	../proto/emc2_proto.h	/^static const int64 EMC2_MAX_TX_FEE = 0.1 * EMC2_COIN;$/;"	v
EMC2_MIN_INPUT	../proto/emc2_proto.h	/^static const int64 EMC2_MIN_INPUT = 29400;$/;"	v
EMC2_MIN_RELAY_TX_FEE	../proto/emc2_proto.h	/^static const int64 EMC2_MIN_RELAY_TX_FEE = 100000;$/;"	v
EMC2_MIN_TX_FEE	../proto/emc2_proto.h	/^static const int64 EMC2_MIN_TX_FEE = 100000;$/;"	v
EMC2_PROTOCOL_VERSION	../proto/emc2_proto.h	/^static const int EMC2_PROTOCOL_VERSION = 70015;$/;"	v
EMC2_SEED_LIST_SIZE	../unet/unet_seed.h	19;"	d
EMC2_VERSION_BUILD	../proto/emc2_proto.h	32;"	d
EMC2_VERSION_MAJOR	../proto/emc2_proto.h	29;"	d
EMC2_VERSION_MINOR	../proto/emc2_proto.h	30;"	d
EMC2_VERSION_REVISION	../proto/emc2_proto.h	31;"	d
EMC2_WITNESS_SCALE_FACTOR	../proto/emc2_proto.h	/^static const int EMC2_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
ERR_COMMIT	../shcoind_error.h	45;"	d
ERR_ENCODE	../shcoind_error.h	43;"	d
ERR_EXPIRE	../shcoind_error.h	42;"	d
ERR_FEE	../shcoind_error.h	44;"	d
ERR_MASK	../shcoind_error.h	38;"	d
ERR_NOCLASS	../shcoind_error.h	46;"	d
ERR_NOEXEC	../shcoind_error.c	29;"	d	file:
ERR_NOMETHOD	../shcoind_error.h	47;"	d
ERR_STALE	../shcoind_error.h	50;"	d
ERR_UNKNOWN	../shcoind_error.h	35;"	d
EncodeBase58	../server/base58.h	/^inline std::string EncodeBase58(const std::vector<unsigned char>& vch)$/;"	f
EncodeBase58Check	../server/base58.h	/^inline std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn)$/;"	f
EncodeOP_N	../server/script.h	/^    static opcodetype EncodeOP_N(int n)$/;"	f	class:CScript
EndMessage	../server/net.h	/^    void EndMessage()$/;"	f	class:CNode
EndMessageAbortIfEmpty	../server/net.h	/^    void EndMessageAbortIfEmpty()$/;"	f	class:CNode
Erase	../server/txidx.h	/^      bool Erase(const K& key)$/;"	f	class:CDB
EraseSetting	../server/walletdb.h	/^    bool EraseSetting(const std::string& strKey)$/;"	f	class:CWalletDB
EraseTx	../server/walletdb.h	/^    bool EraseTx(uint256 hash)$/;"	f	class:CWalletDB
Exists	../server/txidx.h	/^      bool Exists(const K& key)$/;"	f	class:CDB
FEATURE_BASE	../server/wallet.h	/^	FEATURE_BASE = 10500, \/\/ the earliest version new wallets supports (only useful for getinfo's clientversion output)$/;"	e	enum:WalletFeature
FEATURE_COMPRPUBKEY	../server/wallet.h	/^	FEATURE_COMPRPUBKEY = 60000, \/\/ compressed public keys$/;"	e	enum:WalletFeature
FEATURE_LATEST	../server/wallet.h	/^	FEATURE_LATEST = 60000$/;"	e	enum:WalletFeature
FEATURE_WALLETCRYPT	../server/wallet.h	/^	FEATURE_WALLETCRYPT = 40000, \/\/ wallet encryption$/;"	e	enum:WalletFeature
FEE_SPACING	../server/txfeerate.h	/^static const double FEE_SPACING = 1.1;$/;"	v
FIVE_MINUTES	../shcoind_rpc.c	240;"	d	file:
FeeFilterRounder	../server/txfeerate.h	/^class FeeFilterRounder$/;"	c
FetchInputs	../server/txmempool.h	/^    bool FetchInputs(uint256 hash, tx_cache& cacheRet)$/;"	f	class:CPool
Find	../server/script.h	/^    int Find(opcodetype op) const$/;"	f	class:CScript
FindAndDelete	../server/script.h	/^    int FindAndDelete(const CScript& b)$/;"	f	class:CScript
GMF_BLOCK	../server/block.h	/^    GMF_BLOCK,$/;"	e	enum:GetMinFee_mode
GMF_RELAY	../server/block.h	/^    GMF_RELAY,$/;"	e	enum:GetMinFee_mode
GMF_SEND	../server/block.h	/^    GMF_SEND,$/;"	e	enum:GetMinFee_mode
GNULIB_NAMESPACE	../server/main.h	29;"	d
GenerateNewECKey	../server/wallet.h	/^		CPubKey GenerateNewECKey(bool fCompressed = true, int nFlag = 0)$/;"	f	class:CWallet
Get	../server/shlib.h	/^    shpeer_t *Get()$/;"	f	class:SHPeer
GetActiveWeight	../server/txmempool.h	/^    int64 GetActiveWeight()$/;"	f	class:CPool
GetAddrDestination	../server/account.h	/^		void GetAddrDestination(const CKeyID& keyid, vector<CTxDestination>& vDest, int nFlag = 0)$/;"	f	class:CAccountCache
GetAlias	../server/block.h	/^    CAlias *GetAlias()$/;"	f	class:CTransaction
GetAltBlockHeader	../server/block.h	/^		CAltBlock GetAltBlockHeader() const$/;"	f	class:CBlock
GetAltChain	../server/block.h	/^		CAltChain *GetAltChain() const$/;"	f	class:CTransaction
GetAsset	../server/block.h	/^		CAsset *GetAsset()$/;"	f	class:CTransaction
GetAvailableCredit	../server/wallet.h	/^			 int64 GetAvailableCredit(bool fUseCache=true) const$/;"	f	class:CWalletTx
GetBlockChain	../blockchain/bc_block.c	/^bc_t *GetBlockChain(CIface *iface)$/;"	f
GetBlockCoinChain	../blockchain/bc_block.c	/^bc_t *GetBlockCoinChain(CIface *iface)$/;"	f
GetBlockHash	../server/block.h	/^    uint256 GetBlockHash() const$/;"	f	class:CBlockIndex
GetBlockHash	../server/block.h	/^    uint256 GetBlockHash() const$/;"	f	class:CDiskBlockIndex
GetBlockHeader	../server/block.h	/^    CBlockHeader GetBlockHeader() const$/;"	f	class:CBlock
GetBlockHeader	../server/block.h	/^    CBlockHeader GetBlockHeader() const$/;"	f	class:CBlockIndex
GetBlockTime	../server/block.h	/^    int64 GetBlockTime() const$/;"	f	class:CBlockHeader
GetBlockTime	../server/block.h	/^    int64 GetBlockTime() const$/;"	f	class:CBlockIndex
GetBlockTxChain	../blockchain/bc_block.c	/^bc_t *GetBlockTxChain(CIface *iface)$/;"	f
GetBloomFilter	../server/net.h	/^    CBloomFilter *GetBloomFilter()$/;"	f	class:CNode
GetCell	../server/matrix.h	/^		unsigned int GetCell(int row, int col)$/;"	f	class:CTxMatrix
GetCertificate	../server/block.h	/^    CCert *GetCertificate()$/;"	f	class:CTransaction
GetChain	../server/hdkey.h	/^    cbuff GetChain() const$/;"	f	class:HDMasterPrivKey
GetChange	../server/wallet.h	/^			 int64 GetChange() const$/;"	f	class:CWalletTx
GetChange	../server/wallet.h	/^		int64 GetChange(const CTransaction& tx) const$/;"	f	class:CWallet
GetChange	../server/wallet.h	/^		int64 GetChange(const CTxOut& txout) const$/;"	f	class:CWallet
GetCoin	../proto/coin_proto.c	/^coin_iface_t *GetCoin(const char *name)$/;"	f
GetCoinAttr	../proto/coin_proto.c	/^int GetCoinAttr(const char *name, char *attr)$/;"	f
GetCoinByIndex	../proto/coin_proto.c	/^coin_iface_t *GetCoinByIndex(int index)$/;"	f
GetCoinIndex	../proto/coin_proto.c	/^int GetCoinIndex(coin_iface_t *iface)$/;"	f
GetColor	../server/txmempool.h	/^		uint160 GetColor()$/;"	f	class:CPoolTx
GetColor	../server/wallet.h	/^			 uint160 GetColor() const$/;"	f	class:CWalletTx
GetContext	../server/block.h	/^    CContext *GetContext()$/;"	f	class:CTransaction
GetCredit	../server/wallet.h	/^			 int64 GetCredit(bool fUseCache=true) const$/;"	f	class:CWalletTx
GetCredit	../server/wallet.h	/^		int64 GetCredit(const CTransaction& tx)$/;"	f	class:CWallet
GetCredit	../server/wallet.h	/^		int64 GetCredit(const CTxOut& txout)$/;"	f	class:CWallet
GetCursor	../server/txidx.h	/^    Dbc* GetCursor()$/;"	f	class:CDB
GetDebit	../server/wallet.h	/^			 int64 GetDebit() const$/;"	f	class:CWalletTx
GetDebit	../server/wallet.h	/^		int64 GetDebit(const CTransaction& tx)$/;"	f	class:CWallet
GetDepthInMainChain	../server/block.h	/^    int GetDepthInMainChain(int ifaceIndex) const { CBlockIndex *pindexRet; return GetDepthInMainChain(ifaceIndex, pindexRet); }$/;"	f	class:CTransaction
GetDepthInMainChain	../server/main.h	/^    int GetDepthInMainChain(int ifaceIndex) const {$/;"	f	class:CMerkleTx
GetDetach	../server/txidx.h	/^    bool GetDetach() { return fDetachDB; }$/;"	f	class:CDBEnv
GetError	../server/txcreator.h	/^    string GetError()$/;"	f	class:CTxCreator
GetExec	../server/block.h	/^		CExec *GetExec() const$/;"	f	class:CTransaction
GetExecCall	../server/block.h	/^		CExecCall *GetExecCall() const$/;"	f	class:CTransaction
GetExecCheckpoint	../server/block.h	/^		CExecCheckpoint *GetExecCheckpoint() const$/;"	f	class:CTransaction
GetFee	../server/txmempool.h	/^    int64 GetFee()$/;"	f	class:CPoolTx
GetFeePerK	../server/txfeerate.h	/^    CAmount GetFeePerK() const { return GetFee(1000); }$/;"	f	class:CFeeRate
GetFeePriority	../server/txmempool.h	/^    double GetFeePriority()$/;"	f	class:CPoolTx
GetFlagString	../server/key.h	/^		const string GetFlagString() const$/;"	f	class:CKeyMetadata
GetFlags	../server/block.h	/^		unsigned int GetFlags() const$/;"	f	class:CTransactionCore
GetFlags	../server/net.h	/^    int GetFlags()$/;"	f	class:CBloomFilter
GetHash	../server/block.h	/^		uint256 GetHash() const$/;"	f	class:CTxOut
GetHash	../server/block.h	/^    uint256 GetHash() const$/;"	f	class:CBlockHeader
GetHash	../server/block.h	/^    uint256 GetHash() const$/;"	f	class:CTransaction
GetHash	../server/key.h	/^		uint256 GetHash() const {$/;"	f	class:CPubKey
GetHash	../server/matrix.h	/^		const uint160 GetHash()$/;"	f	class:CTxMatrix
GetHash	../server/txmempool.h	/^    const uint256& GetHash() const$/;"	f	class:CPoolTx
GetHeight	../server/matrix.h	/^		unsigned int GetHeight()$/;"	f	class:CTxMatrix
GetHeight	../server/txmempool.h	/^    unsigned int GetHeight()$/;"	f	class:CPoolTx
GetID	../server/key.h	/^			CKeyID GetID() const {$/;"	f	class:CPubKey
GetID	../server/script.h	/^    CScriptID GetID() const$/;"	f	class:CScript
GetIface	../server/txmempool.h	/^    CIface *GetIface()$/;"	f	class:CPool
GetIface	../server/txsignature.h	/^		CIface *GetIface()$/;"	f	class:CSignature
GetInputs	../server/txmempool.h	/^    tx_cache& GetInputs()$/;"	f	class:CPoolTx
GetKey	../server/shlib.h	/^    shkey_t *GetKey()$/;"	f	class:SHPeer
GetKeys	../server/keystore.h	/^    void GetKeys(std::set<CKeyID> &setAddress) const$/;"	f	class:CBasicKeyStore
GetMatrix	../server/block.h	/^    CTxMatrix *GetMatrix()$/;"	f	class:CTransaction
GetMaxConfirms	../server/txfeerate.h	/^    unsigned int GetMaxConfirms() { return confAvg.size(); }$/;"	f	class:TxConfirmStats
GetMaxQueueMem	../server/txmempool.h	/^    size_t GetMaxQueueMem()$/;"	f	class:CPool
GetMedianTime	../server/block.h	/^    int64 GetMedianTime() const$/;"	f	class:CBlockIndex
GetMedianTimePast	../server/block.h	/^    int64 GetMedianTimePast() const$/;"	f	class:CBlockIndex
GetMergedAddr	../server/account.h	/^		bool GetMergedAddr(const char *tag, CCoinAddr& addr)$/;"	f	class:CAccountCache
GetMergedPubKey	../server/account.h	/^		bool GetMergedPubKey(const char *tag, CPubKey& pubkey)$/;"	f	class:CAccountCache
GetMethod	../server/key.h	/^		int GetMethod() const$/;"	f	class:CKey
GetMethod	../server/key.h	/^		int GetMethod() const$/;"	f	class:CPubKey
GetMinFee_mode	../server/block.h	/^enum GetMinFee_mode$/;"	g
GetMode	../server/net.h	/^    int GetMode()$/;"	f	class:CBloomFilter
GetModifiedSize	../server/txmempool.h	/^    int64 GetModifiedSize()$/;"	f	class:CPoolTx
GetNotorizedBlockHash	../server/checkpoints.h	/^		const uint256 GetNotorizedBlockHash()$/;"	f	class:CCheckpoints
GetNotorizedBlockHeight	../server/checkpoints.h	/^		const unsigned int GetNotorizedBlockHeight()$/;"	f	class:CCheckpoints
GetOffer	../server/block.h	/^    COffer *GetOffer() const$/;"	f	class:CTransaction
GetOp	../server/script.h	/^    bool GetOp(const_iterator& pc, opcodetype& opcodeRet) const$/;"	f	class:CScript
GetOp	../server/script.h	/^    bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const$/;"	f	class:CScript
GetOp	../server/script.h	/^    bool GetOp(iterator& pc, opcodetype& opcodeRet)$/;"	f	class:CScript
GetOp	../server/script.h	/^    bool GetOp(iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet)$/;"	f	class:CScript
GetOp2	../server/script.h	/^    bool GetOp2(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet) const$/;"	f	class:CScript
GetOverflowTxSize	../server/txmempool.h	/^    int64 GetOverflowTxSize()$/;"	f	class:CPool
GetParam	../server/block.h	/^		CParam *GetParam() const$/;"	f	class:CTransaction
GetPoolTx	../server/txmempool.h	/^    CPoolTx *GetPoolTx(uint256 hash)$/;"	f	class:CPool
GetRefCount	../server/net.h	/^    int GetRefCount()$/;"	f	class:CNode
GetReferenceHash	../server/matrix.h	/^		uint160 GetReferenceHash()$/;"	f	class:CTxMatrix
GetSecret	../server/base58.h	/^		CSecret GetSecret(bool &fCompressedOut)$/;"	f	class:CCoinSecret
GetSecret	../server/key.h	/^    CSecret GetSecret(bool &fCompressed) const$/;"	f	class:CKey
GetSecret	../server/keystore.h	/^    virtual bool GetSecret(const CKeyID &address, CSecret& vchSecret, bool &fCompressed) const$/;"	f	class:CKeyStore
GetSize	../server/matrix.h	/^		unsigned int GetSize()$/;"	f	class:CTxMatrix
GetStaleTxSize	../server/txmempool.h	/^    int64 GetStaleTxSize()$/;"	f	class:CPool
GetStamp	../server/txmempool.h	/^    time_t GetStamp()$/;"	f	class:CPoolTx
GetTx	../server/txmempool.h	/^    CTransaction& GetTx()$/;"	f	class:CPoolTx
GetTxList	../server/txcreator.h	/^    vector<CWalletTx>& GetTxList()$/;"	f	class:CTxBatchCreator
GetTxSize	../server/txmempool.h	/^    int64 GetTxSize()$/;"	f	class:CPoolTx
GetType	../server/matrix.h	/^		unsigned int GetType()$/;"	f	class:CTxMatrix
GetValueOut	../server/block.h	/^    int64 GetValueOut() const$/;"	f	class:CTransaction
GetVersion	../server/base58.h	/^		const cbuff& GetVersion() const$/;"	f	class:CBase58Data
GetVersion	../server/block.h	/^		int GetVersion() const$/;"	f	class:CTransactionCore
GetVirtualTransactionSize	../server/wallet.h	/^		unsigned int GetVirtualTransactionSize(const CTransaction& tx)$/;"	f	class:CWallet
GetVirtualTransactionSize	../server/wallet.h	/^		unsigned int GetVirtualTransactionSize(int64 nWeight)$/;"	f	class:CWallet
GetWalletTxChain	../blockchain/bc_block.c	/^bc_t *GetWalletTxChain(CIface *iface)$/;"	f
GetWeight	../server/txmempool.h	/^    int64 GetWeight()$/;"	f	class:CPoolTx
GetWitnessHash	../server/block.h	/^    uint256 GetWitnessHash() const$/;"	f	class:CTransaction
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey() : HDPrivKey()$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(CSecret secretIn, cbuff vchChainIn)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(ECKey seed_key)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(HDMasterPrivKey& b)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(cbuff seedIn)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(cbuff vchKeyIn, cbuff vchChainIn)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^class HDMasterPrivKey : public HDPrivKey$/;"	c
HDPrivKey	../server/hdkey.h	/^    HDPrivKey()$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^    HDPrivKey(CSecret secret, bool fCompressed)$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^    HDPrivKey(const HDPrivKey& b)$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^    HDPrivKey(const HDPrivKey& parent, cbuff vchKeyIn, cbuff vchChainIn, int indexIn)$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^class HDPrivKey : public ECKey$/;"	c
HDPubKey	../server/hdkey.h	/^    HDPubKey()$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(cbuff vchPubKeyIn)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(cbuff vchPubKeyIn, cbuff vchChainIn)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(cbuff vchPubKeyIn, cbuff vchChainIn, int depthIn, int indexIn)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(const HDPubKey& b)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^class HDPubKey : public CPubKey$/;"	c
HEADER_PREFIX	../proto/coin_proto.h	160;"	d
HTTPF_DISABLE	../stratum/stratum_http.h	33;"	d
HUGE_STRING_LEN	../test/CuTest.h	62;"	d
HashList	../server/block.h	/^typedef std::vector<uint256> HashList;$/;"	t
HaveKey	../server/keystore.h	/^    bool HaveKey(const CKeyID &address) const$/;"	f	class:CBasicKeyStore
HaveTx	../server/txmempool.h	/^    bool HaveTx(uint256 hash)$/;"	f	class:CPool
IFACE_VERSION	../shcoind_version.h	43;"	d
INF_FEERATE	../server/txfeerate.h	240;"	d
INF_PRIORITY	../server/txfeerate.h	243;"	d
INIT_UNET_PEER_SCAN_SIZE	../unet/unet_peerdb.c	29;"	d	file:
Init	../server/hdkey.h	/^    void Init(const HDMasterPrivKey& b)$/;"	f	class:HDMasterPrivKey
Init	../server/hdkey.h	/^    void Init(const HDPrivKey& b)$/;"	f	class:HDPrivKey
Init	../server/hdkey.h	/^    void Init(const HDPubKey& b)$/;"	f	class:HDPubKey
Init	../server/key.h	/^		void Init(const CKey& b)$/;"	f	class:CKey
Init	../server/key.h	/^		void Init(const CKeyMetadata& b)$/;"	f	class:CKeyMetadata
Init	../server/main.h	/^    void Init()$/;"	f	class:CMerkleTx
Init	../server/matrix.h	/^		void Init(const CTxMatrix& b)$/;"	f	class:CTxMatrix
Init	../server/txcreator.h	/^    void Init(CWallet *wallet)$/;"	f	class:CTxCreator
Init	../server/txmempool.h	/^    void Init(const CPoolTx& b)$/;"	f	class:CPoolTx
Init	../server/txmempool.h	/^    void Init(const CTransaction& txIn)$/;"	f	class:CPoolTx
Init	../server/wallet.h	/^		void Init(CWallet *pwalletIn)$/;"	f	class:CWalletTx
Init	../server/wallet.h	/^		void Init(const CAccount& b)$/;"	f	class:CAccount
InitCells	../server/matrix.h	/^		void InitCells(const CTxMatrix& b)$/;"	f	class:CTxMatrix
Invalidate	../server/key.h	/^		void Invalidate()$/;"	f	class:CPubKey
Inventory	../server/wallet.h	/^		void Inventory(const uint256 &hash)$/;"	f	class:CWallet
IsCoinBase	../server/block.h	/^    bool IsCoinBase() const$/;"	f	class:CTransaction
IsCompressed	../server/key.h	/^		bool IsCompressed() const$/;"	f	class:CPubKey
IsCompressed	../server/key.h	/^    bool IsCompressed() const$/;"	f	class:CKey
IsDilithium	../server/key.h	/^		bool IsDilithium() const$/;"	f	class:CKey
IsDilithium	../server/key.h	/^		bool IsDilithium() const$/;"	f	class:CPubKey
IsEmpty	../server/block.h	/^    bool IsEmpty() const { return vtxinwit.empty(); }$/;"	f	class:CTxWitness
IsExpired	../server/txmempool.h	/^    bool IsExpired(time_t span)$/;"	f	class:CPoolTx
IsFinal	../server/block.h	/^    bool IsFinal() const$/;"	f	class:CTxIn
IsFlag	../server/txmempool.h	/^    bool IsFlag(int flag)$/;"	f	class:CPoolTx
IsFromMe	../server/wallet.h	/^			 bool IsFromMe() const$/;"	f	class:CWalletTx
IsFromMe	../server/wallet.h	/^		bool IsFromMe(const CTransaction& tx)$/;"	f	class:CWallet
IsInMainChain	../server/main.h	/^    bool IsInMainChain(int ifaceIndex) const { return GetDepthInMainChain(ifaceIndex) > 0; }$/;"	f	class:CMerkleTx
IsInvalidTx	../server/txmempool.h	/^    bool IsInvalidTx(const uint256 hash) const$/;"	f	class:CPool
IsLocal	../server/txmempool.h	/^    bool IsLocal()$/;"	f	class:CPoolTx
IsMine	../server/wallet.h	/^		bool IsMine(const CTransaction& tx)$/;"	f	class:CWallet
IsMine	../server/wallet.h	/^		bool IsMine(const CTxOut& txout)$/;"	f	class:CWallet
IsNewerThan	../server/block.h	/^    bool IsNewerThan(const CTransaction& old) const$/;"	f	class:CTransaction
IsNull	../server/account.h	/^		bool IsNull() const { $/;"	f	class:CAccountCache
IsNull	../server/block.h	/^		bool IsNull()$/;"	f	class:CTxOut
IsNull	../server/block.h	/^    bool IsNull() const { return (hash == 0 && n == (unsigned int) -1); }$/;"	f	class:COutPoint
IsNull	../server/block.h	/^    bool IsNull() const { return (nFile == (unsigned int) -1); }$/;"	f	class:CDiskTxPos
IsNull	../server/block.h	/^    bool IsNull() const { return (ptx == NULL && n == (unsigned int) -1); }$/;"	f	class:CInPoint
IsNull	../server/block.h	/^    bool IsNull() const { return scriptWitness.IsNull(); }$/;"	f	class:CTxInWitness
IsNull	../server/block.h	/^    bool IsNull() const { return stack.empty(); }$/;"	f	struct:CScriptWitness
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CBlock
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CBlockHeader
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CTransactionCore
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CTxWitness
IsNull	../server/block.h	/^    bool IsNull()$/;"	f	class:CBlockLocator
IsNull	../server/block.h	/^    bool IsNull()$/;"	f	class:CTxIndex
IsNull	../server/key.h	/^    bool IsNull() const$/;"	f	class:CKey
IsNull	../server/net.h	/^    bool IsNull()$/;"	f	class:CRequestTracker
IsPendingTx	../server/txmempool.h	/^    bool IsPendingTx(const uint256 hash) const$/;"	f	class:CPool
IsPushOnly	../server/script.h	/^    bool IsPushOnly() const$/;"	f	class:CScript
IsSpent	../server/wallet.h	/^			 bool IsSpent(unsigned int nOut) const$/;"	f	class:CWalletTx
IsTest	../server/net.h	/^    bool IsTest()$/;"	f	class:CBloomFilter
IsValid	../server/base58.h	/^		bool IsValid() const$/;"	f	class:CCoinSecret
IsValid	../server/block.h	/^    bool IsValid(int nUpTo = BLOCK_VALID_TRANSACTIONS) const$/;"	f	class:CBlockIndex
IsValid	../server/key.h	/^		bool IsValid() const$/;"	f	class:CPubKey
KECCAK_WORK_CYCLE_TIME	../stratum/stratum_keccak.c	34;"	d	file:
LOCAL_BIND	../server/net.h	/^    LOCAL_BIND,   \/\/ address explicit bound to$/;"	e	enum:__anon4
LOCAL_HTTP	../server/net.h	/^    LOCAL_HTTP,   \/\/ address reported by whatismyip.com and similars$/;"	e	enum:__anon4
LOCAL_IF	../server/net.h	/^    LOCAL_IF,     \/\/ address a local interface listens on$/;"	e	enum:__anon4
LOCAL_IRC	../server/net.h	/^    LOCAL_IRC,    \/\/ address reported by IRC (deprecated)$/;"	e	enum:__anon4
LOCAL_MANUAL	../server/net.h	/^    LOCAL_MANUAL, \/\/ address explicitly specified (-externalip=)$/;"	e	enum:__anon4
LOCAL_MAX	../server/net.h	/^    LOCAL_MAX$/;"	e	enum:__anon4
LOCAL_NONE	../server/net.h	/^    LOCAL_NONE,   \/\/ unknown$/;"	e	enum:__anon4
LOCAL_UPNP	../server/net.h	/^    LOCAL_UPNP,   \/\/ address reported by UPnP$/;"	e	enum:__anon4
LOCKTIME_THRESHOLD	../server/block.h	/^static const unsigned int LOCKTIME_THRESHOLD = 500000000; $/;"	v
LTC_COIN	../proto/ltc_proto.h	51;"	d
LTC_COINBASE_MATURITY	../proto/ltc_proto.h	/^static const int LTC_COINBASE_MATURITY = 100;$/;"	v
LTC_COIN_DAEMON_PORT	../proto/ltc_proto.h	35;"	d
LTC_COIN_IFACE	../proto/coin_proto.h	127;"	d
LTC_DEFAULT_BYTES_PER_SIGOP	../proto/ltc_proto.h	61;"	d
LTC_MAX_BLOCK_SIZE	../proto/ltc_proto.h	53;"	d
LTC_MAX_DRIFT_TIME	../proto/ltc_proto.h	47;"	d
LTC_MAX_FREE_TX_SIZE	../proto/ltc_proto.h	64;"	d
LTC_MAX_GETADDR	../proto/ltc_proto.h	37;"	d
LTC_MAX_MONEY	../proto/ltc_proto.h	/^static const int64 LTC_MAX_MONEY = 84000000 * LTC_COIN;$/;"	v
LTC_MAX_ORPHAN_TRANSACTIONS	../proto/ltc_proto.h	39;"	d
LTC_MAX_SCRIPT_ELEMENT_SIZE	../proto/ltc_proto.h	45;"	d
LTC_MAX_SCRIPT_SIZE	../proto/ltc_proto.h	43;"	d
LTC_MAX_SIGOPS	../proto/ltc_proto.h	41;"	d
LTC_MAX_STANDARD_TX_SIGOP_COST	../proto/ltc_proto.h	59;"	d
LTC_MAX_STANDARD_TX_WEIGHT	../proto/ltc_proto.h	57;"	d
LTC_MAX_TRANSACTION_WEIGHT	../proto/ltc_proto.h	55;"	d
LTC_MAX_TX_FEE	../proto/ltc_proto.h	/^static const int64 LTC_MAX_TX_FEE = 1000 * SHC_COIN;$/;"	v
LTC_MIN_INPUT	../proto/ltc_proto.h	/^static const int64 LTC_MIN_INPUT = 1;\/\/294;$/;"	v
LTC_MIN_RELAY_TX_FEE	../proto/ltc_proto.h	/^static const int64 LTC_MIN_RELAY_TX_FEE = 1000;$/;"	v
LTC_MIN_TX_FEE	../proto/ltc_proto.h	/^static const int64 LTC_MIN_TX_FEE = 10000;$/;"	v
LTC_PROTOCOL_VERSION	../proto/ltc_proto.h	/^static const int LTC_PROTOCOL_VERSION = 70015;$/;"	v
LTC_VERSION_BUILD	../proto/ltc_proto.h	33;"	d
LTC_VERSION_MAJOR	../proto/ltc_proto.h	30;"	d
LTC_VERSION_MINOR	../proto/ltc_proto.h	31;"	d
LTC_VERSION_REVISION	../proto/ltc_proto.h	32;"	d
LTC_WITNESS_SCALE_FACTOR	../proto/ltc_proto.h	/^static const int LTC_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
LoadCScript	../server/wallet.h	/^		bool LoadCScript(const CScript& redeemScript) { return CBasicKeyStore::AddCScript(redeemScript); }$/;"	f	class:CWallet
LoadKey	../server/wallet.h	/^		bool LoadKey(const DIKey& key) { return CBasicKeyStore::AddKey(key); }$/;"	f	class:CWallet
LoadKey	../server/wallet.h	/^		bool LoadKey(const ECKey& key) { return CBasicKeyStore::AddKey(key); }$/;"	f	class:CWallet
MARK_FD	../shcoind_descriptor.h	54;"	d
MAX_ACCADDR	../server/wallet.h	76;"	d
MAX_ALGOBITS	../server/algobits.h	37;"	d
MAX_BASE58_TYPES	../server/coinaddr.h	/^			MAX_BASE58_TYPES$/;"	e	enum:CCoinAddr::__anon3
MAX_BC_MAP_SIZE	../blockchain/bc_fmap.c	44;"	d	file:
MAX_BLOCKS_IN_TRANSIT_PER_PEER	../proto/coin_proto.h	/^static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER = 16;$/;"	v
MAX_BLOCK_CONFIRMS	../server/txfeerate.h	/^static const unsigned int MAX_BLOCK_CONFIRMS = 25;$/;"	v
MAX_BLOCK_SIGOPS	../proto/coin_proto.h	55;"	d
MAX_BLOCK_SIGOP_COST	../proto/coin_proto.h	58;"	d
MAX_BLOCK_SIZE	../proto/coin_proto.h	64;"	d
MAX_BLOCK_WEIGHT	../proto/coin_proto.h	69;"	d
MAX_BLOOM_FILTER_SIZE	../server/bloom.h	/^static const unsigned int MAX_BLOOM_FILTER_SIZE = 36000; \/\/ bytes$/;"	v
MAX_COIN_IFACE	../proto/coin_proto.h	135;"	d
MAX_CONNECT_IDLE_TIME	../unet/unet.h	90;"	d
MAX_DESCRIPTORS	../shcoind_descriptor.h	36;"	d
MAX_DESCRIPTOR_FLAGS	../shcoind_descriptor.h	48;"	d
MAX_FEERATE	../server/txfeerate.h	/^static const double MAX_FEERATE = 1e7;$/;"	v
MAX_FREE_TX_SIZE	../proto/coin_proto.h	113;"	d
MAX_HASH_FUNCS	../server/bloom.h	/^static const unsigned int MAX_HASH_FUNCS = 50;$/;"	v
MAX_HEADERS_RESULTS	../proto/coin_proto.h	/^static const unsigned int MAX_HEADERS_RESULTS = 2000;$/;"	v
MAX_IDLE_TIME	../unet/unet.h	91;"	d
MAX_IPADDR_TABLE_SIZE	../unet/unet_local.c	31;"	d	file:
MAX_MEMPOOL_ACTIVE_SPAN	../server/txmempool.h	30;"	d
MAX_MEMPOOL_INVAL_SPAN	../server/txmempool.h	33;"	d
MAX_MEMPOOL_OVERFLOW_SPAN	../server/txmempool.h	31;"	d
MAX_MEMPOOL_PENDING_SPAN	../server/txmempool.h	32;"	d
MAX_MEMPOOL_STALE_SPAN	../server/txmempool.h	34;"	d
MAX_MONEY	../proto/coin_proto.h	84;"	d
MAX_NOTARY_TX_VALUE	../server/matrix.h	/^		static const int MAX_NOTARY_TX_VALUE = 100;$/;"	m	class:CTxMatrix
MAX_ORPHAN_TRANSACTIONS	../proto/coin_proto.h	72;"	d
MAX_OUTBOUND_CONNECTIONS	../server_iface.h	56;"	d
MAX_PEERDB_TRACK_LIST_SIZE	../unet/unet_peerdb.c	32;"	d	file:
MAX_PEERDB_TRACK_PRUNE_SIZE	../unet/unet_peerdb.c	33;"	d	file:
MAX_PRIORITY	../server/txfeerate.h	/^static const double MAX_PRIORITY = 1e16;$/;"	v
MAX_REWARD_WAIT_TIME	../stratum/stratum_task.c	38;"	d	file:
MAX_ROUNDS_PER_HOUR	../shapi/shapi.h	38;"	d
MAX_ROUNDS_PER_HOUR	../stratum/stratum.h	38;"	d
MAX_ROUND_TIME	../stratum/stratum_task.c	37;"	d	file:
MAX_RPC_MESSAGE_SIZE	../shcoind_rpc.c	36;"	d	file:
MAX_SCRIPT_ELEMENT_SIZE	../proto/coin_proto.h	181;"	d
MAX_SCRIPT_SIZE	../proto/coin_proto.h	178;"	d
MAX_SERVER_NONCE	../stratum/stratum_task.c	36;"	d	file:
MAX_SHAPI_MESSAGE_SIZE	../shapi/shapi.h	44;"	d
MAX_SHAPI_USERS	../shapi/shapi_user.c	31;"	d	file:
MAX_SOCKET_BUFFER_SIZE	../unet/unet_close.c	28;"	d	file:
MAX_SPEED_STEP	../shapi/shapi.h	37;"	d
MAX_SPEED_STEP	../stratum/stratum.h	37;"	d
MAX_STRATUM_MESSAGE_SIZE	../stratum/stratum.h	44;"	d
MAX_STRATUM_USERS	../stratum/stratum_user.c	31;"	d	file:
MAX_TASK_LIFESPAN	../stratum/stratum_task.h	32;"	d
MAX_TEST_CASES	../test/CuTest.h	140;"	d
MAX_TRANSACTION_FEE	../proto/coin_proto.h	81;"	d
MAX_TRANSACTION_WEIGHT	../proto/coin_proto.h	75;"	d
MAX_TX_FEE	../proto/coin_proto.h	78;"	d
MAX_TX_SIGOP_COST	../proto/coin_proto.h	61;"	d
MAX_UNET_COIN_MODES	../unet/unet.h	47;"	d
MAX_UNET_MODES	../unet/unet.h	71;"	d
MAX_UNET_PEER_SCAN_SIZE	../unet/unet_peerdb.c	30;"	d	file:
MAX_USER_FLAGS	../stratum/stratum_user.c	43;"	d	file:
MAX_USER_WORK_DIFFICULTY	../shapi/shapi_user.c	40;"	d	file:
MAX_USER_WORK_DIFFICULTY	../stratum/stratum_user.c	40;"	d	file:
MAX_VERSION_BITS_DEPLOYMENTS	../proto/coin_proto.h	/^    MAX_VERSION_BITS_DEPLOYMENTS$/;"	e	enum:DeploymentPos
META_HD_KEY	../server/key.h	/^		static const int META_HD_KEY = (1 << 1);$/;"	m	class:CKeyMetadata
META_INTERNAL	../server/key.h	/^		static const int META_INTERNAL = (1 << 2);$/;"	m	class:CKeyMetadata
META_SEGWIT	../server/key.h	/^		static const int META_SEGWIT = (1 << 0);$/;"	m	class:CKeyMetadata
MIME_BMP	../stratum/stratum_http.h	31;"	d
MIME_HTML	../stratum/stratum_http.h	30;"	d
MIN_FEERATE	../server/txfeerate.h	/^static const double MIN_FEERATE = 10;$/;"	v
MIN_INPUT_VALUE	../proto/coin_proto.h	107;"	d
MIN_PRIORITY	../server/txfeerate.h	/^static const double MIN_PRIORITY = 10;$/;"	v
MIN_RELAY_TX_FEE	../proto/coin_proto.h	96;"	d
MIN_SHARE_DIFFICULTY	../shapi/shapi_user.c	34;"	d	file:
MIN_SHARE_DIFFICULTY	../stratum/stratum_user.c	34;"	d	file:
MIN_SUCCESS_PCT	../server/txfeerate.h	/^static const double MIN_SUCCESS_PCT = .95;$/;"	v
MIN_TX_FEE	../proto/coin_proto.h	87;"	d
MIN_TX_FEE_RATE	../proto/coin_proto.h	90;"	d
MIN_USER_WORK_DIFFICULTY	../shapi/shapi_user.c	37;"	d	file:
MIN_USER_WORK_DIFFICULTY	../stratum/stratum_user.c	37;"	d	file:
MSG_BLOCK	../server/net.h	/^    MSG_BLOCK,$/;"	e	enum:__anon5
MSG_BUF	../shcoind_svc.c	581;"	d	file:
MSG_CMPCT_BLOCK	../server/net.h	/^    MSG_CMPCT_BLOCK,$/;"	e	enum:__anon5
MSG_DONTWAIT	../unet/unet.h	85;"	d
MSG_FILTERED_BLOCK	../server/net.h	/^    MSG_FILTERED_BLOCK, \/* bloom *\/$/;"	e	enum:__anon5
MSG_FILTERED_WITNESS_BLOCK	../server/net.h	/^    MSG_FILTERED_WITNESS_BLOCK = MSG_FILTERED_BLOCK | MSG_WITNESS_FLAG$/;"	e	enum:__anon5
MSG_NOSIGNAL	../unet/unet.h	84;"	d
MSG_TX	../server/net.h	/^    MSG_TX = 1, $/;"	e	enum:__anon5
MSG_TYPE_MASK	../server/net.h	123;"	d
MSG_TYPE_MAX	../server/net.h	120;"	d
MSG_WITNESS_BLOCK	../server/net.h	/^    MSG_WITNESS_BLOCK = MSG_BLOCK | MSG_WITNESS_FLAG,$/;"	e	enum:__anon5
MSG_WITNESS_FLAG	../server/net.h	122;"	d
MSG_WITNESS_TX	../server/net.h	/^    MSG_WITNESS_TX = MSG_TX | MSG_WITNESS_FLAG,$/;"	e	enum:__anon5
M_SPRING	../server/matrix.h	/^		static const int M_SPRING = 2;$/;"	m	class:CTxMatrix
M_VALIDATE	../server/matrix.h	/^		static const int M_VALIDATE = 1;$/;"	m	class:CTxMatrix
MakeNewKey	../server/dikey.h	/^    void MakeNewKey(bool fCompressed) \/* CKey *\/$/;"	f	class:DIKey
MakeNewKey	../server/hdkey.h	/^    void MakeNewKey()$/;"	f	class:HDMasterPrivKey
MapCheckpoints	../server/checkpoints.h	/^typedef std::map<int, uint256> MapCheckpoints;$/;"	t
MapPrevTx	../server/block.h	/^typedef std::map<uint256, std::pair<CTxIndex, CTransaction> > MapPrevTx;$/;"	t
MarkDirty	../server/wallet.h	/^			 void MarkDirty()$/;"	f	class:CWalletTx
MarkSpent	../server/wallet.h	/^			 void MarkSpent(unsigned int nOut)$/;"	f	class:CWalletTx
MoneyRange	../server/block.h	/^inline bool MoneyRange(CIface *iface, int64 nValue) $/;"	f
MoneyRange	../server/block.h	/^inline bool MoneyRange(int ifaceIndex, int64 nValue) $/;"	f
NodeList	../proto/coin_proto.h	/^typedef std::vector<CNode *> NodeList;$/;"	t
OPT_ADMIN	../shcoind_opt.h	40;"	d
OPT_BAN_SPAN	../shcoind_opt.h	42;"	d
OPT_BAN_THRESHOLD	../shcoind_opt.h	43;"	d
OPT_BECH32	../shcoind_opt.h	64;"	d
OPT_BLOCK_SIZE	../shcoind_opt.h	62;"	d
OPT_DEBUG	../shcoind_opt.h	35;"	d
OPT_DILITHIUM	../shcoind_opt.h	71;"	d
OPT_EMC2_BACKUP_RESTORE	../shcoind_opt.h	60;"	d
OPT_EMC2_PORT	../shcoind_opt.h	58;"	d
OPT_FMAP_IDLE	../shcoind_opt.h	93;"	d
OPT_FREE_RELAY	../shcoind_opt.h	41;"	d
OPT_HDKEY	../shcoind_opt.h	70;"	d
OPT_LIST	../shcoind_opt.c	45;"	d	file:
OPT_LOG_PATH	../shcoind_opt.h	94;"	d
OPT_LTC_BACKUP_RESTORE	../shcoind_opt.h	61;"	d
OPT_MAX_CONN	../shcoind_opt.h	37;"	d
OPT_MIN_FEE	../shcoind_opt.h	63;"	d
OPT_NET_DEBUG	../shcoind_opt.h	36;"	d
OPT_NOTARY	../shcoind_opt.h	39;"	d
OPT_PARAM_TX	../shcoind_opt.h	73;"	d
OPT_PEER_SEED	../shcoind_opt.h	38;"	d
OPT_RPC_HOST	../shcoind_opt.h	53;"	d
OPT_RPC_MAP	../shcoind_opt.h	54;"	d
OPT_RPC_PORT	../shcoind_opt.h	52;"	d
OPT_SERV_EMC2	../shcoind_opt.h	57;"	d
OPT_SERV_RPC	../shcoind_opt.h	51;"	d
OPT_SERV_SHAPI	../shcoind_opt.h	48;"	d
OPT_SERV_STRATUM	../shcoind_opt.h	45;"	d
OPT_SERV_TESTNET	../shcoind_opt.h	55;"	d
OPT_SHAPI_HOST	../shcoind_opt.h	50;"	d
OPT_SHAPI_PORT	../shcoind_opt.h	49;"	d
OPT_SHC_BACKUP_RESTORE	../shcoind_opt.h	59;"	d
OPT_SHC_PORT	../shcoind_opt.h	44;"	d
OPT_STRATUM_BLAKE2S	../shcoind_opt.h	82;"	d
OPT_STRATUM_BLAKE2S_PORT	../shcoind_opt.h	83;"	d
OPT_STRATUM_COLOR	../shcoind_opt.h	68;"	d
OPT_STRATUM_GROESTL	../shcoind_opt.h	86;"	d
OPT_STRATUM_GROESTL_PORT	../shcoind_opt.h	87;"	d
OPT_STRATUM_KECCAK	../shcoind_opt.h	78;"	d
OPT_STRATUM_KECCAK_PORT	../shcoind_opt.h	79;"	d
OPT_STRATUM_PORT	../shcoind_opt.h	46;"	d
OPT_STRATUM_QUBIT	../shcoind_opt.h	84;"	d
OPT_STRATUM_QUBIT_PORT	../shcoind_opt.h	85;"	d
OPT_STRATUM_SHA256D	../shcoind_opt.h	76;"	d
OPT_STRATUM_SHA256D_PORT	../shcoind_opt.h	77;"	d
OPT_STRATUM_SKEIN	../shcoind_opt.h	88;"	d
OPT_STRATUM_SKEIN_PORT	../shcoind_opt.h	89;"	d
OPT_STRATUM_TESTNET	../shcoind_opt.h	67;"	d
OPT_STRATUM_WORK_CYCLE	../shcoind_opt.h	47;"	d
OPT_STRATUM_X11	../shcoind_opt.h	80;"	d
OPT_STRATUM_X11_PORT	../shcoind_opt.h	81;"	d
OPT_TESTNET_PORT	../shcoind_opt.h	56;"	d
OPT_TYPE_BOOL	../shcoind_opt.c	32;"	d	file:
OPT_TYPE_NULL	../shcoind_opt.c	31;"	d	file:
OPT_TYPE_NUM	../shcoind_opt.c	33;"	d	file:
OPT_TYPE_STR	../shcoind_opt.c	34;"	d	file:
OP_0	../server/script.h	/^    OP_0 = 0x00,$/;"	e	enum:opcodetype
OP_0NOTEQUAL	../server/script.h	/^    OP_0NOTEQUAL = 0x92,$/;"	e	enum:opcodetype
OP_1	../server/script.h	/^    OP_1 = 0x51,$/;"	e	enum:opcodetype
OP_10	../server/script.h	/^    OP_10 = 0x5a,$/;"	e	enum:opcodetype
OP_11	../server/script.h	/^    OP_11 = 0x5b,$/;"	e	enum:opcodetype
OP_12	../server/script.h	/^    OP_12 = 0x5c,$/;"	e	enum:opcodetype
OP_13	../server/script.h	/^    OP_13 = 0x5d,$/;"	e	enum:opcodetype
OP_14	../server/script.h	/^    OP_14 = 0x5e,$/;"	e	enum:opcodetype
OP_15	../server/script.h	/^    OP_15 = 0x5f,$/;"	e	enum:opcodetype
OP_16	../server/script.h	/^    OP_16 = 0x60,$/;"	e	enum:opcodetype
OP_1ADD	../server/script.h	/^    OP_1ADD = 0x8b,$/;"	e	enum:opcodetype
OP_1NEGATE	../server/script.h	/^    OP_1NEGATE = 0x4f,$/;"	e	enum:opcodetype
OP_1SUB	../server/script.h	/^    OP_1SUB = 0x8c,$/;"	e	enum:opcodetype
OP_2	../server/script.h	/^    OP_2 = 0x52,$/;"	e	enum:opcodetype
OP_2DIV	../server/script.h	/^    OP_2DIV = 0x8e,$/;"	e	enum:opcodetype
OP_2DROP	../server/script.h	/^    OP_2DROP = 0x6d,$/;"	e	enum:opcodetype
OP_2DUP	../server/script.h	/^    OP_2DUP = 0x6e,$/;"	e	enum:opcodetype
OP_2MUL	../server/script.h	/^    OP_2MUL = 0x8d,$/;"	e	enum:opcodetype
OP_2OVER	../server/script.h	/^    OP_2OVER = 0x70,$/;"	e	enum:opcodetype
OP_2ROT	../server/script.h	/^    OP_2ROT = 0x71,$/;"	e	enum:opcodetype
OP_2SWAP	../server/script.h	/^    OP_2SWAP = 0x72,$/;"	e	enum:opcodetype
OP_3	../server/script.h	/^    OP_3 = 0x53,$/;"	e	enum:opcodetype
OP_3DUP	../server/script.h	/^    OP_3DUP = 0x6f,$/;"	e	enum:opcodetype
OP_4	../server/script.h	/^    OP_4 = 0x54,$/;"	e	enum:opcodetype
OP_5	../server/script.h	/^    OP_5 = 0x55,$/;"	e	enum:opcodetype
OP_6	../server/script.h	/^    OP_6 = 0x56,$/;"	e	enum:opcodetype
OP_7	../server/script.h	/^    OP_7 = 0x57,$/;"	e	enum:opcodetype
OP_8	../server/script.h	/^    OP_8 = 0x58,$/;"	e	enum:opcodetype
OP_9	../server/script.h	/^    OP_9 = 0x59,$/;"	e	enum:opcodetype
OP_ABS	../server/script.h	/^    OP_ABS = 0x90,$/;"	e	enum:opcodetype
OP_ADD	../server/script.h	/^    OP_ADD = 0x93,$/;"	e	enum:opcodetype
OP_ALIAS	../server/script.h	/^    OP_ALIAS = 0x0a,$/;"	e	enum:opcodetype
OP_ALTCHAIN	../server/script.h	/^		OP_ALTCHAIN = 0x04,$/;"	e	enum:opcodetype
OP_AND	../server/script.h	/^    OP_AND = 0x84,$/;"	e	enum:opcodetype
OP_ASSET	../server/script.h	/^    OP_ASSET = 0x0f,$/;"	e	enum:opcodetype
OP_BOOLAND	../server/script.h	/^    OP_BOOLAND = 0x9a,$/;"	e	enum:opcodetype
OP_BOOLOR	../server/script.h	/^    OP_BOOLOR = 0x9b,$/;"	e	enum:opcodetype
OP_CAT	../server/script.h	/^    OP_CAT = 0x7e,$/;"	e	enum:opcodetype
OP_CERT	../server/script.h	/^    OP_CERT=0x0d,$/;"	e	enum:opcodetype
OP_CHANNEL	../server/script.h	/^    OP_CHANNEL = 0x07,$/;"	e	enum:opcodetype
OP_CHECKALTPROOF	../server/script.h	/^		OP_CHECKALTPROOF = 0xb7,$/;"	e	enum:opcodetype
OP_CHECKLOCKTIMEVERIFY	../server/script.h	/^		OP_CHECKLOCKTIMEVERIFY = 0xb1,$/;"	e	enum:opcodetype
OP_CHECKMULTISIG	../server/script.h	/^    OP_CHECKMULTISIG = 0xae,$/;"	e	enum:opcodetype
OP_CHECKMULTISIGVERIFY	../server/script.h	/^    OP_CHECKMULTISIGVERIFY = 0xaf,$/;"	e	enum:opcodetype
OP_CHECKSEQUENCEVERIFY	../server/script.h	/^		OP_CHECKSEQUENCEVERIFY = 0xb2,$/;"	e	enum:opcodetype
OP_CHECKSIG	../server/script.h	/^    OP_CHECKSIG = 0xac,$/;"	e	enum:opcodetype
OP_CHECKSIGVERIFY	../server/script.h	/^    OP_CHECKSIGVERIFY = 0xad,$/;"	e	enum:opcodetype
OP_CODESEPARATOR	../server/script.h	/^    OP_CODESEPARATOR = 0xab,$/;"	e	enum:opcodetype
OP_CONTEXT	../server/script.h	/^    OP_CONTEXT = 0x05,$/;"	e	enum:opcodetype
OP_DEPTH	../server/script.h	/^    OP_DEPTH = 0x74,$/;"	e	enum:opcodetype
OP_DIV	../server/script.h	/^    OP_DIV = 0x96,$/;"	e	enum:opcodetype
OP_DROP	../server/script.h	/^    OP_DROP = 0x75,$/;"	e	enum:opcodetype
OP_DUP	../server/script.h	/^    OP_DUP = 0x76,$/;"	e	enum:opcodetype
OP_ELSE	../server/script.h	/^    OP_ELSE = 0x67,$/;"	e	enum:opcodetype
OP_ENDIF	../server/script.h	/^    OP_ENDIF = 0x68,$/;"	e	enum:opcodetype
OP_EQUAL	../server/script.h	/^    OP_EQUAL = 0x87,$/;"	e	enum:opcodetype
OP_EQUALVERIFY	../server/script.h	/^    OP_EQUALVERIFY = 0x88,$/;"	e	enum:opcodetype
OP_EXEC	../server/script.h	/^    OP_EXEC = 0x06,$/;"	e	enum:opcodetype
OP_EXT_ACTIVATE	../server/script.h	/^    OP_EXT_ACTIVATE = 0xf1,$/;"	e	enum:opcodetype
OP_EXT_GENERATE	../server/script.h	/^    OP_EXT_GENERATE = 0xf4,$/;"	e	enum:opcodetype
OP_EXT_HASH	../server/script.h	/^    OP_EXT_HASH = 0xfc,$/;"	e	enum:opcodetype
OP_EXT_NEW	../server/script.h	/^    OP_EXT_NEW = 0xf0,$/;"	e	enum:opcodetype
OP_EXT_NOP8	../server/script.h	/^		OP_EXT_NOP8 = 0xf8,$/;"	e	enum:opcodetype
OP_EXT_NOP9	../server/script.h	/^		OP_EXT_NOP9 = 0xf9,$/;"	e	enum:opcodetype
OP_EXT_PAY	../server/script.h	/^    OP_EXT_PAY = 0xf6,$/;"	e	enum:opcodetype
OP_EXT_REMOVE	../server/script.h	/^    OP_EXT_REMOVE = 0xf3,$/;"	e	enum:opcodetype
OP_EXT_RESERVED1	../server/script.h	/^    OP_EXT_RESERVED1 = 0x01,$/;"	e	enum:opcodetype
OP_EXT_RESERVED2	../server/script.h	/^    OP_EXT_RESERVED2 = 0x02,$/;"	e	enum:opcodetype
OP_EXT_RESERVED8	../server/script.h	/^    OP_EXT_RESERVED8 = 0x08,$/;"	e	enum:opcodetype
OP_EXT_TRANSFER	../server/script.h	/^    OP_EXT_TRANSFER = 0xf5,$/;"	e	enum:opcodetype
OP_EXT_UPDATE	../server/script.h	/^    OP_EXT_UPDATE = 0xf2,$/;"	e	enum:opcodetype
OP_EXT_VALIDATE	../server/script.h	/^    OP_EXT_VALIDATE = 0xf7,$/;"	e	enum:opcodetype
OP_FALSE	../server/script.h	/^    OP_FALSE = OP_0,$/;"	e	enum:opcodetype
OP_FROMALTSTACK	../server/script.h	/^    OP_FROMALTSTACK = 0x6c,$/;"	e	enum:opcodetype
OP_GREATERTHAN	../server/script.h	/^    OP_GREATERTHAN = 0xa0,$/;"	e	enum:opcodetype
OP_GREATERTHANOREQUAL	../server/script.h	/^    OP_GREATERTHANOREQUAL = 0xa2,$/;"	e	enum:opcodetype
OP_HASH160	../server/script.h	/^    OP_HASH160 = 0xa9,$/;"	e	enum:opcodetype
OP_HASH256	../server/script.h	/^    OP_HASH256 = 0xaa,$/;"	e	enum:opcodetype
OP_IDENT	../server/script.h	/^    OP_IDENT=0x0c,$/;"	e	enum:opcodetype
OP_IF	../server/script.h	/^    OP_IF = 0x63,$/;"	e	enum:opcodetype
OP_IFDUP	../server/script.h	/^    OP_IFDUP = 0x73,$/;"	e	enum:opcodetype
OP_INVALIDOPCODE	../server/script.h	/^    OP_INVALIDOPCODE = 0xff,$/;"	e	enum:opcodetype
OP_INVERT	../server/script.h	/^    OP_INVERT = 0x83,$/;"	e	enum:opcodetype
OP_LEFT	../server/script.h	/^    OP_LEFT = 0x80,$/;"	e	enum:opcodetype
OP_LESSTHAN	../server/script.h	/^    OP_LESSTHAN = 0x9f,$/;"	e	enum:opcodetype
OP_LESSTHANOREQUAL	../server/script.h	/^    OP_LESSTHANOREQUAL = 0xa1,$/;"	e	enum:opcodetype
OP_LICENSE	../server/script.h	/^    OP_LICENSE = 0x0e,$/;"	e	enum:opcodetype
OP_LSHIFT	../server/script.h	/^    OP_LSHIFT = 0x98,$/;"	e	enum:opcodetype
OP_MATRIX	../server/script.h	/^    OP_MATRIX = 0x09,$/;"	e	enum:opcodetype
OP_MAX	../server/script.h	/^    OP_MAX = 0xa4,$/;"	e	enum:opcodetype
OP_MIN	../server/script.h	/^    OP_MIN = 0xa3,$/;"	e	enum:opcodetype
OP_MOD	../server/script.h	/^    OP_MOD = 0x97,$/;"	e	enum:opcodetype
OP_MUL	../server/script.h	/^    OP_MUL = 0x95,$/;"	e	enum:opcodetype
OP_NEGATE	../server/script.h	/^    OP_NEGATE = 0x8f,$/;"	e	enum:opcodetype
OP_NIP	../server/script.h	/^    OP_NIP = 0x77,$/;"	e	enum:opcodetype
OP_NOP	../server/script.h	/^    OP_NOP = 0x61,$/;"	e	enum:opcodetype
OP_NOP1	../server/script.h	/^		OP_NOP1 = 0xb0,$/;"	e	enum:opcodetype
OP_NOP10	../server/script.h	/^    OP_NOP10 = 0xb9,$/;"	e	enum:opcodetype
OP_NOP2	../server/script.h	/^		OP_NOP2 = OP_CHECKLOCKTIMEVERIFY,$/;"	e	enum:opcodetype
OP_NOP3	../server/script.h	/^		OP_NOP3 = OP_CHECKSEQUENCEVERIFY,$/;"	e	enum:opcodetype
OP_NOP4	../server/script.h	/^    OP_NOP4 = 0xb3,$/;"	e	enum:opcodetype
OP_NOP5	../server/script.h	/^    OP_NOP5 = 0xb4,$/;"	e	enum:opcodetype
OP_NOP6	../server/script.h	/^    OP_NOP6 = 0xb5,$/;"	e	enum:opcodetype
OP_NOP7	../server/script.h	/^    OP_NOP7 = 0xb6,$/;"	e	enum:opcodetype
OP_NOP8	../server/script.h	/^		OP_NOP8 = OP_CHECKALTPROOF,$/;"	e	enum:opcodetype
OP_NOP9	../server/script.h	/^    OP_NOP9 = 0xb8,$/;"	e	enum:opcodetype
OP_NOT	../server/script.h	/^    OP_NOT = 0x91,$/;"	e	enum:opcodetype
OP_NOTIF	../server/script.h	/^    OP_NOTIF = 0x64,$/;"	e	enum:opcodetype
OP_NUMEQUAL	../server/script.h	/^    OP_NUMEQUAL = 0x9c,$/;"	e	enum:opcodetype
OP_NUMEQUALVERIFY	../server/script.h	/^    OP_NUMEQUALVERIFY = 0x9d,$/;"	e	enum:opcodetype
OP_NUMNOTEQUAL	../server/script.h	/^    OP_NUMNOTEQUAL = 0x9e,$/;"	e	enum:opcodetype
OP_OFFER	../server/script.h	/^    OP_OFFER=0x0b,$/;"	e	enum:opcodetype
OP_OR	../server/script.h	/^    OP_OR = 0x85,$/;"	e	enum:opcodetype
OP_OVER	../server/script.h	/^    OP_OVER = 0x78,$/;"	e	enum:opcodetype
OP_PARAM	../server/script.h	/^		OP_PARAM = 0x03,$/;"	e	enum:opcodetype
OP_PICK	../server/script.h	/^    OP_PICK = 0x79,$/;"	e	enum:opcodetype
OP_PUBKEY	../server/script.h	/^    OP_PUBKEY = 0xfe,$/;"	e	enum:opcodetype
OP_PUBKEYHASH	../server/script.h	/^    OP_PUBKEYHASH = 0xfd,$/;"	e	enum:opcodetype
OP_PUBKEYS	../server/script.h	/^    OP_PUBKEYS = 0xfb,$/;"	e	enum:opcodetype
OP_PUSHDATA1	../server/script.h	/^    OP_PUSHDATA1 = 0x4c,$/;"	e	enum:opcodetype
OP_PUSHDATA2	../server/script.h	/^    OP_PUSHDATA2 = 0x4d,$/;"	e	enum:opcodetype
OP_PUSHDATA4	../server/script.h	/^    OP_PUSHDATA4 = 0x4e,$/;"	e	enum:opcodetype
OP_RESERVED	../server/script.h	/^    OP_RESERVED = 0x50,$/;"	e	enum:opcodetype
OP_RESERVED1	../server/script.h	/^    OP_RESERVED1 = 0x89,$/;"	e	enum:opcodetype
OP_RESERVED2	../server/script.h	/^    OP_RESERVED2 = 0x8a,$/;"	e	enum:opcodetype
OP_RETURN	../server/script.h	/^    OP_RETURN = 0x6a,$/;"	e	enum:opcodetype
OP_RIGHT	../server/script.h	/^    OP_RIGHT = 0x81,$/;"	e	enum:opcodetype
OP_RIPEMD160	../server/script.h	/^    OP_RIPEMD160 = 0xa6,$/;"	e	enum:opcodetype
OP_ROLL	../server/script.h	/^    OP_ROLL = 0x7a,$/;"	e	enum:opcodetype
OP_ROT	../server/script.h	/^    OP_ROT = 0x7b,$/;"	e	enum:opcodetype
OP_RSHIFT	../server/script.h	/^    OP_RSHIFT = 0x99,$/;"	e	enum:opcodetype
OP_SHA1	../server/script.h	/^    OP_SHA1 = 0xa7,$/;"	e	enum:opcodetype
OP_SHA256	../server/script.h	/^    OP_SHA256 = 0xa8,$/;"	e	enum:opcodetype
OP_SIZE	../server/script.h	/^    OP_SIZE = 0x82,$/;"	e	enum:opcodetype
OP_SMALLINTEGER	../server/script.h	/^    OP_SMALLINTEGER = 0xfa,$/;"	e	enum:opcodetype
OP_SUB	../server/script.h	/^    OP_SUB = 0x94,$/;"	e	enum:opcodetype
OP_SUBSTR	../server/script.h	/^    OP_SUBSTR = 0x7f,$/;"	e	enum:opcodetype
OP_SWAP	../server/script.h	/^    OP_SWAP = 0x7c,$/;"	e	enum:opcodetype
OP_TOALTSTACK	../server/script.h	/^    OP_TOALTSTACK = 0x6b,$/;"	e	enum:opcodetype
OP_TRUE	../server/script.h	/^    OP_TRUE=OP_1,$/;"	e	enum:opcodetype
OP_TUCK	../server/script.h	/^    OP_TUCK = 0x7d,$/;"	e	enum:opcodetype
OP_VER	../server/script.h	/^    OP_VER = 0x62,$/;"	e	enum:opcodetype
OP_VERIF	../server/script.h	/^    OP_VERIF = 0x65,$/;"	e	enum:opcodetype
OP_VERIFY	../server/script.h	/^    OP_VERIFY = 0x69,$/;"	e	enum:opcodetype
OP_VERNOTIF	../server/script.h	/^    OP_VERNOTIF = 0x66,$/;"	e	enum:opcodetype
OP_WITHIN	../server/script.h	/^    OP_WITHIN = 0xa5,$/;"	e	enum:opcodetype
OP_XOR	../server/script.h	/^    OP_XOR = 0x86,$/;"	e	enum:opcodetype
OUTPUT_TYPE_BECH32	../server/coinaddr.h	38;"	d
OUTPUT_TYPE_DILITHIUM	../server/coinaddr.h	39;"	d
OUTPUT_TYPE_LEGACY	../server/coinaddr.h	36;"	d
OUTPUT_TYPE_NONE	../server/coinaddr.h	35;"	d
OUTPUT_TYPE_P2SH_SEGWIT	../server/coinaddr.h	37;"	d
PATH_MAX	../shcoind_svc.c	36;"	d	file:
POOL_ACTIVE	../server/txmempool.h	37;"	d
POOL_DEPENDENCY	../server/txmempool.h	48;"	d
POOL_FEE_LOW	../server/txmempool.h	43;"	d
POOL_INVALID	../server/txmempool.h	40;"	d
POOL_NOT_FINAL	../server/txmempool.h	44;"	d
POOL_NO_INPUT	../server/txmempool.h	46;"	d
POOL_OVERFLOW	../server/txmempool.h	39;"	d
POOL_PENDING	../server/txmempool.h	38;"	d
POOL_PEND_TX	../server/txmempool.h	45;"	d
POOL_SOFT_LIMIT	../server/txmempool.h	47;"	d
POOL_STALE	../server/txmempool.h	41;"	d
POST_BLOCK_TIME	../stratum/stratum_task.c	40;"	d	file:
PRI_SPACING	../server/txfeerate.h	/^static const double PRI_SPACING = 2;$/;"	v
PROTOCOL_VERSION	../shcoind_version.h	51;"	d
PUBKEY_C_ADDRESS	../server/coinaddr.h	/^			PUBKEY_C_ADDRESS = 29,$/;"	e	enum:CCoinAddr::__anon2
PUBKEY_E_ADDRESS	../server/coinaddr.h	/^			PUBKEY_E_ADDRESS = 33,$/;"	e	enum:CCoinAddr::__anon2
PUBKEY_G_ADDRESS	../server/coinaddr.h	/^			PUBKEY_G_ADDRESS = 38,$/;"	e	enum:CCoinAddr::__anon2
PUBKEY_L_ADDRESS	../server/coinaddr.h	/^			PUBKEY_L_ADDRESS = 48,$/;"	e	enum:CCoinAddr::__anon2
PUBKEY_S_ADDRESS	../server/coinaddr.h	/^			PUBKEY_S_ADDRESS = 62,$/;"	e	enum:CCoinAddr::__anon2
PUBKEY_T_ADDRESS	../server/coinaddr.h	/^			PUBKEY_T_ADDRESS = 65,$/;"	e	enum:CCoinAddr::__anon2
PartiallyDownloadedBlock	../server/block_cmpct.h	/^		explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}$/;"	f	class:PartiallyDownloadedBlock
PartiallyDownloadedBlock	../server/block_cmpct.h	/^class PartiallyDownloadedBlock $/;"	c
PrefilledTransaction	../server/block_cmpct.h	/^struct PrefilledTransaction $/;"	s
PrintHex	../server/script.h	/^    void PrintHex() const$/;"	f	class:CScript
PushAddress	../server/net.h	/^    void PushAddress(const CAddress& addr)$/;"	f	class:CNode
PushBlockHash	../server/net.h	/^		void PushBlockHash(const uint256 &hash)$/;"	f	class:CNode
PushInventory	../server/net.h	/^    void PushInventory(const CInv& inv)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6, const T7& a7)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6, const T7& a7, const T8& a8)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6, const T7& a7, const T8& a8, const T9& a9)$/;"	f	class:CNode
PushReject	../server/net.h	/^		void PushReject(std::string mode, uint256 hash, int err_code, std::string err_text)$/;"	f	class:CNode
PushRequest	../server/net.h	/^    void PushRequest(const char* pszCommand, const T1& a1, const T2& a2,$/;"	f	class:CNode
PushRequest	../server/net.h	/^    void PushRequest(const char* pszCommand, const T1& a1,$/;"	f	class:CNode
PushRequest	../server/net.h	/^    void PushRequest(const char* pszCommand,$/;"	f	class:CNode
READ_STATUS_CHECKBLOCK_FAILED	../server/block_cmpct.h	/^    READ_STATUS_CHECKBLOCK_FAILED, \/\/ Used only by FillBlock to indicate a$/;"	e	enum:ReadStatus_t
READ_STATUS_FAILED	../server/block_cmpct.h	/^    READ_STATUS_FAILED, \/\/ Failed to process object$/;"	e	enum:ReadStatus_t
READ_STATUS_INVALID	../server/block_cmpct.h	/^    READ_STATUS_INVALID, \/\/ Invalid object, peer is sending bogus$/;"	e	enum:ReadStatus_t
READ_STATUS_OK	../server/block_cmpct.h	/^    READ_STATUS_OK,$/;"	e	enum:ReadStatus_t
REJECT_CHECKPOINT	../server/net.h	/^static const unsigned char REJECT_CHECKPOINT = 0x43;$/;"	v
REJECT_DUPLICATE	../server/net.h	/^static const unsigned char REJECT_DUPLICATE = 0x12;$/;"	v
REJECT_INSUFFICIENTFEE	../server/net.h	/^static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;$/;"	v
REJECT_INVALID	../server/net.h	/^static const unsigned char REJECT_INVALID = 0x10;$/;"	v
REJECT_MALFORMED	../server/net.h	/^static const unsigned char REJECT_MALFORMED = 0x01;$/;"	v
REJECT_NONSTANDARD	../server/net.h	/^static const unsigned char REJECT_NONSTANDARD = 0x40;$/;"	v
REJECT_OBSOLETE	../server/net.h	/^static const unsigned char REJECT_OBSOLETE = 0x11;$/;"	v
RELEASE_FD	../shcoind_descriptor.h	57;"	d
RPC_AUTH_FREQ	../shapi/shapi.h	41;"	d
RPC_AUTH_FREQ	../stratum/stratum.h	41;"	d
RSP_FUNC	../shcoind_svc.c	109;"	d	file:
RSP_SIMPLE_SERVICE	../shcoind_svc.c	111;"	d	file:
RSP_UNREGISTER_SERVICE	../shcoind_svc.c	112;"	d	file:
RUN_CYCLE	../shcoind_daemon.c	163;"	d	file:
RUN_NONE	../shcoind_daemon.c	162;"	d	file:
RUN_RESTART	../shcoind_daemon.c	165;"	d	file:
RUN_SHUTDOWN	../shcoind_daemon.c	164;"	d	file:
RaiseValidity	../server/block.h	/^    bool RaiseValidity(int nUpTo)$/;"	f	class:CBlockIndex
Raw	../server/hdkey.h	/^    cbuff Raw() const$/;"	f	class:HDPrivKey
Raw	../server/key.h	/^		std::vector<unsigned char> Raw() const $/;"	f	class:CPubKey
Read	../server/txidx.h	/^      bool Read(const K& key, T& value)$/;"	f	class:CDB
ReadAtCursor	../server/txidx.h	/^    int ReadAtCursor(Dbc* pcursor, CDataStream& ssKey, CDataStream& ssValue, unsigned int fFlags=DB_NEXT)$/;"	f	class:CDB
ReadBestBlock	../server/walletdb.h	/^    bool ReadBestBlock(CBlockLocator& locator)$/;"	f	class:CWalletDB
ReadCScript	../server/walletdb.h	/^    bool ReadCScript(const uint160 &hash, CScript& redeemScript)$/;"	f	class:CWalletDB
ReadDefaultKey	../server/walletdb.h	/^    bool ReadDefaultKey(std::vector<unsigned char>& vchPubKey)$/;"	f	class:CWalletDB
ReadKey	../server/walletdb.h	/^    bool ReadKey(const CPubKey& vchPubKey, CPrivKey& vchPrivKey)$/;"	f	class:CWalletDB
ReadName	../server/walletdb.h	/^    bool ReadName(const std::string& strAddress, std::string& strName)$/;"	f	class:CWalletDB
ReadSetting	../server/walletdb.h	/^    bool ReadSetting(const std::string& strKey, T& value)$/;"	f	class:CWalletDB
ReadStatus	../server/block_cmpct.h	/^} ReadStatus;$/;"	t	typeref:enum:ReadStatus_t
ReadStatus_t	../server/block_cmpct.h	/^typedef enum ReadStatus_t$/;"	g
ReadTx	../server/walletdb.h	/^    bool ReadTx(uint256 hash, CWalletTx& wtx)$/;"	f	class:CWalletDB
ReadVersion	../server/txidx.h	/^    bool ReadVersion(int& nVersion)$/;"	f	class:CDB
ReceiveBufferSize	../server/net.h	/^inline unsigned int ReceiveBufferSize() { return 1000*GetArg("-maxreceivebuffer", 5*1000); }$/;"	f
RelayInventory	../server/net.h	/^inline void RelayInventory(const CInv& inv)$/;"	f
RelayMessage	../server/net.h	/^inline void RelayMessage<>(const CInv& inv, const CDataStream& ss)$/;"	f
RelayMessage	../server/net.h	/^void RelayMessage(const CInv& inv, const T& a)$/;"	f
Release	../server/net.h	/^    void Release()$/;"	f	class:CNode
RemoveBloomFilter	../server/net.h	/^    void RemoveBloomFilter()$/;"	f	class:CNode
RemoveTx	../server/txmempool.h	/^    bool RemoveTx(CTransaction &tx)$/;"	f	class:CPool
Reset	../server/key.h	/^		void Reset()$/;"	f	class:CKey
SCALE_FACTOR	../proto/coin_proto.h	52;"	d
SCRIPT_ADDRESS	../server/coinaddr.h	/^			SCRIPT_ADDRESS = 5,$/;"	e	enum:CCoinAddr::__anon2
SCRIPT_ADDRESS_2	../server/coinaddr.h	/^			SCRIPT_ADDRESS_2 = 50,$/;"	e	enum:CCoinAddr::__anon2
SCRIPT_ADDRESS_2G	../server/coinaddr.h	/^			SCRIPT_ADDRESS_2G = 55,$/;"	e	enum:CCoinAddr::__anon2
SCRIPT_ADDRESS_2S	../server/coinaddr.h	/^			SCRIPT_ADDRESS_2S = 25,$/;"	e	enum:CCoinAddr::__anon2
SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY	../server/script.h	/^  SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),$/;"	e	enum:__anon6
SCRIPT_VERIFY_CHECKSEQUENCEVERIFY	../server/script.h	/^  SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10),$/;"	e	enum:__anon6
SCRIPT_VERIFY_CLEANSTACK	../server/script.h	/^  SCRIPT_VERIFY_CLEANSTACK = (1U << 8),$/;"	e	enum:__anon6
SCRIPT_VERIFY_DERSIG	../server/script.h	/^  SCRIPT_VERIFY_DERSIG    = (1U << 2),$/;"	e	enum:__anon6
SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS	../server/script.h	/^  SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS  = (1U << 7),$/;"	e	enum:__anon6
SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM	../server/script.h	/^  SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12),$/;"	e	enum:__anon6
SCRIPT_VERIFY_LOW_S	../server/script.h	/^  SCRIPT_VERIFY_LOW_S     = (1U << 3),$/;"	e	enum:__anon6
SCRIPT_VERIFY_MINIMALDATA	../server/script.h	/^  SCRIPT_VERIFY_MINIMALDATA = (1U << 6),$/;"	e	enum:__anon6
SCRIPT_VERIFY_MINIMALIF	../server/script.h	/^  SCRIPT_VERIFY_MINIMALIF = (1U << 13),$/;"	e	enum:__anon6
SCRIPT_VERIFY_NONE	../server/script.h	/^  SCRIPT_VERIFY_NONE      = 0,$/;"	e	enum:__anon6
SCRIPT_VERIFY_NULLDUMMY	../server/script.h	/^  SCRIPT_VERIFY_NULLDUMMY = (1U << 4),$/;"	e	enum:__anon6
SCRIPT_VERIFY_NULLFAIL	../server/script.h	/^  SCRIPT_VERIFY_NULLFAIL = (1U << 14),$/;"	e	enum:__anon6
SCRIPT_VERIFY_P2SH	../server/script.h	/^  SCRIPT_VERIFY_P2SH      = (1U << 0),$/;"	e	enum:__anon6
SCRIPT_VERIFY_SIGPUSHONLY	../server/script.h	/^  SCRIPT_VERIFY_SIGPUSHONLY = (1U << 5),$/;"	e	enum:__anon6
SCRIPT_VERIFY_STRICTENC	../server/script.h	/^  SCRIPT_VERIFY_STRICTENC = (1U << 1),$/;"	e	enum:__anon6
SCRIPT_VERIFY_WITNESS	../server/script.h	/^  SCRIPT_VERIFY_WITNESS = (1U << 11),$/;"	e	enum:__anon6
SCRIPT_VERIFY_WITNESS_PUBKEYTYPE	../server/script.h	/^  SCRIPT_VERIFY_WITNESS_PUBKEYTYPE = (1U << 15),$/;"	e	enum:__anon6
SEQUENCE_FINAL	../server/block.h	/^		static const uint32_t SEQUENCE_FINAL = 0xffffffff;$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_DISABLE_FLAG	../server/block.h	/^		static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_GRANULARITY	../server/block.h	/^		static const int SEQUENCE_LOCKTIME_GRANULARITY = 9;$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_MASK	../server/block.h	/^		static const uint32_t SEQUENCE_LOCKTIME_MASK = 0x0000ffff;$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_TYPE_FLAG	../server/block.h	/^		static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);$/;"	m	class:CTxIn
SERIALIZE_TRANSACTION_NO_WITNESS	../server/block.h	445;"	d
SERIALIZE_TRANSACTION_NO_WITNESS	../server/net.h	55;"	d
SERVER__MAIN_H	../server/main.h	37;"	d
SHA256D_WORK_CYCLE_TIME	../stratum/stratum_sha256d.c	33;"	d	file:
SHAlias	../server/shlib.h	/^typedef shref_t SHAlias;$/;"	t
SHAsset	../server/shlib.h	/^typedef shasset_t SHAsset;$/;"	t
SHCCoinAddr	../server/coinaddr.h	/^    SHCCoinAddr() : CCoinAddr(SHC_COIN_IFACE)$/;"	f	class:SHCCoinAddr
SHCCoinAddr	../server/coinaddr.h	/^    SHCCoinAddr(const CTxDestination &dest) : CCoinAddr(SHC_COIN_IFACE)$/;"	f	class:SHCCoinAddr
SHCCoinAddr	../server/coinaddr.h	/^    SHCCoinAddr(const std::string& strAddress) : CCoinAddr(SHC_COIN_IFACE)$/;"	f	class:SHCCoinAddr
SHCCoinAddr	../server/coinaddr.h	/^class SHCCoinAddr : public CCoinAddr$/;"	c
SHC_COIN	../proto/shc_proto.h	64;"	d
SHC_COINBASE_MATURITY	../proto/shc_proto.h	/^static const int SHC_COINBASE_MATURITY = 60;$/;"	v
SHC_COIN_DAEMON_PORT	../proto/shc_proto.h	36;"	d
SHC_COIN_IFACE	../proto/coin_proto.h	121;"	d
SHC_DEFAULT_BYTES_PER_SIGOP	../proto/shc_proto.h	77;"	d
SHC_MAX_BLOCK_SIZE	../proto/shc_proto.h	69;"	d
SHC_MAX_DRIFT_TIME	../proto/shc_proto.h	54;"	d
SHC_MAX_FREE_TX_SIZE	../proto/shc_proto.h	80;"	d
SHC_MAX_GETADDR	../proto/shc_proto.h	39;"	d
SHC_MAX_MONEY	../proto/shc_proto.h	/^static const int64 SHC_MAX_MONEY = 500000794 * SHC_COIN; \/* ~500mil *\/$/;"	v
SHC_MAX_ORPHAN_TRANSACTIONS	../proto/shc_proto.h	41;"	d
SHC_MAX_SCRIPT_ELEMENT_SIZE	../proto/shc_proto.h	51;"	d
SHC_MAX_SCRIPT_SIZE	../proto/shc_proto.h	49;"	d
SHC_MAX_SIGOPS	../proto/shc_proto.h	47;"	d
SHC_MAX_STANDARD_TX_SIGOP_COST	../proto/shc_proto.h	75;"	d
SHC_MAX_STANDARD_TX_WEIGHT	../proto/shc_proto.h	73;"	d
SHC_MAX_TRANSACTION_WEIGHT	../proto/shc_proto.h	71;"	d
SHC_MAX_TX_FEE	../proto/shc_proto.h	/^static const int64 SHC_MAX_TX_FEE = 1000 * SHC_COIN;$/;"	v
SHC_MIN_INPUT	../proto/shc_proto.h	/^static const int64 SHC_MIN_INPUT = 1;$/;"	v
SHC_MIN_RELAY_TX_FEE	../proto/shc_proto.h	/^static const int64 SHC_MIN_RELAY_TX_FEE = 1000;$/;"	v
SHC_MIN_TX_FEE	../proto/shc_proto.h	/^static const int64 SHC_MIN_TX_FEE = 10000;$/;"	v
SHC_PROTOCOL_VERSION	../proto/shc_proto.h	/^static const int SHC_PROTOCOL_VERSION = 2000000;$/;"	v
SHC_SEED_LIST_SIZE	../unet/unet_seed.h	7;"	d
SHC_VERSION_BUILD	../proto/shc_proto.h	33;"	d
SHC_VERSION_MAJOR	../proto/shc_proto.h	30;"	d
SHC_VERSION_MINOR	../proto/shc_proto.h	31;"	d
SHC_VERSION_REVISION	../proto/shc_proto.h	32;"	d
SHC_WITNESS_SCALE_FACTOR	../proto/shc_proto.h	/^static const int SHC_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
SHCert	../server/shlib.h	/^typedef shesig_t SHCert;$/;"	t
SHERR_INFO	../shcoind_log.h	34;"	d
SHLicense	../server/shlib.h	/^typedef shlic_t SHLicense;$/;"	t
SHORTTXIDS_LENGTH	../server/block_cmpct.h	/^		static const int SHORTTXIDS_LENGTH = 6;$/;"	m	class:CBlockHeaderAndShortTxIDs
SHPeer	../server/shlib.h	/^    SHPeer()$/;"	f	class:SHPeer
SHPeer	../server/shlib.h	/^    SHPeer(shpeer_t *peerIn)$/;"	f	class:SHPeer
SHPeer	../server/shlib.h	/^class SHPeer$/;"	c
SHSig	../server/shlib.h	/^    SHSig()$/;"	f	class:SHSig
SHSig	../server/shlib.h	/^    SHSig(shsig_t *sigIn)$/;"	f	class:SHSig
SHSig	../server/shlib.h	/^class SHSig$/;"	c
SIGHASH_ALL	../server/txsignature.h	/^    SIGHASH_ALL = 1,$/;"	e	enum:__anon7
SIGHASH_ANYONECANPAY	../server/txsignature.h	/^    SIGHASH_ANYONECANPAY = 0x80$/;"	e	enum:__anon7
SIGHASH_HDKEY	../server/txsignature.h	/^    SIGHASH_HDKEY = 0x40,$/;"	e	enum:__anon7
SIGHASH_NONE	../server/txsignature.h	/^    SIGHASH_NONE = 2,$/;"	e	enum:__anon7
SIGHASH_SINGLE	../server/txsignature.h	/^    SIGHASH_SINGLE = 3,$/;"	e	enum:__anon7
SIGN_ALG_DILITHIUM	../server/key.h	41;"	d
SIGN_ALG_ECDSA	../server/key.h	40;"	d
SIGN_ALG_NONE	../server/key.h	39;"	d
SIGVERSION_BASE	../server/txsignature.h	/^  SIGVERSION_BASE = 0,$/;"	e	enum:__anon8
SIGVERSION_WITNESS_V0	../server/txsignature.h	/^  SIGVERSION_WITNESS_V0 = 1,$/;"	e	enum:__anon8
SIGVERSION_WITNESS_V14	../server/txsignature.h	/^  SIGVERSION_WITNESS_V14 = 15$/;"	e	enum:__anon8
SIZEOF_COINHDR_T	../proto/coin_proto.h	337;"	d
SPRING_MATRIX_BMP	../stratum/stratum_http.c	522;"	d	file:
SPRING_MATRIX_HTML	../stratum/stratum_http.c	521;"	d	file:
SPRING_OFFSET_LATITUDE	../server/spring.h	52;"	d
SPRING_OFFSET_LONGITUDE	../server/spring.h	57;"	d
SPRING_X_FACTOR	../server/spring.h	61;"	d
SPRING_Y_FACTOR	../server/spring.h	59;"	d
SRV_DEPENDENCIES	../shcoind_svc.h	171;"	d
SRV_DESC_DLL	../shcoind_svc.c	99;"	d	file:
SRV_DESC_SYM	../shcoind_svc.c	100;"	d	file:
SRV_DISPLAY_NAME	../shcoind_svc.h	46;"	d
SRV_MAIN_FUNCTION	../shcoind_svc.h	160;"	d
SRV_MAX_STOP_TIME	../shcoind_svc.h	83;"	d
SRV_NAME	../shcoind_svc.h	37;"	d
SRV_START_TYPE	../shcoind_svc.h	60;"	d
SRV_STOP_SIGNAL	../shcoind_svc.h	74;"	d
SRV_USAGE_FUNCTION	../shcoind_svc.h	110;"	d
STAT_BLOCK_ACCEPTS	../proto/coin_proto.h	148;"	d
STAT_BLOCK_ORPHAN	../proto/coin_proto.h	150;"	d
STAT_BLOCK_SUBMITS	../proto/coin_proto.h	149;"	d
STAT_TX_ACCEPTS	../proto/coin_proto.h	151;"	d
STAT_TX_MINT	../proto/coin_proto.h	154;"	d
STAT_TX_RETURNS	../proto/coin_proto.h	153;"	d
STAT_TX_SUBMITS	../proto/coin_proto.h	152;"	d
STERR_ACCESS	../server_iface.h	51;"	d
STERR_ACCESS_NOKEY	../server_iface.h	50;"	d
STERR_ACCESS_UNAVAIL	../server_iface.h	43;"	d
STERR_AGAIN	../server_iface.h	48;"	d
STERR_DECODE_TX	../server_iface.h	53;"	d
STERR_FUND_UNAVAIL	../server_iface.h	45;"	d
STERR_GENERAL	../server_iface.h	40;"	d
STERR_INTERNAL_DB	../server_iface.h	52;"	d
STERR_INTERNAL_MAP	../server_iface.h	49;"	d
STERR_INTERNAL_MEM	../server_iface.h	46;"	d
STERR_INVAL	../server_iface.h	44;"	d
STERR_INVAL_AMOUNT	../server_iface.h	42;"	d
STERR_INVAL_OBJ	../server_iface.h	54;"	d
STERR_INVAL_PARAM	../server_iface.h	47;"	d
STERR_SAFEMODE	../server_iface.h	41;"	d
STRATUM_DAEMON_PORT	../proto/network.h	34;"	d
STRING_INC	../test/CuTest.h	64;"	d
STRING_MAX	../test/CuTest.h	63;"	d
SUFFICIENT_FEETXS	../server/txfeerate.h	/^static const double SUFFICIENT_FEETXS = 1;$/;"	v
SUFFICIENT_PRITXS	../server/txfeerate.h	/^static const double SUFFICIENT_PRITXS = .2;$/;"	v
SUITE_ADD_TEST	../test/CuTest.h	142;"	d
SYNC_AUTH	../shapi/shapi.h	61;"	d
SYNC_AUTH	../stratum/stratum.h	61;"	d
SYNC_IDENT	../shapi/shapi.h	62;"	d
SYNC_IDENT	../stratum/stratum.h	62;"	d
SYNC_RESP_ALL	../shapi/shapi.h	73;"	d
SYNC_RESP_ALL	../stratum/stratum.h	73;"	d
SYNC_RESP_ELEVATE	../shapi/shapi.h	70;"	d
SYNC_RESP_ELEVATE	../stratum/stratum.h	70;"	d
SYNC_RESP_IDENT	../shapi/shapi.h	71;"	d
SYNC_RESP_IDENT	../stratum/stratum.h	71;"	d
SYNC_RESP_PING	../shapi/shapi.h	66;"	d
SYNC_RESP_PING	../stratum/stratum.h	66;"	d
SYNC_RESP_USER_LIST	../shapi/shapi.h	67;"	d
SYNC_RESP_USER_LIST	../stratum/stratum.h	67;"	d
SYNC_RESP_WALLET_ADDR	../shapi/shapi.h	68;"	d
SYNC_RESP_WALLET_ADDR	../stratum/stratum.h	68;"	d
SYNC_RESP_WALLET_SET	../shapi/shapi.h	69;"	d
SYNC_RESP_WALLET_SET	../stratum/stratum.h	69;"	d
SYNC_WALLET_ADDR	../shapi/shapi.h	64;"	d
SYNC_WALLET_ADDR	../stratum/stratum.h	64;"	d
SYNC_WALLET_EXTADDR	../shapi/shapi.h	65;"	d
SYNC_WALLET_EXTADDR	../stratum/stratum.h	65;"	d
SYNC_WALLET_SET	../shapi/shapi.h	63;"	d
SYNC_WALLET_SET	../stratum/stratum.h	63;"	d
ScriptMap	../server/keystore.h	/^typedef std::map<CScriptID, CScript > ScriptMap;$/;"	t
SendBufferSize	../server/net.h	/^inline unsigned int SendBufferSize() { return 1000*GetArg("-maxsendbuffer", 1*1000); }$/;"	f
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	class:BlockTransactions
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	class:BlockTransactionsRequest
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	class:CBlockHeaderAndShortTxIDs
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	struct:TransactionCompressor
SerializationOp	../server/block_cmpct.h	/^		inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	struct:PrefilledTransaction
SerializeHash	../server/util.h	/^uint256 SerializeHash(const T& obj, int nVersion = 1)$/;"	f
ServicePid	../shcoind_svc.c	/^static pid_t			ServicePid = 0;$/;"	v	file:
SetBloomFilter	../server/net.h	/^    void SetBloomFilter(CBloomFilter& filterIn)$/;"	f	class:CNode
SetCell	../server/matrix.h	/^		void SetCell(int row, int col, unsigned int val)$/;"	f	class:CTxMatrix
SetCellsNull	../server/matrix.h	/^		void SetCellsNull()$/;"	f	class:CTxMatrix
SetColor	../server/txmempool.h	/^		void SetColor(const uint160& hColorIn)$/;"	f	class:CPoolTx
SetColor	../server/wallet.h	/^			 void SetColor(uint160 hColorIn)$/;"	f	class:CWalletTx
SetCompressedPubKey	../server/key.h	/^    void SetCompressedPubKey()$/;"	f	class:CKey
SetData	../server/base58.h	/^		void SetData(const cbuff& vchVersionIn, const unsigned char *pbegin, const unsigned char *pend)$/;"	f	class:CBase58Data
SetData	../server/base58.h	/^		void SetData(const cbuff& vchVersionIn, const void* pdata, size_t nSize)$/;"	f	class:CBase58Data
SetData	../server/base58.h	/^		void SetData(int nVersionIn, const unsigned char *pbegin, const unsigned char *pend)$/;"	f	class:CBase58Data
SetData	../server/base58.h	/^		void SetData(int nVersionIn, const void* pdata, size_t nSize)$/;"	f	class:CBase58Data
SetDetach	../server/txidx.h	/^    void SetDetach(bool fDetachDB_) { fDetachDB = fDetachDB_; }$/;"	f	class:CDBEnv
SetFlag	../server/block.h	/^		void SetFlag(unsigned int flag)$/;"	f	class:CTransactionCore
SetFlag	../server/txmempool.h	/^    void SetFlag(int flag)$/;"	f	class:CPoolTx
SetMinFee	../server/txcreator.h	/^		void SetMinFee(int64 nFee)$/;"	f	class:CTxBatchCreator
SetNull	../server/account.h	/^			void SetNull() $/;"	f	class:CAccountCache
SetNull	../server/block.h	/^			void SetNull()$/;"	f	class:CTxOut
SetNull	../server/block.h	/^		void SetNull()$/;"	f	class:CBlockLocator
SetNull	../server/block.h	/^    void SetNull() { hash = 0; n = (unsigned int) -1; }$/;"	f	class:COutPoint
SetNull	../server/block.h	/^    void SetNull() { nFile = (unsigned int) -1; nBlockPos = 0; nTxPos = 0; }$/;"	f	class:CDiskTxPos
SetNull	../server/block.h	/^    void SetNull() { ptx = NULL; n = (unsigned int) -1; }$/;"	f	class:CInPoint
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CBlock
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CBlockHeader
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTransaction
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTransactionCore
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTxIndex
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTxWitness
SetNull	../server/coinaddr.h	/^		void SetNull()$/;"	f	class:CCoinAddr
SetNull	../server/hdkey.h	/^    void SetNull()$/;"	f	class:HDMasterPrivKey
SetNull	../server/hdkey.h	/^    void SetNull()$/;"	f	class:HDPrivKey
SetNull	../server/hdkey.h	/^    void SetNull()$/;"	f	class:HDPubKey
SetNull	../server/key.h	/^		void SetNull()$/;"	f	class:CKeyMetadata
SetNull	../server/key.h	/^		void SetNull()$/;"	f	class:CPubKey
SetNull	../server/key.h	/^    void SetNull()$/;"	f	class:CKey
SetNull	../server/matrix.h	/^		void SetNull()$/;"	f	class:CTxMatrix
SetNull	../server/shlib.h	/^    void SetNull()$/;"	f	class:SHPeer
SetNull	../server/shlib.h	/^    void SetNull()$/;"	f	class:SHSig
SetNull	../server/txcreator.h	/^    void SetNull()$/;"	f	class:CTxBatchCreator
SetNull	../server/txmempool.h	/^    void SetNull()$/;"	f	class:CPoolTx
SetNull	../server/wallet.h	/^		void SetNull()$/;"	f	class:CAccount
SetNull	../server/wallet.h	/^		void SetNull()$/;"	f	class:CAccountingEntry
SetSecret	../server/base58.h	/^		void SetSecret(int ifaceIndex, const CSecret& vchSecret, bool fCompressed)$/;"	f	class:CCoinSecret
SetSecret	../server/dikey.h	/^    bool SetSecret(const CSecret& vchSecret, bool fCompressed)$/;"	f	class:DIKey
SetSeed	../server/hdkey.h	/^    bool SetSeed(CSecret seed)$/;"	f	class:HDPrivKey
SetString	../server/base58.h	/^		bool SetString(const std::string& str, size_t nVersionSize = 1)$/;"	f	class:CBase58Data
SetType	../server/matrix.h	/^		void SetType(int nTypeIn)$/;"	f	class:CTxMatrix
SetVersion	../server/block.h	/^		void SetVersion(int ver)$/;"	f	class:CTransactionCore
SrvArgc	../shcoind_svc.c	/^static int			SrvArgc;$/;"	v	file:
SrvArgv	../shcoind_svc.c	/^static char			**SrvArgv;$/;"	v	file:
SrvAtExitHdlr	../shcoind_svc.c	/^static void SrvAtExitHdlr(void)$/;"	f	file:
SrvConCtrlHdlr	../shcoind_svc.c	/^static BOOL WINAPI SrvConCtrlHdlr($/;"	f	file:
SrvCtrl	../shcoind_svc.c	/^static void WINAPI SrvCtrl($/;"	f	file:
SrvDebugService	../shcoind_svc.c	/^static void SrvDebugService($/;"	f	file:
SrvEnvp	../shcoind_svc.c	/^static char			**SrvEnvp;$/;"	v	file:
SrvGetLastErrorText	../shcoind_svc.c	/^static LPSTR SrvGetLastErrorText($/;"	f	file:
SrvInstallService	../shcoind_svc.c	/^static int SrvInstallService(void)$/;"	f	file:
SrvMain	../shcoind_svc.c	/^static void SrvMain($/;"	f	file:
SrvMessage	../shcoind_svc.c	/^static void SrvMessage($/;"	f	file:
SrvNotifyMutex	../shcoind_svc.c	/^static pthread_mutex_t		SrvNotifyMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
SrvPrepMain	../shcoind_svc.c	/^static void SrvPrepMain(void)$/;"	f	file:
SrvProgName	../shcoind_svc.c	/^static char			SrvProgName[PATH_MAX];$/;"	v	file:
SrvRemoveService	../shcoind_svc.c	/^static int SrvRemoveService(void)$/;"	f	file:
SrvReportToSCMgr	../shcoind_svc.c	/^static BOOL SrvReportToSCMgr($/;"	f	file:
SrvSigHdlr	../shcoind_svc.c	/^static void SrvSigHdlr($/;"	f	file:
SrvStop	../shcoind_svc.c	/^static void SrvStop(void)$/;"	f	file:
SrvThread	../shcoind_svc.c	/^static pthread_t		SrvThread;$/;"	v	file:
SrvUnsecureProcess	../shcoind_svc.c	/^static BOOL SrvUnsecureProcess(void)$/;"	f	file:
SrvUsage	../shcoind_svc.c	/^static void SrvUsage(void)$/;"	f	file:
SrvWaiter	../shcoind_svc.c	/^static void *SrvWaiter(void *_unused_)$/;"	f	file:
StackString	../server/script.h	/^inline std::string StackString(const std::vector<std::vector<unsigned char> >& vStack)$/;"	f
SubCell	../server/matrix.h	/^		void SubCell(int row, int col, unsigned int val)$/;"	f	class:CTxMatrix
TASKF_RESET	../shapi/shapi.h	47;"	d
TASKF_RESET	../stratum/stratum.h	47;"	d
TESTNET_COIN	../proto/testnet_proto.h	64;"	d
TESTNET_COINBASE_MATURITY	../proto/testnet_proto.h	/^static const int TESTNET_COINBASE_MATURITY = 32;$/;"	v
TESTNET_COIN_DAEMON_PORT	../proto/testnet_proto.h	36;"	d
TESTNET_COIN_IFACE	../proto/coin_proto.h	130;"	d
TESTNET_DEFAULT_BYTES_PER_SIGOP	../proto/testnet_proto.h	77;"	d
TESTNET_MAX_BLOCK_SIZE	../proto/testnet_proto.h	69;"	d
TESTNET_MAX_DRIFT_TIME	../proto/testnet_proto.h	54;"	d
TESTNET_MAX_FREE_TX_SIZE	../proto/testnet_proto.h	80;"	d
TESTNET_MAX_GETADDR	../proto/testnet_proto.h	39;"	d
TESTNET_MAX_MONEY	../proto/testnet_proto.h	/^static const int64 TESTNET_MAX_MONEY = 1000000000 * TESTNET_COIN; \/* 1bil max *\/$/;"	v
TESTNET_MAX_ORPHAN_TRANSACTIONS	../proto/testnet_proto.h	41;"	d
TESTNET_MAX_SCRIPT_ELEMENT_SIZE	../proto/testnet_proto.h	51;"	d
TESTNET_MAX_SCRIPT_SIZE	../proto/testnet_proto.h	49;"	d
TESTNET_MAX_SIGOPS	../proto/testnet_proto.h	47;"	d
TESTNET_MAX_STANDARD_TX_SIGOP_COST	../proto/testnet_proto.h	75;"	d
TESTNET_MAX_STANDARD_TX_WEIGHT	../proto/testnet_proto.h	73;"	d
TESTNET_MAX_TRANSACTION_WEIGHT	../proto/testnet_proto.h	71;"	d
TESTNET_MAX_TX_FEE	../proto/testnet_proto.h	/^static const int64 TESTNET_MAX_TX_FEE = 1000 * TESTNET_COIN;$/;"	v
TESTNET_MIN_INPUT	../proto/testnet_proto.h	/^static const int64 TESTNET_MIN_INPUT = 1;$/;"	v
TESTNET_MIN_RELAY_TX_FEE	../proto/testnet_proto.h	/^static const int64 TESTNET_MIN_RELAY_TX_FEE = 1000;$/;"	v
TESTNET_MIN_TX_FEE	../proto/testnet_proto.h	/^static const int64 TESTNET_MIN_TX_FEE = 10000;$/;"	v
TESTNET_PROTOCOL_VERSION	../proto/testnet_proto.h	/^static const int TESTNET_PROTOCOL_VERSION = 2000000;$/;"	v
TESTNET_SEED_LIST_SIZE	../unet/unet_seed.h	13;"	d
TESTNET_VERSION_BUILD	../proto/testnet_proto.h	33;"	d
TESTNET_VERSION_MAJOR	../proto/testnet_proto.h	30;"	d
TESTNET_VERSION_MINOR	../proto/testnet_proto.h	31;"	d
TESTNET_VERSION_REVISION	../proto/testnet_proto.h	32;"	d
TESTNET_WITNESS_SCALE_FACTOR	../proto/testnet_proto.h	/^static const int TESTNET_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
TEST_COIN	../proto/test_proto.h	51;"	d
TEST_COINBASE_MATURITY	../proto/test_proto.h	/^static const int TEST_COINBASE_MATURITY = 10;$/;"	v
TEST_COIN_DAEMON_PORT	../proto/test_proto.h	34;"	d
TEST_COIN_IFACE	../proto/coin_proto.h	118;"	d
TEST_DEFAULT_BYTES_PER_SIGOP	../proto/test_proto.h	61;"	d
TEST_MAX_BLOCK_SIZE	../proto/test_proto.h	53;"	d
TEST_MAX_DRIFT_TIME	../proto/test_proto.h	47;"	d
TEST_MAX_FREE_TX_SIZE	../proto/test_proto.h	64;"	d
TEST_MAX_GETADDR	../proto/test_proto.h	36;"	d
TEST_MAX_MONEY	../proto/test_proto.h	/^static const int64 TEST_MAX_MONEY = 1600000000 * TEST_COIN;$/;"	v
TEST_MAX_ORPHAN_TRANSACTIONS	../proto/test_proto.h	38;"	d
TEST_MAX_SCRIPT_ELEMENT_SIZE	../proto/test_proto.h	44;"	d
TEST_MAX_SCRIPT_SIZE	../proto/test_proto.h	42;"	d
TEST_MAX_SIGOPS	../proto/test_proto.h	40;"	d
TEST_MAX_STANDARD_TX_SIGOP_COST	../proto/test_proto.h	59;"	d
TEST_MAX_STANDARD_TX_WEIGHT	../proto/test_proto.h	57;"	d
TEST_MAX_TRANSACTION_WEIGHT	../proto/test_proto.h	55;"	d
TEST_MAX_TX_FEE	../proto/test_proto.h	/^static const int64 TEST_MAX_TX_FEE = 1000 * SHC_COIN;$/;"	v
TEST_MIN_INPUT	../proto/test_proto.h	/^static const int64 TEST_MIN_INPUT = 1;$/;"	v
TEST_MIN_RELAY_TX_FEE	../proto/test_proto.h	/^static const int64 TEST_MIN_RELAY_TX_FEE = 1000;$/;"	v
TEST_MIN_TX_FEE	../proto/test_proto.h	/^static const int64 TEST_MIN_TX_FEE = 10000;$/;"	v
TEST_PROTOCOL_VERSION	../proto/test_proto.h	/^static const int TEST_PROTOCOL_VERSION = 1000000;$/;"	v
TEST_VERSION_BUILD	../proto/test_proto.h	32;"	d
TEST_VERSION_MAJOR	../proto/test_proto.h	29;"	d
TEST_VERSION_MINOR	../proto/test_proto.h	30;"	d
TEST_VERSION_REVISION	../proto/test_proto.h	31;"	d
TEST_WITNESS_SCALE_FACTOR	../proto/test_proto.h	/^static const int TEST_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
THIRTY_SECONDS	../stratum/stratum_sync.c	29;"	d	file:
THREAD_ADDEDCONNECTIONS	../server/net.h	/^    THREAD_ADDEDCONNECTIONS,$/;"	e	enum:threadId
THREAD_DNSSEED	../server/net.h	/^    THREAD_DNSSEED,$/;"	e	enum:threadId
THREAD_DUMPADDRESS	../server/net.h	/^    THREAD_DUMPADDRESS,$/;"	e	enum:threadId
THREAD_MAX	../server/net.h	/^    THREAD_MAX$/;"	e	enum:threadId
THREAD_MESSAGEHANDLER	../server/net.h	/^    THREAD_MESSAGEHANDLER,$/;"	e	enum:threadId
THREAD_MINER	../server/net.h	/^    THREAD_MINER,$/;"	e	enum:threadId
THREAD_OPENCONNECTIONS	../server/net.h	/^    THREAD_OPENCONNECTIONS,$/;"	e	enum:threadId
THREAD_RPCHANDLER	../server/net.h	/^    THREAD_RPCHANDLER,$/;"	e	enum:threadId
THREAD_RPCLISTENER	../server/net.h	/^    THREAD_RPCLISTENER,$/;"	e	enum:threadId
THREAD_SOCKETHANDLER	../server/net.h	/^    THREAD_SOCKETHANDLER,$/;"	e	enum:threadId
THREAD_UPNP	../server/net.h	/^    THREAD_UPNP,$/;"	e	enum:threadId
THRESHOLD_ACTIVE	../server/versionbits.h	/^    THRESHOLD_ACTIVE,$/;"	e	enum:ThresholdState
THRESHOLD_DEFINED	../server/versionbits.h	/^    THRESHOLD_DEFINED,$/;"	e	enum:ThresholdState
THRESHOLD_FAILED	../server/versionbits.h	/^    THRESHOLD_FAILED,$/;"	e	enum:ThresholdState
THRESHOLD_LOCKED_IN	../server/versionbits.h	/^    THRESHOLD_LOCKED_IN,$/;"	e	enum:ThresholdState
THRESHOLD_STARTED	../server/versionbits.h	/^    THRESHOLD_STARTED,$/;"	e	enum:ThresholdState
TXF_ALIAS	../server/block.h	/^    static const int TXF_ALIAS = (1 << 6);$/;"	m	class:CTransactionCore
TXF_ALTCHAIN	../server/block.h	/^    static const int TXF_ALTCHAIN = (1 << 15);$/;"	m	class:CTransactionCore
TXF_ASSET	../server/block.h	/^    static const int TXF_ASSET = (1 << 9);$/;"	m	class:CTransactionCore
TXF_CERTIFICATE	../server/block.h	/^    static const int TXF_CERTIFICATE = (1 << 4);$/;"	m	class:CTransactionCore
TXF_CONTEXT	../server/block.h	/^    static const int TXF_CONTEXT = (1 << 14);$/;"	m	class:CTransactionCore
TXF_EXEC	../server/block.h	/^    static const int TXF_EXEC = (1 << 13);$/;"	m	class:CTransactionCore
TXF_IDENT	../server/block.h	/^    static const int TXF_IDENT = (1 << 10);$/;"	m	class:CTransactionCore
TXF_LICENSE	../server/block.h	/^    static const int TXF_LICENSE = (1 << 5);$/;"	m	class:CTransactionCore
TXF_MATRIX	../server/block.h	/^    static const int TXF_MATRIX = (1 << 11);$/;"	m	class:CTransactionCore
TXF_OFFER	../server/block.h	/^    static const int TXF_OFFER = (1 << 7);$/;"	m	class:CTransactionCore
TXF_PARAM	../server/block.h	/^    static const int TXF_PARAM = (1 << 8);$/;"	m	class:CTransactionCore
TXF_RESERVED_0	../server/block.h	/^    static const int TXF_RESERVED_0 = (1 << 2);$/;"	m	class:CTransactionCore
TXF_RESERVED_1	../server/block.h	/^    static const int TXF_RESERVED_1 = (1 << 3);$/;"	m	class:CTransactionCore
TXF_VERSION	../server/block.h	/^    static const int TXF_VERSION = (1 << 0);$/;"	m	class:CTransactionCore
TXF_VERSION_2	../server/block.h	/^    static const int TXF_VERSION_2 = (1 << 1);$/;"	m	class:CTransactionCore
TX_MULTISIG	../server/script.h	/^    TX_MULTISIG,$/;"	e	enum:txnouttype
TX_NONSTANDARD	../server/script.h	/^    TX_NONSTANDARD,$/;"	e	enum:txnouttype
TX_PUBKEY	../server/script.h	/^    TX_PUBKEY,$/;"	e	enum:txnouttype
TX_PUBKEYHASH	../server/script.h	/^    TX_PUBKEYHASH,$/;"	e	enum:txnouttype
TX_RETURN	../server/script.h	/^    TX_RETURN,$/;"	e	enum:txnouttype
TX_SCRIPTHASH	../server/script.h	/^    TX_SCRIPTHASH,$/;"	e	enum:txnouttype
TX_VERSION	../server/block.h	442;"	d
TX_VERSION_2	../server/block.h	443;"	d
TX_WITNESS_UNKNOWN	../server/script.h	/^    TX_WITNESS_UNKNOWN,$/;"	e	enum:txnouttype
TX_WITNESS_V0_KEYHASH	../server/script.h	/^    TX_WITNESS_V0_KEYHASH,$/;"	e	enum:txnouttype
TX_WITNESS_V0_SCRIPTHASH	../server/script.h	/^    TX_WITNESS_V0_SCRIPTHASH,$/;"	e	enum:txnouttype
TX_WITNESS_V14_KEYHASH	../server/script.h	/^    TX_WITNESS_V14_KEYHASH,$/;"	e	enum:txnouttype
TX_WITNESS_V14_SCRIPTHASH	../server/script.h	/^    TX_WITNESS_V14_SCRIPTHASH,$/;"	e	enum:txnouttype
TestFunction	../test/CuTest.h	/^typedef void (*TestFunction)(CuTest *);$/;"	t
ThresholdConditionCache	../server/versionbits.h	/^typedef std::map<const CBlockIndex*, ThresholdState> ThresholdConditionCache;$/;"	t
ThresholdState	../server/versionbits.h	/^enum ThresholdState {$/;"	g
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CBlockIndex
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CDiskBlockIndex
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CDiskTxPos
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:COutPoint
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CTxIn
ToString	../server/script.h	/^    std::string ToString() const$/;"	f	class:CScript
ToString	../server/wallet.h	/^		std::string ToString() const$/;"	f	class:COutput
TransactionCompressor	../server/block_cmpct.h	/^		explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}$/;"	f	struct:TransactionCompressor
TransactionCompressor	../server/block_cmpct.h	/^struct TransactionCompressor $/;"	s
TxConfirmStats	../server/txfeerate.h	/^class TxConfirmStats$/;"	c
TxStatsInfo	../server/txfeerate.h	/^        TxStatsInfo() : stats(NULL), blockHeight(0), bucketIndex(0) {}$/;"	f	struct:CBlockPolicyEstimator::TxStatsInfo
TxStatsInfo	../server/txfeerate.h	/^    struct TxStatsInfo$/;"	s	class:CBlockPolicyEstimator
TxnAbort	../server/txidx.h	/^    bool TxnAbort()$/;"	f	class:CDB
TxnBegin	../server/txidx.h	/^    DbTxn *TxnBegin(int flags=DB_TXN_WRITE_NOSYNC)$/;"	f	class:CDBEnv
TxnBegin	../server/txidx.h	/^    bool TxnBegin()$/;"	f	class:CDB
TxnCommit	../server/txidx.h	/^    bool TxnCommit()$/;"	f	class:CDB
UEVENT_NONE	../unet/unet.h	95;"	d
UEVENT_PEER_CONN	../unet/unet.h	97;"	d
UEVENT_PEER_VERIFY	../unet/unet.h	96;"	d
UNDEFINED_SOCKET	../unet/unet.h	80;"	d
UNDEFINED_TIME	../unet/unet.h	81;"	d
UNETF_ESL	../unet/unet.h	78;"	d
UNETF_INBOUND	../unet/unet.h	75;"	d
UNETF_LISTEN	../unet/unet.h	76;"	d
UNETF_PEER_SCAN	../unet/unet.h	74;"	d
UNETF_SHUTDOWN	../unet/unet.h	73;"	d
UNETF_SYNC	../unet/unet.h	77;"	d
UNET_COLOR	../unet/unet.h	40;"	d
UNET_CONNECT_TIMEOUT	../unet/unet_connect.c	28;"	d	file:
UNET_EMC2	../unet/unet.h	37;"	d
UNET_LTC	../unet/unet.h	38;"	d
UNET_MAX_EVENTS	../unet/unet.h	93;"	d
UNET_NONE	../unet/unet.h	34;"	d
UNET_RESERVED_1	../unet/unet.h	45;"	d
UNET_RESERVED_2	../unet/unet.h	44;"	d
UNET_RESERVED_3	../unet/unet.h	43;"	d
UNET_RESERVED_4	../unet/unet.h	42;"	d
UNET_RESERVED_5	../unet/unet.h	49;"	d
UNET_RESERVED_6	../unet/unet.h	50;"	d
UNET_RESERVED_7	../unet/unet.h	36;"	d
UNET_RPC	../unet/unet.h	59;"	d
UNET_SHAPI	../unet/unet.h	56;"	d
UNET_SHC	../unet/unet.h	35;"	d
UNET_STRATUM	../unet/unet.h	53;"	d
UNET_STRATUM_BLAKE2S	../unet/unet.h	65;"	d
UNET_STRATUM_GROESTL	../unet/unet.h	67;"	d
UNET_STRATUM_KECCAK	../unet/unet.h	63;"	d
UNET_STRATUM_QUBIT	../unet/unet.h	66;"	d
UNET_STRATUM_SHA256D	../unet/unet.h	62;"	d
UNET_STRATUM_SKEIN	../unet/unet.h	68;"	d
UNET_STRATUM_X11	../unet/unet.h	64;"	d
UNET_TESTNET	../unet/unet.h	39;"	d
UNLIKELY_PCT	../server/txfeerate.h	/^static const double UNLIKELY_PCT = .5;$/;"	v
USER_AUTH	../shapi/shapi.h	51;"	d
USER_AUTH	../stratum/stratum.h	51;"	d
USER_CLIENT	../shapi/shapi.h	54;"	d
USER_CLIENT	../stratum/stratum.h	54;"	d
USER_ELEVATE	../shapi/shapi.h	57;"	d
USER_ELEVATE	../stratum/stratum.h	57;"	d
USER_EXTRANONCE	../shapi/shapi.h	58;"	d
USER_EXTRANONCE	../stratum/stratum.h	58;"	d
USER_REMOTE	../shapi/shapi.h	55;"	d
USER_REMOTE	../stratum/stratum.h	55;"	d
USER_RPC	../shapi/shapi.h	56;"	d
USER_RPC	../stratum/stratum.h	56;"	d
USER_SUBSCRIBE	../shapi/shapi.h	52;"	d
USER_SUBSCRIBE	../stratum/stratum.h	52;"	d
USER_SYNC	../shapi/shapi.h	53;"	d
USER_SYNC	../stratum/stratum.h	53;"	d
USER_SYSTEM	../shapi/shapi.h	50;"	d
USER_SYSTEM	../stratum/stratum.h	50;"	d
UTHREAD	../unet/unet.h	106;"	d
UTHREAD_IDLE	../unet/unet_thread.c	32;"	d	file:
UTHREAD_MAX_TIME	../unet/unet_thread.c	38;"	d	file:
UTHREAD_TIMER	../unet/unet_thread.c	35;"	d	file:
UnsetFlag	../server/txmempool.h	/^    void UnsetFlag(int flag)$/;"	f	class:CPoolTx
UpdateSpent	../server/wallet.h	/^				 bool UpdateSpent(const std::vector<char>& vfNewSpent)$/;"	f	class:CWalletTx
VALIDATE_MATRIX_BMP	../stratum/stratum_http.c	523;"	d	file:
VERSIONBITS_LAST_OLD_BLOCK_VERSION	../server/versionbits.h	/^static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;$/;"	v
VERSIONBITS_NUM_BITS	../server/versionbits.h	/^static const int32_t VERSIONBITS_NUM_BITS = 29;$/;"	v
VERSIONBITS_TOP_BITS	../server/versionbits.h	/^static const int32_t VERSIONBITS_TOP_BITS = 0x20000000UL;$/;"	v
VERSIONBITS_TOP_MASK	../server/versionbits.h	/^static const int32_t VERSIONBITS_TOP_MASK = 0xE0000000UL;$/;"	v
VERSION_MASK	../server/block.h	/^		static const int VERSION_MASK = 15;$/;"	m	class:CTransactionCore
ValidIndexSet	../server/block.h	/^typedef set<CBlockIndex*, CBlockIndexWorkComparator> ValidIndexSet;$/;"	t
ValueString	../server/script.h	/^inline std::string ValueString(const std::vector<unsigned char>& vch)$/;"	f
Verify	../server/hdkey.h	/^    bool Verify(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:HDPrivKey
VersionBitsCache	../server/versionbits.h	/^struct VersionBitsCache$/;"	s
WALLET_CRYPTO_KEY_SIZE	../server/crypter.h	/^const unsigned int WALLET_CRYPTO_KEY_SIZE = 32;$/;"	v
WALLET_CRYPTO_SALT_SIZE	../server/crypter.h	/^const unsigned int WALLET_CRYPTO_SALT_SIZE = 8;$/;"	v
WORK_ROUND_OFFSET	../stratum/stratum_protocol.c	35;"	d	file:
WalletFeature	../server/wallet.h	/^enum WalletFeature$/;"	g
WitnessUnknown	../server/script.h	/^struct WitnessUnknown$/;"	s
WitnessV0KeyHash	../server/script.h	/^	WitnessV0KeyHash() : uint160() {} $/;"	f	struct:WitnessV0KeyHash
WitnessV0KeyHash	../server/script.h	/^	explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}$/;"	f	struct:WitnessV0KeyHash
WitnessV0KeyHash	../server/script.h	/^struct WitnessV0KeyHash : public uint160$/;"	s
WitnessV0ScriptHash	../server/script.h	/^	WitnessV0ScriptHash() : uint256() {}$/;"	f	struct:WitnessV0ScriptHash
WitnessV0ScriptHash	../server/script.h	/^	explicit WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}$/;"	f	struct:WitnessV0ScriptHash
WitnessV0ScriptHash	../server/script.h	/^struct WitnessV0ScriptHash : public uint256$/;"	s
WitnessV14KeyHash	../server/script.h	/^	WitnessV14KeyHash() : uint160() {} $/;"	f	struct:WitnessV14KeyHash
WitnessV14KeyHash	../server/script.h	/^	explicit WitnessV14KeyHash(const uint160& hash) : uint160(hash) {}$/;"	f	struct:WitnessV14KeyHash
WitnessV14KeyHash	../server/script.h	/^struct WitnessV14KeyHash : public uint160$/;"	s
WitnessV14ScriptHash	../server/script.h	/^	WitnessV14ScriptHash() : uint256() {}$/;"	f	struct:WitnessV14ScriptHash
WitnessV14ScriptHash	../server/script.h	/^	explicit WitnessV14ScriptHash(const uint256& hash) : uint256(hash) {}$/;"	f	struct:WitnessV14ScriptHash
WitnessV14ScriptHash	../server/script.h	/^struct WitnessV14ScriptHash : public uint256$/;"	s
Write	../server/txidx.h	/^      bool Write(const K& key, const T& value, bool fOverwrite=true)$/;"	f	class:CDB
WriteBestBlock	../server/walletdb.h	/^    bool WriteBestBlock(const CBlockLocator& locator)$/;"	f	class:CWalletDB
WriteCScript	../server/walletdb.h	/^    bool WriteCScript(const uint160& hash, const CScript& redeemScript)$/;"	f	class:CWalletDB
WriteCryptedKey	../server/walletdb.h	/^    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, bool fEraseUnencryptedKey = true)$/;"	f	class:CWalletDB
WriteDefaultKey	../server/walletdb.h	/^    bool WriteDefaultKey(const CPubKey& vchPubKey)$/;"	f	class:CWalletDB
WriteKey	../server/walletdb.h	/^    bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata& keyMeta)$/;"	f	class:CWalletDB
WriteKey	../server/walletdb.h	/^    bool WriteKey(const DIKey& key, const CPubKey& pubkey)$/;"	f	class:CWalletDB
WriteKey	../server/walletdb.h	/^    bool WriteKey(const ECKey& key, const CPubKey& pubkey)$/;"	f	class:CWalletDB
WriteMasterKey	../server/walletdb.h	/^    bool WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey)$/;"	f	class:CWalletDB
WriteMinVersion	../server/walletdb.h	/^    bool WriteMinVersion(int nVersion)$/;"	f	class:CWalletDB
WriteSetting	../server/walletdb.h	/^    bool WriteSetting(const std::string& strKey, const T& value)$/;"	f	class:CWalletDB
WriteTx	../server/walletdb.h	/^    bool WriteTx(uint256 hash, const CWalletTx& wtx)$/;"	f	class:CWalletDB
WriteVersion	../server/txidx.h	/^    bool WriteVersion(int nVersion)$/;"	f	class:CDB
_END_TEST	../test/test_shcoind.h	10;"	d
_FALSE	../test/test_shcoind.h	14;"	d
_TEST	../test/test_shcoind.h	9;"	d
_TRUE	../test/test_shcoind.h	12;"	d
_TRUEPTR	../test/test_shcoind.h	26;"	d
_TRUE_EQUAL	../test/test_shcoind.h	17;"	d
_TRUE_GT	../test/test_shcoind.h	21;"	d
_TRUE_NE	../test/test_shcoind.h	19;"	d
__BLOCKCHAIN__BC_ARCH_H__	../blockchain/bc_arch.h	27;"	d
__BLOCKCHAIN__BC_BLOCK_H__	../blockchain/bc_block.h	28;"	d
__BLOCKCHAIN__BC_FMAP_H__	../blockchain/bc_fmap.h	27;"	d
__BLOCKCHAIN__BC_H__	../blockchain/bc.h	27;"	d
__BLOCKCHAIN__BC_INDEX_H__	../blockchain/bc_index.h	27;"	d
__BLOCKCHAIN__BC_MUTEX_H__	../blockchain/bc_mutex.h	28;"	d
__BLOCKCHAIN__BC_TABLE_H__	../blockchain/bc_table.h	28;"	d
__BLOCK_CMPCT_H__	../server/block_cmpct.h	27;"	d
__COIN_PROTO_H__	../proto/coin_proto.h	27;"	d
__COLOR_PROTO_H__	../proto/color_proto.h	27;"	d
__CRYPTER_H__	../server/crypter.h	27;"	d
__EMC2_PROTO_H__	../proto/emc2_proto.h	27;"	d
__LTC_PROTO_H__	../proto/ltc_proto.h	27;"	d
__MATRIX_H__	../server/matrix.h	27;"	d
__MRUSET_H	../server/mruset.h	27;"	d
__PROTO_H__	../proto.h	27;"	d
__PROTO__CONVERSION_H__	../proto/conversion.h	26;"	d
__PROTO__NETWORK_H__	../proto/network.h	27;"	d
__PROTO__PROTOCOL_C__	../shapi/shapi_protocol.c	26;"	d	file:
__PROTO__PROTOCOL_C__	../stratum/stratum_command.c	26;"	d	file:
__PROTO__PROTOCOL_C__	../stratum/stratum_protocol.c	26;"	d	file:
__PROTO__TYPES_H__	../proto/types.h	27;"	d
__RESERVED_2	../server/script.h	/^		__RESERVED_2$/;"	e	enum:txnouttype
__SERVER_IFACE_H__	../server_iface.h	27;"	d
__SERVER__ACCOUNT_H__	../server/account.h	27;"	d
__SERVER__ALGOBITS_H__	../server/algobits.h	27;"	d
__SERVER__BASE58_H__	../server/base58.h	27;"	d
__SERVER__BLOCK_H__	../server/block.h	27;"	d
__SERVER__BLOOM_H__	../server/bloom.h	27;"	d
__SERVER__CHAIN_H__	../server/chain.h	27;"	d
__SERVER__CHECKPOINTS_H__	../server/checkpoints.h	27;"	d
__SERVER__COINADDR_H__	../server/coinaddr.h	27;"	d
__SERVER__COIN_H__	../server/coin.h	27;"	d
__SERVER__DIKEY_H__	../server/dikey.h	27;"	d
__SERVER__ECKEY_H__	../server/eckey.h	27;"	d
__SERVER__GLOBAL_H__	../server/global.h	27;"	d
__SERVER__HDKEY_H__	../server/hdkey.h	27;"	d
__SERVER__KEYSTORE_H__	../server/keystore.h	27;"	d
__SERVER__KEY_H__	../server/key.h	27;"	d
__SERVER__MNEMONIC_H__	../server/mnemonic.h	27;"	d
__SERVER__NET_H__	../server/net.h	27;"	d
__SERVER__SCRIPT_H__	../server/script.h	27;"	d
__SERVER__SERVER_H__	../server/server.h	27;"	d
__SERVER__SHA256D_MERKLE_H__	../server/sha256d_merkle.h	27;"	d
__SERVER__SPRING_H__	../server/spring.h	27;"	d
__SERVER__TXCREATOR_H__	../server/txcreator.h	27;"	d
__SERVER__TXFEERATE_H__	../server/txfeerate.h	4;"	d
__SERVER__TXMEMPOOL_H__	../server/txmempool.h	27;"	d
__SERVER__TXSIGNATURE_H__	../server/txsignature.h	27;"	d
__SERVER__VALIDATION_H__	../server/validation.h	27;"	d
__SERVER__WALLET_H__	../server/wallet.h	27;"	d
__SHAPI__API_H__	../shapi/shapi_api.h	27;"	d
__SHAPI__PROTOCOL_H__	../shapi/shapi_protocol.h	27;"	d
__SHAPI__SHAPI_H__	../shapi/shapi.h	27;"	d
__SHAPI__USER_H__	../shapi/shapi_user.h	27;"	d
__SHCOIND_BLOCK_H__	../shcoind_block.h	27;"	d
__SHCOIND_DESCRIPTOR_H__	../shcoind_descriptor.h	27;"	d
__SHCOIND_ERROR_H__	../shcoind_error.h	27;"	d
__SHCOIND_H__	../shcoind.h	27;"	d
__SHCOIND_LOG_H__	../shcoind_log.h	27;"	d
__SHCOIND_OPT_H__	../shcoind_opt.h	27;"	d
__SHCOIND_SIGNAL_H__	../shcoind_signal.h	27;"	d
__SHCOIND_SVC_H__	../shcoind_svc.h	27;"	d
__SHCOIND_VERSION_H__	../shcoind_version.h	27;"	d
__SHC_PROTO_H__	../proto/shc_proto.h	27;"	d
__SHLIB_H__	../server/shlib.h	27;"	d
__STRATUM__API_H__	../stratum/stratum_api.h	27;"	d
__STRATUM__MINER_H__	../stratum/stratum_miner.h	27;"	d
__STRATUM__PROTOCOL_H__	../stratum/stratum_protocol.h	27;"	d
__STRATUM__STRATUM_HTTP_H__	../stratum/stratum_http.h	27;"	d
__STRATUM__STRATUM_H__	../stratum/stratum.h	27;"	d
__STRATUM__STRATUM_SYNC_H__	../stratum/stratum_sync.h	27;"	d
__STRATUM__TASK_C__	../stratum/stratum_task.c	26;"	d	file:
__STRATUM__TASK_H__	../stratum/stratum_task.h	27;"	d
__STRATUM__USER_H__	../stratum/stratum_user.h	27;"	d
__TESTNET_PROTO_H__	../proto/testnet_proto.h	27;"	d
__TEST_PROTO_H__	../proto/test_proto.h	27;"	d
__TEST__SHTEST_H__	../test/test_shcoind.h	3;"	d
__TXIDX_H__	../server/txidx.h	28;"	d
__UNET_SEED_H__	../unet/unet_seed.h	4;"	d
__UNET__UNET_H__	../unet/unet.h	27;"	d
__USE_W32_SOCKETS	../shcoind.h	33;"	d
__UTIL_H__	../server/util.h	3;"	d
__WALLETDB_H__	../server/walletdb.h	28;"	d
__WIT_MERKLE_H__	../server/wit_merkle.h	3;"	d
__reserved_0__	../blockchain/bc.h	/^  uint64_t __reserved_0__;$/;"	m	struct:bc_idx_t
__reserved_1__	../blockchain/bc.h	/^  uint64_t __reserved_1__;$/;"	m	struct:bc_idx_t
_bc_append	../blockchain/bc_block.c	/^static int _bc_append(bc_t *bc, bc_hash_t hash, void *data, size_t data_len)$/;"	f	file:
_bc_arch	../blockchain/bc_block.c	/^static int _bc_arch(bc_t *bc, bcsize_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f	file:
_bc_arch_close	../blockchain/bc_arch.c	/^static void _bc_arch_close(bc_t *bc)$/;"	f	file:
_bc_arch_get	../blockchain/bc_arch.c	/^static int _bc_arch_get(bc_t *bc, bcpos_t pos, bc_idx_t *ret_arch)$/;"	f	file:
_bc_arch_open	../blockchain/bc_arch.c	/^static int _bc_arch_open(bc_t *bc)$/;"	f	file:
_bc_arch_set	../blockchain/bc_arch.c	/^static int _bc_arch_set(bc_t *bc, bcpos_t pos, bc_idx_t *arch)$/;"	f	file:
_bc_arch_write	../blockchain/bc_block.c	/^static int _bc_arch_write(bc_t *bc, bc_hash_t hash, void *raw_data, bcsize_t data_len)$/;"	f	file:
_bc_chain_idle	../blockchain/bc_block.c	/^static void _bc_chain_idle(void)$/;"	f	file:
_bc_close	../blockchain/bc_block.c	/^static void _bc_close(bc_t *bc)$/;"	f	file:
_bc_get	../blockchain/bc_block.c	/^static int _bc_get(bc_t *bc, bcpos_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f	file:
_bc_idx_clear	../blockchain/bc_index.c	/^static int _bc_idx_clear(bc_t *bc, bcsize_t pos)$/;"	f	file:
_bc_idx_close	../blockchain/bc_index.c	/^static void _bc_idx_close(bc_t *bc)$/;"	f	file:
_bc_idx_find	../blockchain/bc_index.c	/^static int _bc_idx_find(bc_t *bc, bc_hash_t hash, bc_idx_t *ret_idx, int *ret_pos)$/;"	f	file:
_bc_idx_get	../blockchain/bc_index.c	/^static int _bc_idx_get(bc_t *bc, bcsize_t pos, bc_idx_t *ret_idx)$/;"	f	file:
_bc_idx_open	../blockchain/bc_index.c	/^static int _bc_idx_open(bc_t *bc)$/;"	f	file:
_bc_idx_reset	../blockchain/bc_index.c	/^static int _bc_idx_reset(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f	file:
_bc_idx_set	../blockchain/bc_index.c	/^static int _bc_idx_set(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f	file:
_bc_map_alloc	../blockchain/bc_fmap.c	/^static int _bc_map_alloc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f	file:
_bc_map_append	../blockchain/bc_fmap.c	/^static int _bc_map_append(bc_t *bc, bc_map_t *map, void *raw_data, bcsize_t data_len)$/;"	f	file:
_bc_map_close	../blockchain/bc_fmap.c	/^static void _bc_map_close(bc_map_t *map)$/;"	f	file:
_bc_map_open	../blockchain/bc_fmap.c	/^static int _bc_map_open(bc_t *bc, bc_map_t *map)$/;"	f	file:
_bc_map_read	../blockchain/bc_fmap.c	/^static int _bc_map_read(bc_t *bc, bc_map_t *map, unsigned char *data, bcsize_t data_of, bcsize_t data_len)$/;"	f	file:
_bc_map_trunc	../blockchain/bc_fmap.c	/^static int _bc_map_trunc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f	file:
_bc_map_write	../blockchain/bc_fmap.c	/^static int _bc_map_write(bc_t *bc, bc_map_t *map, bcsize_t of, void *raw_data, bcsize_t data_len)$/;"	f	file:
_bc_open	../blockchain/bc_block.c	/^static int _bc_open(char *name, bc_t **bc_p)$/;"	f	file:
_bc_purge	../blockchain/bc_block.c	/^static int _bc_purge(bc_t *bc, bcsize_t pos)$/;"	f	file:
_bc_read	../blockchain/bc_block.c	/^static int _bc_read(bc_t *bc, bcsize_t pos, void *data, bcsize_t data_len)$/;"	f	file:
_bc_rewrite	../blockchain/bc_block.c	/^static int _bc_rewrite(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f	file:
_bc_table_clear	../blockchain/bc_table.c	/^static int _bc_table_clear(bc_t *bc)$/;"	f	file:
_bc_table_close	../blockchain/bc_table.c	/^static void _bc_table_close(bc_t *bc)$/;"	f	file:
_bc_table_get	../blockchain/bc_table.c	/^static int _bc_table_get(bc_t *bc, bc_hash_t hash, bcpos_t *ret_pos)$/;"	f	file:
_bc_table_open	../blockchain/bc_table.c	/^static int _bc_table_open(bc_t *bc)$/;"	f	file:
_bc_table_reset	../blockchain/bc_table.c	/^static int _bc_table_reset(bc_t *bc, bc_hash_t hash)$/;"	f	file:
_bc_table_set	../blockchain/bc_table.c	/^static int _bc_table_set(bc_t *bc, bc_hash_t hash, bcpos_t pos)$/;"	f	file:
_bc_table_unset	../blockchain/bc_table.c	/^static int _bc_table_unset(bc_t *bc, bc_hash_t hash)$/;"	f	file:
_bc_write	../blockchain/bc_block.c	/^static int _bc_write(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f	file:
_cutest_ptr	../test/test_shcoind.h	/^static void *_cutest_ptr;$/;"	v
_descriptor_flag_label	../shcoind_descriptor.c	/^const char *_descriptor_flag_label[MAX_DESCRIPTOR_FLAGS] = {$/;"	v
_descriptor_table	../shcoind_descriptor.c	/^static desc_t *_descriptor_table;$/;"	v	file:
_error_code_table	../shcoind_error.c	/^static err_code_t _error_code_table[] = {$/;"	v	file:
_iface_table	../proto/coin_proto.c	/^static coin_iface_t *_iface_table[MAX_COIN_IFACE] = {$/;"	v	file:
_option_table	../shcoind_opt.c	/^static opt_t _option_table[] = {$/;"	v	file:
_proc_option_table	../shcoind_opt.c	/^static shmap_t *_proc_option_table;$/;"	v	file:
_pub_addr_list	../stratum/stratum_sync.c	/^static char **_pub_addr_list(int ifaceIndex, char *acc_name_in)$/;"	f	file:
_reserved0_	../server/account.h	/^		uint256 _reserved0_;$/;"	m	class:CAccountCache
_shutdown_timer	../shcoind_signal.c	/^int _shutdown_timer;$/;"	v
_spring_matrix	../server/spring.c	/^uint64_t _spring_matrix[256][256] = {$/;"	v
_stratum_user_html_template	../stratum/stratum_http.c	/^static const char *_stratum_user_html_template = $/;"	v	file:
_sync_req_idx	../stratum/stratum_sync.c	/^static unsigned int _sync_req_idx;$/;"	v	file:
_task_stat	../stratum/stratum_task.c	/^task_stat_t _task_stat[MAX_COIN_IFACE];$/;"	v
_total_descriptor_claim	../shcoind_descriptor.c	/^static uint64_t _total_descriptor_claim;$/;"	v	file:
_total_descriptor_mark	../shcoind_descriptor.c	/^static uint64_t _total_descriptor_mark;$/;"	v	file:
_total_descriptor_release	../shcoind_descriptor.c	/^static uint64_t _total_descriptor_release;$/;"	v	file:
_unet_bind	../unet/unet_bind.c	/^static unet_bind_t _unet_bind[MAX_UNET_MODES];$/;"	v	file:
_unet_label	../unet/unet.c	/^static const char *_unet_label[MAX_UNET_MODES] = $/;"	v	file:
accept	../server/txmempool.h	/^    bool accept(CTransaction &tx, CNode *pfrom = NULL)$/;"	f	class:CTxMemPool
account	../server/account.h	/^		CAccount account;$/;"	m	class:CAccountCache
active	../server/txmempool.h	/^    pool_map active;$/;"	m	class:CPool
activeTxn	../server/txidx.h	/^    DbTxn *activeTxn;$/;"	m	class:CDB
addr	../server/coinaddr.h	/^    CCoinAddr *addr;$/;"	m	class:CCoinAddrVisitor
addr	../server/net.h	/^    CAddress addr;$/;"	m	class:CNode
addrLocal	../server/net.h	/^    CService addrLocal;$/;"	m	class:CNode
addrName	../server/net.h	/^    std::string addrName;$/;"	m	class:CNode
addrName	../server/net.h	/^    std::string addrName;$/;"	m	class:CNodeStats
alg	../stratum/stratum.h	/^	int alg;$/;"	m	struct:task_attr_t
alg	../stratum/stratum.h	/^	int alg;$/;"	m	struct:user_t
alias	../server/block.h	/^    CAlias alias;$/;"	m	class:CTransaction
altchain	../server/block.h	/^		CAltChain altchain;$/;"	m	class:CTransaction
arch_map	../blockchain/bc.h	/^  bc_map_t arch_map;$/;"	m	struct:bc_t
args	../stratum/stratum_http.h	/^	shjson_t *args;$/;"	m	struct:httpreq_t
avg	../server/txfeerate.h	/^    std::vector<double> avg;$/;"	m	class:TxConfirmStats
avg_diff	../stratum/stratum.h	/^  double avg_diff[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
bQuiet	../shcoind_svc.c	/^static BOOL			bQuiet = FALSE;$/;"	v	file:
bService	../shcoind_svc.c	/^static BOOL			bService = TRUE;$/;"	v	file:
bUseCommandLineArgs	../shcoind_svc.c	/^static BOOL			bUseCommandLineArgs = FALSE;$/;"	v	file:
bVerbose	../shcoind_svc.c	/^static BOOL			bVerbose = FALSE;$/;"	v	file:
balance	../stratum/stratum.h	/^  double balance[MAX_COIN_IFACE];$/;"	m	struct:user_t
balance_avg	../stratum/stratum.h	/^  double balance_avg[MAX_COIN_IFACE];$/;"	m	struct:user_t
base58_ext_public_key	../proto/coin_proto.h	/^	unsigned char base58_ext_public_key[4];$/;"	m	struct:coin_iface_t
base58_ext_secret_key	../proto/coin_proto.h	/^	unsigned char base58_ext_secret_key[4];$/;"	m	struct:coin_iface_t
base58_pubkey_address	../proto/coin_proto.h	/^	unsigned char base58_pubkey_address;$/;"	m	struct:coin_iface_t
base58_script_address	../proto/coin_proto.h	/^	unsigned char base58_script_address;$/;"	m	struct:coin_iface_t
base58_script_address2	../proto/coin_proto.h	/^	unsigned char base58_script_address2;$/;"	m	struct:coin_iface_t
base58_secret_key	../proto/coin_proto.h	/^	unsigned char base58_secret_key;$/;"	m	struct:coin_iface_t
bc_alloc	../blockchain/bc_block.c	/^int bc_alloc(bc_t *bc, unsigned int jrnl)$/;"	f
bc_append	../blockchain/bc_block.c	/^int bc_append(bc_t *bc, bc_hash_t hash, void *data, size_t data_len)$/;"	f
bc_arch	../blockchain/bc_block.c	/^int bc_arch(bc_t *bc, bcsize_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f
bc_arch_add	../blockchain/bc_arch.c	/^int bc_arch_add(bc_t *bc, bc_idx_t *arch)$/;"	f
bc_arch_close	../blockchain/bc_arch.c	/^void bc_arch_close(bc_t *bc)$/;"	f
bc_arch_crc	../blockchain/bc_arch.c	/^uint32_t bc_arch_crc(bc_hash_t hash)$/;"	f
bc_arch_find	../blockchain/bc_arch.c	/^int bc_arch_find(bc_t *bc, bc_hash_t hash, bc_idx_t *ret_arch, bcsize_t *ret_pos)$/;"	f
bc_arch_get	../blockchain/bc_arch.c	/^int bc_arch_get(bc_t *bc, bcpos_t pos, bc_idx_t *ret_arch)$/;"	f
bc_arch_next	../blockchain/bc_arch.c	/^int bc_arch_next(bc_t *bc, bcpos_t *pos_p)$/;"	f
bc_arch_open	../blockchain/bc_arch.c	/^int bc_arch_open(bc_t *bc)$/;"	f
bc_arch_set	../blockchain/bc_arch.c	/^int bc_arch_set(bc_t *bc, bcpos_t pos, bc_idx_t *arch)$/;"	f
bc_arch_write	../blockchain/bc_block.c	/^int bc_arch_write(bc_t *bc, bc_hash_t hash, void *raw_data, bcsize_t data_len)$/;"	f
bc_block	../proto/coin_proto.h	/^  bc_t *bc_block;$/;"	m	struct:coin_iface_t
bc_chain_idle	../blockchain/bc_block.c	/^void bc_chain_idle(void)$/;"	f
bc_clear	../blockchain/bc_block.c	/^int bc_clear(bc_t *bc, bcsize_t pos)$/;"	f
bc_close	../blockchain/bc_block.c	/^void bc_close(bc_t *bc)$/;"	f
bc_coin	../proto/coin_proto.h	/^  bc_t *bc_coin;$/;"	m	struct:coin_iface_t
bc_find	../blockchain/bc_block.c	/^int bc_find(bc_t *bc, bc_hash_t hash, bcpos_t *pos_p)$/;"	f
bc_fmap_total	../blockchain/bc_fmap.c	/^unsigned int bc_fmap_total(bc_t *bc)$/;"	f
bc_get	../blockchain/bc_block.c	/^int bc_get(bc_t *bc, bcpos_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f
bc_get_hash	../blockchain/bc_block.c	/^int bc_get_hash(bc_t *bc, bcpos_t pos, bc_hash_t ret_hash)$/;"	f
bc_hash_cmp	../blockchain/bc_block.c	/^int bc_hash_cmp(bc_hash_t a_hash, bc_hash_t b_hash)$/;"	f
bc_hash_t	../blockchain/bc.h	/^typedef uint32_t bc_hash_t[8];$/;"	t
bc_hdr_t	../blockchain/bc.h	/^typedef struct bc_hdr_t$/;"	s
bc_hdr_t	../blockchain/bc.h	/^} bc_hdr_t; \/* 16b *\/$/;"	t	typeref:struct:bc_hdr_t
bc_idle	../blockchain/bc_block.c	/^void bc_idle(bc_t *bc)$/;"	f
bc_idx_clear	../blockchain/bc_index.c	/^int bc_idx_clear(bc_t *bc, bcsize_t pos)$/;"	f
bc_idx_close	../blockchain/bc_index.c	/^void bc_idx_close(bc_t *bc)$/;"	f
bc_idx_crc	../blockchain/bc_index.c	/^uint32_t bc_idx_crc(bc_hash_t hash)$/;"	f
bc_idx_find	../blockchain/bc_index.c	/^int bc_idx_find(bc_t *bc, bc_hash_t hash, bc_idx_t *ret_idx, int *ret_pos)$/;"	f
bc_idx_get	../blockchain/bc_index.c	/^int bc_idx_get(bc_t *bc, bcsize_t pos, bc_idx_t *ret_idx)$/;"	f
bc_idx_next	../blockchain/bc_index.c	/^int bc_idx_next(bc_t *bc, bcpos_t *pos_p)$/;"	f
bc_idx_open	../blockchain/bc_index.c	/^int bc_idx_open(bc_t *bc)$/;"	f
bc_idx_reset	../blockchain/bc_index.c	/^int bc_idx_reset(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f
bc_idx_set	../blockchain/bc_index.c	/^int bc_idx_set(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f
bc_idx_t	../blockchain/bc.h	/^typedef struct bc_idx_t$/;"	s
bc_idx_t	../blockchain/bc.h	/^} bc_idx_t; \/* 16b *\/$/;"	t	typeref:struct:bc_idx_t
bc_iface_index	../blockchain/bc_fmap.c	/^static int bc_iface_index(char *name)$/;"	f	file:
bc_journal	../blockchain/bc_block.c	/^uint32_t bc_journal(int pos)$/;"	f
bc_lock	../blockchain/bc_mutex.c	/^int bc_lock(bc_t *bc)$/;"	f
bc_map_alloc	../blockchain/bc_fmap.c	/^int bc_map_alloc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f
bc_map_append	../blockchain/bc_fmap.c	/^int bc_map_append(bc_t *bc, bc_map_t *map, void *raw_data, bcsize_t data_len)$/;"	f
bc_map_close	../blockchain/bc_fmap.c	/^void bc_map_close(bc_map_t *map)$/;"	f
bc_map_free	../blockchain/bc_fmap.c	/^void bc_map_free(bc_map_t *map)$/;"	f
bc_map_open	../blockchain/bc_fmap.c	/^int bc_map_open(bc_t *bc, bc_map_t *map)$/;"	f
bc_map_read	../blockchain/bc_fmap.c	/^int bc_map_read(bc_t *bc, bc_map_t *map, unsigned char *data, bcsize_t data_of, bcsize_t data_len)$/;"	f
bc_map_t	../blockchain/bc.h	/^typedef struct bc_map_t$/;"	s
bc_map_t	../blockchain/bc.h	/^} bc_map_t;$/;"	t	typeref:struct:bc_map_t
bc_map_trunc	../blockchain/bc_fmap.c	/^int bc_map_trunc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f
bc_map_write	../blockchain/bc_fmap.c	/^int bc_map_write(bc_t *bc, bc_map_t *map, bcsize_t of, void *raw_data, bcsize_t data_len)$/;"	f
bc_mutex_init	../blockchain/bc_mutex.c	/^void bc_mutex_init(bc_t *bc)$/;"	f
bc_mutex_term	../blockchain/bc_mutex.c	/^void bc_mutex_term(bc_t *bc)$/;"	f
bc_name	../blockchain/bc_block.c	/^char *bc_name(bc_t *bc)$/;"	f
bc_open	../blockchain/bc_block.c	/^int bc_open(char *name, bc_t **bc_p)$/;"	f
bc_path_base	../blockchain/bc_block.c	/^const char *bc_path_base(void)$/;"	f
bc_purge	../blockchain/bc_block.c	/^int bc_purge(bc_t *bc, bcsize_t pos)$/;"	f
bc_read	../blockchain/bc_block.c	/^int bc_read(bc_t *bc, bcsize_t pos, void *data, bcsize_t data_len)$/;"	f
bc_rewrite	../blockchain/bc_block.c	/^int bc_rewrite(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f
bc_t	../blockchain/bc.h	/^typedef struct bc_t$/;"	s
bc_t	../blockchain/bc.h	/^} bc_t;$/;"	t	typeref:struct:bc_t
bc_table_clear	../blockchain/bc_table.c	/^int bc_table_clear(bc_t *bc)$/;"	f
bc_table_close	../blockchain/bc_table.c	/^void bc_table_close(bc_t *bc)$/;"	f
bc_table_get	../blockchain/bc_table.c	/^int bc_table_get(bc_t *bc, bc_hash_t hash, bcpos_t *ret_pos)$/;"	f
bc_table_hash	../blockchain/bc_table.c	/^int bc_table_hash(bc_hash_t hash)$/;"	f
bc_table_open	../blockchain/bc_table.c	/^int bc_table_open(bc_t *bc)$/;"	f
bc_table_pos	../blockchain/bc_table.c	/^bcpos_t *bc_table_pos(bc_t *bc, bc_hash_t hash)$/;"	f
bc_table_reset	../blockchain/bc_table.c	/^int bc_table_reset(bc_t *bc, bc_hash_t hash)$/;"	f
bc_table_set	../blockchain/bc_table.c	/^int bc_table_set(bc_t *bc, bc_hash_t hash, bcpos_t pos)$/;"	f
bc_table_unset	../blockchain/bc_table.c	/^int bc_table_unset(bc_t *bc, bc_hash_t hash)$/;"	f
bc_trylock	../blockchain/bc_mutex.c	/^int bc_trylock(bc_t *bc)$/;"	f
bc_tx	../proto/coin_proto.h	/^  bc_t *bc_tx;$/;"	m	struct:coin_iface_t
bc_unlock	../blockchain/bc_mutex.c	/^void bc_unlock(bc_t *bc)$/;"	f
bc_write	../blockchain/bc_block.c	/^int bc_write(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f
bc_wtx	../proto/coin_proto.h	/^  bc_t *bc_wtx;$/;"	m	struct:coin_iface_t
bclock_t	../blockchain/bc.h	/^typedef int bclock_t;$/;"	t
bclock_t	../blockchain/bc.h	/^typedef pthread_mutex_t bclock_t;$/;"	t
bcpos_t	../blockchain/bc.h	/^typedef uint32_t bcpos_t;$/;"	t
bcsize_t	../blockchain/bc.h	/^typedef uint32_t bcsize_t;$/;"	t
begin	../server/key.h	/^		const unsigned char* begin() const { return vch.data(); }$/;"	f	class:CKey
begin	../server/key.h	/^		const unsigned char* begin() const { return vchPubKey.data(); }$/;"	f	class:CPubKey
begin	../server/mruset.h	/^		iterator begin() const { return set.begin(); }$/;"	f	class:mruset
birth	../stratum/stratum_task.c	/^  time_t birth;$/;"	m	struct:task_stat_t	file:
birth	../unet/unet_peerdb.c	/^  uint32_t birth;$/;"	m	struct:peerdb_t	file:
bit	../proto/coin_proto.h	/^  int bit;$/;"	m	struct:BIP9Deployment
blk_diff	../proto/coin_proto.h	/^  double blk_diff; \/* next block difficulty *\/$/;"	m	struct:coin_iface_t
blk_stamp	../stratum/stratum.h	/^  time_t blk_stamp[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
blkidx_t	../server/block.h	/^typedef std::map<uint256, CBlockIndex*> blkidx_t;$/;"	t
blockHeight	../server/txfeerate.h	/^        unsigned int blockHeight;$/;"	m	struct:CBlockPolicyEstimator::TxStatsInfo
blockSinceLastRollingFeeBump	../server/txfeerate.h	/^    mutable bool blockSinceLastRollingFeeBump;$/;"	m	class:CBlockPolicyEstimator
block_acc	../stratum/stratum.h	/^  int block_acc;$/;"	m	struct:user_t
block_avg	../stratum/stratum.h	/^  double block_avg[MAX_ROUNDS_PER_HOUR];$/;"	m	struct:user_t
block_besthash	../proto/coin_proto.h	/^  bc_hash_t block_besthash; \/* best block hash *\/$/;"	m	struct:coin_iface_t
block_close	../shcoind_block.c	/^void block_close(void)$/;"	f
block_cnt	../stratum/stratum.h	/^  size_t block_cnt;$/;"	m	struct:user_t
block_freq	../stratum/stratum.h	/^  double block_freq;$/;"	m	struct:user_t
block_fs	../shcoind_block.c	/^shfs_t *block_fs;$/;"	v
block_hash	../stratum/stratum.h	/^  char block_hash[256];$/;"	m	struct:user_t
block_height	../stratum/stratum.h	/^  uint64_t block_height;$/;"	m	struct:user_t
block_init	../shcoind_block.c	/^void block_init(void)$/;"	f
block_load	../shcoind_block.c	/^char *block_load(int block_height)$/;"	f
block_save	../shcoind_block.c	/^int block_save(int block_height, const char *json_str)$/;"	f
block_tm	../stratum/stratum.h	/^  double block_tm;$/;"	m	struct:user_t
block_tot	../stratum/stratum.h	/^  double block_tot;$/;"	m	struct:user_t
block_ver	../proto/coin_proto.h	/^  int block_ver;$/;"	m	struct:coin_iface_t
blockhash	../server/block_cmpct.h	/^		uint256 blockhash;$/;"	m	class:BlockTransactions
blockhash	../server/block_cmpct.h	/^		uint256 blockhash;$/;"	m	class:BlockTransactionsRequest
blockscan_max	../proto/coin_proto.h	/^  uint32_t blockscan_max;$/;"	m	struct:coin_iface_t
bloomflags	../server/net.h	/^enum bloomflags$/;"	g
bnBestChainWork	../server/wallet.h	/^		CBigNum bnBestChainWork;$/;"	m	class:CWallet
bnChainWork	../server/block.h	/^    CBigNum bnChainWork;$/;"	m	class:CBlockIndex
bucketIndex	../server/txfeerate.h	/^        unsigned int bucketIndex;$/;"	m	struct:CBlockPolicyEstimator::TxStatsInfo
bucketMap	../server/txfeerate.h	/^    std::map<double, unsigned int> bucketMap; \/\/ Map of bucket upper-bound to index into all vectors by bucket$/;"	m	class:TxConfirmStats
buckets	../server/txfeerate.h	/^    std::vector<double> buckets;              \/\/ The upper-bound of the range for the bucket (inclusive)$/;"	m	class:TxConfirmStats
buff	../stratum/stratum_http.h	/^	shbuf_t *buff;$/;"	m	struct:httpreq_t
buffer	../test/CuTest.h	/^	char* buffer;$/;"	m	struct:__anon9
caches	../server/versionbits.h	/^    ThresholdConditionCache caches[MAX_VERSION_BITS_DEPLOYMENTS];$/;"	m	struct:VersionBitsCache
cb1	../stratum/stratum.h	/^  char cb1[1024];$/;"	m	struct:task_t
cb2	../stratum/stratum.h	/^  char cb2[1024];$/;"	m	struct:task_t
cbuff	../shcoind.h	/^typedef std::vector<unsigned char> cbuff;$/;"	t
certificate	../server/block.h	/^    CCert certificate;$/;"	m	class:CTransaction
chIV	../server/crypter.h	/^    unsigned char chIV[WALLET_CRYPTO_KEY_SIZE];$/;"	m	class:CCrypter
chKey	../server/crypter.h	/^    unsigned char chKey[WALLET_CRYPTO_KEY_SIZE];$/;"	m	class:CCrypter
chaincode	../server/dikey.h	/^	ChainCode chaincode;$/;"	m	struct:DIExtKey
chaincode	../server/dikey.h	/^	ChainCode chaincode;$/;"	m	struct:DIExtPubKey
chaincode	../server/eckey.h	/^	ChainCode chaincode;$/;"	m	struct:ECExtKey
chaincode	../server/eckey.h	/^	ChainCode chaincode;$/;"	m	struct:ECExtPubKey
changePubKey	../server/txcreator.h	/^    CPubKey changePubKey;$/;"	m	class:CTxCreator
change_core_directory	../shcoind_svc.c	/^static void change_core_directory(void) $/;"	f	file:
check_payout	../stratum/stratum_task.c	/^static void check_payout(int ifaceIndex)$/;"	f	file:
checkpoints	../server/wallet.h	/^		CCheckpoints *checkpoints;$/;"	m	class:CWallet
cli_id	../stratum/stratum.h	/^  char cli_id[256];$/;"	m	struct:user_t
cli_ver	../stratum/stratum.h	/^  char cli_ver[128];$/;"	m	struct:user_t
client_list	../shcoind_daemon.c	/^user_t *client_list;$/;"	v
client_list	../test/test_shcoind.c	/^user_t *client_list;$/;"	v
client_ver	../proto/coin_proto.h	/^  int client_ver;$/;"	m	struct:coin_iface_t
cmd	../proto/coin_proto.h	/^  char cmd[12];$/;"	m	struct:coinhdr_t
code	../shcoind_error.h	/^	int code;$/;"	m	struct:err_code_t
coin_f	../proto/coin_proto.h	/^typedef int (*coin_f)(struct coin_iface_t * \/*iface*\/, void * \/* arg *\/);$/;"	t
coin_iface_t	../proto/coin_proto.h	/^typedef struct coin_iface_t$/;"	s
coin_iface_t	../proto/coin_proto.h	/^} coin_iface_t;$/;"	t	typeref:struct:coin_iface_t
coin_set	../server/txcreator.h	/^typedef set<pair<CWalletTx *,unsigned int> > coin_set;$/;"	t
coin_stat_t	../proto/coin_proto.h	/^  struct coin_stat_t {$/;"	s	struct:coin_iface_t
coinbase_maturity	../proto/coin_proto.h	/^  uint64_t coinbase_maturity;$/;"	m	struct:coin_iface_t
coinhdr_t	../proto/coin_proto.h	/^typedef struct coinhdr_t$/;"	s
coinhdr_t	../proto/coin_proto.h	/^} coinhdr_t;$/;"	t	typeref:struct:coinhdr_t
color_opt	../server/wallet.h	/^typedef map<int, int> color_opt;$/;"	t
commit_payout	../stratum/stratum_task.c	/^static void commit_payout(int ifaceIndex, int block_height)$/;"	f	file:
commit_stamp	../stratum/stratum.h	/^  time_t commit_stamp[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
confAvg	../server/txfeerate.h	/^    std::vector<std::vector<double> > confAvg; \/\/ confAvg[Y][X]$/;"	m	class:TxConfirmStats
const_iterator	../server/mruset.h	/^		typedef typename std::set<T>::const_iterator const_iterator;$/;"	t	class:mruset
count	../server/mruset.h	/^		size_type count(const key_type& k) const { return set.count(k); }$/;"	f	class:mruset
count	../test/CuTest.h	/^	int count;$/;"	m	struct:__anon10
crc	../blockchain/bc.h	/^  uint32_t crc;$/;"	m	struct:bc_idx_t
crc	../proto/coin_proto.h	/^  uint32_t crc;$/;"	m	struct:coinhdr_t
create_uevent_connect_peer	../unet/unet_event.c	/^uevent_t *create_uevent_connect_peer(int umode, shpeer_t *peer)$/;"	f
create_uevent_verify_peer	../unet/unet_event.c	/^uevent_t *create_uevent_verify_peer(int umode, shpeer_t *peer)$/;"	f
cs	../server/txmempool.h	/^    mutable CCriticalSection cs;$/;"	m	class:CPool
cs_KeyStore	../server/keystore.h	/^    mutable CCriticalSection cs_KeyStore;$/;"	m	class:CKeyStore
cs_db	../server/txidx.h	/^    mutable CCriticalSection cs_db;$/;"	m	class:CDBEnv
cs_filter	../server/net.h	/^    CCriticalSection cs_filter;$/;"	m	class:CNode
cs_inventory	../server/net.h	/^    CCriticalSection cs_inventory;$/;"	m	class:CNode
cs_mapRequests	../server/net.h	/^    CCriticalSection cs_mapRequests;$/;"	m	class:CNode
cs_setBanned	../server/net.h	/^    static CCriticalSection cs_setBanned;$/;"	m	class:CNode
cs_vRecv	../server/net.h	/^    CCriticalSection cs_vRecv;$/;"	m	class:CNode
cs_vSend	../server/net.h	/^    CCriticalSection cs_vSend;$/;"	m	class:CNode
cs_wallet	../server/wallet.h	/^		mutable CCriticalSection cs_wallet;$/;"	m	class:CWallet
cstack_t	../shcoind.h	/^typedef std::vector<cbuff> cstack_t;$/;"	t
cstamp	../shcoind_descriptor.h	/^  shtime_t cstamp;$/;"	m	struct:desc_t
ctype_digit	../stratum/stratum_http.c	/^static int ctype_digit(const char *str)$/;"	f	file:
curBlockConf	../server/txfeerate.h	/^    std::vector<std::vector<int> > curBlockConf; \/\/ curBlockConf[Y][X]$/;"	m	class:TxConfirmStats
curBlockTxCt	../server/txfeerate.h	/^    std::vector<int> curBlockTxCt;$/;"	m	class:TxConfirmStats
curBlockVal	../server/txfeerate.h	/^    std::vector<double> curBlockVal;$/;"	m	class:TxConfirmStats
cur_id	../shapi/shapi.h	/^	char cur_id[256];$/;"	m	struct:shapi_t
cur_id	../stratum/stratum.h	/^  char cur_id[256];$/;"	m	struct:user_t
curtime	../stratum/stratum.h	/^  time_t curtime;$/;"	m	struct:task_t
dFeePriority	../server/txmempool.h	/^    double dFeePriority;$/;"	m	class:CPoolTx
dPriority	../server/txmempool.h	/^    double dPriority;$/;"	m	class:CPoolTx
daemon_close_clients	../shcoind_daemon.c	/^void daemon_close_clients(void)$/;"	f
daemon_server	../shcoind_daemon.c	/^void daemon_server(void)$/;"	f
data	../unet/unet.h	/^  void *data;$/;"	m	struct:uevent_t
dataTypeString	../server/txfeerate.h	/^    std::string dataTypeString;$/;"	m	class:TxConfirmStats
data_key	../blockchain/bc.h	/^  shkey_t data_key;$/;"	m	struct:bc_t
data_map	../blockchain/bc.h	/^  bc_map_t *data_map;$/;"	m	struct:bc_t
data_map_len	../blockchain/bc.h	/^  size_t data_map_len;$/;"	m	struct:bc_t
dbenv	../server/txidx.h	/^    DbEnv dbenv;$/;"	m	class:CDBEnv
decay	../server/txfeerate.h	/^    double decay;$/;"	m	class:TxConfirmStats
def_max_block_size	../proto/coin_proto.h	/^  uint64_t def_max_block_size;$/;"	m	struct:coin_iface_t
def_min_relay_fee	../proto/coin_proto.h	/^  uint64_t def_min_relay_fee;$/;"	m	struct:coin_iface_t
depth	../server/hdkey.h	/^    unsigned int depth;$/;"	m	class:HDPrivKey
depth	../server/hdkey.h	/^    unsigned int depth;$/;"	m	class:HDPubKey
desc_t	../shcoind_descriptor.h	/^struct desc_t {$/;"	s
desc_t	../shcoind_descriptor.h	/^typedef struct desc_t desc_t;$/;"	t	typeref:struct:desc_t
descriptor_claim	../shcoind_descriptor.c	/^desc_t *descriptor_claim(int fd, int mode, int flag)$/;"	f
descriptor_flag_str	../shcoind_descriptor.c	/^const char *descriptor_flag_str(int flag)$/;"	f
descriptor_get	../shcoind_descriptor.c	/^desc_t *descriptor_get(int fd)$/;"	f
descriptor_iface_name	../shcoind_descriptor.c	/^const char *descriptor_iface_name(int ifaceIndex)$/;"	f
descriptor_list_print	../shcoind_descriptor.c	/^void descriptor_list_print(void)$/;"	f
descriptor_mark	../shcoind_descriptor.c	/^desc_t *descriptor_mark(int fd)$/;"	f
descriptor_print	../shcoind_descriptor.c	/^const char *descriptor_print(int fd)$/;"	f
descriptor_rbuff	../shcoind_descriptor.c	/^shbuf_t *descriptor_rbuff(int fd)$/;"	f
descriptor_rbuff_add	../shcoind_descriptor.c	/^void descriptor_rbuff_add(int fd, unsigned char *data, ssize_t data_len)$/;"	f
descriptor_release	../shcoind_descriptor.c	/^void descriptor_release(int fd)$/;"	f
descriptor_wbuff	../shcoind_descriptor.c	/^shbuf_t *descriptor_wbuff(int fd)$/;"	f
descriptor_wbuff_add	../shcoind_descriptor.c	/^void descriptor_wbuff_add(int fd, unsigned char *data, ssize_t data_len)$/;"	f
dispatchTable	../shcoind_svc.c	/^static SERVICE_TABLE_ENTRY	dispatchTable[] =$/;"	v	file:
dwSrvState	../shcoind_svc.c	/^static DWORD			dwSrvState = SERVICE_START_PENDING;$/;"	v	file:
emc2_seed_list	../unet/unet_seed.h	/^static char *emc2_seed_list[EMC2_SEED_LIST_SIZE] = {$/;"	v
empty	../server/mruset.h	/^		bool empty() const { return set.empty(); }$/;"	f	class:mruset
enabled	../proto/coin_proto.h	/^  int enabled;$/;"	m	struct:coin_iface_t
end	../server/key.h	/^		const unsigned char* end() const { return vch.data() + size(); }$/;"	f	class:CKey
end	../server/key.h	/^		const unsigned char* end() const { return vchPubKey.data() + size(); }$/;"	f	class:CPubKey
end	../server/mruset.h	/^		iterator end() const { return set.end(); }$/;"	f	class:mruset
err_code_t	../shcoind_error.h	/^typedef struct err_code_t$/;"	s
err_code_t	../shcoind_error.h	/^} err_code_t;$/;"	t	typeref:struct:err_code_t
errbuf	../stratum/stratum_sync.c	/^static char errbuf[1024];$/;"	v	file:
error_code	../shcoind_error.c	/^int error_code(int sys_code)$/;"	f
error_str	../shcoind_error.c	/^const char *error_str(int code)$/;"	f
event_table	../unet/unet_event.c	/^static uevent_t event_table[UNET_MAX_EVENTS];$/;"	v	file:
exec	../server/block.h	/^		CExecCore exec;$/;"	m	class:CTransaction
exists	../server/txmempool.h	/^    bool exists(uint256 hash)$/;"	f	class:CTxMemPool
ext	../blockchain/bc.h	/^  char ext[64];$/;"	m	struct:bc_map_t
external_local_discover_html	../unet/unet_local.c	/^static int external_local_discover_html(char *serv_hostname, struct in_addr *net_addr)$/;"	f	file:
external_local_discover_raw	../unet/unet_local.c	/^static int external_local_discover_raw(char *serv_hostname, struct in_addr *net_addr)$/;"	f	file:
extra_count	../server/block_cmpct.h	/^		size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;$/;"	m	class:PartiallyDownloadedBlock
fAccount	../server/txcreator.h	/^    bool fAccount;$/;"	m	class:CTxCreator
fAutoLock	../server/txcreator.h	/^		bool fAutoLock;$/;"	m	class:CTxCreator
fAutoParam	../server/txcreator.h	/^		bool fAutoParam;$/;"	m	class:CTxCreator
fAvailableCreditCached	../server/wallet.h	/^		mutable bool fAvailableCreditCached;$/;"	m	class:CWalletTx
fBad	../server/bloom.h	/^    bool fBad;$/;"	m	class:CPartialMerkleTree
fChangeCached	../server/wallet.h	/^		mutable bool fChangeCached;$/;"	m	class:CWalletTx
fClient	../server/net.h	/^    bool fClient;$/;"	m	class:CNode
fCompressedPubKey	../server/key.h	/^    bool fCompressedPubKey;$/;"	m	class:CKey
fCreditCached	../server/wallet.h	/^		mutable bool fCreditCached;$/;"	m	class:CWalletTx
fDbEnvInit	../server/txidx.h	/^    bool fDbEnvInit;$/;"	m	class:CDBEnv
fDebitCached	../server/wallet.h	/^		mutable bool fDebitCached;$/;"	m	class:CWalletTx
fDetachDB	../server/txidx.h	/^    bool fDetachDB;$/;"	m	class:CDBEnv
fDisconnect	../server/net.h	/^    bool fDisconnect;$/;"	m	class:CNode
fFromMe	../server/wallet.h	/^		char fFromMe;$/;"	m	class:CWalletTx
fGenerate	../server/txcreator.h	/^    bool fGenerate;$/;"	m	class:CTxCreator
fGetAddr	../server/net.h	/^    bool fGetAddr;$/;"	m	class:CNode
fHaveUPnP	../server/main.h	/^static const int fHaveUPnP = false;$/;"	v
fHaveUPnP	../server/main.h	/^static const int fHaveUPnP = true;$/;"	v
fHaveWitness	../server/net.h	/^    bool fHaveWitness;$/;"	m	class:CNode
fInbound	../server/net.h	/^    bool fInbound;$/;"	m	class:CNode
fInbound	../server/net.h	/^    bool fInbound;$/;"	m	class:CNodeStats
fKeySet	../server/crypter.h	/^    bool fKeySet;$/;"	m	class:CCrypter
fLocal	../server/txmempool.h	/^    bool fLocal;$/;"	m	class:CPoolTx
fMerkleVerified	../server/main.h	/^    mutable bool fMerkleVerified;$/;"	m	class:CMerkleTx
fNetDebug	../server/net.h	/^		bool fNetDebug;$/;"	m	class:CNode
fNetworkNode	../server/net.h	/^    bool fNetworkNode;$/;"	m	class:CNode
fPreferHeaders	../server/net.h	/^    bool fPreferHeaders;$/;"	m	class:CNode
fPubSet	../server/key.h	/^    bool fPubSet;$/;"	m	class:CKey
fReadOnly	../server/txidx.h	/^    bool fReadOnly;$/;"	m	class:CDB
fRelayTxes	../server/net.h	/^    bool fRelayTxes;$/;"	m	class:CNode
fSuccessfullyConnected	../server/net.h	/^    bool fSuccessfullyConnected;$/;"	m	class:CNode
fWitness	../server/txcreator.h	/^    bool fWitness;$/;"	m	class:CTxCreator
f_blurb	../stratum/stratum_http.h	/^	http_f f_blurb;$/;"	m	struct:http_t
f_content	../stratum/stratum_http.h	/^	http_f f_content;$/;"	m	struct:http_t
f_shcoind_log	../shcoind_log.c	/^void f_shcoind_log(int err_code, const char *tag, const char *text, const char *src_fname, long src_line)$/;"	f
f_shcoind_log_net	../shcoind_log.c	/^void f_shcoind_log_net(const char *iface, const char *addr, const char *tag, size_t size, const char *src_fname, long src_line)$/;"	f
failCount	../test/CuTest.h	/^	int failCount;$/;"	m	struct:__anon10
failed	../test/CuTest.h	/^	int failed;$/;"	m	struct:CuTest
fd	../blockchain/bc.h	/^  volatile int fd;$/;"	m	struct:bc_map_t
fd	../shapi/shapi.h	/^	int fd;$/;"	m	struct:shapi_t
fd	../stratum/stratum.h	/^  int fd;$/;"	m	struct:user_t
fd	../unet/unet.h	/^  int fd;$/;"	m	struct:uevent_t
fd	../unet/unet.h	/^  int fd;$/;"	m	struct:unet_bind_t
feeLikely	../server/txfeerate.h	/^    CFeeRate feeLikely, feeUnlikely;$/;"	m	class:CBlockPolicyEstimator
feeStats	../server/txfeerate.h	/^    TxConfirmStats feeStats, priStats;$/;"	m	class:CBlockPolicyEstimator
feeUnlikely	../server/txfeerate.h	/^    CFeeRate feeLikely, feeUnlikely;$/;"	m	class:CBlockPolicyEstimator
feeset	../server/txfeerate.h	/^    std::set<double> feeset;$/;"	m	class:FeeFilterRounder
find	../server/mruset.h	/^		iterator find(const key_type& k) const { return set.find(k); }$/;"	f	class:mruset
fl_timer	../unet/unet.h	/^	int fl_timer;$/;"	m	struct:unet_bind_t
flag	../shcoind_descriptor.h	/^  int flag;$/;"	m	struct:desc_t
flag	../stratum/stratum_http.h	/^	int flag;$/;"	m	struct:http_t
flag	../stratum/stratum_http.h	/^	int flag;$/;"	m	struct:httpreq_t
flag	../unet/unet.h	/^  int flag;$/;"	m	struct:uevent_t
flag	../unet/unet.h	/^  int flag;$/;"	m	struct:unet_bind_t
flags	../proto/coin_proto.h	/^  int flags;$/;"	m	struct:coin_iface_t
flags	../server/txmempool.h	/^    int flags;$/;"	m	class:CPoolTx
flags	../stratum/stratum.h	/^  int flags;$/;"	m	struct:task_attr_t
flags	../stratum/stratum.h	/^  int flags;$/;"	m	struct:user_t
fn	../server/net.h	/^    void (*fn)(void*, CDataStream&);$/;"	m	class:CRequestTracker
func	../stratum/stratum_command.c	/^	stratum_command_f func;$/;"	m	struct:stratum_command_t	file:
function	../test/CuTest.h	/^	TestFunction function;$/;"	m	struct:CuTest
gbt_force	../server/versionbits.h	/^    bool gbt_force;$/;"	m	struct:BIP9DeploymentInfo
getInputCount	../server/txcreator.h	/^		int getInputCount()$/;"	f	class:CTxCreator
get_avg_balance	../stratum/stratum_http.c	/^static double get_avg_balance(int ifaceIndex)$/;"	f	file:
get_max_descriptors	../shcoind_descriptor.c	/^int get_max_descriptors(void)$/;"	f
get_rpc_cred	../shcoind_rpc.c	/^void get_rpc_cred(char *username, char *password)$/;"	f
get_rpc_dat_password	../shcoind_rpc.c	/^shkey_t *get_rpc_dat_password(char *host)$/;"	f
get_rpc_password	../shcoind_rpc.c	/^const char *get_rpc_password(char *host)$/;"	f
get_rpc_pin	../shcoind_rpc.c	/^uint32_t get_rpc_pin(char *host)$/;"	f
get_rpc_service_host	../shcoind_rpc.c	/^const char *get_rpc_service_host(void)$/;"	f
get_rpc_service_port	../shcoind_rpc.c	/^int get_rpc_service_port(void)$/;"	f
get_rpc_username	../shcoind_rpc.c	/^const char *get_rpc_username(void)$/;"	f
get_shapi_host	../shapi/shapi.c	/^char *get_shapi_host(void)$/;"	f
get_shapi_port	../shapi/shapi.c	/^int get_shapi_port(void)$/;"	f
get_shioncoin_path	../shcoind_opt.c	/^const char *get_shioncoin_path(void)$/;"	f
get_stratum_port	../stratum/stratum.c	/^int get_stratum_port(int alg)$/;"	f
get_total_descriptor_claimed	../shcoind_descriptor.c	/^int get_total_descriptor_claimed()$/;"	f
get_unet_table	../unet/unet_accept.c	/^unet_table_t *get_unet_table(unsigned int sk)$/;"	f
get_user_flag_label	../stratum/stratum_user.c	/^const char *get_user_flag_label(int flag)$/;"	f
getint	../server/script.h	/^    int getint() const$/;"	f	class:CScriptNum
getminingroundsinfo	../stratum/stratum_protocol.c	/^shjson_t *getminingroundsinfo(void)$/;"	f
getpagesize	../blockchain/bc.h	43;"	d
getvch	../server/script.h	/^    std::vector<unsigned char> getvch() const$/;"	f	class:CScriptNum
grantOutbound	../server/net.h	/^    CSemaphoreGrant grantOutbound;$/;"	m	class:CNode
h	../stratum/stratum_http.h	/^	http_t *h;$/;"	m	struct:httpreq_t
hCert	../server/wallet.h	/^		uint160 hCert;$/;"	m	class:CAccount
hColor	../server/block.h	/^		uint160 hColor;$/;"	m	class:CBlock
hColor	../server/txmempool.h	/^		uint160 hColor;$/;"	m	class:CPoolTx
hColor	../server/wallet.h	/^		uint160 hColor; \/* COLOR_COIN_IFACE *\/$/;"	m	class:CWalletTx
hNotaryBlock	../server/checkpoints.h	/^		uint256 hNotaryBlock;$/;"	m	class:CCheckpoints
hNotaryHeight	../server/checkpoints.h	/^		uint32_t hNotaryHeight;$/;"	m	class:CCheckpoints
hRef	../server/matrix.h	/^		uint160 hRef;$/;"	m	class:CTxMatrix
hSocket	../server/net.h	/^    unsigned int hSocket;$/;"	m	class:CNode
hash	../blockchain/bc.h	/^  bc_hash_t hash;$/;"	m	struct:bc_idx_t
hash	../server/block.h	/^    uint256 hash;$/;"	m	class:COutPoint
hash	../server/net.h	/^		uint256 hash;$/;"	m	class:CValidateState
hash	../server/txmempool.h	/^    uint256 hash;$/;"	m	class:CPoolTx
hashBlock	../server/block.h	/^    mutable uint256 hashBlock;$/;"	m	class:CDiskTxPos
hashBlock	../server/main.h	/^    uint256 hashBlock;$/;"	m	class:CMerkleTx
hashContinue	../server/net.h	/^    uint256 hashContinue;$/;"	m	class:CNode
hashLastGetBlocksEnd	../server/net.h	/^    uint256 hashLastGetBlocksEnd;$/;"	m	class:CNode
hashLastUnknownBlock	../server/net.h	/^		uint256 hashLastUnknownBlock;$/;"	m	class:CNode
hashMerkleRoot	../server/block.h	/^    uint256 hashMerkleRoot;$/;"	m	class:CBlockHeader
hashMerkleRoot	../server/block.h	/^    uint256 hashMerkleRoot;$/;"	m	class:CBlockIndex
hashNext	../server/block.h	/^    uint256 hashNext;$/;"	m	class:CDiskBlockIndex
hashPrev	../server/block.h	/^    uint256 hashPrev;$/;"	m	class:CDiskBlockIndex
hashPrevBlock	../server/block.h	/^    uint256 hashPrevBlock;$/;"	m	class:CBlockHeader
hashTx	../server/block.h	/^    mutable uint256 hashTx;$/;"	m	class:CDiskTxPos
hdKeypath	../server/key.h	/^		std::string hdKeypath; \/\/optional HD\/bip32 keypath$/;"	m	class:CKeyMetadata
hdMasterKeyID	../server/key.h	/^		CKeyID hdMasterKeyID; \/\/id of the HD masterkey used to derive this key$/;"	m	class:CKeyMetadata
hd_master_secret	../shcoind_rpc.c	/^unsigned char *hd_master_secret(void)$/;"	f
hdr	../blockchain/bc.h	/^  bc_hdr_t *hdr;$/;"	m	struct:bc_map_t
hdr_magic	../proto/coin_proto.h	/^  unsigned char hdr_magic[4];$/;"	m	struct:coin_iface_t
header	../server/block_cmpct.h	/^		CBlockHeader header;$/;"	m	class:CBlockHeaderAndShortTxIDs
header	../server/block_cmpct.h	/^		CBlockHeader header;$/;"	m	class:PartiallyDownloadedBlock
header	../server/bloom.h	/^    CBlockHeader header;$/;"	m	class:CMerkleBlock
height	../stratum/stratum.h	/^  int height;$/;"	m	struct:user_t
height	../stratum/stratum.h	/^  long height;$/;"	m	struct:task_t
http_f	../stratum/stratum_http.h	/^typedef void (*http_f)(struct httpreq_t *);$/;"	t
http_t	../stratum/stratum_http.h	/^typedef struct http_t {$/;"	s
http_t	../stratum/stratum_http.h	/^} http_t;$/;"	t	typeref:struct:http_t
http_table	../stratum/stratum_http.c	/^http_t http_table[] = {$/;"	v
httpreq_t	../stratum/stratum_http.h	/^typedef struct httpreq_t {$/;"	s
httpreq_t	../stratum/stratum_http.h	/^} httpreq_t;$/;"	t	typeref:struct:httpreq_t
i	../server/wallet.h	/^		int i;$/;"	m	class:COutput
idx_map	../blockchain/bc.h	/^  bc_map_t idx_map;$/;"	m	struct:bc_t
ifaceIndex	../server/block.h	/^    mutable int ifaceIndex;$/;"	m	class:CBlockHeader
ifaceIndex	../server/chain.h	/^  int ifaceIndex;$/;"	m	struct:ChainOp
ifaceIndex	../server/checkpoints.h	/^		int ifaceIndex;$/;"	m	class:CCheckpoints
ifaceIndex	../server/coinaddr.h	/^    int ifaceIndex;$/;"	m	class:CCoinAddr
ifaceIndex	../server/net.h	/^		int ifaceIndex;$/;"	m	class:CValidateState
ifaceIndex	../server/net.h	/^    int ifaceIndex;$/;"	m	class:CBloomFilter
ifaceIndex	../server/net.h	/^    mutable int ifaceIndex;$/;"	m	class:CNode
ifaceIndex	../server/txfeerate.h	/^    int ifaceIndex;$/;"	m	class:CBlockPolicyEstimator
ifaceIndex	../server/txidx.h	/^    mutable int ifaceIndex;$/;"	m	class:CTxDB
ifaceIndex	../server/txmempool.h	/^    int ifaceIndex;$/;"	m	class:CPool
ifaceIndex	../server/txsignature.h	/^		int ifaceIndex;$/;"	m	class:CSignature
ifaceIndex	../server/wallet.h	/^		int ifaceIndex;$/;"	m	class:CWallet
ifaceIndex	../stratum/stratum.h	/^  int ifaceIndex;$/;"	m	struct:task_attr_t
ifaceIndex	../stratum/stratum.h	/^  int ifaceIndex;$/;"	m	struct:task_t
ifaceIndex	../stratum/stratum.h	/^  int ifaceIndex;$/;"	m	struct:user_t
index	../server/block_cmpct.h	/^	uint16_t index;$/;"	m	struct:PrefilledTransaction
index	../server/hdkey.h	/^    unsigned int index;$/;"	m	class:HDPrivKey
index	../server/hdkey.h	/^    unsigned int index;$/;"	m	class:HDPubKey
indexes	../server/block_cmpct.h	/^		std::vector<uint16_t> indexes;$/;"	m	class:BlockTransactionsRequest
insert	../server/mruset.h	/^		std::pair<iterator, bool> insert(const key_type& x)$/;"	f	class:mruset
int64	../proto/types.h	/^typedef long long  int64;$/;"	t
int64	../shcoind.h	/^typedef long long int64;$/;"	t
inval	../server/txmempool.h	/^    set<uint256> inval;$/;"	m	class:CPool
ipaddr_index	../unet/unet_local.c	/^static int ipaddr_index;$/;"	v	file:
ipaddr_table	../unet/unet_local.c	/^static char *ipaddr_table[MAX_IPADDR_TABLE_SIZE];$/;"	v	file:
isAutoLock	../server/txcreator.h	/^		bool isAutoLock()$/;"	f	class:CTxCreator
isAutoParam	../server/txcreator.h	/^		bool isAutoParam()$/;"	f	class:CTxCreator
isEmpty	../server/net.h	/^    bool isEmpty;$/;"	m	class:CBloomFilter
isFlag	../server/block.h	/^    bool isFlag(unsigned int flag) const$/;"	f	class:CTransactionCore
isFull	../server/net.h	/^    bool isFull;$/;"	m	class:CBloomFilter
isLocal	../server/txmempool.h	/^    bool isLocal()$/;"	f	class:CPoolTx
is_spring_loc	../server/spring.c	/^int is_spring_loc(double lat, double lon)$/;"	f
is_stratum_blake2s_task_pending	../stratum/stratum_blake2s.c	/^static int is_stratum_blake2s_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_groestl_task_pending	../stratum/stratum_groestl.c	/^static int is_stratum_groestl_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_keccak_task_pending	../stratum/stratum_keccak.c	/^static int is_stratum_keccak_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_qubit_task_pending	../stratum/stratum_qubit.c	/^static int is_stratum_qubit_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_sha256d_task_pending	../stratum/stratum_sha256d.c	/^static int is_stratum_sha256d_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_skein_task_pending	../stratum/stratum_skein.c	/^static int is_stratum_skein_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_task_pending	../stratum/stratum_task.c	/^int is_stratum_task_pending(int *ret_iface)$/;"	f
is_stratum_x11_task_pending	../stratum/stratum_x11.c	/^static int is_stratum_x11_task_pending(int *ret_iface)$/;"	f	file:
iterator	../server/mruset.h	/^		typedef typename std::set<T>::iterator iterator;$/;"	t	class:mruset
jrnl	../blockchain/bc.h	/^  uint32_t jrnl;$/;"	m	struct:bc_idx_t
jumpBuf	../test/CuTest.h	/^	jmp_buf *jumpBuf;$/;"	m	struct:CuTest
key	../server/dikey.h	/^	DIKey key;$/;"	m	struct:DIExtKey
key	../server/eckey.h	/^	ECKey key;$/;"	m	struct:ECExtKey
key_error	../server/key.h	/^    explicit key_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:key_error
key_error	../server/key.h	/^class key_error : public std::runtime_error$/;"	c
key_type	../server/mruset.h	/^		typedef T key_type;$/;"	t	class:mruset
label	../shcoind_error.h	/^	const char *label;$/;"	m	struct:err_code_t
lastRollingFeeUpdate	../server/txfeerate.h	/^    mutable int64_t lastRollingFeeUpdate;$/;"	m	class:CBlockPolicyEstimator
last_block_height	../stratum/stratum_task.c	/^static uint64_t last_block_height[MAX_COIN_IFACE];$/;"	v	file:
last_payout_hash	../stratum/stratum_task.c	/^static char last_payout_hash[MAX_COIN_IFACE][256];$/;"	v	file:
lat	../server/spring.c	/^  shnum_t lat;$/;"	m	struct:spring_bits	file:
lat1	../server/spring.c	/^  unsigned int lat1, lat2;$/;"	m	struct:spring_bits	file:
lat2	../server/spring.c	/^  unsigned int lat1, lat2;$/;"	m	struct:spring_bits	file:
length	../server/script.h	/^	unsigned int length;$/;"	m	struct:WitnessUnknown
length	../test/CuTest.h	/^	int length;$/;"	m	struct:__anon9
list	../test/CuTest.h	/^	CuTest* list[MAX_TEST_CASES];$/;"	m	struct:__anon10
lk	../blockchain/bc.h	/^	bclock_t lk;$/;"	m	struct:bc_t
lon	../server/spring.c	/^  shnum_t lon;$/;"	m	struct:spring_bits	file:
lon1	../server/spring.c	/^  unsigned int lon1, lon2;$/;"	m	struct:spring_bits	file:
lon2	../server/spring.c	/^  unsigned int lon1, lon2;$/;"	m	struct:spring_bits	file:
lookup	../server/txmempool.h	/^    CTransaction& lookup(uint256 hash)$/;"	f	class:CTxMemPool
m_value	../server/script.h	/^    int64_t m_value;$/;"	m	class:CScriptNum
magic	../blockchain/bc.h	/^  uint32_t magic;$/;"	m	struct:bc_hdr_t
magic	../proto/coin_proto.h	/^  unsigned char magic[4];$/;"	m	struct:coinhdr_t
main	../shcoind.c	/^int main(int argc, char *argv[])$/;"	f
main	../shcoind_svc.c	/^int main(int argc, char **argv, char **envp)$/;"	f
main	../test/test_shcoind.c	/^int main(int argc, char *argv[])$/;"	f
mapAddrCache	../server/wallet.h	/^		map<string, CAccountCache *> mapAddrCache;$/;"	m	class:CWallet
mapAddressBook	../server/wallet.h	/^		std::map<CTxDestination, std::string> mapAddressBook;$/;"	m	class:CWallet
mapAlias	../server/wallet.h	/^		mutable std::map<std::string, uint256> mapAlias;$/;"	m	class:CWallet
mapAliasArch	../server/wallet.h	/^		mutable std::map<uint256, std::string> mapAliasArch;$/;"	m	class:CWallet
mapAskFor	../server/net.h	/^    std::multimap<int64, CInv> mapAskFor;$/;"	m	class:CNode
mapAsset	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapAsset;$/;"	m	class:CWallet
mapCert	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapCert;$/;"	m	class:CWallet
mapCertArch	../server/wallet.h	/^		mutable std::map<uint256, uint160> mapCertArch;$/;"	m	class:CWallet
mapCertLabel	../server/wallet.h	/^		mutable std::map<std::string, uint160> mapCertLabel;$/;"	m	class:CWallet
mapChannel	../server/wallet.h	/^		mutable std::map<uint160, CTransaction> mapChannel;$/;"	m	class:CWallet
mapChannelRedeem	../server/wallet.h	/^		mutable std::map<uint160, CTransaction> mapChannelRedeem;$/;"	m	class:CWallet
mapChannelSpent	../server/wallet.h	/^		mutable std::map<uint160, CTransaction> mapChannelSpent;$/;"	m	class:CWallet
mapCheckpoints	../server/checkpoints.h	/^		MapCheckpoints mapCheckpoints;$/;"	m	class:CCheckpoints
mapColor	../server/wallet.h	/^		std::map<uint160, uint256> mapColor;$/;"	m	class:CWallet
mapColorHead	../server/wallet.h	/^		std::map<uint256, uint160> mapColorHead;$/;"	m	class:CWallet
mapColorPool	../server/wallet.h	/^		std::map<uint160, uint256> mapColorPool;$/;"	m	class:CWallet
mapContext	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapContext;$/;"	m	class:CWallet
mapContextArch	../server/wallet.h	/^		mutable std::map<uint256, uint160> mapContextArch;$/;"	m	class:CWallet
mapDIKeys	../server/keystore.h	/^    DIKeyMap mapDIKeys;$/;"	m	class:CBasicKeyStore
mapDb	../server/txidx.h	/^    std::map<std::string, Db*> mapDb;$/;"	m	class:CDBEnv
mapECKeys	../server/keystore.h	/^    ECKeyMap mapECKeys;$/;"	m	class:CBasicKeyStore
mapExec	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapExec;$/;"	m	class:CWallet
mapExecCall	../server/wallet.h	/^		mutable std::map< uint160, vector<uint160> > mapExecCall;$/;"	m	class:CWallet
mapExecCallPending	../server/wallet.h	/^		mutable std::map< uint160, vector<uint160> > mapExecCallPending;$/;"	m	class:CWallet
mapExecCheckpoint	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapExecCheckpoint; $/;"	m	class:CWallet
mapExecLabel	../server/wallet.h	/^		mutable std::map<string, uint160> mapExecLabel;$/;"	m	class:CWallet
mapFileUseCount	../server/txidx.h	/^    std::map<std::string, int> mapFileUseCount;$/;"	m	class:CDBEnv
mapIdent	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapIdent;$/;"	m	class:CWallet
mapInputs	../server/txmempool.h	/^    tx_cache mapInputs;$/;"	m	class:CPoolTx
mapInputs	../server/txsignature.h	/^		tx_cache mapInputs;$/;"	m	class:CSignature
mapLicense	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapLicense;$/;"	m	class:CWallet
mapMemPoolTxs	../server/txfeerate.h	/^    std::map<uint256, TxStatsInfo> mapMemPoolTxs;$/;"	m	class:CBlockPolicyEstimator
mapNextTx	../server/txmempool.h	/^    std::map<COutPoint, CInPoint> mapNextTx;$/;"	m	class:CPoolTx
mapOffer	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOffer;$/;"	m	class:CWallet
mapOfferAccept	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferAccept;$/;"	m	class:CWallet
mapOfferAcceptArch	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferAcceptArch;$/;"	m	class:CWallet
mapOfferArch	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferArch;$/;"	m	class:CWallet
mapOfferGenerate	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferGenerate;$/;"	m	class:CWallet
mapParam	../server/wallet.h	/^		mutable std::vector<CParam> mapParam;$/;"	m	class:CWallet
mapParamArch	../server/wallet.h	/^		mutable std::vector<uint256> mapParamArch;$/;"	m	class:CWallet
mapRequestCount	../server/wallet.h	/^		std::map<uint256, int> mapRequestCount;$/;"	m	class:CWallet
mapRequests	../server/net.h	/^    std::map<uint256, CRequestTracker> mapRequests;$/;"	m	class:CNode
mapScripts	../server/keystore.h	/^    ScriptMap mapScripts;$/;"	m	class:CBasicKeyStore
mapValidateNotary	../server/wallet.h	/^		map<uint256, CPubKey> mapValidateNotary;$/;"	m	class:CWallet
mapValidateTx	../server/wallet.h	/^		vector<uint256> mapValidateTx;$/;"	m	class:CWallet
mapValue	../server/wallet.h	/^		std::map<std::string, std::string> mapValue;$/;"	m	class:CWalletTx
mapWallet	../server/wallet.h	/^		std::map<uint256, CWalletTx> mapWallet;$/;"	m	class:CWallet
mapWalletArch	../server/wallet.h	/^		std::map<uint256, CWalletTx> mapWalletArch;$/;"	m	class:CWallet
mapval_t	../server/wallet.h	/^typedef std::map<std::string, std::string> mapval_t;$/;"	t
masterKeyID	../server/wallet.h	/^		CKeyID masterKeyID; $/;"	m	class:CAccount
matrix	../server/block.h	/^    CTxMatrix matrix;$/;"	m	class:CTransaction
matrixValidate	../server/wallet.h	/^		CTxMatrix matrixValidate;$/;"	m	class:CWallet
max	../server/chain.h	/^  unsigned int max;$/;"	m	struct:ChainOp
max_block_size	../proto/coin_proto.h	/^  uint64_t max_block_size;$/;"	m	struct:coin_iface_t
max_free_tx_size	../proto/coin_proto.h	/^  uint64_t max_free_tx_size;$/;"	m	struct:coin_iface_t
max_money	../proto/coin_proto.h	/^  uint64_t max_money;$/;"	m	struct:coin_iface_t
max_orphan_tx	../proto/coin_proto.h	/^  uint64_t max_orphan_tx;$/;"	m	struct:coin_iface_t
max_script_element_size	../proto/coin_proto.h	/^	uint64_t max_script_element_size;$/;"	m	struct:coin_iface_t
max_script_size	../proto/coin_proto.h	/^	uint64_t max_script_size;$/;"	m	struct:coin_iface_t
max_sigops	../proto/coin_proto.h	/^  uint64_t max_sigops;$/;"	m	struct:coin_iface_t
max_size	../server/mruset.h	/^		size_type max_size() const { return nMaxSize; }$/;"	f	class:mruset
max_size	../server/mruset.h	/^		size_type max_size(size_type s)$/;"	f	class:mruset
max_tx_fee	../proto/coin_proto.h	/^  uint64_t max_tx_fee;$/;"	m	struct:coin_iface_t
max_tx_weight	../proto/coin_proto.h	/^  uint64_t max_tx_weight;$/;"	m	struct:coin_iface_t
mempool_count	../server/block_cmpct.h	/^		size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;$/;"	m	class:PartiallyDownloadedBlock
merge_idle_worker	../stratum/stratum_user.c	/^void merge_idle_worker(user_t *user)$/;"	f
merkle	../stratum/stratum.h	/^  char **merkle;$/;"	m	struct:task_t
merkle_len	../stratum/stratum.h	/^  size_t merkle_len;$/;"	m	struct:task_t
message	../test/CuTest.h	/^	const char* message;$/;"	m	struct:CuTest
method	../stratum/stratum_command.c	/^	const char *method;$/;"	m	struct:stratum_command_t	file:
mime	../stratum/stratum_http.h	/^	char *mime;$/;"	m	struct:http_t
minReasonableRelayFee	../server/txfeerate.h	/^    CFeeRate minReasonableRelayFee;$/;"	m	class:CBlockPolicyEstimator
minTrackedFee	../server/txfeerate.h	/^    CFeeRate minTrackedFee;    \/\/!< Passed to constructor to avoid dependency on main$/;"	m	class:CBlockPolicyEstimator
minTrackedPriority	../server/txfeerate.h	/^    double minTrackedPriority; \/\/!< Set to AllowFreeThreshold$/;"	m	class:CBlockPolicyEstimator
min_input	../proto/coin_proto.h	/^  uint64_t min_input;$/;"	m	struct:coin_iface_t
min_relay_fee	../proto/coin_proto.h	/^  uint64_t min_relay_fee;$/;"	m	struct:coin_iface_t
min_tx_fee	../proto/coin_proto.h	/^  uint64_t min_tx_fee;$/;"	m	struct:coin_iface_t
mine_stamp	../stratum/stratum.h	/^  time_t mine_stamp[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
mode	../server/chain.h	/^  int mode;$/;"	m	struct:ChainOp
mode	../shcoind_descriptor.h	/^  int mode;$/;"	m	struct:desc_t
mode	../unet/unet.h	/^  int mode;$/;"	m	struct:uevent_t
mruset	../server/mruset.h	/^		mruset(size_type nMaxSizeIn = 0) { nMaxSize = nMaxSizeIn; }$/;"	f	class:mruset
mruset	../server/mruset.h	/^template <typename T> class mruset$/;"	c
n	../server/block.h	/^    unsigned int n;$/;"	m	class:CInPoint
n	../server/block.h	/^    unsigned int n;$/;"	m	class:COutPoint
nAccessTime	../server/coinaddr.h	/^		int64_t nAccessTime; $/;"	m	class:CCoinAddr
nAvailableCreditCached	../server/wallet.h	/^		mutable int64 nAvailableCreditCached;$/;"	m	class:CWalletTx
nBatchValue	../server/txcreator.h	/^    int64 nBatchValue;$/;"	m	class:CTxBatchCreator
nBestSeenHeight	../server/txfeerate.h	/^    unsigned int nBestSeenHeight;$/;"	m	class:CBlockPolicyEstimator
nBits	../server/block.h	/^    unsigned int nBits;$/;"	m	class:CBlockHeader
nBits	../server/block.h	/^    unsigned int nBits;$/;"	m	class:CBlockIndex
nBlockPos	../server/block.h	/^    unsigned int nBlockPos;$/;"	m	class:CDiskTxPos
nChainInputValue	../server/txmempool.h	/^    int64 nChainInputValue;$/;"	m	class:CPoolTx
nChainTx	../server/block.h	/^		unsigned int nChainTx;$/;"	m	class:CBlockIndex
nChangeCached	../server/wallet.h	/^		mutable int64 nChangeCached;$/;"	m	class:CWalletTx
nChild	../server/dikey.h	/^	uint32_t nChild;$/;"	m	struct:DIExtKey
nChild	../server/dikey.h	/^	uint32_t nChild;$/;"	m	struct:DIExtPubKey
nChild	../server/eckey.h	/^	uint32_t nChild;$/;"	m	struct:ECExtKey
nChild	../server/eckey.h	/^	uint32_t nChild;$/;"	m	struct:ECExtPubKey
nCoinPerK	../server/txfeerate.h	/^    CAmount nCoinPerK; \/\/ unit is satoshis-per-1,000-bytes$/;"	m	class:CFeeRate
nCreateTime	../server/coinaddr.h	/^		int64_t nCreateTime; $/;"	m	class:CCoinAddr
nCreateTime	../server/key.h	/^		int64_t nCreateTime; \/\/ 0 means unknown$/;"	m	class:CKeyMetadata
nCredit	../server/txcreator.h	/^    int64 nCredit; $/;"	m	class:CTxCreator
nCreditCached	../server/wallet.h	/^		mutable int64 nCreditCached;$/;"	m	class:CWalletTx
nCreditDebit	../server/wallet.h	/^		int64 nCreditDebit;$/;"	m	class:CAccountingEntry
nDebit	../server/txcreator.h	/^    int64 nDebit;$/;"	m	class:CTxCreator
nDebitCached	../server/wallet.h	/^		mutable int64 nDebitCached;$/;"	m	class:CWalletTx
nDefaultMaxNumSize	../server/script.h	/^    static const size_t nDefaultMaxNumSize = 4;$/;"	m	class:CScriptNum
nDepth	../server/dikey.h	/^	uint8_t nDepth;$/;"	m	struct:DIExtKey
nDepth	../server/dikey.h	/^	uint8_t nDepth;$/;"	m	struct:DIExtPubKey
nDepth	../server/eckey.h	/^	uint8_t nDepth;$/;"	m	struct:ECExtKey
nDepth	../server/eckey.h	/^	uint8_t nDepth;$/;"	m	struct:ECExtPubKey
nDepth	../server/txcreator.h	/^    unsigned int nDepth;$/;"	m	class:CTxCreator
nDepth	../server/wallet.h	/^		int nDepth;$/;"	m	class:COutput
nDerivationMethod	../server/crypter.h	/^    unsigned int nDerivationMethod;$/;"	m	class:CMasterKey
nDeriveIterations	../server/crypter.h	/^    unsigned int nDeriveIterations;$/;"	m	class:CMasterKey
nError	../server/net.h	/^		unsigned int nError;$/;"	m	class:CValidateState
nExternalDIChainCounter	../server/wallet.h	/^		uint32_t nExternalDIChainCounter;$/;"	m	class:CAccount
nExternalECChainCounter	../server/wallet.h	/^		uint32_t nExternalECChainCounter;$/;"	m	class:CAccount
nFee	../server/txmempool.h	/^    int64 nFee;$/;"	m	class:CPoolTx
nFeeDepth	../server/txcreator.h	/^		int nFeeDepth;$/;"	m	class:CTxCreator
nFile	../server/block.h	/^    unsigned int nFile;$/;"	m	class:CDiskTxPos
nFlag	../server/block.h	/^    int nFlag;$/;"	m	class:CTransactionCore
nFlag	../server/key.h	/^		unsigned int nFlag;$/;"	m	class:CKeyMetadata
nFlags	../server/net.h	/^    unsigned char nFlags;$/;"	m	class:CBloomFilter
nHashFuncs	../server/net.h	/^    unsigned int nHashFuncs;$/;"	m	class:CBloomFilter
nHashType	../server/txsignature.h	/^		int nHashType; $/;"	m	class:CSignature
nHeaderStart	../server/net.h	/^    int nHeaderStart;$/;"	m	class:CNode
nHeight	../server/block.h	/^    int nHeight;$/;"	m	class:CBlockIndex
nHeight	../server/matrix.h	/^		unsigned int nHeight; $/;"	m	class:CTxMatrix
nHeight	../server/txmempool.h	/^    unsigned int nHeight;$/;"	m	class:CPoolTx
nIndex	../server/main.h	/^    int nIndex;$/;"	m	class:CMerkleTx
nInternalDIChainCounter	../server/wallet.h	/^		uint32_t nInternalDIChainCounter;$/;"	m	class:CAccount
nInternalECChainCounter	../server/wallet.h	/^		uint32_t nInternalECChainCounter;$/;"	m	class:CAccount
nLastRecv	../server/net.h	/^    int64 nLastRecv;$/;"	m	class:CNode
nLastRecv	../server/net.h	/^    int64 nLastRecv;$/;"	m	class:CNodeStats
nLastSend	../server/net.h	/^    int64 nLastSend;$/;"	m	class:CNode
nLastSend	../server/net.h	/^    int64 nLastSend;$/;"	m	class:CNodeStats
nLastSendEmpty	../server/net.h	/^    int64 nLastSendEmpty;$/;"	m	class:CNode
nLockTime	../server/block.h	/^    unsigned int nLockTime;$/;"	m	class:CTransactionCore
nMaxFee	../server/txcreator.h	/^    int64 nMaxFee;$/;"	m	class:CTxBatchCreator
nMaxSigOp	../server/txcreator.h	/^    int64 nMaxSigOp;$/;"	m	class:CTxBatchCreator
nMaxSize	../server/mruset.h	/^		size_type nMaxSize;$/;"	m	class:mruset
nMaxTxSize	../server/txcreator.h	/^    int64 nMaxTxSize;$/;"	m	class:CTxBatchCreator
nMedianTimeSpan	../server/block.h	/^    enum { nMedianTimeSpan=11 };$/;"	e	enum:CBlockIndex::__anon1
nMessageStart	../server/net.h	/^    unsigned int nMessageStart;$/;"	m	class:CNode
nMinDiskSpace	../server/main.h	/^static const uint64 nMinDiskSpace = 52428800;$/;"	v
nMinFee	../server/net.h	/^    int64 nMinFee;$/;"	m	class:CNode
nMinFee	../server/txcreator.h	/^    int64 nMinFee;$/;"	m	class:CTxBatchCreator
nMinFee	../server/txcreator.h	/^    int64 nMinFee;$/;"	m	class:CTxCreator
nMinFee	../server/txmempool.h	/^    int64 nMinFee;$/;"	m	class:CPoolTx
nMinerConfirmationWindow	../proto/coin_proto.h	/^  uint32_t nMinerConfirmationWindow;$/;"	m	struct:coin_iface_t
nMisbehavior	../server/net.h	/^    int nMisbehavior;$/;"	m	class:CNode
nMisbehavior	../server/net.h	/^    int nMisbehavior;$/;"	m	class:CNodeStats
nNonce	../server/block.h	/^    unsigned int nNonce;$/;"	m	class:CBlockHeader
nNonce	../server/block.h	/^    unsigned int nNonce;$/;"	m	class:CBlockIndex
nOutValue	../server/txcreator.h	/^    int64 nOutValue;$/;"	m	class:CTxBatchCreator
nRefCount	../server/net.h	/^    int nRefCount;$/;"	m	class:CNode
nReleaseTime	../server/net.h	/^    int64 nReleaseTime;$/;"	m	class:CNode
nReleaseTime	../server/net.h	/^    int64 nReleaseTime;$/;"	m	class:CNodeStats
nReserveIndex	../server/txcreator.h	/^    int64 nReserveIndex;$/;"	m	class:CTxCreator
nRuleChangeActivationThreshold	../proto/coin_proto.h	/^  uint32_t nRuleChangeActivationThreshold;$/;"	m	struct:coin_iface_t
nScanHeight	../server/wallet.h	/^		unsigned int nScanHeight;$/;"	m	class:CWallet
nSequence	../server/block.h	/^    unsigned int nSequence;$/;"	m	class:CTxIn
nServices	../server/net.h	/^    uint64 nServices;$/;"	m	class:CNode
nServices	../server/net.h	/^    uint64 nServices;$/;"	m	class:CNodeStats
nSigOpCost	../server/txmempool.h	/^    int64 nSigOpCost;$/;"	m	class:CPoolTx
nStartTime	../proto/coin_proto.h	/^  int64_t nStartTime;$/;"	m	struct:BIP9Deployment
nStartingHeight	../server/net.h	/^    int nStartingHeight;$/;"	m	class:CNode
nStartingHeight	../server/net.h	/^    int nStartingHeight;$/;"	m	class:CNodeStats
nStatus	../server/block.h	/^    int nStatus;$/;"	m	class:CBlockIndex
nTime	../server/block.h	/^    unsigned int nTime;$/;"	m	class:CBlockHeader
nTime	../server/block.h	/^    unsigned int nTime;$/;"	m	class:CBlockIndex
nTime	../server/wallet.h	/^		int64 nTime;$/;"	m	class:CAccountingEntry
nTimeConnected	../server/net.h	/^    int64 nTimeConnected;$/;"	m	class:CNode
nTimeConnected	../server/net.h	/^    int64 nTimeConnected;$/;"	m	class:CNodeStats
nTimeCreated	../server/wallet.h	/^		int64 nTimeCreated;$/;"	m	class:CWalletKey
nTimeExpires	../server/wallet.h	/^		int64 nTimeExpires;$/;"	m	class:CWalletKey
nTimeReceived	../server/wallet.h	/^		unsigned int nTimeReceived;  \/\/ time received by this node$/;"	m	class:CWalletTx
nTimeUnused	../server/wallet.h	/^		unsigned int nTimeUnused; \/\/ time committed to a block.$/;"	m	class:CWalletTx
nTimeout	../proto/coin_proto.h	/^  int64_t nTimeout;$/;"	m	struct:BIP9Deployment
nTransactions	../server/bloom.h	/^    unsigned int nTransactions;$/;"	m	class:CPartialMerkleTree
nTrust	../server/net.h	/^		int nTrust;$/;"	m	class:CValidateState
nTweak	../server/net.h	/^    unsigned int nTweak;$/;"	m	class:CBloomFilter
nTxIn	../server/txsignature.h	/^		int nTxIn;$/;"	m	class:CSignature
nTxModSize	../server/txmempool.h	/^    int64 nTxModSize;$/;"	m	class:CPoolTx
nTxPos	../server/block.h	/^    unsigned int nTxPos;$/;"	m	class:CDiskTxPos
nTxSize	../server/txmempool.h	/^    int64 nTxSize;$/;"	m	class:CPoolTx
nType	../server/coinaddr.h	/^		int nType; \/* ADDR_BASE58 | ADDR_BECH32 *\/$/;"	m	class:CCoinAddr
nType	../server/matrix.h	/^		unsigned int nType;$/;"	m	class:CTxMatrix
nValidateHeight	../server/wallet.h	/^		unsigned int nValidateHeight;$/;"	m	class:CWallet
nValue	../server/block.h	/^		int64 nValue;$/;"	m	class:CTxOut
nVersion	../server/block.h	/^        nVersion = this->nVersion;$/;"	m	class:CBlockHeader
nVersion	../server/block.h	/^    int nVersion;$/;"	m	class:CBlockHeader
nVersion	../server/block.h	/^    int nVersion;$/;"	m	class:CBlockIndex
nVersion	../server/net.h	/^    int nVersion;$/;"	m	class:CNode
nVersion	../server/net.h	/^    int nVersion;$/;"	m	class:CNodeStats
nWeight	../server/txmempool.h	/^    int64 nWeight;$/;"	m	class:CPoolTx
name	../blockchain/bc.h	/^  char name[BC_MAX_NAME_LENGTH];$/;"	m	struct:bc_t
name	../proto/coin_proto.h	/^  char name[MAX_SHARE_NAME_LENGTH];$/;"	m	struct:coin_iface_t
name	../server/versionbits.h	/^    const char *name;$/;"	m	struct:BIP9DeploymentInfo
name	../test/CuTest.h	/^	char* name;$/;"	m	struct:CuTest
nbits	../stratum/stratum.h	/^  char nbits[32];$/;"	m	struct:task_t
net_addr	../shcoind_descriptor.h	/^  struct sockaddr net_addr;$/;"	m	struct:desc_t	typeref:struct:desc_t::sockaddr
net_invalid	../proto/coin_proto.h	/^  time_t net_invalid;$/;"	m	struct:coin_iface_t
net_valid	../proto/coin_proto.h	/^  time_t net_valid;$/;"	m	struct:coin_iface_t
netid	../stratum/stratum.h	/^  shkey_t netid;$/;"	m	struct:user_t
next	../shapi/shapi.h	/^	struct shapi_t *next;$/;"	m	struct:shapi_t	typeref:struct:shapi_t::shapi_t
next	../stratum/stratum.h	/^  struct task_t *next;$/;"	m	struct:task_t	typeref:struct:task_t::task_t
next	../stratum/stratum.h	/^  struct user_t *next;$/;"	m	struct:user_t	typeref:struct:user_t::user_t
nonce	../server/block_cmpct.h	/^		uint64_t nonce;$/;"	m	class:CBlockHeaderAndShortTxIDs
of	../blockchain/bc.h	/^  bcsize_t of; $/;"	m	struct:bc_hdr_t
of	../blockchain/bc.h	/^  bcsize_t of;$/;"	m	struct:bc_idx_t
offer	../server/block.h	/^    COffer offer;$/;"	m	class:CTransaction
oldUnconfTxs	../server/txfeerate.h	/^    std::vector<int> oldUnconfTxs;$/;"	m	class:TxConfirmStats
op_accept	../unet/unet.h	/^  unet_addr_op op_accept;$/;"	m	struct:unet_bind_t
op_bind	../proto/coin_proto.h	/^  coin_f op_bind;$/;"	m	struct:coin_iface_t
op_block_new	../proto/coin_proto.h	/^  coin_f op_block_new;$/;"	m	struct:coin_iface_t
op_block_process	../proto/coin_proto.h	/^  coin_f op_block_process;$/;"	m	struct:coin_iface_t
op_block_templ	../proto/coin_proto.h	/^  coin_f op_block_templ;$/;"	m	struct:coin_iface_t
op_close	../unet/unet.h	/^  unet_addr_op op_close;$/;"	m	struct:unet_bind_t
op_init	../proto/coin_proto.h	/^  coin_f op_init;$/;"	m	struct:coin_iface_t
op_msg_recv	../proto/coin_proto.h	/^  coin_f op_msg_recv;$/;"	m	struct:coin_iface_t
op_msg_send	../proto/coin_proto.h	/^  coin_f op_msg_send;$/;"	m	struct:coin_iface_t
op_peer_add	../proto/coin_proto.h	/^  coin_f op_peer_add;$/;"	m	struct:coin_iface_t
op_peer_recv	../proto/coin_proto.h	/^  coin_f op_peer_recv;$/;"	m	struct:coin_iface_t
op_term	../proto/coin_proto.h	/^  coin_f op_term;$/;"	m	struct:coin_iface_t
op_timer	../unet/unet.h	/^  unet_op op_timer;$/;"	m	struct:unet_bind_t
op_tx_new	../proto/coin_proto.h	/^  coin_f op_tx_new;$/;"	m	struct:coin_iface_t
op_tx_pool	../proto/coin_proto.h	/^  coin_f op_tx_pool;$/;"	m	struct:coin_iface_t
opcodetype	../server/script.h	/^enum opcodetype$/;"	g
operator !=	../server/block.h	/^		friend bool operator!=(const CTxOut& a, const CTxOut& b)$/;"	f	class:CTxOut
operator !=	../server/block.h	/^    friend bool operator!=(const CDiskTxPos& a, const CDiskTxPos& b)$/;"	f	class:CDiskTxPos
operator !=	../server/block.h	/^    friend bool operator!=(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator !=	../server/block.h	/^    friend bool operator!=(const CTransaction& a, const CTransaction& b)$/;"	f	class:CTransaction
operator !=	../server/block.h	/^    friend bool operator!=(const CTxIn& a, const CTxIn& b)$/;"	f	class:CTxIn
operator !=	../server/block.h	/^    friend bool operator!=(const CTxIndex& a, const CTxIndex& b)$/;"	f	class:CTxIndex
operator !=	../server/hdkey.h	/^    friend bool operator!=(const HDMasterPrivKey &a, const HDMasterPrivKey &b) {$/;"	f	class:HDMasterPrivKey
operator !=	../server/hdkey.h	/^    friend bool operator!=(const HDPrivKey &a, const HDPrivKey &b) {$/;"	f	class:HDPrivKey
operator !=	../server/hdkey.h	/^    friend bool operator!=(const HDPubKey &a, const HDPubKey &b) {$/;"	f	class:HDPubKey
operator !=	../server/key.h	/^		friend bool operator!=(const CPubKey &a, const CPubKey &b) { return a.vchPubKey != b.vchPubKey; }$/;"	f	class:CPubKey
operator !=	../server/matrix.h	/^		friend bool operator!=(const CTxMatrix& a, const CTxMatrix& b)$/;"	f	class:CTxMatrix
operator !=	../server/script.h	/^    inline bool operator!=(const CScriptNum& rhs) const { return operator!=(rhs.m_value); }$/;"	f	class:CScriptNum
operator !=	../server/script.h	/^    inline bool operator!=(const int64_t& rhs) const    { return m_value != rhs; }$/;"	f	class:CScriptNum
operator &	../server/script.h	/^    inline CScriptNum operator&(   const CScriptNum& rhs) const { return operator&(rhs.m_value);   }$/;"	f	class:CScriptNum
operator &	../server/script.h	/^    inline CScriptNum operator&(   const int64_t& rhs)    const { return CScriptNum(m_value & rhs);}$/;"	f	class:CScriptNum
operator &=	../server/script.h	/^    inline CScriptNum& operator&=( const CScriptNum& rhs)       { return operator&=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator &=	../server/script.h	/^    inline CScriptNum& operator&=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator ()	../server/block.h	/^    bool operator()(CBlockIndex *pa, CBlockIndex *pb) {$/;"	f	struct:CBlockIndexWorkComparator
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const CKeyID &id) const         { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const CNoDestination &id) const { return false; }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const CScriptID &id) const      { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessUnknown &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV0KeyHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV0ScriptHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV14KeyHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV14ScriptHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator +	../server/script.h	/^    friend CScript operator+(const CScript& a, const CScript& b)$/;"	f	class:CScript
operator +	../server/script.h	/^    inline CScriptNum operator+(   const CScriptNum& rhs) const { return operator+(rhs.m_value);   }$/;"	f	class:CScriptNum
operator +	../server/script.h	/^    inline CScriptNum operator+(   const int64_t& rhs)    const { return CScriptNum(m_value + rhs);}$/;"	f	class:CScriptNum
operator +=	../server/script.h	/^    CScript& operator+=(const CScript& b)$/;"	f	class:CScript
operator +=	../server/script.h	/^    inline CScriptNum& operator+=( const CScriptNum& rhs)       { return operator+=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator +=	../server/script.h	/^    inline CScriptNum& operator+=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator +=	../server/txfeerate.h	/^    CFeeRate& operator+=(const CFeeRate& a) { nCoinPerK += a.nCoinPerK; return *this; }$/;"	f	class:CFeeRate
operator -	../server/script.h	/^    inline CScriptNum operator-(   const CScriptNum& rhs) const { return operator-(rhs.m_value);   }$/;"	f	class:CScriptNum
operator -	../server/script.h	/^    inline CScriptNum operator-(   const int64_t& rhs)    const { return CScriptNum(m_value - rhs);}$/;"	f	class:CScriptNum
operator -	../server/script.h	/^    inline CScriptNum operator-()                         const$/;"	f	class:CScriptNum
operator -=	../server/script.h	/^    inline CScriptNum& operator-=( const CScriptNum& rhs)       { return operator-=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator -=	../server/script.h	/^    inline CScriptNum& operator-=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator <	../server/base58.h	/^		bool operator< (const CBase58Data& b58) const { return CompareTo(b58) <  0; }$/;"	f	class:CBase58Data
operator <	../server/block.h	/^    friend bool operator<(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator <	../server/key.h	/^		friend bool operator<(const CPubKey &a, const CPubKey &b) { return a.vchPubKey < b.vchPubKey; }$/;"	f	class:CPubKey
operator <	../server/mruset.h	/^		bool inline friend operator<(const mruset<T>& a, const mruset<T>& b) { return a.set < b.set; }$/;"	f	class:mruset
operator <	../server/script.h	/^	friend bool operator<(const WitnessUnknown& w1, const WitnessUnknown& w2) {$/;"	f	struct:WitnessUnknown
operator <	../server/script.h	/^    friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }$/;"	f	class:CNoDestination
operator <	../server/script.h	/^    inline bool operator< (const CScriptNum& rhs) const { return operator< (rhs.m_value); }$/;"	f	class:CScriptNum
operator <	../server/script.h	/^    inline bool operator< (const int64_t& rhs) const    { return m_value <  rhs; }$/;"	f	class:CScriptNum
operator <	../server/txfeerate.h	/^    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK < b.nCoinPerK; }$/;"	f	class:CFeeRate
operator <	../server/txmempool.h	/^    bool operator < (const CPoolTx& ptx) const$/;"	f	class:CPoolTx
operator <<	../server/script.h	/^    CScript& operator<<(const CBigNum& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const CPubKey& key)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const CScript& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const CScriptNum& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const std::vector<unsigned char>& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const uint160& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const uint256& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(int b)            { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(int64 b)          { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(long b)           { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(opcodetype opcode)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(short b)          { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(signed char b)    { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(uint64 b)         { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned char b)  { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned int b)   { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned long b)  { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned short b) { return push_uint64(b); }$/;"	f	class:CScript
operator <=	../server/base58.h	/^		bool operator<=(const CBase58Data& b58) const { return CompareTo(b58) <= 0; }$/;"	f	class:CBase58Data
operator <=	../server/script.h	/^    inline bool operator<=(const CScriptNum& rhs) const { return operator<=(rhs.m_value); }$/;"	f	class:CScriptNum
operator <=	../server/script.h	/^    inline bool operator<=(const int64_t& rhs) const    { return m_value <= rhs; }$/;"	f	class:CScriptNum
operator <=	../server/txfeerate.h	/^    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK <= b.nCoinPerK; }$/;"	f	class:CFeeRate
operator =	../server/dikey.h	/^    DIKey& operator=(const DIKey& b)$/;"	f	class:DIKey
operator =	../server/eckey.h	/^    ECKey& operator=(const ECKey& b)$/;"	f	class:ECKey
operator =	../server/hdkey.h	/^    HDMasterPrivKey operator=(const HDMasterPrivKey &b)$/;"	f	class:HDMasterPrivKey
operator =	../server/hdkey.h	/^    HDPrivKey operator=(const HDPrivKey &b)$/;"	f	class:HDPrivKey
operator =	../server/hdkey.h	/^    HDPubKey operator=(const HDPubKey &b)$/;"	f	class:HDPubKey
operator =	../server/key.h	/^    CKey& operator=(const CKey& b)$/;"	f	class:CKey
operator =	../server/matrix.h	/^		CTxMatrix operator=(const CTxMatrix &b)$/;"	f	class:CTxMatrix
operator =	../server/script.h	/^    inline CScriptNum& operator=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator ==	../server/account.h	/^		friend bool operator==(const CAccountCache& a, const CAccountCache& b)$/;"	f	class:CAccountCache
operator ==	../server/base58.h	/^		bool operator==(const CBase58Data& b58) const { return CompareTo(b58) == 0; }$/;"	f	class:CBase58Data
operator ==	../server/block.h	/^		friend bool operator==(const CTxOut& a, const CTxOut& b)$/;"	f	class:CTxOut
operator ==	../server/block.h	/^    friend bool operator==(const CBlockHeader& a, const CBlockHeader& b)$/;"	f	class:CBlockHeader
operator ==	../server/block.h	/^    friend bool operator==(const CDiskTxPos& a, const CDiskTxPos& b)$/;"	f	class:CDiskTxPos
operator ==	../server/block.h	/^    friend bool operator==(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator ==	../server/block.h	/^    friend bool operator==(const CTransaction& a, const CTransaction& b)$/;"	f	class:CTransaction
operator ==	../server/block.h	/^    friend bool operator==(const CTransactionCore& a, const CTransactionCore& b)$/;"	f	class:CTransactionCore
operator ==	../server/block.h	/^    friend bool operator==(const CTxIn& a, const CTxIn& b)$/;"	f	class:CTxIn
operator ==	../server/block.h	/^    friend bool operator==(const CTxIndex& a, const CTxIndex& b)$/;"	f	class:CTxIndex
operator ==	../server/dikey.h	/^		friend bool operator==(const DIKey &a, const DIKey &b) { return a.vch == b.vch; }$/;"	f	class:DIKey
operator ==	../server/dikey.h	/^	friend bool operator==(const DIExtKey& a, const DIExtKey& b)$/;"	f	struct:DIExtKey
operator ==	../server/dikey.h	/^	friend bool operator==(const DIExtPubKey &a, const DIExtPubKey &b)$/;"	f	struct:DIExtPubKey
operator ==	../server/eckey.h	/^		friend bool operator==(const ECKey &a, const ECKey &b) { return a.vch == b.vch; }$/;"	f	class:ECKey
operator ==	../server/eckey.h	/^	friend bool operator==(const ECExtKey& a, const ECExtKey& b)$/;"	f	struct:ECExtKey
operator ==	../server/eckey.h	/^	friend bool operator==(const ECExtPubKey &a, const ECExtPubKey &b)$/;"	f	struct:ECExtPubKey
operator ==	../server/hdkey.h	/^    friend bool operator==(const HDMasterPrivKey &a, const HDMasterPrivKey &b) $/;"	f	class:HDMasterPrivKey
operator ==	../server/hdkey.h	/^    friend bool operator==(const HDPrivKey &a, const HDPrivKey &b) $/;"	f	class:HDPrivKey
operator ==	../server/hdkey.h	/^    friend bool operator==(const HDPubKey &a, const HDPubKey &b) $/;"	f	class:HDPubKey
operator ==	../server/key.h	/^		friend bool operator==(const CPubKey &a, const CPubKey &b) { return a.vchPubKey == b.vchPubKey; }$/;"	f	class:CPubKey
operator ==	../server/matrix.h	/^			friend bool operator==(const CTxMatrix& a, const CTxMatrix& b)$/;"	f	class:CTxMatrix
operator ==	../server/mruset.h	/^		bool inline friend operator==(const mruset<T>& a, const mruset<T>& b) { return a.set == b.set; }$/;"	f	class:mruset
operator ==	../server/mruset.h	/^		bool inline friend operator==(const mruset<T>& a, const std::set<T>& b) { return a.set == b; }$/;"	f	class:mruset
operator ==	../server/script.h	/^	friend bool operator==(const WitnessUnknown& w1, const WitnessUnknown& w2) {$/;"	f	struct:WitnessUnknown
operator ==	../server/script.h	/^    friend bool operator==(const CNoDestination &a, const CNoDestination &b) { return true; }$/;"	f	class:CNoDestination
operator ==	../server/script.h	/^    inline bool operator==(const CScriptNum& rhs) const { return operator==(rhs.m_value); }$/;"	f	class:CScriptNum
operator ==	../server/script.h	/^    inline bool operator==(const int64_t& rhs) const    { return m_value == rhs; }$/;"	f	class:CScriptNum
operator ==	../server/shlib.h	/^    friend bool operator==(const SHPeer &a, const SHPeer &b)$/;"	f	class:SHPeer
operator ==	../server/shlib.h	/^    friend bool operator==(const SHSig &a, const SHSig &b)$/;"	f	class:SHSig
operator ==	../server/txfeerate.h	/^    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK == b.nCoinPerK; }$/;"	f	class:CFeeRate
operator ==	../server/txmempool.h	/^    bool operator == (const CPoolTx& b) const$/;"	f	class:CPoolTx
operator >	../server/base58.h	/^		bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }$/;"	f	class:CBase58Data
operator >	../server/script.h	/^    inline bool operator> (const CScriptNum& rhs) const { return operator> (rhs.m_value); }$/;"	f	class:CScriptNum
operator >	../server/script.h	/^    inline bool operator> (const int64_t& rhs) const    { return m_value >  rhs; }$/;"	f	class:CScriptNum
operator >	../server/txfeerate.h	/^    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK > b.nCoinPerK; }$/;"	f	class:CFeeRate
operator >	../server/txmempool.h	/^    bool operator > (const CPoolTx& ptx) const$/;"	f	class:CPoolTx
operator >=	../server/base58.h	/^		bool operator>=(const CBase58Data& b58) const { return CompareTo(b58) >= 0; }$/;"	f	class:CBase58Data
operator >=	../server/script.h	/^    inline bool operator>=(const CScriptNum& rhs) const { return operator>=(rhs.m_value); }$/;"	f	class:CScriptNum
operator >=	../server/script.h	/^    inline bool operator>=(const int64_t& rhs) const    { return m_value >= rhs; }$/;"	f	class:CScriptNum
operator >=	../server/txfeerate.h	/^    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK >= b.nCoinPerK; }$/;"	f	class:CFeeRate
opt_arg_interp	../shcoind_opt.c	/^void opt_arg_interp(int argc, char **argv)$/;"	f
opt_bool	../shcoind_opt.c	/^int opt_bool(const char *tag)$/;"	f
opt_bool_set	../shcoind_opt.c	/^void opt_bool_set(const char *tag, int b)$/;"	f
opt_config_default_print	../shcoind_opt.c	/^const char *opt_config_default_print(void)$/;"	f
opt_def	../shcoind_opt.c	/^	int64_t opt_def;$/;"	m	struct:opt_t	file:
opt_desc	../shcoind_opt.c	/^	const char *opt_desc;$/;"	m	struct:opt_t	file:
opt_home_dir	../shcoind_opt.c	/^static const char *opt_home_dir(void)$/;"	f	file:
opt_init	../shcoind_opt.c	/^void opt_init(void)$/;"	f
opt_name	../shcoind_opt.c	/^	const char *opt_name;$/;"	m	struct:opt_t	file:
opt_no_fork	../shcoind.c	/^static int opt_no_fork;$/;"	v	file:
opt_num	../shcoind_opt.c	/^int opt_num(const char *tag)$/;"	f
opt_num_set	../shcoind_opt.c	/^void opt_num_set(const char *tag, int num)$/;"	f
opt_print	../shcoind_opt.c	/^void opt_print(void)$/;"	f
opt_restore	../shcoind.c	/^static int opt_restore;$/;"	v	file:
opt_set_defaults	../shcoind_opt.c	/^static void opt_set_defaults(void)$/;"	f	file:
opt_set_defaults_datfile	../shcoind_opt.c	/^static void opt_set_defaults_datfile(void)$/;"	f	file:
opt_set_defaults_system	../shcoind_opt.c	/^static void opt_set_defaults_system(void)$/;"	f	file:
opt_set_environment_name	../shcoind_opt.c	/^static const char *opt_set_environment_name(opt_t *opt)$/;"	f	file:
opt_set_environment_settings	../shcoind_opt.c	/^static void opt_set_environment_settings(void)$/;"	f	file:
opt_str	../shcoind_opt.c	/^const char *opt_str(const char *tag)$/;"	f
opt_str_set	../shcoind_opt.c	/^void opt_str_set(const char *tag, char *str)$/;"	f
opt_strdef	../shcoind_opt.c	/^	const char *opt_strdef;$/;"	m	struct:opt_t	file:
opt_t	../shcoind_opt.c	/^typedef struct opt_t {$/;"	s	file:
opt_t	../shcoind_opt.c	/^} opt_t;$/;"	t	typeref:struct:opt_t	file:
opt_term	../shcoind_opt.c	/^void opt_term(void)$/;"	f
opt_type	../shcoind_opt.c	/^	int opt_type;$/;"	m	struct:opt_t	file:
opt_usage_print	../shcoind_opt.c	/^const char *opt_usage_print(void)$/;"	f
originPeer	../server/block.h	/^    mutable CNode *originPeer;$/;"	m	class:CBlock
overflow	../server/txmempool.h	/^    pool_map overflow;$/;"	m	class:CPool
page	../stratum/stratum_http.h	/^	char *page;$/;"	m	struct:http_t
param	../server/block.h	/^		CParam param; $/;"	m	class:CTransaction
param1	../server/net.h	/^    void* param1;$/;"	m	class:CRequestTracker
pass	../stratum/stratum.h	/^  char pass[256];$/;"	m	struct:user_t
path	../server/chain.h	/^  char path[PATH_MAX+1];$/;"	m	struct:ChainOp
pathEnv	../server/txidx.h	/^    boost::filesystem::path pathEnv;$/;"	m	class:CDBEnv
pdb	../server/txidx.h	/^    Db* pdb;$/;"	m	class:CDB
peer	../server/net.h	/^		CNode *peer;$/;"	m	class:CValidateState
peer	../server/shlib.h	/^    shpeer_t peer;$/;"	m	class:SHPeer
peer	../stratum/stratum.h	/^  scrypt_peer peer;$/;"	m	struct:user_t
peer	../unet/unet.h	/^  shpeer_t peer;$/;"	m	struct:unet_bind_t
peer	../unet/unet_peerdb.c	/^  shpeer_t peer;$/;"	m	struct:peerdb_t	file:
peer_db	../unet/unet.h	/^  bc_t *peer_db;$/;"	m	struct:unet_bind_t
peerdb_del	../unet/unet_peerdb.c	/^static void peerdb_del(int mode, shkey_t *key)$/;"	f	file:
peerdb_key_hash	../unet/unet_peerdb.c	/^static void peerdb_key_hash(shkey_t *key, bc_hash_t *hash_p)$/;"	f	file:
peerdb_list_free	../unet/unet_peerdb.c	/^static void peerdb_list_free(peerdb_t **p_list)$/;"	f	file:
peerdb_mode_label	../unet/unet_peerdb.c	/^char *peerdb_mode_label(int mode)$/;"	f
peerdb_new	../unet/unet_peerdb.c	/^static peerdb_t *peerdb_new(int mode, shpeer_t *peer)$/;"	f	file:
peerdb_new_host	../unet/unet_peerdb.c	/^static peerdb_t *peerdb_new_host(int mode, char *hostname, unsigned int port)$/;"	f	file:
peerdb_open	../unet/unet_peerdb.c	/^static bc_t *peerdb_open(int mode)$/;"	f	file:
peerdb_read	../unet/unet_peerdb.c	/^static int peerdb_read(bc_t *db, shkey_t *key, peerdb_t **peer_p)$/;"	f	file:
peerdb_read_index	../unet/unet_peerdb.c	/^static int peerdb_read_index(bc_t *db, int pos, peerdb_t **peer_p)$/;"	f	file:
peerdb_sort	../unet/unet_peerdb.c	/^static void peerdb_sort(peerdb_t **ret_list, size_t ret_size, int fact)$/;"	f	file:
peerdb_sort_cmp	../unet/unet_peerdb.c	/^static int peerdb_sort_cmp(void *a_p, void *b_p)$/;"	f	file:
peerdb_sort_revcmp	../unet/unet_peerdb.c	/^static int peerdb_sort_revcmp(void *a_p, void *b_p)$/;"	f	file:
peerdb_t	../unet/unet_peerdb.c	/^typedef struct peerdb_t$/;"	s	file:
peerdb_t	../unet/unet_peerdb.c	/^} peerdb_t;$/;"	t	typeref:struct:peerdb_t	file:
peerdb_track_list	../unet/unet_peerdb.c	/^static peerdb_t **peerdb_track_list(int mode, int ret_max)$/;"	f	file:
peerdb_track_scan	../unet/unet_peerdb.c	/^static peerdb_t **peerdb_track_scan(bc_t *db, int max)$/;"	f	file:
peerdb_write	../unet/unet_peerdb.c	/^static int peerdb_write(bc_t *db, peerdb_t *p)$/;"	f	file:
pend_block_height	../stratum/stratum_blake2s.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_groestl.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_keccak.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_qubit.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_sha256d.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_skein.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_task.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_x11.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pending	../server/txmempool.h	/^    pool_map pending;$/;"	m	class:CPool
pfilter	../server/net.h	/^    CBloomFilter *pfilter;$/;"	m	class:CNode
phashBlock	../server/block.h	/^    const uint256* phashBlock;$/;"	m	class:CBlockIndex
pindexBestHeader	../server/wallet.h	/^		CBlockIndex *pindexBestHeader;$/;"	m	class:CWallet
pindexBestHeaderSend	../server/net.h	/^		CBlockIndex *pindexBestHeaderSend;$/;"	m	class:CNode
pindexBestKnownBlock	../server/net.h	/^		CBlockIndex *pindexBestKnownBlock;$/;"	m	class:CNode
pindexLastBlock	../server/net.h	/^		CBlockIndex *pindexLastBlock;$/;"	m	class:CNode
pindexLastGetBlocksBegin	../server/net.h	/^    CBlockIndex* pindexLastGetBlocksBegin;$/;"	m	class:CNode
pindexLastHeader	../server/net.h	/^		CBlockIndex *pindexLastHeader;$/;"	m	class:CNode
pkey	../server/shlib.h	/^    mutable shkey_t pkey;$/;"	m	class:SHPeer
pnext	../server/block.h	/^    CBlockIndex* pnext;$/;"	m	class:CBlockIndex
pool	../server/block_cmpct.h	/^		CTxMemPool* pool;$/;"	m	class:PartiallyDownloadedBlock
pool_map	../server/txmempool.h	/^typedef map<const uint256, CPoolTx> pool_map;$/;"	t
port	../proto/coin_proto.h	/^  int port;$/;"	m	struct:coin_iface_t
port	../unet/unet.h	/^  int port;$/;"	m	struct:unet_bind_t
pos	../server/block.h	/^    CDiskTxPos pos;$/;"	m	class:CTxIndex
pos	../server/chain.h	/^  int pos;$/;"	m	struct:ChainOp
pprev	../server/block.h	/^    CBlockIndex* pprev;$/;"	m	class:CBlockIndex
prefilled_count	../server/block_cmpct.h	/^		size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;$/;"	m	class:PartiallyDownloadedBlock
prefilledtxn	../server/block_cmpct.h	/^		std::vector<PrefilledTransaction> prefilledtxn;$/;"	m	class:CBlockHeaderAndShortTxIDs
prev_hash	../stratum/stratum.h	/^  char prev_hash[256];$/;"	m	struct:task_t
prevout	../server/block.h	/^    COutPoint prevout;$/;"	m	class:CTxIn
priLikely	../server/txfeerate.h	/^    double priLikely, priUnlikely;$/;"	m	class:CBlockPolicyEstimator
priStats	../server/txfeerate.h	/^    TxConfirmStats feeStats, priStats;$/;"	m	class:CBlockPolicyEstimator
priUnlikely	../server/txfeerate.h	/^    double priLikely, priUnlikely;$/;"	m	class:CBlockPolicyEstimator
primary_ipaddr	../unet/unet_local.c	/^static char primary_ipaddr[MAXHOSTNAMELEN+1];$/;"	v	file:
print	../server/block.h	/^    void print() const$/;"	f	class:CBlockIndex
print	../server/block.h	/^    void print() const$/;"	f	class:CDiskBlockIndex
print	../server/block.h	/^    void print() const$/;"	f	class:CDiskTxPos
print	../server/block.h	/^    void print() const$/;"	f	class:COutPoint
print	../server/block.h	/^    void print() const$/;"	f	class:CTxIn
print	../server/block.h	/^    void print()$/;"	f	class:CBlock
print	../server/block.h	/^    void print(int ifaceIndex)$/;"	f	class:CTransaction
print	../server/script.h	/^    void print() const$/;"	f	class:CScript
print	../server/wallet.h	/^		void print() const$/;"	f	class:COutput
program	../server/script.h	/^	unsigned char program[40];$/;"	m	struct:WitnessUnknown
proto_ver	../proto/coin_proto.h	/^  int proto_ver;$/;"	m	struct:coin_iface_t
pskip	../server/block.h	/^    CBlockIndex *pskip;$/;"	m	class:CBlockIndex
ptx	../server/block.h	/^    CTransaction* ptx;$/;"	m	class:CInPoint
pubkey	../server/dikey.h	/^	CPubKey pubkey;$/;"	m	struct:DIExtPubKey
pubkey	../server/eckey.h	/^	CPubKey pubkey;$/;"	m	struct:ECExtPubKey
push_int64	../server/script.h	/^    CScript& push_int64(int64 n)$/;"	f	class:CScript
push_uint64	../server/script.h	/^    CScript& push_uint64(uint64 n)$/;"	f	class:CScript
pwallet	../server/wallet.h	/^		CWallet *pwallet;$/;"	m	class:CWalletTx
pwalletdbEncryption	../server/wallet.h	/^		CWalletDB *pwalletdbEncryption;$/;"	m	class:CWallet
queryHashes	../server/txmempool.h	/^    void queryHashes(std::vector<uint256>& vtxid)$/;"	f	class:CPool
queue	../server/mruset.h	/^		std::deque<T> queue;$/;"	m	class:mruset
ran	../test/CuTest.h	/^	int ran;$/;"	m	struct:CuTest
raw	../blockchain/bc.h	/^  uint8_t *raw;$/;"	m	struct:bc_map_t
rbuff	../shcoind_descriptor.h	/^  shbuf_t *rbuff;$/;"	m	struct:desc_t
reward_height	../stratum/stratum.h	/^  uint64_t reward_height;$/;"	m	struct:user_t
reward_time	../stratum/stratum.h	/^  time_t reward_time;$/;"	m	struct:user_t
rollingMinimumFeeRate	../server/txfeerate.h	/^    mutable double rollingMinimumFeeRate;$/;"	m	class:CBlockPolicyEstimator
round_stamp	../stratum/stratum.h	/^  time_t round_stamp;$/;"	m	struct:user_t
rpc_accept	../shcoind_rpc.c	/^static void rpc_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
rpc_client_list	../shcoind_rpc.c	/^user_t *rpc_client_list;$/;"	v
rpc_close	../shcoind_rpc.c	/^void rpc_close(int fd, struct sockaddr *net_addr)$/;"	f
rpc_close_free	../shcoind_rpc.c	/^static void rpc_close_free(void)$/;"	f	file:
rpc_dat_path	../shcoind_rpc.c	/^static const char *rpc_dat_path(void)$/;"	f	file:
rpc_get_iface	../shcoind_rpc.c	/^static int rpc_get_iface(char *iface_str)$/;"	f	file:
rpc_init	../shcoind_rpc.c	/^int rpc_init(void)$/;"	f
rpc_register_client	../shcoind_rpc.c	/^user_t *rpc_register_client(int fd)$/;"	f
rpc_register_client_task	../shcoind_rpc.c	/^int rpc_register_client_task(int ifaceIndex, user_t *user, shjson_t *json)$/;"	f
rpc_send_message	../shcoind_rpc.c	/^static int rpc_send_message(user_t *user, shjson_t *msg)$/;"	f	file:
rpc_term	../shcoind_rpc.c	/^void rpc_term(void)$/;"	f
rpc_timer	../shcoind_rpc.c	/^static void rpc_timer(void)$/;"	f	file:
rpc_user_init	../shcoind_rpc.c	/^user_t *rpc_user_init(int fd)$/;"	f
rsp_func	../shcoind_svc.c	/^typedef DWORD			(*rsp_func)(DWORD, DWORD);$/;"	t	file:
sError	../server/net.h	/^		std::string sError;$/;"	m	class:CValidateState
scan_freq	../unet/unet.h	/^  double scan_freq;$/;"	m	struct:unet_bind_t
scan_stamp	../unet/unet.h	/^  shtime_t scan_stamp;$/;"	m	struct:unet_bind_t
scriptPub	../server/txcreator.h	/^    CScript scriptPub;$/;"	m	class:CTxBatchCreator
scriptPubKey	../server/block.h	/^		CScript scriptPubKey;$/;"	m	class:CTxOut
scriptSig	../server/block.h	/^    CScript scriptSig;$/;"	m	class:CTxIn
scriptWitness	../server/block.h	/^    CScriptWitness scriptWitness;$/;"	m	class:CTxInWitness
scriptnum_error	../server/script.h	/^    explicit scriptnum_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:scriptnum_error
scriptnum_error	../server/script.h	/^class scriptnum_error : public std::runtime_error$/;"	c
serialize	../server/script.h	/^    static std::vector<unsigned char> serialize(const int64_t& value)$/;"	f	class:CScriptNum
serv_peer	../test/test_shcoind.c	/^shpeer_t *serv_peer;$/;"	v
server_msg_buff	../shcoind.c	/^shbuf_t *server_msg_buff;$/;"	v
server_msgq	../shcoind.c	/^int server_msgq;$/;"	v
server_peer	../shcoind.c	/^shpeer_t *server_peer;$/;"	v
server_start_t	../shcoind.c	/^shtime_t server_start_t;$/;"	v
server_start_t	../test/test_shcoind.c	/^shtime_t server_start_t;$/;"	v
services	../proto/coin_proto.h	/^  uint64_t services; \/* NODE_XXX *\/$/;"	m	struct:coin_iface_t
set	../server/mruset.h	/^		std::set<T> set;$/;"	m	class:mruset
setAddrKnown	../server/net.h	/^    std::set<CAddress> setAddrKnown;$/;"	m	class:CNode
setAutoLock	../server/txcreator.h	/^		void setAutoLock(bool b)$/;"	f	class:CTxCreator
setAutoParam	../server/txcreator.h	/^		void setAutoParam(bool b)$/;"	f	class:CTxCreator
setBanned	../server/net.h	/^    static std::map<CNetAddr, int64> setBanned;$/;"	m	class:CNode
setCoins	../server/txcreator.h	/^    set<pair<const CWalletTx*,unsigned int> > setCoins;$/;"	m	class:CTxBatchCreator
setHighFeeRate	../server/txcreator.h	/^		void setHighFeeRate()$/;"	f	class:CTxCreator
setInput	../server/txcreator.h	/^    coin_set setInput;$/;"	m	class:CTxCreator
setInventoryKnown	../server/net.h	/^    mruset<CInv> setInventoryKnown;$/;"	m	class:CNode
setKnown	../server/net.h	/^    std::set<uint256> setKnown;$/;"	m	class:CNode
setLocal	../server/txmempool.h	/^    void setLocal(bool val)$/;"	f	class:CPoolTx
setLowFeeRate	../server/txcreator.h	/^		void setLowFeeRate()$/;"	f	class:CTxCreator
setSeq	../server/txcreator.h	/^		map<unsigned int,unsigned int> setSeq;$/;"	m	class:CTxCreator
set_rpc_dat_password	../shcoind_rpc.c	/^int set_rpc_dat_password(char *host, shkey_t *in_key)$/;"	f
set_rpc_error	../shcoind_rpc.c	/^void set_rpc_error(shjson_t *reply, int code, char *str)$/;"	f
set_shapi_error	../shapi/shapi_protocol.c	/^void set_shapi_error(shjson_t *reply, int code, char *str)$/;"	f
set_shutdown_timer	../shcoind_signal.c	/^void set_shutdown_timer(void)$/;"	f
set_stratum_error	../stratum/stratum_protocol.c	/^void set_stratum_error(shjson_t *reply, int code, char *str)$/;"	f
set_vch	../server/script.h	/^    static int64_t set_vch(const std::vector<unsigned char>& vch)$/;"	f	class:CScriptNum
shapi_accept	../shapi/shapi.c	/^void shapi_accept(int fd, struct sockaddr *net_addr)$/;"	f
shapi_client_list	../shapi/shapi_user.c	/^shapi_t *shapi_client_list;$/;"	v
shapi_close	../shapi/shapi.c	/^void shapi_close(int fd, struct sockaddr *net_addr)$/;"	f
shapi_close_all	../shapi/shapi.c	/^static void shapi_close_all(void)$/;"	f	file:
shapi_close_free	../shapi/shapi.c	/^static void shapi_close_free(void)$/;"	f	file:
shapi_get_iface	../shapi/shapi_protocol.c	/^int shapi_get_iface(char *iface_str)$/;"	f
shapi_init	../shapi/shapi.c	/^int shapi_init(void)$/;"	f
shapi_json	../shapi/shapi.c	/^shjson_t *shapi_json(const char *json_text)$/;"	f
shapi_register_client	../shapi/shapi.c	/^shapi_t *shapi_register_client(int fd)$/;"	f
shapi_register_client_task	../shapi/shapi.c	/^int shapi_register_client_task(shapi_t *user, char *json_text)$/;"	f
shapi_request_id	../shapi/shapi_protocol.c	/^uint32_t shapi_request_id(void)$/;"	f
shapi_request_message	../shapi/shapi_protocol.c	/^int shapi_request_message(shapi_t *user, shjson_t *json)$/;"	f
shapi_runtime_session	../shapi/shapi_protocol.c	/^char *shapi_runtime_session(void)$/;"	f
shapi_send_message	../shapi/shapi_protocol.c	/^int shapi_send_message(shapi_t *user, shjson_t *msg)$/;"	f
shapi_t	../shapi/shapi.h	/^typedef struct shapi_t$/;"	s
shapi_t	../shapi/shapi.h	/^} shapi_t;$/;"	t	typeref:struct:shapi_t
shapi_term	../shapi/shapi.c	/^void shapi_term(void)$/;"	f
shapi_timer	../shapi/shapi.c	/^static void shapi_timer(void)$/;"	f	file:
shapi_user_count	../shapi/shapi_user.c	/^int shapi_user_count(shapi_t *user)$/;"	f
shapi_user_free	../shapi/shapi_user.c	/^void shapi_user_free(shapi_t *f_user)$/;"	f
shapi_user_get	../shapi/shapi_user.c	/^shapi_t *shapi_user_get(int fd)$/;"	f
shapi_user_init	../shapi/shapi_user.c	/^shapi_t *shapi_user_init(int fd)$/;"	f
shc_seed_list	../unet/unet_seed.h	/^static char *shc_seed_list[SHC_SEED_LIST_SIZE] = {$/;"	v
shcoind_chld_signal	../shcoind_signal.c	/^static void shcoind_chld_signal(int sig_num)$/;"	f	file:
shcoind_diag_signal	../shcoind_signal.c	/^static void shcoind_diag_signal(int sig_num)$/;"	f	file:
shcoind_err	../shcoind_log.h	40;"	d
shcoind_info	../shcoind_log.h	43;"	d
shcoind_log	../shcoind_log.h	37;"	d
shcoind_main	../shcoind.c	/^int shcoind_main(int argc, char *argv[])$/;"	f
shcoind_netlog	../shcoind_log.h	46;"	d
shcoind_peer	../shcoind.c	/^shpeer_t *shcoind_peer(void)$/;"	f
shcoind_peer	../test/test_shcoind.c	/^shpeer_t *shcoind_peer(void)$/;"	f
shcoind_poll_msg_queue	../shcoind_daemon.c	/^void shcoind_poll_msg_queue(void)$/;"	f
shcoind_signal_init	../shcoind_signal.c	/^void shcoind_signal_init(void)$/;"	f
shcoind_term	../shcoind.c	/^void shcoind_term(void)$/;"	f
shcoind_term_signal	../shcoind_signal.c	/^static void shcoind_term_signal(int sig_num)$/;"	f	file:
shnet_inform	../server/shlib.h	/^inline int shnet_inform(CIface *iface, int tx_op, void *data, size_t data_len)$/;"	f
shorttxidk0	../server/block_cmpct.h	/^		mutable uint64_t shorttxidk0, shorttxidk1;$/;"	m	class:CBlockHeaderAndShortTxIDs
shorttxidk1	../server/block_cmpct.h	/^		mutable uint64_t shorttxidk0, shorttxidk1;$/;"	m	class:CBlockHeaderAndShortTxIDs
shorttxids	../server/block_cmpct.h	/^		std::vector<uint64_t> shorttxids;$/;"	m	class:CBlockHeaderAndShortTxIDs
shscrypt_swab256	../stratum/stratum_message.c	/^static void shscrypt_swab256(void *dest_p, const void *src_p)$/;"	f	file:
sig	../server/shlib.h	/^    shsig_t sig;$/;"	m	class:SHSig
size	../blockchain/bc.h	/^  bcsize_t size;$/;"	m	struct:bc_idx_t
size	../blockchain/bc.h	/^  volatile size_t size;$/;"	m	struct:bc_map_t
size	../proto/coin_proto.h	/^  uint32_t size;$/;"	m	struct:coinhdr_t
size	../server/key.h	/^		unsigned int size() const { return (vch.size()); }$/;"	f	class:CKey
size	../server/key.h	/^		unsigned int size() const { return vchPubKey.size(); }$/;"	f	class:CPubKey
size	../server/mruset.h	/^		size_type size() const { return set.size(); }$/;"	f	class:mruset
size	../server/txmempool.h	/^    int size()$/;"	f	class:CTxMemPool
size	../test/CuTest.h	/^	int size;$/;"	m	struct:__anon9
size_type	../server/mruset.h	/^		typedef typename std::set<T>::size_type size_type;$/;"	t	class:mruset
socklen_t	../unet/unet.h	/^typedef int socklen_t;$/;"	t
speed	../stratum/stratum.h	/^double speed[MAX_SPEED_STEP];$/;"	m	struct:user_t
spring_bits	../server/spring.c	/^typedef struct spring_bits$/;"	s	file:
spring_bits	../server/spring.c	/^} spring_bits;$/;"	t	typeref:struct:spring_bits	file:
spring_loc_bits	../server/spring.c	/^static void spring_loc_bits(spring_bits *bits)$/;"	f	file:
spring_loc_claim	../server/spring.c	/^void spring_loc_claim(double lat, double lon)$/;"	f
spring_loc_search	../server/spring.c	/^int spring_loc_search(double cur_lat, double cur_lon, double *lat_p, double *lon_p)$/;"	f
spring_loc_set	../server/spring.c	/^void spring_loc_set(double lat, double lon)$/;"	f
spring_matrix_bit	../server/spring.c	/^static unsigned int spring_matrix_bit(uint64_t seed)$/;"	f	file:
spring_matrix_compress	../server/spring.c	/^void spring_matrix_compress(uint32_t matrix[3][3])$/;"	f
spring_render_fractal	../server/spring.c	/^int spring_render_fractal(char *img_path, double zoom, double span, double x_of, double y_of)$/;"	f
ssStatus	../shcoind_svc.c	/^static SERVICE_STATUS		ssStatus;$/;"	v	file:
sshStatusHandle	../shcoind_svc.c	/^static SERVICE_STATUS_HANDLE	sshStatusHandle;$/;"	v	file:
stack	../server/block.h	/^    cstack_t stack;$/;"	m	struct:CScriptWitness
stale	../server/txmempool.h	/^    pool_map stale;$/;"	m	class:CPool
stamp	../blockchain/bc.h	/^  shtime_t stamp;$/;"	m	struct:bc_hdr_t
stamp	../blockchain/bc.h	/^  time_t stamp; $/;"	m	struct:bc_map_t
stamp	../server/txmempool.h	/^    time_t stamp;$/;"	m	class:CPoolTx
stamp	../shcoind_descriptor.h	/^  shtime_t stamp;$/;"	m	struct:desc_t
stamp	../stratum/stratum_task.c	/^  time_t stamp;$/;"	m	struct:task_stat_t	file:
stat	../proto/coin_proto.h	/^  } stat;$/;"	m	struct:coin_iface_t	typeref:struct:coin_iface_t::coin_stat_t
stats	../server/txfeerate.h	/^        TxConfirmStats *stats;$/;"	m	struct:CBlockPolicyEstimator::TxStatsInfo
strAccount	../server/account.h	/^		string strAccount;$/;"	m	class:CAccountCache
strAccount	../server/wallet.h	/^		std::string strAccount;$/;"	m	class:CAccountingEntry
strComment	../server/wallet.h	/^		std::string strComment;$/;"	m	class:CAccountingEntry
strComment	../server/wallet.h	/^		std::string strComment;$/;"	m	class:CWalletKey
strError	../server/txcreator.h	/^    string strError; $/;"	m	class:CTxCreator
strFile	../server/txidx.h	/^    std::string strFile;$/;"	m	class:CDB
strFromAccount	../server/wallet.h	/^		std::string strFromAccount;$/;"	m	class:CWalletTx
strOtherAccount	../server/wallet.h	/^		std::string strOtherAccount;$/;"	m	class:CAccountingEntry
strSubVer	../server/net.h	/^    std::string strSubVer;$/;"	m	class:CNode
strSubVer	../server/net.h	/^    std::string strSubVer;$/;"	m	class:CNodeStats
strWalletFile	../server/wallet.h	/^		std::string strWalletFile;$/;"	m	class:CWallet
stratum_accept	../stratum/stratum.c	/^void stratum_accept(int fd, struct sockaddr *net_addr)$/;"	f
stratum_blake2s_accept	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_blake2s_close	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_blake2s_init	../stratum/stratum_blake2s.c	/^int stratum_blake2s_init(void)$/;"	f
stratum_blake2s_task_gen	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_blake2s_term	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_term(void)$/;"	f	file:
stratum_blake2s_timer	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_timer(void)$/;"	f	file:
stratum_close	../stratum/stratum.c	/^void stratum_close(int fd, struct sockaddr *net_addr)$/;"	f
stratum_close_all	../stratum/stratum.c	/^static void stratum_close_all(void)$/;"	f	file:
stratum_close_free	../stratum/stratum.c	/^static void stratum_close_free(void)$/;"	f	file:
stratum_command_api	../stratum/stratum_command.c	/^int stratum_command_api(int ifaceIndex, user_t *user, const char *method, shjson_t *param)$/;"	f
stratum_command_f	../stratum/stratum_command.c	/^typedef int (*stratum_command_f)(CIface *, user_t *, shjson_t *, shjson_t **);$/;"	t	file:
stratum_command_t	../stratum/stratum_command.c	/^typedef struct stratum_command_t$/;"	s	file:
stratum_command_t	../stratum/stratum_command.c	/^} stratum_command_t;$/;"	t	typeref:struct:stratum_command_t	file:
stratum_command_table	../stratum/stratum_command.c	/^static stratum_command_t stratum_command_table[] =$/;"	v	file:
stratum_find_netid	../stratum/stratum_sync.c	/^user_t *stratum_find_netid(shkey_t *netid, char *worker)$/;"	f
stratum_generic_error	../stratum/stratum_protocol.c	/^static shjson_t *stratum_generic_error(void)$/;"	f	file:
stratum_get_iface	../stratum/stratum_protocol.c	/^int stratum_get_iface(char *iface_str)$/;"	f
stratum_groestl_accept	../stratum/stratum_groestl.c	/^static void stratum_groestl_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_groestl_close	../stratum/stratum_groestl.c	/^static void stratum_groestl_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_groestl_init	../stratum/stratum_groestl.c	/^int stratum_groestl_init(void)$/;"	f
stratum_groestl_task_gen	../stratum/stratum_groestl.c	/^static void stratum_groestl_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_groestl_term	../stratum/stratum_groestl.c	/^static void stratum_groestl_term(void)$/;"	f	file:
stratum_groestl_timer	../stratum/stratum_groestl.c	/^static void stratum_groestl_timer(void)$/;"	f	file:
stratum_html_content	../stratum/stratum_http.c	/^shbuf_t *stratum_html_content(httpreq_t *req)$/;"	f
stratum_html_header	../stratum/stratum_http.c	/^void stratum_html_header(shbuf_t *buff)$/;"	f
stratum_html_main_content	../stratum/stratum_http.c	/^shbuf_t *stratum_html_main_content(struct httpreq_t *req)$/;"	f
stratum_http_args	../stratum/stratum_http.c	/^static shjson_t *stratum_http_args(char *url, char *ret_url)$/;"	f	file:
stratum_http_block_html	../stratum/stratum_http.c	/^void stratum_http_block_html(int ifaceIndex, shbuf_t *buff)$/;"	f
stratum_http_call	../stratum/stratum_http.c	/^int stratum_http_call(const char *url, shbuf_t *buff)$/;"	f
stratum_http_header	../stratum/stratum_http.c	/^void stratum_http_header(http_t *h, shbuf_t *buff, size_t data_len)$/;"	f
stratum_http_main_html	../stratum/stratum_http.c	/^void stratum_http_main_html(unsigned int sk, char *url, shbuf_t *buff)$/;"	f
stratum_http_request	../stratum/stratum_http.c	/^void stratum_http_request(unsigned int sk, char *url)$/;"	f
stratum_http_response	../stratum/stratum_http.c	/^char *stratum_http_response(unsigned int sk, char *url, int *idx_p)$/;"	f
stratum_http_spring_html	../stratum/stratum_http.c	/^void stratum_http_spring_html(unsigned int sk, char *url, shbuf_t *buff)$/;"	f
stratum_http_spring_img	../stratum/stratum_http.c	/^void stratum_http_spring_img(char *args, shbuf_t *buff)$/;"	f
stratum_http_spring_img_html	../stratum/stratum_http.c	/^void stratum_http_spring_img_html(shbuf_t *buff)$/;"	f
stratum_http_validate_img	../stratum/stratum_http.c	/^void stratum_http_validate_img(char *args, shbuf_t *buff)$/;"	f
stratum_http_validate_img_html	../stratum/stratum_http.c	/^void stratum_http_validate_img_html(shbuf_t *buff)$/;"	f
stratum_init	../stratum/stratum.c	/^int stratum_init(void)$/;"	f
stratum_json	../stratum/stratum.c	/^shjson_t *stratum_json(const char *json_text)$/;"	f
stratum_keccak_accept	../stratum/stratum_keccak.c	/^static void stratum_keccak_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_keccak_close	../stratum/stratum_keccak.c	/^static void stratum_keccak_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_keccak_init	../stratum/stratum_keccak.c	/^int stratum_keccak_init(void)$/;"	f
stratum_keccak_task_gen	../stratum/stratum_keccak.c	/^static void stratum_keccak_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_keccak_term	../stratum/stratum_keccak.c	/^static void stratum_keccak_term(void)$/;"	f	file:
stratum_keccak_timer	../stratum/stratum_keccak.c	/^static void stratum_keccak_timer(void)$/;"	f	file:
stratum_qubit_accept	../stratum/stratum_qubit.c	/^static void stratum_qubit_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_qubit_close	../stratum/stratum_qubit.c	/^static void stratum_qubit_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_qubit_init	../stratum/stratum_qubit.c	/^int stratum_qubit_init(void)$/;"	f
stratum_qubit_task_gen	../stratum/stratum_qubit.c	/^static void stratum_qubit_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_qubit_term	../stratum/stratum_qubit.c	/^static void stratum_qubit_term(void)$/;"	f	file:
stratum_qubit_timer	../stratum/stratum_qubit.c	/^static void stratum_qubit_timer(void)$/;"	f	file:
stratum_register_client	../stratum/stratum.c	/^user_t *stratum_register_client(int fd)$/;"	f
stratum_register_client_task	../stratum/stratum.c	/^int stratum_register_client_task(user_t *user, char *json_text)$/;"	f
stratum_register_html_task	../stratum/stratum.c	/^int stratum_register_html_task(user_t *user, char *html_text)$/;"	f
stratum_request_account_address	../stratum/stratum_protocol.c	/^static int stratum_request_account_address(int ifaceIndex, user_t *user, char *hash)$/;"	f	file:
stratum_request_account_alias	../stratum/stratum_protocol.c	/^static int stratum_request_account_alias(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *mode, char *alias_name, char *alias_addr)$/;"	f	file:
stratum_request_account_certificate	../stratum/stratum_protocol.c	/^static int stratum_request_account_certificate(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *mode, char *ctx_name, char *ctx_issuer, double ctx_fee)$/;"	f	file:
stratum_request_account_context	../stratum/stratum_protocol.c	/^static int stratum_request_account_context(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *mode, char *ctx_name, char *ctx_value)$/;"	f	file:
stratum_request_account_create	../stratum/stratum_protocol.c	/^static int stratum_request_account_create(int ifaceIndex, user_t *user, char *account)$/;"	f	file:
stratum_request_account_import	../stratum/stratum_protocol.c	/^static int stratum_request_account_import(int ifaceIndex, user_t *user, char *hash, const char *privaddr_str)$/;"	f	file:
stratum_request_account_info	../stratum/stratum_protocol.c	/^static int stratum_request_account_info(int ifaceIndex, user_t *user, char *account, char *pkey_str)$/;"	f	file:
stratum_request_account_secret	../stratum/stratum_protocol.c	/^static int stratum_request_account_secret(int ifaceIndex, user_t *user, char *hash, const char *pkey_str)$/;"	f	file:
stratum_request_account_transfer	../stratum/stratum_protocol.c	/^static int stratum_request_account_transfer(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *dest, double amount)$/;"	f	file:
stratum_request_account_tx	../stratum/stratum_protocol.c	/^static int stratum_request_account_tx(int ifaceIndex, user_t *user, char *account, char *pkey_str)$/;"	f	file:
stratum_request_account_verify_transfer	../stratum/stratum_protocol.c	/^static int stratum_request_account_verify_transfer(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *dest, double amount)$/;"	f	file:
stratum_request_id	../stratum/stratum_protocol.c	/^uint32_t stratum_request_id(void)$/;"	f
stratum_request_message	../stratum/stratum_protocol.c	/^int stratum_request_message(user_t *user, shjson_t *json)$/;"	f
stratum_request_wallet_sync	../stratum/stratum_protocol.c	/^static int stratum_request_wallet_sync(int ifaceIndex, user_t *user, uint32_t pin, shjson_t *pub_obj)$/;"	f	file:
stratum_round_reset	../stratum/stratum_task.c	/^void stratum_round_reset(time_t stamp)$/;"	f
stratum_runtime_session	../stratum/stratum_protocol.c	/^char *stratum_runtime_session(void)$/;"	f
stratum_send_client_ver	../stratum/stratum_protocol.c	/^int stratum_send_client_ver(user_t *user)$/;"	f
stratum_send_difficulty	../stratum/stratum_protocol.c	/^int stratum_send_difficulty(user_t *user)$/;"	f
stratum_send_error	../stratum/stratum_message.c	/^int stratum_send_error(user_t *user, int err_code)$/;"	f
stratum_send_message	../stratum/stratum_message.c	/^int stratum_send_message(user_t *user, shjson_t *msg)$/;"	f
stratum_send_subscribe	../stratum/stratum_message.c	/^int stratum_send_subscribe(user_t *user)$/;"	f
stratum_send_task	../stratum/stratum_message.c	/^int stratum_send_task(user_t *user, task_t *task, int clean)$/;"	f
stratum_session_nonce	../stratum/stratum_protocol.c	/^int stratum_session_nonce(void)$/;"	f
stratum_set_difficulty	../stratum/stratum_protocol.c	/^int stratum_set_difficulty(user_t *user, int diff)$/;"	f
stratum_sha256d_accept	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_sha256d_close	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_sha256d_init	../stratum/stratum_sha256d.c	/^int stratum_sha256d_init(void)$/;"	f
stratum_sha256d_task_gen	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_sha256d_term	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_term(void)$/;"	f	file:
stratum_sha256d_timer	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_timer(void)$/;"	f	file:
stratum_skein_accept	../stratum/stratum_skein.c	/^static void stratum_skein_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_skein_close	../stratum/stratum_skein.c	/^static void stratum_skein_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_skein_init	../stratum/stratum_skein.c	/^int stratum_skein_init(void)$/;"	f
stratum_skein_task_gen	../stratum/stratum_skein.c	/^static void stratum_skein_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_skein_term	../stratum/stratum_skein.c	/^static void stratum_skein_term(void)$/;"	f	file:
stratum_skein_timer	../stratum/stratum_skein.c	/^static void stratum_skein_timer(void)$/;"	f	file:
stratum_subscribe	../stratum/stratum_protocol.c	/^static int stratum_subscribe(user_t *user)$/;"	f	file:
stratum_sync	../stratum/stratum_sync.c	/^void stratum_sync(void)$/;"	f
stratum_sync_connect	../stratum/stratum_sync.c	/^int stratum_sync_connect(user_t *user)$/;"	f
stratum_sync_cycle	../stratum/stratum_sync.c	/^void stratum_sync_cycle(CIface *iface, user_t *user)$/;"	f
stratum_sync_elevate_req	../stratum/stratum_sync.c	/^static int stratum_sync_elevate_req(user_t *user)$/;"	f	file:
stratum_sync_ident_req	../stratum/stratum_sync.c	/^static int stratum_sync_ident_req(user_t *user)$/;"	f	file:
stratum_sync_init	../stratum/stratum_sync.c	/^void stratum_sync_init(void)$/;"	f
stratum_sync_ping_req	../stratum/stratum_sync.c	/^static int stratum_sync_ping_req(user_t *user)$/;"	f	file:
stratum_sync_recv	../stratum/stratum_sync.c	/^int stratum_sync_recv(user_t *peer, char *json_text)$/;"	f
stratum_sync_resp	../stratum/stratum_sync.c	/^int stratum_sync_resp(user_t *user, shjson_t *tree)$/;"	f
stratum_sync_userlist_req	../stratum/stratum_sync.c	/^static int stratum_sync_userlist_req(user_t *user)$/;"	f	file:
stratum_sync_userlist_resp	../stratum/stratum_sync.c	/^int stratum_sync_userlist_resp(user_t *user, shjson_t *tree)$/;"	f
stratum_sync_wallet_listaddr_req	../stratum/stratum_sync.c	/^static int stratum_sync_wallet_listaddr_req(user_t *user)$/;"	f	file:
stratum_sync_wallet_setkey_req	../stratum/stratum_sync.c	/^static int stratum_sync_wallet_setkey_req(user_t *user)$/;"	f	file:
stratum_sync_walletlist_resp	../stratum/stratum_sync.c	/^int stratum_sync_walletlist_resp(user_t *user, shjson_t *tree)$/;"	f
stratum_task_gen	../stratum/stratum_task.c	/^void stratum_task_gen(task_attr_t *attr)$/;"	f
stratum_task_weight	../stratum/stratum_task.c	/^void stratum_task_weight(task_attr_t *attr)$/;"	f
stratum_task_work	../stratum/stratum_task.c	/^void stratum_task_work(task_t *task, task_attr_t *attr)$/;"	f
stratum_term	../stratum/stratum.c	/^void stratum_term(void)$/;"	f
stratum_timer	../stratum/stratum.c	/^static void stratum_timer(void)$/;"	f	file:
stratum_user	../stratum/stratum_user.c	/^user_t *stratum_user(user_t *user, char *username)$/;"	f
stratum_user_block	../stratum/stratum_user.c	/^void stratum_user_block(user_t *user, double share_diff)$/;"	f
stratum_user_broadcast_task	../stratum/stratum_user.c	/^int stratum_user_broadcast_task(task_t *task, task_attr_t *attr)$/;"	f
stratum_user_count	../stratum/stratum_user.c	/^int stratum_user_count(user_t *user)$/;"	f
stratum_user_find	../stratum/stratum_user.c	/^user_t *stratum_user_find(char *username)$/;"	f
stratum_user_free	../stratum/stratum_user.c	/^void stratum_user_free(user_t *f_user)$/;"	f
stratum_user_get	../stratum/stratum_user.c	/^user_t *stratum_user_get(int fd)$/;"	f
stratum_user_init	../stratum/stratum_user.c	/^user_t *stratum_user_init(int fd)$/;"	f
stratum_user_max_height	../stratum/stratum_task.c	/^static uint64_t stratum_user_max_height(void)$/;"	f	file:
stratum_user_speed	../stratum/stratum_user.c	/^double stratum_user_speed(user_t *user)$/;"	f
stratum_validate_submit	../stratum/stratum_protocol.c	/^int stratum_validate_submit(user_t *user, shjson_t *json)$/;"	f
stratum_work_cycle	../stratum/stratum.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_blake2s.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_groestl.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_keccak.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_qubit.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_sha256d.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_skein.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_x11.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_x11_accept	../stratum/stratum_x11.c	/^static void stratum_x11_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_x11_close	../stratum/stratum_x11.c	/^static void stratum_x11_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_x11_init	../stratum/stratum_x11.c	/^int stratum_x11_init(void)$/;"	f
stratum_x11_task_gen	../stratum/stratum_x11.c	/^static void stratum_x11_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_x11_term	../stratum/stratum_x11.c	/^static void stratum_x11_term(void)$/;"	f	file:
stratum_x11_timer	../stratum/stratum_x11.c	/^static void stratum_x11_timer(void)$/;"	f	file:
string_list	../server/mnemonic.h	/^typedef vector<string> string_list;$/;"	t
sync_acc	../stratum/stratum.h	/^  char sync_acc[256];$/;"	m	struct:user_t
sync_addr	../stratum/stratum.h	/^  time_t sync_addr;$/;"	m	struct:user_t
sync_flags	../stratum/stratum.h	/^  int sync_flags;$/;"	m	struct:user_t
sync_pubkey	../stratum/stratum.h	/^  char sync_pubkey[256];$/;"	m	struct:user_t
sync_user	../stratum/stratum.h	/^  time_t sync_user;$/;"	m	struct:user_t
sys_user	../stratum/stratum_task.c	/^static user_t *sys_user;$/;"	v	file:
szMemMax	../server/txmempool.h	/^    size_t szMemMax;$/;"	m	class:CPool
tab_map	../blockchain/bc.h	/^  bc_map_t tab_map;$/;"	m	struct:bc_t
target	../stratum/stratum.h	/^  double target;$/;"	m	struct:task_t
task_attr_t	../stratum/stratum.h	/^typedef struct task_attr_t$/;"	s
task_attr_t	../stratum/stratum.h	/^} task_attr_t;$/;"	t	typeref:struct:task_attr_t
task_free	../stratum/stratum_task.c	/^void task_free(task_t **task_p)$/;"	f
task_id	../stratum/stratum.h	/^  unsigned int task_id;$/;"	m	struct:task_t
task_init	../stratum/stratum_task.c	/^task_t *task_init(task_attr_t *attr)$/;"	f
task_stat_t	../stratum/stratum_task.c	/^typedef struct task_stat_t$/;"	s	file:
task_stat_t	../stratum/stratum_task.c	/^} task_stat_t;$/;"	t	typeref:struct:task_stat_t	file:
task_t	../stratum/stratum.h	/^typedef struct task_t$/;"	s
task_t	../stratum/stratum.h	/^} task_t;$/;"	t	typeref:struct:task_t
task_verify	../stratum/stratum_task.c	/^static int task_verify(int ifaceIndex, int *work_reset_p)$/;"	f	file:
testnet_seed_list	../unet/unet_seed.h	/^static char *testnet_seed_list[TESTNET_SEED_LIST_SIZE] = {$/;"	v
th_timer	../unet/unet.h	/^	pthread_t th_timer;$/;"	m	struct:unet_bind_t
threadId	../server/net.h	/^enum threadId$/;"	g
timer_stamp	../unet/unet.h	/^  shtime_t timer_stamp;$/;"	m	struct:unet_bind_t
timing_init	../shcoind_log.c	/^void timing_init(char *tag, shtime_t *stamp_p)$/;"	f
timing_term	../shcoind_log.c	/^void timing_term(int ifaceIndex, char *tag, shtime_t *stamp_p)$/;"	f
title	../stratum/stratum_http.h	/^	char *title;$/;"	m	struct:http_t
tmpl_merkle	../stratum/stratum.h	/^  char tmpl_merkle[256];$/;"	m	struct:task_t
tmpl_xnonce1	../stratum/stratum.h	/^  char tmpl_xnonce1[16];$/;"	m	struct:task_t
tnow	../stratum/stratum.h	/^  time_t tnow;$/;"	m	struct:task_attr_t
tot_block_accept	../proto/coin_proto.h	/^    uint64_t tot_block_accept;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_block_orphan	../proto/coin_proto.h	/^    uint64_t tot_block_orphan;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_block_submit	../proto/coin_proto.h	/^    uint64_t tot_block_submit;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_spring_accept	../proto/coin_proto.h	/^    uint64_t tot_spring_accept;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_spring_submit	../proto/coin_proto.h	/^    uint64_t tot_spring_submit;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_accept	../proto/coin_proto.h	/^    uint64_t tot_tx_accept;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_mint	../proto/coin_proto.h	/^		uint64_t tot_tx_mint;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_return	../proto/coin_proto.h	/^		uint64_t tot_tx_return;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_submit	../proto/coin_proto.h	/^    uint64_t tot_tx_submit;$/;"	m	struct:coin_iface_t::coin_stat_t
total	../server/chain.h	/^  unsigned int total;$/;"	m	struct:ChainOp
total	../shcoind_descriptor.h	/^  int total;$/;"	m	struct:desc_t
total	../stratum/stratum_task.c	/^  uint32_t total;$/;"	m	struct:task_stat_t	file:
trust	../unet/unet_peerdb.c	/^  int64_t trust;$/;"	m	struct:peerdb_t	file:
tx	../server/block_cmpct.h	/^		CTransactionRef& tx;$/;"	m	struct:TransactionCompressor
tx	../server/block_cmpct.h	/^	CTransactionRef tx;$/;"	m	struct:PrefilledTransaction
tx	../server/txmempool.h	/^    CTransaction tx;$/;"	m	class:CPoolTx
tx	../server/txsignature.h	/^		CTransaction *tx;$/;"	m	class:CSignature
tx	../server/wallet.h	/^		const CWalletTx *tx;$/;"	m	class:COutput
txCtAvg	../server/txfeerate.h	/^    std::vector<double> txCtAvg;$/;"	m	class:TxConfirmStats
tx_cache	../server/block.h	/^typedef std::map<uint256, CTransaction> tx_cache;$/;"	t
tx_map	../server/block.h	/^typedef map< uint256, vector<uint256> > tx_map;$/;"	t
tx_tot	../proto/coin_proto.h	/^  uint64_t tx_tot; \/* nTransactionsUpdated *\/$/;"	m	struct:coin_iface_t
txn	../server/block_cmpct.h	/^		std::vector<CTransactionRef> txn;$/;"	m	class:BlockTransactions
txn	../server/bloom.h	/^    CPartialMerkleTree txn;$/;"	m	class:CMerkleBlock
txn_available	../server/block_cmpct.h	/^		std::vector<CTransactionRef> txn_available;$/;"	m	class:PartiallyDownloadedBlock
txnouttype	../server/script.h	/^enum txnouttype$/;"	g
type	../unet/unet.h	/^  int type;$/;"	m	struct:uevent_t
uevent_clear	../unet/unet_event.c	/^void uevent_clear(uevent_t *e)$/;"	f
uevent_clear_pos	../unet/unet_event.c	/^void uevent_clear_pos(int idx)$/;"	f
uevent_cycle	../unet/unet_event.c	/^void uevent_cycle(void)$/;"	f
uevent_cycle_peer_conn	../unet/unet_event.c	/^int uevent_cycle_peer_conn(uevent_t *e)$/;"	f
uevent_cycle_peer_verify	../unet/unet_event.c	/^int uevent_cycle_peer_verify(uevent_t *e)$/;"	f
uevent_new	../unet/unet_event.c	/^uevent_t *uevent_new(int umode, int type, void *data)$/;"	f
uevent_peer_verify	../unet/unet_event.c	/^int uevent_peer_verify(uevent_t *e)$/;"	f
uevent_t	../unet/unet.h	/^typedef struct uevent_t$/;"	s
uevent_t	../unet/unet.h	/^} uevent_t;$/;"	t	typeref:struct:uevent_t
uevent_type_count	../unet/unet_event.c	/^unsigned int uevent_type_count(int type)$/;"	f
uint64	../proto/types.h	/^typedef unsigned long long  uint64;$/;"	t
uint64	../shcoind.h	/^typedef unsigned long long uint64;$/;"	t
unconfTxs	../server/txfeerate.h	/^    std::vector<std::vector<int> > unconfTxs;  \/\/unconfTxs[Y][X]$/;"	m	class:TxConfirmStats
unet_accept	../unet/unet_accept.c	/^int unet_accept(int mode, unsigned int *sk_p)$/;"	f
unet_add	../unet/unet.c	/^int unet_add(int mode, unsigned int sk)$/;"	f
unet_addr_op	../unet/unet.h	/^typedef void (*unet_addr_op)(int, struct sockaddr *);$/;"	t
unet_bind	../unet/unet_bind.c	/^int unet_bind(int mode, int port, char *host)$/;"	f
unet_bind_esl	../unet/unet_bind.c	/^int unet_bind_esl(int mode, int port, char *host)$/;"	f
unet_bind_flag_set	../unet/unet_bind.c	/^void unet_bind_flag_set(int mode, int flags)$/;"	f
unet_bind_flag_unset	../unet/unet_bind.c	/^void unet_bind_flag_unset(int mode, int flags)$/;"	f
unet_bind_t	../unet/unet.h	/^typedef struct unet_bind_t$/;"	s
unet_bind_t	../unet/unet.h	/^} unet_bind_t;$/;"	t	typeref:struct:unet_bind_t
unet_bind_table	../unet/unet_bind.c	/^unet_bind_t *unet_bind_table(int mode)$/;"	f
unet_close	../unet/unet_close.c	/^int unet_close(unsigned int sk, char *tag)$/;"	f
unet_close_all	../unet/unet_close.c	/^int unet_close_all(int mode)$/;"	f
unet_close_idle	../unet/unet_close.c	/^void unet_close_idle(void)$/;"	f
unet_connect	../unet/unet_connect.c	/^int unet_connect(int mode, struct sockaddr *net_addr, unsigned int *sk_p)$/;"	f
unet_connop_set	../unet/unet_bind.c	/^void unet_connop_set(int mode, unet_addr_op accept_op)$/;"	f
unet_cycle	../unet/unet.c	/^void unet_cycle(double max_t)$/;"	f
unet_disconnop_set	../unet/unet_bind.c	/^void unet_disconnop_set(int mode, unet_addr_op close_op)$/;"	f
unet_hostname	../unet/unet_accept.c	/^static const char *unet_hostname(struct sockaddr *addr)$/;"	f	file:
unet_idle	../unet/unet.c	/^void unet_idle(void)$/;"	f
unet_local_add	../unet/unet_local.c	/^void unet_local_add(char *ipaddr_in)$/;"	f
unet_local_discover1	../unet/unet_local.c	/^int unet_local_discover1(shnum_t *lat_p, shnum_t *lon_p) \/* ipv4 *\/$/;"	f
unet_local_discover2	../unet/unet_local.c	/^void unet_local_discover2(void) \/* ipv4 *\/$/;"	f
unet_local_host	../unet/unet_local.c	/^const char *unet_local_host(void)$/;"	f
unet_local_init	../unet/unet_local.c	/^void unet_local_init(void)$/;"	f
unet_local_set	../unet/unet_local.c	/^void unet_local_set(char *ipaddr)$/;"	f
unet_local_verify	../unet/unet_local.c	/^int unet_local_verify(char *ipaddr)$/;"	f
unet_local_verify_fd	../unet/unet_accept.c	/^int unet_local_verify_fd(int fd)$/;"	f
unet_log	../unet/unet.h	197;"	d
unet_mode	../unet/unet.c	/^int unet_mode(unsigned int sk)$/;"	f
unet_mode_label	../unet/unet.c	/^const char *unet_mode_label(int mode)$/;"	f
unet_netaddr_str	../unet/unet_peerdb.c	/^const char *unet_netaddr_str(struct sockaddr *addr)$/;"	f
unet_op	../unet/unet.h	/^typedef void (*unet_op)(void);$/;"	t
unet_peer_decr	../unet/unet_peerdb.c	/^void unet_peer_decr(int mode, shpeer_t *peer)$/;"	f
unet_peer_export_path	../unet/unet_peerdb.c	/^int unet_peer_export_path(int ifaceIndex, char *path)$/;"	f
unet_peer_fill	../unet/unet_peerdb.c	/^void unet_peer_fill(int mode)$/;"	f
unet_peer_fill_seed	../unet/unet_peerdb.c	/^void unet_peer_fill_seed(int mode)$/;"	f
unet_peer_find	../unet/unet_peerdb.c	/^int unet_peer_find(int mode, struct sockaddr *addr)$/;"	f
unet_peer_incr	../unet/unet_peerdb.c	/^void unet_peer_incr(int mode, shpeer_t *peer)$/;"	f
unet_peer_prune	../unet/unet_peerdb.c	/^void unet_peer_prune(int mode)$/;"	f
unet_peer_scan	../unet/unet_peerdb.c	/^void unet_peer_scan(void)$/;"	f
unet_peer_total	../unet/unet_peerdb.c	/^unsigned int unet_peer_total(int mode)$/;"	f
unet_peer_track_add	../unet/unet_peerdb.c	/^void unet_peer_track_add(int ifaceIndex, shpeer_t *peer)$/;"	f
unet_peer_track_list	../unet/unet_peerdb.c	/^shpeer_t **unet_peer_track_list(int mode, int max_peer)$/;"	f
unet_peer_track_remove	../unet/unet_peerdb.c	/^void unet_peer_track_remove(int ifaceIndex, shpeer_t *peer)$/;"	f
unet_peer_wait	../unet/unet_peerdb.c	/^int unet_peer_wait(unet_bind_t *bind)$/;"	f
unet_shutdown	../unet/unet.c	/^void unet_shutdown(unsigned int sk)$/;"	f
unet_table_t	../unet/unet.h	/^typedef struct desc_t unet_table_t;$/;"	t	typeref:struct:desc_t
unet_thread_free	../unet/unet_thread.c	/^void unet_thread_free(int mode)$/;"	f
unet_thread_init	../unet/unet_thread.c	/^void unet_thread_init(int mode)$/;"	f
unet_thread_timer	../unet/unet_thread.c	/^void *unet_thread_timer(unet_bind_t *bind)$/;"	f
unet_timer_cycle	../unet/unet_timer.c	/^void unet_timer_cycle(void)$/;"	f
unet_timer_cycle_mode	../unet/unet_timer.c	/^void unet_timer_cycle_mode(unet_bind_t *bind)$/;"	f
unet_timer_set	../unet/unet_timer.c	/^int unet_timer_set(int mode, unet_op timer_f)$/;"	f
unet_timer_unset	../unet/unet_timer.c	/^void unet_timer_unset(int mode)$/;"	f
unet_unbind	../unet/unet_bind.c	/^int unet_unbind(int mode)$/;"	f
unet_write	../unet/unet_io.c	/^int unet_write(unsigned int sk, char *data, size_t data_len)$/;"	f
unlink_chain	../shcoind.c	/^static void unlink_chain(void)$/;"	f	file:
usage_help	../shcoind.c	/^void usage_help(void)$/;"	f
usage_version	../shcoind.c	/^void usage_version(void)$/;"	f
user_flag_label	../stratum/stratum_user.c	/^static const char *user_flag_label[MAX_USER_FLAGS] = {$/;"	v	file:
user_t	../stratum/stratum.h	/^typedef struct user_t$/;"	s
user_t	../stratum/stratum.h	/^} user_t;$/;"	t	typeref:struct:user_t
uthread_t	../unet/unet.h	/^typedef void *(*uthread_t)(void *);$/;"	t
vAddr	../server/account.h	/^		CCoinAddr vAddr[MAX_ACCADDR];$/;"	m	class:CAccountCache
vAddrToSend	../server/net.h	/^    std::vector<CAddress> vAddrToSend;$/;"	m	class:CNode
vBatchIn	../server/txcreator.h	/^    vector<CTxIn> vBatchIn;$/;"	m	class:CTxBatchCreator
vBits	../server/bloom.h	/^    std::vector<bool> vBits;$/;"	m	class:CPartialMerkleTree
vBlockHashesToAnnounce	../server/net.h	/^		std::vector<uint256> vBlockHashesToAnnounce;$/;"	m	class:CNode
vBytes	../server/bloom.h	/^        std::vector<unsigned char> vBytes;$/;"	m	class:CPartialMerkleTree
vData	../server/matrix.h	/^		uint32_t vData[3][3];$/;"	m	class:CTxMatrix
vData	../server/net.h	/^    std::vector<unsigned char> vData;$/;"	m	class:CBloomFilter
vDeployments	../proto/coin_proto.h	/^  BIP9Deployment vDeployments[MAX_VERSION_BITS_DEPLOYMENTS];  $/;"	m	struct:coin_iface_t
vHash	../server/bloom.h	/^    std::vector<uint256> vHash;$/;"	m	class:CPartialMerkleTree
vHave	../server/block.h	/^		std::vector<uint256> vHave;$/;"	m	class:CBlockLocator
vInventoryToSend	../server/net.h	/^    std::vector<CInv> vInventoryToSend;$/;"	m	class:CNode
vMatchedTxn	../server/bloom.h	/^    std::vector<std::pair<unsigned int, uint256> > vMatchedTxn;$/;"	m	class:CMerkleBlock
vMerkleBranch	../server/main.h	/^    std::vector<uint256> vMerkleBranch;$/;"	m	class:CMerkleTx
vOrderForm	../server/wallet.h	/^		std::vector<std::pair<std::string, std::string> > vOrderForm;$/;"	m	class:CWalletTx
vRecv	../server/net.h	/^    CDataStream vRecv;$/;"	m	class:CNode
vSend	../server/net.h	/^    CDataStream vSend;$/;"	m	class:CNode
vSpent	../server/block.h	/^    std::vector<CDiskTxPos> vSpent;$/;"	m	class:CTxIndex
vTxList	../server/txcreator.h	/^    vector<CWalletTx> vTxList;$/;"	m	class:CTxBatchCreator
value_type	../server/mruset.h	/^		typedef T value_type;$/;"	t	class:mruset
vch	../server/key.h	/^    CSecret vch;$/;"	m	class:CKey
vchChain	../server/hdkey.h	/^    cbuff vchChain;$/;"	m	class:HDPrivKey
vchChain	../server/hdkey.h	/^    cbuff vchChain;$/;"	m	class:HDPubKey
vchCryptedKey	../server/crypter.h	/^    std::vector<unsigned char> vchCryptedKey;$/;"	m	class:CMasterKey
vchData	../server/base58.h	/^		cbuff vchData;$/;"	m	class:CBase58Data
vchDefaultKey	../server/wallet.h	/^		CPubKey vchDefaultKey;$/;"	m	class:CWallet
vchFingerprint	../server/dikey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:DIExtKey
vchFingerprint	../server/dikey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:DIExtPubKey
vchFingerprint	../server/eckey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:ECExtKey
vchFingerprint	../server/eckey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:ECExtPubKey
vchFromString	../server/shlib.h	/^inline std::vector<unsigned char> vchFromString(const std::string &str) {$/;"	f
vchOtherDerivationParameters	../server/crypter.h	/^    std::vector<unsigned char> vchOtherDerivationParameters;$/;"	m	class:CMasterKey
vchPrivKey	../server/wallet.h	/^		CPrivKey vchPrivKey;$/;"	m	class:CWalletKey
vchPub	../server/key.h	/^    cbuff vchPub;$/;"	m	class:CKey
vchPubKey	../server/key.h	/^		std::vector<unsigned char> vchPubKey;$/;"	m	class:CPubKey
vchPubKey	../server/wallet.h	/^		CPubKey vchPubKey;$/;"	m	class:CAccount
vchSalt	../server/crypter.h	/^    std::vector<unsigned char> vchSalt;$/;"	m	class:CMasterKey
vchVersion	../server/base58.h	/^		cbuff vchVersion;$/;"	m	class:CBase58Data
verify_rpc_pin	../shcoind_rpc.c	/^int verify_rpc_pin(char *host, uint32_t pin)$/;"	f
version	../server/script.h	/^	unsigned int version;$/;"	m	struct:WitnessUnknown
version	../stratum/stratum.h	/^  int version;$/;"	m	struct:task_t
vfSpent	../server/wallet.h	/^		std::vector<char> vfSpent; \/\/ which outputs are already spent$/;"	m	class:CWalletTx
vin	../server/block.h	/^    std::vector<CTxIn> vin;$/;"	m	class:CTransactionCore
vout	../server/block.h	/^    std::vector<CTxOut> vout;$/;"	m	class:CTransactionCore
vtx	../server/block.h	/^    std::vector<CTransaction> vtx;$/;"	m	class:CBlock
vtxPrev	../server/wallet.h	/^		std::vector<CMerkleTx> vtxPrev;$/;"	m	class:CWalletTx
vtxinwit	../server/block.h	/^    std::vector<CTxInWitness> vtxinwit;$/;"	m	class:CTxWitness
wallet	../server/account.h	/^		mutable CWallet *wallet;$/;"	m	class:CAccountCache
wbuff	../shcoind_descriptor.h	/^  shbuf_t *wbuff;$/;"	m	struct:desc_t
weight	../stratum/stratum.h	/^  double weight[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
wit	../server/block.h	/^    CTxWitness wit;$/;"	m	class:CTransactionCore
work	../stratum/stratum.h	/^  scrypt_work work;$/;"	m	struct:task_t
work_diff	../stratum/stratum.h	/^  int work_diff;$/;"	m	struct:user_t
work_reset	../stratum/stratum.h	/^  int work_reset;$/;"	m	struct:task_t
work_reset	../stratum/stratum_task.c	/^static int work_reset[MAX_COIN_IFACE];$/;"	v	file:
work_stamp	../proto/coin_proto.h	/^  time_t work_stamp;$/;"	m	struct:coin_iface_t
work_stamp	../stratum/stratum.h	/^  time_t work_stamp;$/;"	m	struct:user_t
worker	../stratum/stratum.h	/^  char worker[128];$/;"	m	struct:user_t
write_default_shc_conf_file	../shcoind_opt.c	/^static void write_default_shc_conf_file(void)$/;"	f	file:
x	../server/spring.c	/^  unsigned int x, y;$/;"	m	struct:spring_bits	file:
xnonce2	../stratum/stratum.h	/^  char xnonce2[16];$/;"	m	struct:task_t
y	../server/spring.c	/^  unsigned int x, y;$/;"	m	struct:spring_bits	file:
~CBase58Data	../server/base58.h	/^		~CBase58Data()$/;"	f	class:CBase58Data
~CCrypter	../server/crypter.h	/^    ~CCrypter()$/;"	f	class:CCrypter
~CDB	../server/txidx.h	/^    ~CDB() { Close(); }$/;"	f	class:CDB
~CKeyStore	../server/keystore.h	/^    virtual ~CKeyStore() {}$/;"	f	class:CKeyStore
~CNode	../server/net.h	/^    ~CNode()$/;"	f	class:CNode
