!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A0	../server/algo/sph_simd.c	1076;"	d	file:
A0	../server/algo/sph_simd.c	1098;"	d	file:
A0	../server/algo/sph_simd.c	1303;"	d	file:
A0	../server/algo/sph_simd.c	1339;"	d	file:
A0	../server/algo/sph_simd.c	1488;"	d	file:
A0	../server/algo/sph_simd.c	812;"	d	file:
A0	../server/algo/sph_simd.c	957;"	d	file:
A0	../server/algo/sph_simd.c	977;"	d	file:
A1	../server/algo/sph_simd.c	1077;"	d	file:
A1	../server/algo/sph_simd.c	1099;"	d	file:
A1	../server/algo/sph_simd.c	1304;"	d	file:
A1	../server/algo/sph_simd.c	1340;"	d	file:
A1	../server/algo/sph_simd.c	1489;"	d	file:
A1	../server/algo/sph_simd.c	813;"	d	file:
A1	../server/algo/sph_simd.c	958;"	d	file:
A1	../server/algo/sph_simd.c	978;"	d	file:
A2	../server/algo/sph_simd.c	1078;"	d	file:
A2	../server/algo/sph_simd.c	1100;"	d	file:
A2	../server/algo/sph_simd.c	1305;"	d	file:
A2	../server/algo/sph_simd.c	1341;"	d	file:
A2	../server/algo/sph_simd.c	1490;"	d	file:
A2	../server/algo/sph_simd.c	814;"	d	file:
A2	../server/algo/sph_simd.c	959;"	d	file:
A2	../server/algo/sph_simd.c	979;"	d	file:
A3	../server/algo/sph_simd.c	1079;"	d	file:
A3	../server/algo/sph_simd.c	1101;"	d	file:
A3	../server/algo/sph_simd.c	1306;"	d	file:
A3	../server/algo/sph_simd.c	1342;"	d	file:
A3	../server/algo/sph_simd.c	1491;"	d	file:
A3	../server/algo/sph_simd.c	815;"	d	file:
A3	../server/algo/sph_simd.c	960;"	d	file:
A3	../server/algo/sph_simd.c	980;"	d	file:
A4	../server/algo/sph_simd.c	1102;"	d	file:
A4	../server/algo/sph_simd.c	1307;"	d	file:
A4	../server/algo/sph_simd.c	1343;"	d	file:
A4	../server/algo/sph_simd.c	1492;"	d	file:
A5	../server/algo/sph_simd.c	1103;"	d	file:
A5	../server/algo/sph_simd.c	1308;"	d	file:
A5	../server/algo/sph_simd.c	1344;"	d	file:
A5	../server/algo/sph_simd.c	1493;"	d	file:
A6	../server/algo/sph_simd.c	1104;"	d	file:
A6	../server/algo/sph_simd.c	1309;"	d	file:
A6	../server/algo/sph_simd.c	1345;"	d	file:
A6	../server/algo/sph_simd.c	1494;"	d	file:
A7	../server/algo/sph_simd.c	1105;"	d	file:
A7	../server/algo/sph_simd.c	1310;"	d	file:
A7	../server/algo/sph_simd.c	1346;"	d	file:
A7	../server/algo/sph_simd.c	1495;"	d	file:
ACCADDRF_DERIVE	../server/account.h	41;"	d
ACCADDRF_DILITHIUM	../server/account.h	45;"	d
ACCADDRF_STATIC	../server/account.h	43;"	d
ACCADDRF_WITNESS	../server/account.h	39;"	d
ACCADDR_CHANGE	../server/wallet.h	66;"	d
ACCADDR_EXEC	../server/wallet.h	68;"	d
ACCADDR_EXT	../server/wallet.h	72;"	d
ACCADDR_HDKEY	../server/wallet.h	70;"	d
ACCADDR_MINER	../server/wallet.h	76;"	d
ACCADDR_NOTARY	../server/wallet.h	74;"	d
ACCADDR_RECV	../server/wallet.h	64;"	d
ADDRMAN_GETADDR_MAX	../server/addrman.h	188;"	d
ADDRMAN_GETADDR_MAX_PCT	../server/addrman.h	185;"	d
ADDRMAN_HORIZON_DAYS	../server/addrman.h	173;"	d
ADDRMAN_MAX_FAILURES	../server/addrman.h	179;"	d
ADDRMAN_MIN_FAIL_DAYS	../server/addrman.h	182;"	d
ADDRMAN_NEW_BUCKETS_PER_ADDRESS	../server/addrman.h	167;"	d
ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP	../server/addrman.h	164;"	d
ADDRMAN_NEW_BUCKET_COUNT	../server/addrman.h	155;"	d
ADDRMAN_NEW_BUCKET_SIZE	../server/addrman.h	158;"	d
ADDRMAN_RETRIES	../server/addrman.h	176;"	d
ADDRMAN_TRIED_BUCKETS_PER_GROUP	../server/addrman.h	161;"	d
ADDRMAN_TRIED_BUCKET_COUNT	../server/addrman.h	149;"	d
ADDRMAN_TRIED_BUCKET_SIZE	../server/addrman.h	152;"	d
ADDRMAN_TRIED_ENTRIES_INSPECT_ON_EVICT	../server/addrman.h	170;"	d
ADDR_BASE58	../server/coinaddr.h	42;"	d
ADDR_BECH32	../server/coinaddr.h	43;"	d
ADDR_UNKNOWN	../server/coinaddr.h	41;"	d
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	class:BlockTransactions
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	class:BlockTransactionsRequest
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	class:CBlockHeaderAndShortTxIDs
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^		ADD_SERIALIZE_METHODS;$/;"	m	struct:TransactionCompressor
ADD_SERIALIZE_METHODS	../server/block_cmpct.h	/^	ADD_SERIALIZE_METHODS;$/;"	m	struct:PrefilledTransaction
AES0	../server/algo/aes_helper.c	/^static const sph_u32 AES0[256] = {$/;"	v	file:
AES0	../server/algo/aes_helper.c	57;"	d	file:
AES0	../server/algo/aes_helper.c	87;"	d	file:
AES1	../server/algo/aes_helper.c	/^static const sph_u32 AES1[256] = {$/;"	v	file:
AES1	../server/algo/aes_helper.c	58;"	d	file:
AES1	../server/algo/aes_helper.c	88;"	d	file:
AES2	../server/algo/aes_helper.c	/^static const sph_u32 AES2[256] = {$/;"	v	file:
AES2	../server/algo/aes_helper.c	59;"	d	file:
AES2	../server/algo/aes_helper.c	89;"	d	file:
AES3	../server/algo/aes_helper.c	/^static const sph_u32 AES3[256] = {$/;"	v	file:
AES3	../server/algo/aes_helper.c	60;"	d	file:
AES3	../server/algo/aes_helper.c	90;"	d	file:
AES_2ROUNDS	../server/algo/sph_echo.c	148;"	d	file:
AES_2ROUNDS	../server/algo/sph_echo.c	419;"	d	file:
AES_BIG_ENDIAN	../server/algo/sph_echo.c	73;"	d	file:
AES_BIG_ENDIAN	../server/algo/sph_shavite.c	64;"	d	file:
AES_ROUND_BE	../server/algo/aes_helper.c	62;"	d	file:
AES_ROUND_LE	../server/algo/aes_helper.c	92;"	d	file:
AES_ROUND_NOKEY	../server/algo/sph_shavite.c	91;"	d	file:
AES_ROUND_NOKEY_BE	../server/algo/aes_helper.c	81;"	d	file:
AES_ROUND_NOKEY_LE	../server/algo/aes_helper.c	111;"	d	file:
AESx	../server/algo/aes_helper.c	52;"	d	file:
AESx	../server/algo/aes_helper.c	86;"	d	file:
ALGOBITS_NUM_BITS	../server/algobits.h	53;"	d
ALGOBITS_TOP_BITS	../server/algobits.h	49;"	d
ALGOBITS_TOP_MASK	../server/algobits.h	51;"	d
ALGO_BLAKE2S	../server/algobits.h	33;"	d
ALGO_GROESTL	../server/algobits.h	35;"	d
ALGO_KECCAK	../server/algobits.h	31;"	d
ALGO_QUBIT	../server/algobits.h	34;"	d
ALGO_SCRYPT	../server/algobits.h	29;"	d
ALGO_SHA256D	../server/algobits.h	30;"	d
ALGO_SKEIN	../server/algobits.h	36;"	d
ALGO_X11	../server/algobits.h	32;"	d
ALGO___HMAC_SHA512_H	../server/algo/hmac_sha512.h	27;"	d
ALGO___SHA512_H	../server/algo/sha512.h	27;"	d
ALG_ECDSA	../server/ext/txext.h	/^    static const int ALG_ECDSA = SHALG_ECDSA; \/\/ SHKEY_ALG_ECDSA$/;"	m	class:CSign
ALG_U160	../server/ext/txext.h	/^    static const int ALG_U160 = SHALG_SHR; \/\/ SHKEY_ALG_U160$/;"	m	class:CSign
ALIAS_COINADDR	../server/ext/alias.h	/^    static const int ALIAS_COINADDR = TXREF_PUBADDR;$/;"	m	class:CAlias
ALIAS_FEE	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_FEE = {$/;"	v
ALIAS_GET	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_GET = {$/;"	v
ALIAS_GETADDR	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_GETADDR = {$/;"	v
ALIAS_INFO	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_INFO = {$/;"	v
ALIAS_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_LIST = {$/;"	v
ALIAS_NONE	../server/ext/alias.h	/^    static const int ALIAS_NONE = 0;$/;"	m	class:CAlias
ALIAS_PUBADDR	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_PUBADDR = {$/;"	v
ALIAS_REMOVE	../server/shc/shc_rpc.cpp	/^const RPCOp ALIAS_REMOVE = {$/;"	v
ALIGN	../server/algo/blake2s.h	23;"	d
ALIGN	../server/algo/blake2s.h	25;"	d
ALT_ADDR	../server/color/color_rpc.cpp	/^const RPCOp ALT_ADDR = {$/;"	v
ALT_ADDRLIST	../server/color/color_rpc.cpp	/^const RPCOp ALT_ADDRLIST = {$/;"	v
ALT_BALANCE	../server/color/color_rpc.cpp	/^const RPCOp ALT_BALANCE = {$/;"	v
ALT_BLOCK	../server/color/color_rpc.cpp	/^const RPCOp ALT_BLOCK = {$/;"	v
ALT_COLOR	../server/color/color_rpc.cpp	/^const RPCOp ALT_COLOR = {$/;"	v
ALT_COMMIT	../server/color/color_rpc.cpp	/^const RPCOp ALT_COMMIT = {$/;"	v
ALT_INFO	../server/color/color_rpc.cpp	/^const RPCOp ALT_INFO = {$/;"	v
ALT_KEY	../server/color/color_rpc.cpp	/^const RPCOp ALT_KEY = {$/;"	v
ALT_MANAGED	../server/ext/altchain.h	/^		static const int ALT_MANAGED = (1 << 0);$/;"	m	class:CAltChain
ALT_MINE	../server/color/color_rpc.cpp	/^const RPCOp ALT_MINE = {$/;"	v
ALT_NEW	../server/color/color_rpc.cpp	/^const RPCOp ALT_NEW = {$/;"	v
ALT_SEND	../server/color/color_rpc.cpp	/^const RPCOp ALT_SEND = {$/;"	v
ALT_SETKEY	../server/color/color_rpc.cpp	/^const RPCOp ALT_SETKEY = {$/;"	v
ALT_TX	../server/color/color_rpc.cpp	/^const RPCOp ALT_TX = {$/;"	v
ALT_UNSPENT	../server/color/color_rpc.cpp	/^const RPCOp ALT_UNSPENT = {$/;"	v
AND64	../server/algo/sph_keccak.c	361;"	d	file:
AND64	../server/algo/sph_keccak.c	765;"	d	file:
APPLY	../server/ui_interface.h	/^        APPLY                 = 0x00000020,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ARRAYLEN	../server/util.h	33;"	d
ASSET_GET	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_GET = {$/;"	v
ASSET_INFO	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_INFO = {$/;"	v
ASSET_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_LIST = {$/;"	v
ASSET_LISTACC	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_LISTACC = {$/;"	v
ASSET_LISTCERT	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_LISTCERT = {$/;"	v
ASSET_NEW	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_NEW = {$/;"	v
ASSET_REMOVE	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_REMOVE = {$/;"	v
ASSET_UPDATE	../server/shc/shc_rpc.cpp	/^const RPCOp ASSET_UPDATE = {$/;"	v
AbortMessage	../server/net.h	/^    void AbortMessage()$/;"	f	class:CNode
AbstractThresholdConditionChecker	../server/versionbits.h	/^class AbstractThresholdConditionChecker {$/;"	c
AcceptBlock	../server/color/color_block.cpp	/^bool COLORBlock::AcceptBlock()$/;"	f	class:COLORBlock
AcceptBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::AcceptBlock()$/;"	f	class:EMC2Block
AcceptBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::AcceptBlock()$/;"	f	class:LTCBlock
AcceptBlock	../server/shc/shc_block.cpp	/^bool SHCBlock::AcceptBlock()$/;"	f	class:SHCBlock
AcceptBlock	../server/test/test_block.cpp	/^bool TESTBlock::AcceptBlock()$/;"	f	class:TESTBlock
AcceptBlock	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::AcceptBlock()$/;"	f	class:TESTNETBlock
AcceptOffer	../server/block.cpp	/^COffer *CTransaction::AcceptOffer(COffer *offerIn)$/;"	f	class:CTransaction
AcceptTx	../server/color/color_pool.cpp	/^bool COLOR_CTxMemPool::AcceptTx(CTransaction& tx)$/;"	f	class:COLOR_CTxMemPool
AcceptTx	../server/emc2/emc2_pool.cpp	/^bool EMC2_CTxMemPool::AcceptTx(CTransaction& tx)$/;"	f	class:EMC2_CTxMemPool
AcceptTx	../server/ltc/ltc_pool.cpp	/^bool LTC_CTxMemPool::AcceptTx(CTransaction& tx)$/;"	f	class:LTC_CTxMemPool
AcceptTx	../server/shc/shc_pool.cpp	/^bool SHC_CTxMemPool::AcceptTx(CTransaction& tx)$/;"	f	class:SHC_CTxMemPool
AcceptTx	../server/test/test_pool.cpp	/^bool TEST_CTxMemPool::AcceptTx(CTransaction& tx)$/;"	f	class:TEST_CTxMemPool
AcceptTx	../server/testnet/testnet_pool.cpp	/^bool TESTNET_CTxMemPool::AcceptTx(CTransaction& tx)$/;"	f	class:TESTNET_CTxMemPool
AcceptWalletTransaction	../server/wallet.cpp	/^bool CWalletTx::AcceptWalletTransaction()$/;"	f	class:CWalletTx
AccountFromAddress	../server/ext/exec.cpp	/^static bool AccountFromAddress(int ifaceIndex, CCoinAddr& addr, string& strAccount)$/;"	f	file:
AccountFromValue	../server/rpc/rpc_command.cpp	/^string AccountFromValue(const Value& value)$/;"	f
AcentryToJSON	../server/rpc/rpc_command.cpp	/^void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Array& ret)$/;"	f
Acquire	../server/sync.h	/^		void Acquire() {$/;"	f	class:CSemaphoreGrant
Add	../server/addrman.h	/^    bool Add(const CAddress &addr, const CNetAddr& source, int64 nTimePenalty = 0)$/;"	f	class:CAddrMan
Add	../server/addrman.h	/^    bool Add(const std::vector<CAddress> &vAddr, const CNetAddr& source, int64 nTimePenalty = 0)$/;"	f	class:CAddrMan
AddActiveTx	../server/txmempool.cpp	/^bool CPool::AddActiveTx(CPoolTx& ptx)$/;"	f	class:CPool
AddAddressKnown	../server/net.h	/^    void AddAddressKnown(const CAddress& addr)$/;"	f	class:CNode
AddCScript	../server/keystore.cpp	/^bool CBasicKeyStore::AddCScript(const CScript& redeemScript)$/;"	f	class:CBasicKeyStore
AddCScript	../server/wallet.cpp	/^bool CWallet::AddCScript(const CScript& redeemScript)$/;"	f	class:CWallet
AddCell	../server/matrix.h	/^    void AddCell(int row, int col, unsigned int val)$/;"	f	class:CTxMatrix
AddCheckpoint	../server/checkpoints.cpp	/^bool CCheckpoints::AddCheckpoint(CBlockIndex *pindex)$/;"	f	class:CCheckpoints
AddCheckpoint	../server/checkpoints.cpp	/^bool CCheckpoints::AddCheckpoint(int height, uint256 hash)$/;"	f	class:CCheckpoints
AddExtTx	../server/txcreator.cpp	/^bool CTxCreator::AddExtTx(CWalletTx *tx, const CScript& scriptPubKey, int64 nTxFee)$/;"	f	class:CTxCreator
AddInput	../server/txcreator.cpp	/^bool CTxCreator::AddInput(CWalletTx *tx, unsigned int n, unsigned int seq)$/;"	f	class:CTxCreator
AddInput	../server/txcreator.cpp	/^bool CTxCreator::AddInput(uint256 hashTx, unsigned int n, unsigned int seq)$/;"	f	class:CTxCreator
AddInput	../server/txmempool.h	/^    void AddInput(CTransaction prevTx)$/;"	f	class:CPoolTx
AddInvalTx	../server/txmempool.cpp	/^void CPool::AddInvalTx(CPoolTx& ptx)$/;"	f	class:CPool
AddInventoryKnown	../server/net.h	/^    void AddInventoryKnown(const CInv& inv)$/;"	f	class:CNode
AddKey	../server/keystore.cpp	/^bool CBasicKeyStore::AddKey(const DIKey& key)$/;"	f	class:CBasicKeyStore
AddKey	../server/keystore.cpp	/^bool CBasicKeyStore::AddKey(const ECKey& key)$/;"	f	class:CBasicKeyStore
AddKey	../server/wallet.cpp	/^bool CWallet::AddKey(const DIKey& key)$/;"	f	class:CWallet
AddKey	../server/wallet.cpp	/^bool CWallet::AddKey(const ECKey& key)$/;"	f	class:CWallet
AddOutput	../server/txcreator.cpp	/^bool CTxCreator::AddOutput(CScript scriptPubKey, int64 nValue, bool fInsert)$/;"	f	class:CTxCreator
AddOutput	../server/txcreator.cpp	/^bool CTxCreator::AddOutput(const CPubKey& pubkey, int64 nValue, bool fInsert)$/;"	f	class:CTxCreator
AddOutput	../server/txcreator.cpp	/^bool CTxCreator::AddOutput(const CTxDestination& address, int64 nValue, bool fInsert)$/;"	f	class:CTxCreator
AddOverflowTx	../server/txmempool.cpp	/^bool CPool::AddOverflowTx(CPoolTx& ptx)$/;"	f	class:CPool
AddParamIfNeccessary	../server/ext/ext_param.cpp	/^void AddParamIfNeccessary(CIface *iface, CWalletTx& wtx)$/;"	f
AddPendingTx	../server/txmempool.cpp	/^bool CPool::AddPendingTx(CPoolTx& ptx)$/;"	f	class:CPool
AddRef	../server/net.h	/^    CNode* AddRef(int64 nTimeout=0)$/;"	f	class:CNode
AddStaleTx	../server/txmempool.cpp	/^bool CPool::AddStaleTx(CPoolTx& ptx)$/;"	f	class:CPool
AddSupportingTransactions	../server/color/color_wallet.cpp	/^void COLORWallet::AddSupportingTransactions(CWalletTx& wtx)$/;"	f	class:COLORWallet
AddSupportingTransactions	../server/emc2/emc2_wallet.cpp	/^void EMC2Wallet::AddSupportingTransactions(CWalletTx& wtx)$/;"	f	class:EMC2Wallet
AddSupportingTransactions	../server/ltc/ltc_wallet.cpp	/^void LTCWallet::AddSupportingTransactions(CWalletTx& wtx)$/;"	f	class:LTCWallet
AddSupportingTransactions	../server/shc/shc_wallet.cpp	/^void SHCWallet::AddSupportingTransactions(CWalletTx& wtx)$/;"	f	class:SHCWallet
AddSupportingTransactions	../server/test/test_wallet.cpp	/^void TESTWallet::AddSupportingTransactions(CWalletTx& wtx)$/;"	f	class:TESTWallet
AddSupportingTransactions	../server/testnet/testnet_wallet.cpp	/^void TESTNETWallet::AddSupportingTransactions(CWalletTx& wtx)$/;"	f	class:TESTNETWallet
AddSupportingTransactions	../server/wallet.cpp	/^void CWalletTx::AddSupportingTransactions()$/;"	f	class:CWalletTx
AddTimeData	../server/util.cpp	/^void AddTimeData(const CNetAddr& ip, int64 nTime)$/;"	f
AddToBlockIndex	../server/color/color_block.cpp	/^bool COLORBlock::AddToBlockIndex()$/;"	f	class:COLORBlock
AddToBlockIndex	../server/emc2/emc2_block.cpp	/^bool EMC2Block::AddToBlockIndex()$/;"	f	class:EMC2Block
AddToBlockIndex	../server/ltc/ltc_block.cpp	/^bool LTCBlock::AddToBlockIndex()$/;"	f	class:LTCBlock
AddToBlockIndex	../server/shc/shc_block.cpp	/^bool SHCBlock::AddToBlockIndex()$/;"	f	class:SHCBlock
AddToBlockIndex	../server/test/test_block.cpp	/^bool TESTBlock::AddToBlockIndex()$/;"	f	class:TESTBlock
AddToBlockIndex	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::AddToBlockIndex()$/;"	f	class:TESTNETBlock
AddToWallet	../server/wallet.cpp	/^bool CWallet::AddToWallet(const CWalletTx& wtxIn)$/;"	f	class:CWallet
AddToWalletIfInvolvingMe	../server/wallet.cpp	/^bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate, bool fFindBlock)$/;"	f	class:CWallet
AddTx	../server/txmempool.cpp	/^bool CPool::AddTx(CTransaction& tx, CNode *pfrom, uint160 hColor)$/;"	f	class:CPool
AddTx	../server/wallettx.cpp	/^bool CWallet::AddTx(const CTransaction& tx, const CBlock* pblock)$/;"	f	class:CWallet
AddTx	../server/wallettx.cpp	/^bool CWallet::AddTx(const CWalletTx& wtxIn)$/;"	f	class:CWallet
AddTx	../server/wallettx.cpp	/^bool CWallet::AddTx(const uint256& hTx, const CBlock *pblock)$/;"	f	class:CWallet
AddTxChain	../server/ext/exec.h	/^		void AddTxChain(uint256 hash)$/;"	f	class:CExecCall
AddTxIndex	../server/txidx.cpp	/^bool CTxDB::AddTxIndex(const CTransaction& tx, const CDiskTxPos& pos, int nHeight)$/;"	f	class:CTxDB
Add_	../server/addrman.cpp	/^bool CAddrMan::Add_(const CAddress &addr, const CNetAddr& source, int64 nTimePenalty)$/;"	f	class:CAddrMan
AliasCreateEvent	../server/ext/exec.cpp	/^static int AliasCreateEvent(lua_State *L)$/;"	f	file:
AllowFree	../server/wallet.h	/^		bool AllowFree(double dPriority)$/;"	f	class:CWallet
AllowFreeThreshold	../server/color/color_wallet.cpp	/^double COLORWallet::AllowFreeThreshold()$/;"	f	class:COLORWallet
AllowFreeThreshold	../server/emc2/emc2_wallet.cpp	/^double EMC2Wallet::AllowFreeThreshold()$/;"	f	class:EMC2Wallet
AllowFreeThreshold	../server/ltc/ltc_wallet.cpp	/^double LTCWallet::AllowFreeThreshold()$/;"	f	class:LTCWallet
AllowFreeThreshold	../server/shc/shc_wallet.cpp	/^double SHCWallet::AllowFreeThreshold()$/;"	f	class:SHCWallet
AllowFreeThreshold	../server/test/test_wallet.cpp	/^double TESTWallet::AllowFreeThreshold()$/;"	f	class:TESTWallet
AllowFreeThreshold	../server/testnet/testnet_wallet.cpp	/^double TESTNETWallet::AllowFreeThreshold()$/;"	f	class:TESTNETWallet
AlreadyHave	../server/emc2/emc2_netmsg.cpp	/^static bool AlreadyHave(CIface *iface, const CInv& inv)$/;"	f	file:
AlreadyHave	../server/ltc/ltc_netmsg.cpp	/^static bool AlreadyHave(CIface *iface, const CInv& inv)$/;"	f	file:
AmountFromValue	../server/rpc/rpc_parse.cpp	/^int64 AmountFromValue(const Value& value)$/;"	f
ApiItems	../stratum/stratum_api.h	/^typedef vector<Object> ApiItems;$/;"	t
Append	../server/matrix.cpp	/^void CTxMatrix::Append(int heightIn, uint256 hash)$/;"	f	class:CTxMatrix
AppendBlockFile	../server/main.cpp	/^FILE* AppendBlockFile(unsigned int& nFileRet)$/;"	f
ApplyParam	../server/ext/ext_param.cpp	/^static bool ApplyParam(CIface *iface, string strMode, uint64_t nNewValue)$/;"	f	file:
ApproximateBestSubset	../server/wallet.cpp	/^static void ApproximateBestSubset(vector<pair<int64, pair<const CWalletTx*,unsigned int> > >vValue, int64 nTotalLower, int64 nTargetValue,$/;"	f	file:
AreInputsSpent	../server/txmempool.cpp	/^bool CPool::AreInputsSpent(CPoolTx& ptx)$/;"	f	class:CPool
AreInputsStandard	../server/main.cpp	/^bool CTransaction::AreInputsStandard(int ifaceIndex, const MapPrevTx& mapInputs) const$/;"	f	class:CTransaction
Array	../server/json/json_spirit_value.h	/^        typedef typename Config::Array_type Array;$/;"	t	class:json_spirit::Value_impl
Array	../server/json/json_spirit_value.h	/^    typedef Config::Array_type  Array;$/;"	t	namespace:json_spirit
Array_type	../server/json/json_spirit_reader_template.h	/^        typedef typename Config_type::Array_type Array_type;$/;"	t	class:json_spirit::Semantic_actions
Array_type	../server/json/json_spirit_value.h	/^        typedef std::vector< Value_type > Array_type;$/;"	t	struct:json_spirit::Config_map
Array_type	../server/json/json_spirit_value.h	/^        typedef std::vector< Value_type > Array_type;$/;"	t	struct:json_spirit::Config_vector
Array_type	../server/json/json_spirit_writer_template.h	/^        typedef typename Config_type::Array_type Array_type;$/;"	t	class:json_spirit::Generator
AskFor	../server/net.h	/^    void AskFor(CInv& inv)$/;"	f	class:CNode
Attempt	../server/addrman.h	/^    void Attempt(const CService &addr, int64 nTime = GetAdjustedTime())$/;"	f	class:CAddrMan
Attempt_	../server/addrman.cpp	/^void CAddrMan::Attempt_(const CService &addr, int64 nTime)$/;"	f	class:CAddrMan
AvailableAccountCoins	../server/wallet.cpp	/^void CWallet::AvailableAccountCoins(string strAccount, vector<COutput>& vCoins, bool fOnlyConfirmed, uint160 hColor) const$/;"	f	class:CWallet
AvailableAddrCoins	../server/wallet.cpp	/^void CWallet::AvailableAddrCoins(vector<COutput>& vCoins, const CCoinAddr& filterAddr, int64& nTotalValue, bool fOnlyConfirmed) const$/;"	f	class:CWallet
AvailableCoins	../server/wallet.cpp	/^void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed)$/;"	f	class:CWallet
B0	../server/algo/sph_simd.c	1080;"	d	file:
B0	../server/algo/sph_simd.c	1106;"	d	file:
B0	../server/algo/sph_simd.c	1311;"	d	file:
B0	../server/algo/sph_simd.c	1347;"	d	file:
B0	../server/algo/sph_simd.c	1496;"	d	file:
B0	../server/algo/sph_simd.c	816;"	d	file:
B0	../server/algo/sph_simd.c	961;"	d	file:
B0	../server/algo/sph_simd.c	981;"	d	file:
B1	../server/algo/sph_simd.c	1081;"	d	file:
B1	../server/algo/sph_simd.c	1107;"	d	file:
B1	../server/algo/sph_simd.c	1312;"	d	file:
B1	../server/algo/sph_simd.c	1348;"	d	file:
B1	../server/algo/sph_simd.c	1497;"	d	file:
B1	../server/algo/sph_simd.c	817;"	d	file:
B1	../server/algo/sph_simd.c	962;"	d	file:
B1	../server/algo/sph_simd.c	982;"	d	file:
B2	../server/algo/sph_simd.c	1082;"	d	file:
B2	../server/algo/sph_simd.c	1108;"	d	file:
B2	../server/algo/sph_simd.c	1313;"	d	file:
B2	../server/algo/sph_simd.c	1349;"	d	file:
B2	../server/algo/sph_simd.c	1498;"	d	file:
B2	../server/algo/sph_simd.c	818;"	d	file:
B2	../server/algo/sph_simd.c	963;"	d	file:
B2	../server/algo/sph_simd.c	983;"	d	file:
B3	../server/algo/sph_simd.c	1083;"	d	file:
B3	../server/algo/sph_simd.c	1109;"	d	file:
B3	../server/algo/sph_simd.c	1314;"	d	file:
B3	../server/algo/sph_simd.c	1350;"	d	file:
B3	../server/algo/sph_simd.c	1499;"	d	file:
B3	../server/algo/sph_simd.c	819;"	d	file:
B3	../server/algo/sph_simd.c	964;"	d	file:
B3	../server/algo/sph_simd.c	984;"	d	file:
B32_0	../server/algo/sph_groestl.c	131;"	d	file:
B32_0	../server/algo/sph_groestl.c	89;"	d	file:
B32_1	../server/algo/sph_groestl.c	132;"	d	file:
B32_1	../server/algo/sph_groestl.c	90;"	d	file:
B32_2	../server/algo/sph_groestl.c	133;"	d	file:
B32_2	../server/algo/sph_groestl.c	91;"	d	file:
B32_3	../server/algo/sph_groestl.c	134;"	d	file:
B32_3	../server/algo/sph_groestl.c	92;"	d	file:
B4	../server/algo/sph_simd.c	1110;"	d	file:
B4	../server/algo/sph_simd.c	1315;"	d	file:
B4	../server/algo/sph_simd.c	1351;"	d	file:
B4	../server/algo/sph_simd.c	1500;"	d	file:
B5	../server/algo/sph_simd.c	1111;"	d	file:
B5	../server/algo/sph_simd.c	1316;"	d	file:
B5	../server/algo/sph_simd.c	1352;"	d	file:
B5	../server/algo/sph_simd.c	1501;"	d	file:
B6	../server/algo/sph_simd.c	1112;"	d	file:
B6	../server/algo/sph_simd.c	1317;"	d	file:
B6	../server/algo/sph_simd.c	1353;"	d	file:
B6	../server/algo/sph_simd.c	1502;"	d	file:
B64_0	../server/algo/sph_groestl.c	113;"	d	file:
B64_0	../server/algo/sph_groestl.c	148;"	d	file:
B64_1	../server/algo/sph_groestl.c	114;"	d	file:
B64_1	../server/algo/sph_groestl.c	149;"	d	file:
B64_2	../server/algo/sph_groestl.c	115;"	d	file:
B64_2	../server/algo/sph_groestl.c	150;"	d	file:
B64_3	../server/algo/sph_groestl.c	116;"	d	file:
B64_3	../server/algo/sph_groestl.c	151;"	d	file:
B64_4	../server/algo/sph_groestl.c	117;"	d	file:
B64_4	../server/algo/sph_groestl.c	152;"	d	file:
B64_5	../server/algo/sph_groestl.c	118;"	d	file:
B64_5	../server/algo/sph_groestl.c	153;"	d	file:
B64_6	../server/algo/sph_groestl.c	119;"	d	file:
B64_6	../server/algo/sph_groestl.c	154;"	d	file:
B64_7	../server/algo/sph_groestl.c	120;"	d	file:
B64_7	../server/algo/sph_groestl.c	155;"	d	file:
B7	../server/algo/sph_simd.c	1113;"	d	file:
B7	../server/algo/sph_simd.c	1318;"	d	file:
B7	../server/algo/sph_simd.c	1354;"	d	file:
B7	../server/algo/sph_simd.c	1503;"	d	file:
BACKWARD	../server/ui_interface.h	/^        BACKWARD              = 0x00002000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
BASE58_DEFAULT_PUBKEY_ADDRESS	../proto/coin_proto.h	39;"	d
BASE58_DEFAULT_SCRIPT_ADDRESS	../proto/coin_proto.h	40;"	d
BASE58_DEFAULT_SCRIPT_ADDRESS	../server/base58.h	36;"	d
BASE58_DEFAULT_SECRET_KEY	../proto/coin_proto.h	41;"	d
BASE58_EXT_PUBLIC_KEY	../proto/coin_proto.h	172;"	d
BASE58_EXT_PUBLIC_KEY	../server/coinaddr.h	/^			BASE58_EXT_PUBLIC_KEY,$/;"	e	enum:CCoinAddr::__anon5
BASE58_EXT_SECRET_KEY	../proto/coin_proto.h	174;"	d
BASE58_EXT_SECRET_KEY	../server/coinaddr.h	/^			BASE58_EXT_SECRET_KEY,$/;"	e	enum:CCoinAddr::__anon5
BASE58_PUBKEY_ADDRESS	../proto/coin_proto.h	164;"	d
BASE58_PUBKEY_ADDRESS	../server/coinaddr.h	/^			BASE58_PUBKEY_ADDRESS,$/;"	e	enum:CCoinAddr::__anon5
BASE58_SCRIPT_ADDRESS	../proto/coin_proto.h	166;"	d
BASE58_SCRIPT_ADDRESS	../server/coinaddr.h	/^			BASE58_SCRIPT_ADDRESS,$/;"	e	enum:CCoinAddr::__anon5
BASE58_SCRIPT_ADDRESS2	../server/coinaddr.h	/^			BASE58_SCRIPT_ADDRESS2,$/;"	e	enum:CCoinAddr::__anon5
BASE58_SCRIPT_ADDRESS_2	../proto/coin_proto.h	168;"	d
BASE58_SECRET_KEY	../proto/coin_proto.h	170;"	d
BASE58_SECRET_KEY	../server/coinaddr.h	/^			BASE58_SECRET_KEY,$/;"	e	enum:CCoinAddr::__anon5
BCMAP_IDLE_TIME	../blockchain/bc_block.c	34;"	d	file:
BCMAP_LOCK	../blockchain/bc.h	50;"	d
BCOP_DOWNLOAD	../server/chain.h	36;"	d
BCOP_EXPORT	../server/chain.h	35;"	d
BCOP_IMPORT	../server/chain.h	34;"	d
BCOP_MINER	../server/chain.h	38;"	d
BCOP_NONE	../server/chain.h	33;"	d
BCOP_VALIDATE	../server/chain.h	37;"	d
BC_ARCH_EXTENSION	../blockchain/bc_arch.c	32;"	d	file:
BC_BLOCKS_PER_JOURNAL	../blockchain/bc.h	46;"	d
BC_INDEX_EXTENSION	../blockchain/bc_index.c	33;"	d	file:
BC_MAP_BLOCK_SIZE	../blockchain/bc_fmap.c	39;"	d	file:
BC_MAP_BLOCK_SIZE	../blockchain/bc_fmap.c	41;"	d	file:
BC_MAX_NAME_LENGTH	../blockchain/bc.h	48;"	d
BC_TABLE_EXTENSION	../blockchain/bc_table.h	42;"	d
BC_TABLE_NULL_POS	../blockchain/bc_table.h	39;"	d
BC_TABLE_POS_MASK	../blockchain/bc_table.h	38;"	d
BC_TABLE_SEARCH_POS	../blockchain/bc_table.h	40;"	d
BC_TABLE_SIZE	../blockchain/bc_table.h	36;"	d
BEGIN	../server/util.h	29;"	d
BIG_MIX_COLUMNS	../server/algo/sph_echo.c	283;"	d	file:
BIG_MIX_COLUMNS	../server/algo/sph_echo.c	573;"	d	file:
BIG_ROUND	../server/algo/sph_echo.c	290;"	d	file:
BIG_ROUND	../server/algo/sph_echo.c	580;"	d	file:
BIG_SHIFT_ROWS	../server/algo/sph_echo.c	218;"	d	file:
BIG_SHIFT_ROWS	../server/algo/sph_echo.c	506;"	d	file:
BIG_SUB_WORDS	../server/algo/sph_echo.c	142;"	d	file:
BIG_SUB_WORDS	../server/algo/sph_echo.c	165;"	d	file:
BIG_SUB_WORDS	../server/algo/sph_echo.c	413;"	d	file:
BIG_SUB_WORDS	../server/algo/sph_echo.c	431;"	d	file:
BIP16Height	../proto/coin_proto.h	/^	int BIP16Height;$/;"	m	struct:coin_iface_t
BIP30Height	../proto/coin_proto.h	/^	int BIP30Height;$/;"	m	struct:coin_iface_t
BIP32Hash	../server/eckey.cpp	/^void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64])$/;"	f
BIP32_EXTKEY_SIZE	../server/eckey.h	/^const unsigned int BIP32_EXTKEY_SIZE = 74;$/;"	v
BIP32_HARDENED_KEY_LIMIT	../server/wallet.h	/^const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;$/;"	v
BIP34Height	../proto/coin_proto.h	/^	int BIP34Height;$/;"	m	struct:coin_iface_t
BIP65Height	../proto/coin_proto.h	/^	int BIP65Height;$/;"	m	struct:coin_iface_t
BIP66Height	../proto/coin_proto.h	/^	int BIP66Height;$/;"	m	struct:coin_iface_t
BIP9Deployment	../proto/coin_proto.h	/^struct BIP9Deployment {$/;"	s
BIP9Deployment	../proto/coin_proto.h	/^typedef struct BIP9Deployment BIP9Deployment;$/;"	t	typeref:struct:BIP9Deployment
BIP9DeploymentInfo	../server/versionbits.h	/^struct BIP9DeploymentInfo {$/;"	s
BITCOIN_BIGNUM_H	../server/bignum.h	27;"	d
BITCOIN_LEVELDB_H	../server/leveldb.h	5;"	d
BITCOIN_STRLCPY_H	../server/strlcpy.h	17;"	d
BITCOIN_UTIL_H	../server/util.h	2;"	d
BLAKE2S_BLOCKBYTES	../server/algo/blake2s.h	/^	BLAKE2S_BLOCKBYTES = 64,$/;"	e	enum:blake2s_constant
BLAKE2S_KEYBYTES	../server/algo/blake2s.h	/^	BLAKE2S_KEYBYTES   = 32,$/;"	e	enum:blake2s_constant
BLAKE2S_OUTBYTES	../server/algo/blake2s.h	/^	BLAKE2S_OUTBYTES   = 32,$/;"	e	enum:blake2s_constant
BLAKE2S_PERSONALBYTES	../server/algo/blake2s.h	/^	BLAKE2S_PERSONALBYTES = 8$/;"	e	enum:blake2s_constant
BLAKE2S_SALTBYTES	../server/algo/blake2s.h	/^	BLAKE2S_SALTBYTES  = 8,$/;"	e	enum:blake2s_constant
BLAKE2S_WORK_CYCLE_TIME	../stratum/stratum_blake2s.c	33;"	d	file:
BLAKE32_ROUNDS	../server/algo/sph_blake.c	514;"	d	file:
BLANK_HASH_SIZE	../server/ext/txext.cpp	34;"	d	file:
BLOCK_ALGO_BLAKE2S	../server/algobits.h	43;"	d
BLOCK_ALGO_GROESTL	../server/algobits.h	45;"	d
BLOCK_ALGO_KECCAK	../server/algobits.h	41;"	d
BLOCK_ALGO_QUBIT	../server/algobits.h	44;"	d
BLOCK_ALGO_SCRYPT	../server/algobits.h	39;"	d
BLOCK_ALGO_SHA256D	../server/algobits.h	40;"	d
BLOCK_ALGO_SKEIN	../server/algobits.h	46;"	d
BLOCK_ALGO_X11	../server/algobits.h	42;"	d
BLOCK_COUNT	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_COUNT = {$/;"	v
BLOCK_DIFFICULTY	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_DIFFICULTY = {$/;"	v
BLOCK_DOWNLOAD_WINDOW	../proto/coin_proto.h	/^static const unsigned int BLOCK_DOWNLOAD_WINDOW = 1024;$/;"	v
BLOCK_EXPORT	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_EXPORT = {$/;"	v
BLOCK_FAILED_CHILD	../server/block.h	/^    BLOCK_FAILED_CHILD       =   64, \/\/!< descends from failed block$/;"	e	enum:BlockStatus
BLOCK_FAILED_MASK	../server/block.h	/^    BLOCK_FAILED_MASK        =   BLOCK_FAILED_VALID | BLOCK_FAILED_CHILD,$/;"	e	enum:BlockStatus
BLOCK_FAILED_VALID	../server/block.h	/^    BLOCK_FAILED_VALID       =   32, \/\/!< stage after last reached validness failed$/;"	e	enum:BlockStatus
BLOCK_FREE	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_FREE = {$/;"	v
BLOCK_GET	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_GET = {$/;"	v
BLOCK_HASH	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_HASH = {$/;"	v
BLOCK_HAVE_DATA	../server/block.h	/^    BLOCK_HAVE_DATA          =    8, \/\/!< full block available in blk*.dat$/;"	e	enum:BlockStatus
BLOCK_HAVE_MASK	../server/block.h	/^    BLOCK_HAVE_MASK          =   BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO,$/;"	e	enum:BlockStatus
BLOCK_HAVE_UNDO	../server/block.h	/^    BLOCK_HAVE_UNDO          =   16, \/\/!< undo data available in rev*.dat$/;"	e	enum:BlockStatus
BLOCK_IMPORT	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_IMPORT = {$/;"	v
BLOCK_INFO	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_INFO = {$/;"	v
BLOCK_LISTSINCE	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_LISTSINCE = {$/;"	v
BLOCK_MINE	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_MINE = {$/;"	v
BLOCK_OPT_WITNESS	../server/block.h	/^    BLOCK_OPT_WITNESS       =   128, \/\/!< block data in blk*.data was received with a witness-enforcing client$/;"	e	enum:BlockStatus
BLOCK_PURGE	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_PURGE = {$/;"	v
BLOCK_STALLING_TIMEOUT	../proto/coin_proto.h	/^static const unsigned int BLOCK_STALLING_TIMEOUT = 2;$/;"	v
BLOCK_VALID_CHAIN	../server/block.h	/^    BLOCK_VALID_CHAIN        =    4,$/;"	e	enum:BlockStatus
BLOCK_VALID_HEADER	../server/block.h	/^    BLOCK_VALID_HEADER       =    1,$/;"	e	enum:BlockStatus
BLOCK_VALID_MASK	../server/block.h	/^    BLOCK_VALID_MASK         =   BLOCK_VALID_HEADER | BLOCK_VALID_TREE | BLOCK_VALID_TRANSACTIONS |$/;"	e	enum:BlockStatus
BLOCK_VALID_SCRIPTS	../server/block.h	/^    BLOCK_VALID_SCRIPTS      =    5,$/;"	e	enum:BlockStatus
BLOCK_VALID_TRANSACTIONS	../server/block.h	/^    BLOCK_VALID_TRANSACTIONS =    3,$/;"	e	enum:BlockStatus
BLOCK_VALID_TREE	../server/block.h	/^    BLOCK_VALID_TREE         =    2,$/;"	e	enum:BlockStatus
BLOCK_VALID_UNKNOWN	../server/block.h	/^    BLOCK_VALID_UNKNOWN      =    0,$/;"	e	enum:BlockStatus
BLOCK_VERIFY	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_VERIFY = {$/;"	v
BLOCK_VERSION	../stratum/stratum_task.c	35;"	d	file:
BLOCK_WORK	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_WORK = {$/;"	v
BLOCK_WORKEX	../server/rpc/rpc_parse.cpp	/^const RPCOp BLOCK_WORKEX = {$/;"	v
BLOOM_TEST	../server/net.h	103;"	d
BLOOM_UPDATE_ALL	../server/net.h	/^  BLOOM_UPDATE_ALL = 1,$/;"	e	enum:bloomflags
BLOOM_UPDATE_MASK	../server/net.h	/^  BLOOM_UPDATE_MASK = 3 $/;"	e	enum:bloomflags
BLOOM_UPDATE_NONE	../server/net.h	/^  BLOOM_UPDATE_NONE = 0,$/;"	e	enum:bloomflags
BLOOM_UPDATE_P2PUBKEY_ONLY	../server/net.h	/^  BLOOM_UPDATE_P2PUBKEY_ONLY = 2,$/;"	e	enum:bloomflags
BMP	../fractal/fractal_bmp.h	/^typedef struct _BMP BMP;$/;"	t	typeref:struct:_BMP
BMP_CHECK_ERROR	../fractal/fractal_bmp.h	147;"	d
BMP_Create	../fractal/fractal_bmp.c	/^BMP* BMP_Create( UINT width, UINT height, USHORT depth )$/;"	f
BMP_ERROR	../fractal/fractal_bmp.h	/^	BMP_ERROR,				\/* General error *\/$/;"	e	enum:__anon1
BMP_ERROR_NUM	../fractal/fractal_bmp.h	/^	BMP_ERROR_NUM$/;"	e	enum:__anon1
BMP_ERROR_STRING	../fractal/fractal_bmp.c	/^static const char* BMP_ERROR_STRING[] =$/;"	v	file:
BMP_FILE_INVALID	../fractal/fractal_bmp.h	/^	BMP_FILE_INVALID,		\/* File is not a BMP image or is an invalid BMP *\/$/;"	e	enum:__anon1
BMP_FILE_NOT_FOUND	../fractal/fractal_bmp.h	/^	BMP_FILE_NOT_FOUND,		\/* File not found *\/$/;"	e	enum:__anon1
BMP_FILE_NOT_SUPPORTED	../fractal/fractal_bmp.h	/^	BMP_FILE_NOT_SUPPORTED,	\/* File is not a supported BMP variant *\/$/;"	e	enum:__anon1
BMP_Free	../fractal/fractal_bmp.c	/^void BMP_Free( BMP* bmp )$/;"	f
BMP_GetDepth	../fractal/fractal_bmp.c	/^USHORT BMP_GetDepth( BMP* bmp )$/;"	f
BMP_GetError	../fractal/fractal_bmp.c	/^BMP_STATUS BMP_GetError()$/;"	f
BMP_GetErrorDescription	../fractal/fractal_bmp.c	/^const char* BMP_GetErrorDescription()$/;"	f
BMP_GetHeight	../fractal/fractal_bmp.c	/^UINT BMP_GetHeight( BMP* bmp )$/;"	f
BMP_GetPaletteColor	../fractal/fractal_bmp.c	/^void BMP_GetPaletteColor( BMP* bmp, UCHAR index, UCHAR* r, UCHAR* g, UCHAR* b )$/;"	f
BMP_GetPixelIndex	../fractal/fractal_bmp.c	/^void BMP_GetPixelIndex( BMP* bmp, UINT x, UINT y, UCHAR* val )$/;"	f
BMP_GetPixelRGB	../fractal/fractal_bmp.c	/^void BMP_GetPixelRGB( BMP* bmp, UINT x, UINT y, UCHAR* r, UCHAR* g, UCHAR* b )$/;"	f
BMP_GetWidth	../fractal/fractal_bmp.c	/^UINT BMP_GetWidth( BMP* bmp )$/;"	f
BMP_Header	../fractal/fractal_bmp.c	/^} BMP_Header;$/;"	t	typeref:struct:_BMP_Header	file:
BMP_INVALID_ARGUMENT	../fractal/fractal_bmp.h	/^	BMP_INVALID_ARGUMENT,	\/* An argument is invalid or out of range *\/$/;"	e	enum:__anon1
BMP_IO_ERROR	../fractal/fractal_bmp.h	/^	BMP_IO_ERROR,			\/* General input\/output error *\/$/;"	e	enum:__anon1
BMP_LAST_ERROR_CODE	../fractal/fractal_bmp.c	/^static BMP_STATUS BMP_LAST_ERROR_CODE = 0;$/;"	v	file:
BMP_OK	../fractal/fractal_bmp.h	/^	BMP_OK = 0,				\/* No error *\/$/;"	e	enum:__anon1
BMP_OUT_OF_MEMORY	../fractal/fractal_bmp.h	/^	BMP_OUT_OF_MEMORY,		\/* Could not allocate enough memory to complete the operation *\/$/;"	e	enum:__anon1
BMP_PALETTE_SIZE	../fractal/fractal_bmp.c	82;"	d	file:
BMP_ReadFile	../fractal/fractal_bmp.c	/^BMP* BMP_ReadFile( const char* filename )$/;"	f
BMP_STATUS	../fractal/fractal_bmp.h	/^} BMP_STATUS;$/;"	t	typeref:enum:__anon1
BMP_SetPaletteColor	../fractal/fractal_bmp.c	/^void BMP_SetPaletteColor( BMP* bmp, UCHAR index, UCHAR r, UCHAR g, UCHAR b )$/;"	f
BMP_SetPixelIndex	../fractal/fractal_bmp.c	/^void BMP_SetPixelIndex( BMP* bmp, UINT x, UINT y, UCHAR val )$/;"	f
BMP_SetPixelRGB	../fractal/fractal_bmp.c	/^void BMP_SetPixelRGB( BMP* bmp, UINT x, UINT y, UCHAR r, UCHAR g, UCHAR b )$/;"	f
BMP_TYPE_MISMATCH	../fractal/fractal_bmp.h	/^	BMP_TYPE_MISMATCH,		\/* The requested action is not compatible with the BMP's type *\/$/;"	e	enum:__anon1
BMP_WriteFile	../fractal/fractal_bmp.c	/^void BMP_WriteFile( BMP* bmp, const char* filename )$/;"	f
BOLO_ASSETCHAIN_MAXLEN	../server/bolo/bolo_validation03.h	44;"	d
BOLO_ASSETCHAIN_MINLEN	../server/bolo/bolo_validation03.h	43;"	d
BOLO_BLOCK_MERKLE_DEPTH	../server/bolo/bolo_validation03.h	41;"	d
BOLO_LOCKTIME_DEPTH	../server/bolo/bolo_validation03.h	38;"	d
BOLO_MINRATIFY	../server/bolo/bolo_validation03.h	35;"	d
BOLO_NOTARY_ACCOUNT	../server/bolo/bolo_validation03.cpp	79;"	d	file:
BOLO_NOTARY_COIN_VALUE	../server/bolo/bolo_validation03.cpp	75;"	d	file:
BOLO_ORIGIN_ACCOUNT	../server/bolo/bolo_validation03.cpp	78;"	d	file:
BOLO_TXINDEX	../server/bolo/bolo_validation03.cpp	/^int32_t BOLO_TXINDEX = 1;$/;"	v
BUILD_DATE	../server/version.cpp	90;"	d	file:
BUILD_DATE	../server/version.cpp	92;"	d	file:
BUILD_DESC	../server/version.cpp	82;"	d	file:
BUILD_DESC	../server/version.cpp	84;"	d	file:
BUILD_DESC_FROM_COMMIT	../server/version.cpp	74;"	d	file:
BUILD_DESC_FROM_UNKNOWN	../server/version.cpp	77;"	d	file:
BackupBlockChain	../server/block.cpp	/^int BackupBlockChain(CIface *iface, unsigned int maxHeight)$/;"	f
Base58Prefix	../server/wallet.cpp	/^const cbuff& CWallet::Base58Prefix(int type) const$/;"	f	class:CWallet
Base58Prefix	../test/testcoin_bip32.cpp	/^static const std::vector<unsigned char>& Base58Prefix(Base58Type type) $/;"	f	file:
Base58Prefix	../test/testcoin_sip33.cpp	/^static const std::vector<unsigned char>& Base58Prefix(Base58Type type) $/;"	f	file:
Base58Type	../test/testcoin_bip32.cpp	/^enum Base58Type {$/;"	g	file:
Base58Type	../test/testcoin_sip33.cpp	/^enum Base58Type {$/;"	g	file:
BeginMessage	../server/net.h	/^    void BeginMessage(const char* pszCommand)$/;"	f	class:CNode
BeginTime	../server/versionbits.cpp	/^      int64_t BeginTime(CIface * params) const { return params->vDeployments[id].nStartTime; }$/;"	f	class:__anon15::VersionBitsConditionChecker
BindWallet	../server/wallet.h	/^			 void BindWallet(CWallet *pwalletIn)$/;"	f	class:CWalletTx
BitsPerPixel	../fractal/fractal_bmp.c	/^	USHORT		BitsPerPixel;		\/* Number of bits per pixel *\/$/;"	m	struct:_BMP_Header	file:
BlockAcceptSpringMatrix	../server/matrix.cpp	/^bool BlockAcceptSpringMatrix(CIface *iface, CTransaction& tx, bool& fCheck)$/;"	f
BlockAcceptValidateMatrix	../server/matrix.cpp	/^bool BlockAcceptValidateMatrix(CIface *iface, CTransaction& tx, CBlockIndex *pindex, bool& fCheck)$/;"	f
BlockGenerateSpringMatrix	../server/matrix.cpp	/^bool BlockGenerateSpringMatrix(CIface *iface, CTransaction& tx, int64& nReward)$/;"	f
BlockGenerateValidateMatrix	../server/matrix.cpp	/^bool BlockGenerateValidateMatrix(CIface *iface, CTransaction& tx, int64& nReward, uint64_t nBestHeight, uint64_t nCheckHeight)$/;"	f
BlockMerkleBranch	../server/wit_merkle.cpp	/^std::vector<uint256> BlockMerkleBranch(const CBlock& block, uint32_t position)$/;"	f
BlockMerkleRoot	../server/wit_merkle.cpp	/^uint256 BlockMerkleRoot(const CBlock& block, bool* mutated)$/;"	f
BlockRetractSpringMatrix	../server/matrix.cpp	/^void BlockRetractSpringMatrix(CIface *iface, CTransaction& tx, CBlockIndex *pindex)$/;"	f
BlockRetractValidateMatrix	../server/matrix.cpp	/^void BlockRetractValidateMatrix(CIface *iface, const CTransaction& tx, CBlockIndex *pindex)$/;"	f
BlockStatus	../server/block.h	/^enum BlockStatus {$/;"	g
BlockTransactions	../server/block_cmpct.h	/^		BlockTransactions() {}$/;"	f	class:BlockTransactions
BlockTransactions	../server/block_cmpct.h	/^		explicit BlockTransactions(const BlockTransactionsRequest& req) :$/;"	f	class:BlockTransactions
BlockTransactions	../server/block_cmpct.h	/^class BlockTransactions $/;"	c
BlockTransactionsRequest	../server/block_cmpct.h	/^class BlockTransactionsRequest $/;"	c
BlockTxCount	../server/block_cmpct.h	/^		size_t BlockTxCount() const { return shorttxids.size() + prefilledtxn.size(); }$/;"	f	class:CBlockHeaderAndShortTxIDs
BlockWitnessMerkleRoot	../server/wit_merkle.cpp	/^uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated)$/;"	f
BuildMerkleTree	../server/block_merkle.cpp	/^uint256 CBlock::BuildMerkleTree() const$/;"	f	class:CBlock
BuildSkip	../server/block.cpp	/^void CBlockIndex::BuildSkip()$/;"	f	class:CBlockIndex
ByteReverse	../server/util.h	/^inline uint32_t ByteReverse(uint32_t value)$/;"	f
C	../server/algo/sph_jh.c	/^static const sph_u32 C[] = {$/;"	v	file:
C	../server/algo/sph_jh.c	/^static const sph_u64 C[] = {$/;"	v	file:
C0	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon24
C0	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon26
C0	../server/algo/sph_simd.c	1084;"	d	file:
C0	../server/algo/sph_simd.c	1114;"	d	file:
C0	../server/algo/sph_simd.c	1319;"	d	file:
C0	../server/algo/sph_simd.c	1355;"	d	file:
C0	../server/algo/sph_simd.c	1504;"	d	file:
C0	../server/algo/sph_simd.c	820;"	d	file:
C0	../server/algo/sph_simd.c	965;"	d	file:
C0	../server/algo/sph_simd.c	985;"	d	file:
C1	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon24
C1	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon26
C1	../server/algo/sph_simd.c	1085;"	d	file:
C1	../server/algo/sph_simd.c	1115;"	d	file:
C1	../server/algo/sph_simd.c	1320;"	d	file:
C1	../server/algo/sph_simd.c	1356;"	d	file:
C1	../server/algo/sph_simd.c	1505;"	d	file:
C1	../server/algo/sph_simd.c	821;"	d	file:
C1	../server/algo/sph_simd.c	966;"	d	file:
C1	../server/algo/sph_simd.c	986;"	d	file:
C2	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon24
C2	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon26
C2	../server/algo/sph_simd.c	1086;"	d	file:
C2	../server/algo/sph_simd.c	1116;"	d	file:
C2	../server/algo/sph_simd.c	1321;"	d	file:
C2	../server/algo/sph_simd.c	1357;"	d	file:
C2	../server/algo/sph_simd.c	1506;"	d	file:
C2	../server/algo/sph_simd.c	822;"	d	file:
C2	../server/algo/sph_simd.c	967;"	d	file:
C2	../server/algo/sph_simd.c	987;"	d	file:
C3	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon24
C3	../server/algo/sph_echo.h	/^	sph_u32 C0, C1, C2, C3;$/;"	m	struct:__anon26
C3	../server/algo/sph_simd.c	1087;"	d	file:
C3	../server/algo/sph_simd.c	1117;"	d	file:
C3	../server/algo/sph_simd.c	1322;"	d	file:
C3	../server/algo/sph_simd.c	1358;"	d	file:
C3	../server/algo/sph_simd.c	1507;"	d	file:
C3	../server/algo/sph_simd.c	823;"	d	file:
C3	../server/algo/sph_simd.c	968;"	d	file:
C3	../server/algo/sph_simd.c	988;"	d	file:
C32	../server/algo/sph_echo.c	68;"	d	file:
C32	../server/algo/sph_shavite.c	50;"	d	file:
C32	../server/algo/sph_simd.c	53;"	d	file:
C32e	../server/algo/sph_groestl.c	128;"	d	file:
C32e	../server/algo/sph_groestl.c	83;"	d	file:
C32e	../server/algo/sph_jh.c	70;"	d	file:
C32e	../server/algo/sph_jh.c	92;"	d	file:
C4	../server/algo/sph_simd.c	1118;"	d	file:
C4	../server/algo/sph_simd.c	1323;"	d	file:
C4	../server/algo/sph_simd.c	1359;"	d	file:
C4	../server/algo/sph_simd.c	1508;"	d	file:
C5	../server/algo/sph_simd.c	1119;"	d	file:
C5	../server/algo/sph_simd.c	1324;"	d	file:
C5	../server/algo/sph_simd.c	1360;"	d	file:
C5	../server/algo/sph_simd.c	1509;"	d	file:
C512_ELT	../server/algo/sph_shavite.c	829;"	d	file:
C512_ELT	../server/algo/sph_shavite.c	873;"	d	file:
C6	../server/algo/sph_simd.c	1120;"	d	file:
C6	../server/algo/sph_simd.c	1325;"	d	file:
C6	../server/algo/sph_simd.c	1361;"	d	file:
C6	../server/algo/sph_simd.c	1510;"	d	file:
C64	../server/algo/sph_echo.c	70;"	d	file:
C64e	../server/algo/sph_groestl.c	103;"	d	file:
C64e	../server/algo/sph_groestl.c	145;"	d	file:
C64e	../server/algo/sph_jh.c	78;"	d	file:
C64e	../server/algo/sph_jh.c	96;"	d	file:
C7	../server/algo/sph_simd.c	1121;"	d	file:
C7	../server/algo/sph_simd.c	1326;"	d	file:
C7	../server/algo/sph_simd.c	1362;"	d	file:
C7	../server/algo/sph_simd.c	1511;"	d	file:
CANCEL	../server/ui_interface.h	/^        CANCEL                = 0x00000010,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
CANCEL_DEFAULT	../server/ui_interface.h	/^        CANCEL_DEFAULT        = 0x80000000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
CAccount	../server/wallet.h	/^		CAccount()$/;"	f	class:CAccount
CAccount	../server/wallet.h	/^		CAccount(const CAccount& accountIn)$/;"	f	class:CAccount
CAccount	../server/wallet.h	/^class CAccount$/;"	c
CAccountCache	../server/account.h	/^		CAccountCache(CWallet *walletIn) { $/;"	f	class:CAccountCache
CAccountCache	../server/account.h	/^		CAccountCache(CWallet *walletIn, CAccount accountIn, string strAccountIn = "")$/;"	f	class:CAccountCache
CAccountCache	../server/account.h	/^		CAccountCache(CWallet *walletIn, CPubKey vchPubKeyIn, string strAccountIn = "")$/;"	f	class:CAccountCache
CAccountCache	../server/account.h	/^class CAccountCache$/;"	c
CAccountingEntry	../server/wallet.h	/^		CAccountingEntry()$/;"	f	class:CAccountingEntry
CAccountingEntry	../server/wallet.h	/^class CAccountingEntry$/;"	c
CAddrDB	../server/addrman.cpp	/^CAddrDB::CAddrDB(const char *path)$/;"	f	class:CAddrDB
CAddrDB	../server/addrman.h	/^class CAddrDB$/;"	c
CAddrInfo	../server/addrman.h	/^    CAddrInfo() : CAddress(), source()$/;"	f	class:CAddrInfo
CAddrInfo	../server/addrman.h	/^    CAddrInfo(const CAddress &addrIn, const CNetAddr &addrSource) : CAddress(addrIn), source(addrSource)$/;"	f	class:CAddrInfo
CAddrInfo	../server/addrman.h	/^class CAddrInfo : public CAddress$/;"	c
CAddrMan	../server/addrman.h	/^    CAddrMan() : vRandom(0), vvTried(ADDRMAN_TRIED_BUCKET_COUNT, std::vector<int>(0)), vvNew(ADDRMAN_NEW_BUCKET_COUNT, std::set<int>())$/;"	f	class:CAddrMan
CAddrMan	../server/addrman.h	/^class CAddrMan$/;"	c
CAddress	../server/protocol.h	/^		CAddress() : CService()$/;"	f	class:CAddress
CAddress	../server/protocol.h	/^		explicit CAddress(CService ipIn, uint64 nServicesIn = NODE_NETWORK) : CService(ipIn)$/;"	f	class:CAddress
CAddress	../server/protocol.h	/^class CAddress : public CService$/;"	c
CAlias	../server/ext/alias.h	/^    CAlias()$/;"	f	class:CAlias
CAlias	../server/ext/alias.h	/^    CAlias(const CAlias& alias)$/;"	f	class:CAlias
CAlias	../server/ext/alias.h	/^    CAlias(const CIdent& ident)$/;"	f	class:CAlias
CAlias	../server/ext/alias.h	/^    CAlias(std::string labelIn, const uint160& hashIn)$/;"	f	class:CAlias
CAlias	../server/ext/alias.h	/^class CAlias : public CIdent$/;"	c
CAltBlock	../server/ext/altchain.h	/^		CAltBlock()$/;"	f	class:CAltBlock
CAltBlock	../server/ext/altchain.h	/^class CAltBlock$/;"	c
CAltChain	../server/ext/altchain.h	/^    CAltChain()$/;"	f	class:CAltChain
CAltChain	../server/ext/altchain.h	/^    CAltChain(const CAltChain& altchain)$/;"	f	class:CAltChain
CAltChain	../server/ext/altchain.h	/^    CAltChain(uint160 hColor)$/;"	f	class:CAltChain
CAltChain	../server/ext/altchain.h	/^class CAltChain : public CExtCore$/;"	c
CAltTx	../server/ext/altchain.h	/^    CAltTx()$/;"	f	class:CAltTx
CAltTx	../server/ext/altchain.h	/^class CAltTx$/;"	c
CAmount	../server/coin.h	/^typedef int64 CAmount;$/;"	t
CAmount	../server/txfeerate.h	/^typedef int64 CAmount;$/;"	t
CAsset	../server/ext/asset.h	/^    CAsset()$/;"	f	class:CAsset
CAsset	../server/ext/asset.h	/^    CAsset(const CAsset& assetIn)$/;"	f	class:CAsset
CAsset	../server/ext/asset.h	/^    CAsset(const CCert& certIn)$/;"	f	class:CAsset
CAsset	../server/ext/asset.h	/^    CAsset(string labelIn)$/;"	f	class:CAsset
CAsset	../server/ext/asset.h	/^class CAsset : public CCert$/;"	c
CAutoBN_CTX	../server/bignum.h	/^    CAutoBN_CTX()$/;"	f	class:CAutoBN_CTX
CAutoBN_CTX	../server/bignum.h	/^class CAutoBN_CTX$/;"	c
CAutoFile	../server/serialize.h	/^    CAutoFile(FILE* filenew, int nTypeIn, int nVersionIn)$/;"	f	class:CAutoFile
CAutoFile	../server/serialize.h	/^class CAutoFile$/;"	c
CB	../server/algo/sph_blake.c	/^static const sph_u64 CB[16] = {$/;"	v	file:
CB0	../server/algo/sph_blake.c	342;"	d	file:
CB1	../server/algo/sph_blake.c	343;"	d	file:
CB2	../server/algo/sph_blake.c	344;"	d	file:
CB3	../server/algo/sph_blake.c	345;"	d	file:
CB4	../server/algo/sph_blake.c	346;"	d	file:
CB5	../server/algo/sph_blake.c	347;"	d	file:
CB6	../server/algo/sph_blake.c	348;"	d	file:
CB7	../server/algo/sph_blake.c	349;"	d	file:
CB8	../server/algo/sph_blake.c	350;"	d	file:
CB9	../server/algo/sph_blake.c	351;"	d	file:
CBA	../server/algo/sph_blake.c	352;"	d	file:
CBB	../server/algo/sph_blake.c	353;"	d	file:
CBC	../server/algo/sph_blake.c	354;"	d	file:
CBD	../server/algo/sph_blake.c	355;"	d	file:
CBE	../server/algo/sph_blake.c	356;"	d	file:
CBF	../server/algo/sph_blake.c	357;"	d	file:
CBase58Data	../server/base58.h	/^		CBase58Data()$/;"	f	class:CBase58Data
CBase58Data	../server/base58.h	/^class CBase58Data$/;"	c
CBasicKeyStore	../server/keystore.h	/^class CBasicKeyStore : public CKeyStore$/;"	c
CBigNum	../server/bignum.h	/^    CBigNum()$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(const CBigNum& b)$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(int n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(int64 n)            { BN_init(this); setint64(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(long n)             { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(short n)            { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(signed char n)      { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(uint64 n)           { BN_init(this); setuint64(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(unsigned char n)    { BN_init(this); setulong(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(unsigned int n)     { BN_init(this); setulong(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(unsigned long n)    { BN_init(this); setulong(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    CBigNum(unsigned short n)   { BN_init(this); setulong(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    explicit CBigNum(const std::vector<unsigned char>& vch)$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^    explicit CBigNum(uint256 n) { BN_init(this); setuint256(n); }$/;"	f	class:CBigNum
CBigNum	../server/bignum.h	/^class CBigNum : public BIGNUM$/;"	c
CBitcoinExtKey	../test/testcoin_bip32.cpp	/^typedef CBitcoinExtKeyBase<ECExtKey, BIP32_EXTKEY_SIZE, EXT_SECRET_KEY> CBitcoinExtKey;$/;"	t	file:
CBitcoinExtKeyBase	../test/testcoin_bip32.cpp	/^		CBitcoinExtKeyBase() {}$/;"	f	class:CBitcoinExtKeyBase
CBitcoinExtKeyBase	../test/testcoin_bip32.cpp	/^		CBitcoinExtKeyBase(const K &key) {$/;"	f	class:CBitcoinExtKeyBase
CBitcoinExtKeyBase	../test/testcoin_bip32.cpp	/^		CBitcoinExtKeyBase(const std::string& strBase58c) {$/;"	f	class:CBitcoinExtKeyBase
CBitcoinExtKeyBase	../test/testcoin_bip32.cpp	/^template<typename K, int Size, Base58Type Type> class CBitcoinExtKeyBase : public CBase58Data$/;"	c	file:
CBitcoinExtPubKey	../test/testcoin_bip32.cpp	/^typedef CBitcoinExtKeyBase<ECExtPubKey, BIP32_EXTKEY_SIZE, EXT_PUBLIC_KEY> CBitcoinExtPubKey;$/;"	t	file:
CBlock	../server/block.h	/^    CBlock()$/;"	f	class:CBlock
CBlock	../server/block.h	/^    CBlock(const CBlock& in_block)$/;"	f	class:CBlock
CBlock	../server/block.h	/^    CBlock(const CBlockHeader &header)$/;"	f	class:CBlock
CBlock	../server/block.h	/^class CBlock : public CBlockHeader$/;"	c
CBlockChain	../blockchain/bc.h	/^typedef struct bc_t CBlockChain;$/;"	t	typeref:struct:bc_t
CBlockHeader	../server/block.h	/^    CBlockHeader()$/;"	f	class:CBlockHeader
CBlockHeader	../server/block.h	/^class CBlockHeader$/;"	c
CBlockHeaderAndShortTxIDs	../server/block_cmpct.cpp	/^CBlockHeaderAndShortTxIDs::CBlockHeaderAndShortTxIDs(const CBlock& block, bool fUseWTXID) :$/;"	f	class:CBlockHeaderAndShortTxIDs
CBlockHeaderAndShortTxIDs	../server/block_cmpct.h	/^		CBlockHeaderAndShortTxIDs() {}$/;"	f	class:CBlockHeaderAndShortTxIDs
CBlockHeaderAndShortTxIDs	../server/block_cmpct.h	/^class CBlockHeaderAndShortTxIDs $/;"	c
CBlockIndex	../server/block.h	/^    CBlockIndex()$/;"	f	class:CBlockIndex
CBlockIndex	../server/block.h	/^    CBlockIndex(CBlockHeader& block)$/;"	f	class:CBlockIndex
CBlockIndex	../server/block.h	/^class CBlockIndex$/;"	c
CBlockIndexWorkComparator	../server/block.h	/^struct CBlockIndexWorkComparator$/;"	s
CBlockLocator	../server/block.h	/^		CBlockLocator() { }$/;"	f	class:CBlockLocator
CBlockLocator	../server/block.h	/^		explicit CBlockLocator(const std::vector<uint256>& vHaveIn) : vHave(vHaveIn) {}$/;"	f	class:CBlockLocator
CBlockLocator	../server/block.h	/^class CBlockLocator$/;"	c
CBlockPolicyEstimator	../server/txfeerate.cpp	/^CBlockPolicyEstimator::CBlockPolicyEstimator(int ifaceIndexIn, const CFeeRate& _minRelayFee) : nBestSeenHeight(0)$/;"	f	class:CBlockPolicyEstimator
CBlockPolicyEstimator	../server/txfeerate.h	/^class CBlockPolicyEstimator$/;"	c
CBloomFilter	../server/bloom.cpp	/^CBloomFilter::CBloomFilter(int ifaceIndexIn, unsigned int nElements, double nFPRate, unsigned int nTweakIn, unsigned char nFlagsIn) :$/;"	f	class:CBloomFilter
CBloomFilter	../server/net.h	/^    CBloomFilter(int ifaceIndexIn)$/;"	f	class:CBloomFilter
CBloomFilter	../server/net.h	/^class CBloomFilter$/;"	c
CBx	../server/algo/sph_blake.c	338;"	d	file:
CBx_	../server/algo/sph_blake.c	339;"	d	file:
CBx__	../server/algo/sph_blake.c	340;"	d	file:
CCert	../server/ext/certificate.h	/^    CCert()$/;"	f	class:CCert
CCert	../server/ext/certificate.h	/^    CCert(const CCert& certIn)$/;"	f	class:CCert
CCert	../server/ext/certificate.h	/^    CCert(const CIdent& identIn)$/;"	f	class:CCert
CCert	../server/ext/certificate.h	/^    CCert(string strTitle)$/;"	f	class:CCert
CCert	../server/ext/certificate.h	/^class CCert : public CIdent$/;"	c
CChannel	../server/ext/channel.h	/^    CChannel()$/;"	f	class:CChannel
CChannel	../server/ext/channel.h	/^class CChannel$/;"	c
CChannelKey	../server/ext/channel.h	/^class CChannelKey$/;"	c
CCheckpoints	../server/checkpoints.h	/^		CCheckpoints(int ifaceIndexIn)$/;"	f	class:CCheckpoints
CCheckpoints	../server/checkpoints.h	/^		CCheckpoints(int ifaceIndexIn, MapCheckpoints mapIn)$/;"	f	class:CCheckpoints
CCheckpoints	../server/checkpoints.h	/^class CCheckpoints$/;"	c
CClientUIInterface	../server/ui_interface.h	/^class CClientUIInterface$/;"	c
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr()$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const CScript& script)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const CTxDestination &dest)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const char* pszAddress)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^    CCoinAddr(int ifaceIndexIn, const std::string& strAddress)$/;"	f	class:CCoinAddr
CCoinAddr	../server/coinaddr.h	/^class CCoinAddr : public CBase58Data$/;"	c
CCoinAddrVisitor	../server/coinaddr.h	/^    CCoinAddrVisitor(CCoinAddr *addrIn) : addr(addrIn) { }$/;"	f	class:CCoinAddrVisitor
CCoinAddrVisitor	../server/coinaddr.h	/^class CCoinAddrVisitor : public boost::static_visitor<bool>$/;"	c
CCoinSecret	../server/base58.h	/^		CCoinSecret()$/;"	f	class:CCoinSecret
CCoinSecret	../server/base58.h	/^		CCoinSecret(int ifaceIndex, const CSecret& vchSecret, bool fCompressed)$/;"	f	class:CCoinSecret
CCoinSecret	../server/base58.h	/^class CCoinSecret : public CBase58Data$/;"	c
CContext	../server/ext/context.h	/^    CContext()$/;"	f	class:CContext
CContext	../server/ext/context.h	/^    CContext(const CCert& certIn)$/;"	f	class:CContext
CContext	../server/ext/context.h	/^    CContext(const CContext& ctxIn)$/;"	f	class:CContext
CContext	../server/ext/context.h	/^class CContext : public CCert$/;"	c
CCriticalBlock	../server/sync.h	/^typedef CMutexLock<CCriticalSection> CCriticalBlock;$/;"	t
CCriticalSection	../server/sync.h	/^typedef boost::recursive_mutex CCriticalSection;$/;"	t
CCrypter	../server/crypter.h	/^    CCrypter()$/;"	f	class:CCrypter
CCrypter	../server/crypter.h	/^class CCrypter$/;"	c
CDB	../server/txidx.cpp	/^CDB::CDB(const char *pszFile, const char* pszMode) :$/;"	f	class:CDB
CDB	../server/txidx.h	/^class CDB$/;"	c
CDBEnv	../server/txidx.cpp	/^CDBEnv::CDBEnv() : dbenv(0)$/;"	f	class:CDBEnv
CDBEnv	../server/txidx.h	/^class CDBEnv$/;"	c
CDataStream	../server/serialize.h	/^    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)$/;"	f	class:CDataStream
CDataStream	../server/serialize.h	/^    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())$/;"	f	class:CDataStream
CDataStream	../server/serialize.h	/^    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch((char*)&vchIn.begin()[0], (char*)&vchIn.end()[0])$/;"	f	class:CDataStream
CDataStream	../server/serialize.h	/^    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())$/;"	f	class:CDataStream
CDataStream	../server/serialize.h	/^    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)$/;"	f	class:CDataStream
CDataStream	../server/serialize.h	/^    explicit CDataStream(int nTypeIn, int nVersionIn)$/;"	f	class:CDataStream
CDataStream	../server/serialize.h	/^class CDataStream$/;"	c
CDiskBlockIndex	../server/block.h	/^    CDiskBlockIndex()$/;"	f	class:CDiskBlockIndex
CDiskBlockIndex	../server/block.h	/^    explicit CDiskBlockIndex(CBlockIndex* pindex) : CBlockIndex(*pindex)$/;"	f	class:CDiskBlockIndex
CDiskBlockIndex	../server/block.h	/^class CDiskBlockIndex : public CBlockIndex$/;"	c
CDiskTxPos	../server/block.h	/^    CDiskTxPos()$/;"	f	class:CDiskTxPos
CDiskTxPos	../server/block.h	/^    CDiskTxPos(unsigned int nFileIn, unsigned int nBlockPosIn, unsigned int nTxPosIn)$/;"	f	class:CDiskTxPos
CDiskTxPos	../server/block.h	/^class CDiskTxPos$/;"	c
CENT	../proto/conversion.h	/^static const int64 CENT = 1000000;$/;"	v
CERTF_CHAIN	../server/ext/certificate.h	/^    static const int CERTF_CHAIN = SHCERT_CERT_CHAIN;$/;"	m	class:CCert
CERT_DERIVE	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_DERIVE = {$/;"	v
CERT_EXPORT	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_EXPORT = {$/;"	v
CERT_GET	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_GET = {$/;"	v
CERT_INFO	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_INFO = {$/;"	v
CERT_LICENSE	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_LICENSE = {$/;"	v
CERT_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_LIST = {$/;"	v
CERT_NEW	../server/shc/shc_rpc.cpp	/^const RPCOp CERT_NEW = {$/;"	v
CExec	../server/ext/exec.h	/^    CExec()$/;"	f	class:CExec
CExec	../server/ext/exec.h	/^    CExec(const CExec& execIn)$/;"	f	class:CExec
CExec	../server/ext/exec.h	/^class CExec : public CExecCore$/;"	c
CExecCall	../server/ext/exec.h	/^		CExecCall(const CExec& exec)$/;"	f	class:CExecCall
CExecCall	../server/ext/exec.h	/^    CExecCall()$/;"	f	class:CExecCall
CExecCall	../server/ext/exec.h	/^    CExecCall(const CExecCall& execIn)$/;"	f	class:CExecCall
CExecCall	../server/ext/exec.h	/^class CExecCall : public CExec$/;"	c
CExecCheckpoint	../server/ext/exec.h	/^    CExecCheckpoint()$/;"	f	class:CExecCheckpoint
CExecCheckpoint	../server/ext/exec.h	/^    CExecCheckpoint(const CExecCheckpoint& execIn)$/;"	f	class:CExecCheckpoint
CExecCheckpoint	../server/ext/exec.h	/^class CExecCheckpoint : public CExecCore$/;"	c
CExecCore	../server/ext/exec.h	/^    CExecCore()$/;"	f	class:CExecCore
CExecCore	../server/ext/exec.h	/^    CExecCore(const CExecCore& execIn)$/;"	f	class:CExecCore
CExecCore	../server/ext/exec.h	/^class CExecCore : public CExtCore$/;"	c
CExtCore	../server/ext/txext.h	/^    CExtCore() {$/;"	f	class:CExtCore
CExtCore	../server/ext/txext.h	/^    CExtCore(std::string labelIn) {$/;"	f	class:CExtCore
CExtCore	../server/ext/txext.h	/^class CExtCore$/;"	c
CFeeRate	../server/txfeerate.cpp	/^CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)$/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^    CFeeRate()$/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^    CFeeRate(const CFeeRate& other)$/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^    explicit CFeeRate(const CAmount& _nCoinPerK) $/;"	f	class:CFeeRate
CFeeRate	../server/txfeerate.h	/^class CFeeRate$/;"	c
CFlatData	../server/serialize.h	/^    CFlatData(void* pbeginIn, void* pendIn) : pbegin((char*)pbeginIn), pend((char*)pendIn) { }$/;"	f	class:CFlatData
CFlatData	../server/serialize.h	/^class CFlatData$/;"	c
CHARITY_ADDRESS	../server/emc2/emc2_txidx.cpp	338;"	d	file:
CHARSET	../server/bech32.cpp	/^	const char* CHARSET = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";$/;"	m	namespace:__anon2	file:
CHARSET_REV	../server/bech32.cpp	/^	const int8_t CHARSET_REV[128] = {$/;"	m	namespace:__anon2	file:
CHECKSUM_OFFSET	../server/protocol.h	/^				CHECKSUM_OFFSET=MESSAGE_SIZE_OFFSET+MESSAGE_SIZE_SIZE$/;"	e	enum:CMessageHeader::__anon8
CHECKSUM_SIZE	../server/protocol.h	/^				CHECKSUM_SIZE=sizeof(int),$/;"	e	enum:CMessageHeader::__anon8
CHKIP_HTML_TEMPLATE	../unet/unet_local.c	36;"	d	file:
CHKIP_IP_TAG	../unet/unet_local.c	/^static const char *CHKIP_IP_TAG = "Current IP Address: ";$/;"	v	file:
CHMAC_SHA512	../server/algo/hmac_sha512.cpp	/^CHMAC_SHA512::CHMAC_SHA512(const unsigned char* key, size_t keylen)$/;"	f	class:CHMAC_SHA512
CHMAC_SHA512	../server/algo/hmac_sha512.h	/^class CHMAC_SHA512$/;"	c
CHashWriter	../server/util.h	/^    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {$/;"	f	class:CHashWriter
CHashWriter	../server/util.h	/^class CHashWriter$/;"	c
CIdent	../server/ext/certificate.h	/^    CIdent()$/;"	f	class:CIdent
CIdent	../server/ext/certificate.h	/^    CIdent(const CIdent& ent)$/;"	f	class:CIdent
CIdent	../server/ext/certificate.h	/^    CIdent(string labelIn)$/;"	f	class:CIdent
CIdent	../server/ext/certificate.h	/^class CIdent : public CExtCore$/;"	c
CIface	../proto/coin_proto.h	/^typedef struct coin_iface_t CIface;$/;"	t	typeref:struct:coin_iface_t
CInPoint	../server/block.h	/^    CInPoint() { SetNull(); }$/;"	f	class:CInPoint
CInPoint	../server/block.h	/^    CInPoint(CTransaction* ptxIn, unsigned int nIn) { ptx = ptxIn; n = nIn; }$/;"	f	class:CInPoint
CInPoint	../server/block.h	/^class CInPoint$/;"	c
CInit	../server/util.cpp	/^    CInit()$/;"	f	class:CInit
CInit	../server/util.cpp	/^class CInit$/;"	c	file:
CInv	../server/protocol.cpp	/^CInv::CInv()$/;"	f	class:CInv
CInv	../server/protocol.cpp	/^CInv::CInv(int ifaceIndexIn, const std::string& strType, const uint256& hashIn)$/;"	f	class:CInv
CInv	../server/protocol.cpp	/^CInv::CInv(int ifaceIndexIn, int typeIn, const uint256& hashIn)$/;"	f	class:CInv
CInv	../server/protocol.h	/^class CInv$/;"	c
CKey	../server/key.h	/^    CKey()$/;"	f	class:CKey
CKey	../server/key.h	/^    CKey(const CKey& b)$/;"	f	class:CKey
CKey	../server/key.h	/^class CKey : public CKeyMetadata$/;"	c
CKeyID	../server/key.h	/^    CKeyID() : uint160(0) { }$/;"	f	class:CKeyID
CKeyID	../server/key.h	/^    CKeyID(const uint160 &in) : uint160(in) { }$/;"	f	class:CKeyID
CKeyID	../server/key.h	/^class CKeyID : public uint160$/;"	c
CKeyMetadata	../server/key.h	/^		CKeyMetadata()$/;"	f	class:CKeyMetadata
CKeyMetadata	../server/key.h	/^		explicit CKeyMetadata(int64_t nCreateTime_)$/;"	f	class:CKeyMetadata
CKeyMetadata	../server/key.h	/^class CKeyMetadata$/;"	c
CKeyStore	../server/keystore.h	/^class CKeyStore$/;"	c
CKeyStoreIsMineVisitor	../server/script.cpp	/^    CKeyStoreIsMineVisitor(const CKeyStore *keystoreIn) : keystore(keystoreIn) { }$/;"	f	class:CKeyStoreIsMineVisitor
CKeyStoreIsMineVisitor	../server/script.cpp	/^class CKeyStoreIsMineVisitor : public boost::static_visitor<bool>$/;"	c	file:
CKeyingMaterial	../server/crypter.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;$/;"	t
CLIENT_VERSION_SUFFIX	../server/version.cpp	43;"	d	file:
CLOSE	../server/ui_interface.h	/^        CLOSE                 = 0x00000040,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
CLROPT_ALGO	../server/color/color_block.h	48;"	d
CLROPT_ALGO_BLAKE2S	../server/color/color_block.h	54;"	d
CLROPT_ALGO_KECCAK	../server/color/color_block.h	52;"	d
CLROPT_ALGO_SHA256D	../server/color/color_block.h	51;"	d
CLROPT_ALGO_X11	../server/color/color_block.h	53;"	d
CLROPT_BLOCKTARGET	../server/color/color_block.h	43;"	d
CLROPT_DIFFICULTY	../server/color/color_block.h	42;"	d
CLROPT_ERROR	../server/color/color_block.h	41;"	d
CLROPT_MATURITY	../server/color/color_block.h	44;"	d
CLROPT_REWARDBASE	../server/color/color_block.h	45;"	d
CLROPT_REWARDHALF	../server/color/color_block.h	46;"	d
CLROPT_TXFEE	../server/color/color_block.h	47;"	d
CLevelDB	../server/leveldb.cpp	/^CLevelDB::CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory, bool fWipe) {$/;"	f	class:CLevelDB
CLevelDB	../server/leveldb.h	/^class CLevelDB$/;"	c
CLevelDBBatch	../server/leveldb.h	/^class CLevelDBBatch$/;"	c
CLicense	../server/ext/certificate.h	/^    CLicense()$/;"	f	class:CLicense
CLicense	../server/ext/certificate.h	/^    CLicense(const CCert& cert)$/;"	f	class:CLicense
CLicense	../server/ext/certificate.h	/^    CLicense(const CLicense& lic)$/;"	f	class:CLicense
CLicense	../server/ext/certificate.h	/^class CLicense : public CCert$/;"	c
CLockLocation	../server/sync.cpp	/^    CLockLocation(const char* pszName, const char* pszFile, int nLine)$/;"	f	struct:CLockLocation
CLockLocation	../server/sync.cpp	/^struct CLockLocation$/;"	s	file:
CMasterKey	../server/crypter.h	/^    CMasterKey()$/;"	f	class:CMasterKey
CMasterKey	../server/crypter.h	/^class CMasterKey$/;"	c
CMedianFilter	../server/util.h	/^    CMedianFilter(unsigned int size, T initial_value):$/;"	f	class:CMedianFilter
CMedianFilter	../server/util.h	/^template <typename T> class CMedianFilter$/;"	c
CMerkleBlock	../server/bloom.cpp	/^CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter& filter)$/;"	f	class:CMerkleBlock
CMerkleBlock	../server/bloom.h	/^class CMerkleBlock$/;"	c
CMerkleTx	../server/main.h	/^    CMerkleTx()$/;"	f	class:CMerkleTx
CMerkleTx	../server/main.h	/^    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)$/;"	f	class:CMerkleTx
CMerkleTx	../server/main.h	/^class CMerkleTx : public CTransaction$/;"	c
CMessageHeader	../server/protocol.cpp	/^CMessageHeader::CMessageHeader()$/;"	f	class:CMessageHeader
CMessageHeader	../server/protocol.cpp	/^CMessageHeader::CMessageHeader(int ifaceIndexIn, const char* pszCommand, unsigned int nMessageSizeIn)$/;"	f	class:CMessageHeader
CMessageHeader	../server/protocol.h	/^class CMessageHeader$/;"	c
CMutexLock	../server/sync.h	/^		CMutexLock(Mutex& mutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false) : lock(mutexIn, boost::defer_lock)$/;"	f	class:CMutexLock
CMutexLock	../server/sync.h	/^class CMutexLock$/;"	c
CNetAddr	../server/netbase.cpp	/^CNetAddr::CNetAddr()$/;"	f	class:CNetAddr
CNetAddr	../server/netbase.cpp	/^CNetAddr::CNetAddr(const char *pszIp, bool fAllowLookup)$/;"	f	class:CNetAddr
CNetAddr	../server/netbase.cpp	/^CNetAddr::CNetAddr(const std::string &strIp, bool fAllowLookup)$/;"	f	class:CNetAddr
CNetAddr	../server/netbase.cpp	/^CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr)$/;"	f	class:CNetAddr
CNetAddr	../server/netbase.cpp	/^CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)$/;"	f	class:CNetAddr
CNetAddr	../server/netbase.h	/^class CNetAddr$/;"	c
CNoDestination	../server/script.h	/^class CNoDestination {$/;"	c
CNode	../server/net.h	/^    CNode(int ifaceIndexIn, unsigned int hSocketIn, CAddress addrIn, std::string addrNameIn = "", bool fInboundIn=false) : vSend(SER_NETWORK, MIN_PROTO_VERSION), vRecv(SER_NETWORK, MIN_PROTO_VERSION)$/;"	f	class:CNode
CNode	../server/net.h	/^class CNode$/;"	c
CNodeStats	../server/net.h	/^class CNodeStats$/;"	c
COIN	../proto/conversion.h	/^static const int64 COIN = 100000000;$/;"	v
COINF	../proto/coin_proto.h	158;"	d
COINF_DL_SCAN	../proto/coin_proto.h	138;"	d
COINF_DL_SYNC	../proto/coin_proto.h	139;"	d
COINF_PEER_SCAN	../proto/coin_proto.h	142;"	d
COINF_PEER_SYNC	../proto/coin_proto.h	143;"	d
COINF_VALIDATE_SCAN	../proto/coin_proto.h	144;"	d
COINF_VALIDATE_SYNC	../proto/coin_proto.h	145;"	d
COINF_WALLET_SCAN	../proto/coin_proto.h	140;"	d
COINF_WALLET_SYNC	../proto/coin_proto.h	141;"	d
COIN_IFACE_VERSION	../proto/coin_proto.h	43;"	d
COIN_SERVICES	../proto/coin_proto.h	110;"	d
COLORBlock	../server/color/color_block.h	/^    COLORBlock(const CAltBlock &header, uint160 hColorIn = 0)$/;"	f	class:COLORBlock
COLORBlock	../server/color/color_block.h	/^    COLORBlock(const CBlock &block, uint160 hColorIn = 0)$/;"	f	class:COLORBlock
COLORBlock	../server/color/color_block.h	/^    COLORBlock(uint160 hColorIn = 0)$/;"	f	class:COLORBlock
COLORBlock	../server/color/color_block.h	/^class COLORBlock : public CBlock$/;"	c
COLORCoinAddr	../server/coinaddr.h	/^    COLORCoinAddr() : CCoinAddr(COLOR_COIN_IFACE)$/;"	f	class:COLORCoinAddr
COLORCoinAddr	../server/coinaddr.h	/^    COLORCoinAddr(const CTxDestination &dest) : CCoinAddr(COLOR_COIN_IFACE)$/;"	f	class:COLORCoinAddr
COLORCoinAddr	../server/coinaddr.h	/^    COLORCoinAddr(const std::string& strAddress) : CCoinAddr(COLOR_COIN_IFACE)$/;"	f	class:COLORCoinAddr
COLORCoinAddr	../server/coinaddr.h	/^class COLORCoinAddr : public CCoinAddr$/;"	c
COLORTxDB	../server/color/color_txidx.h	/^    COLORTxDB(const char *fileMode = "r+") : CTxDB("color_tx.dat", COLOR_COIN_IFACE, fileMode) { }$/;"	f	class:COLORTxDB
COLORTxDB	../server/color/color_txidx.h	/^class COLORTxDB : public CTxDB$/;"	c
COLORWallet	../server/color/color_wallet.h	/^    COLORWallet() : CWallet(COLOR_COIN_IFACE, "color_wallet.dat") { };  $/;"	f	class:COLORWallet
COLORWallet	../server/color/color_wallet.h	/^class COLORWallet : public CWallet$/;"	c
COLOR_COIN	../proto/color_proto.h	64;"	d
COLOR_COINBASE_FLAGS	../server/color/color_wallet.cpp	/^CScript COLOR_COINBASE_FLAGS;$/;"	v
COLOR_COINBASE_MATURITY	../proto/color_proto.h	/^static const int COLOR_COINBASE_MATURITY = 90;$/;"	v
COLOR_COIN_DAEMON_PORT	../proto/color_proto.h	36;"	d
COLOR_COIN_IFACE	../proto/coin_proto.h	133;"	d
COLOR_CTxMemPool	../server/color/color_pool.h	/^    COLOR_CTxMemPool() : CPool(COLOR_COIN_IFACE) { };$/;"	f	class:COLOR_CTxMemPool
COLOR_CTxMemPool	../server/color/color_pool.h	/^class COLOR_CTxMemPool : public CPool$/;"	c
COLOR_DEFAULT_BYTES_PER_SIGOP	../proto/color_proto.h	77;"	d
COLOR_MAX_BLOCK_SIZE	../proto/color_proto.h	69;"	d
COLOR_MAX_DRIFT_TIME	../proto/color_proto.h	54;"	d
COLOR_MAX_FREE_TX_SIZE	../proto/color_proto.h	80;"	d
COLOR_MAX_GETADDR	../proto/color_proto.h	39;"	d
COLOR_MAX_MONEY	../proto/color_proto.h	/^static const int64 COLOR_MAX_MONEY = 722388 * COLOR_COIN; \/* ~ 0.7mil max @ height 1.44mil *\/$/;"	v
COLOR_MAX_ORPHAN_TRANSACTIONS	../proto/color_proto.h	41;"	d
COLOR_MAX_SCRIPT_ELEMENT_SIZE	../proto/color_proto.h	51;"	d
COLOR_MAX_SCRIPT_SIZE	../proto/color_proto.h	49;"	d
COLOR_MAX_SIGOPS	../proto/color_proto.h	47;"	d
COLOR_MAX_STANDARD_TX_SIGOP_COST	../proto/color_proto.h	75;"	d
COLOR_MAX_STANDARD_TX_WEIGHT	../proto/color_proto.h	73;"	d
COLOR_MAX_TRANSACTION_WEIGHT	../proto/color_proto.h	71;"	d
COLOR_MAX_TX_FEE	../proto/color_proto.h	/^static const int64 COLOR_MAX_TX_FEE = 1000 * COLOR_COIN;$/;"	v
COLOR_MIN_INPUT	../proto/color_proto.h	/^static const int64 COLOR_MIN_INPUT = 1;$/;"	v
COLOR_MIN_RELAY_TX_FEE	../proto/color_proto.h	/^static const int64 COLOR_MIN_RELAY_TX_FEE = 1000;$/;"	v
COLOR_MIN_TX_FEE	../proto/color_proto.h	/^static const int64 COLOR_MIN_TX_FEE = 1000;$/;"	v
COLOR_PROTOCOL_VERSION	../proto/color_proto.h	/^static const int COLOR_PROTOCOL_VERSION = 2000000;$/;"	v
COLOR_SetBestChain	../server/color/color_block.cpp	/^void static COLOR_SetBestChain(const CBlockLocator& loc)$/;"	f	file:
COLOR_VERSION_BUILD	../proto/color_proto.h	33;"	d
COLOR_VERSION_MAJOR	../proto/color_proto.h	30;"	d
COLOR_VERSION_MINOR	../proto/color_proto.h	31;"	d
COLOR_VERSION_REVISION	../proto/color_proto.h	32;"	d
COLOR_WITNESS_SCALE_FACTOR	../proto/color_proto.h	/^static const int COLOR_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
COLOR_mapOrphanBlocksByPrev	../server/color/color_block.cpp	/^static orphan_map COLOR_mapOrphanBlocksByPrev;$/;"	v	file:
COMMAND_SIZE	../server/protocol.h	/^				COMMAND_SIZE=12,$/;"	e	enum:CMessageHeader::__anon8
COMPRESS32	../server/algo/sph_blake.c	519;"	d	file:
COMPRESS32	../server/algo/sph_blake.c	570;"	d	file:
COMPRESS64	../server/algo/sph_blake.c	677;"	d	file:
COMPRESS64	../server/algo/sph_blake.c	728;"	d	file:
COMPRESSED_PUBLIC_KEY_SIZE	../server/eckey.cpp	/^static const unsigned int COMPRESSED_PUBLIC_KEY_SIZE  = 33;$/;"	v	file:
COMPRESS_BIG	../server/algo/sph_echo.c	332;"	d	file:
COMPRESS_BIG	../server/algo/sph_echo.c	622;"	d	file:
COMPRESS_BIG	../server/algo/sph_groestl.c	1640;"	d	file:
COMPRESS_BIG	../server/algo/sph_groestl.c	2713;"	d	file:
COMPRESS_SMALL	../server/algo/sph_echo.c	319;"	d	file:
COMPRESS_SMALL	../server/algo/sph_echo.c	609;"	d	file:
COMPRESS_SMALL	../server/algo/sph_groestl.c	1354;"	d	file:
COMPRESS_SMALL	../server/algo/sph_groestl.c	2330;"	d	file:
CONSENSUS_VERSIONBITS_H	../server/versionbits.h	2;"	d
COffer	../server/ext/offer.h	/^    COffer() { $/;"	f	class:COffer
COffer	../server/ext/offer.h	/^    COffer(const COffer& offerIn)$/;"	f	class:COffer
COffer	../server/ext/offer.h	/^class COffer : public CExtCore $/;"	c
COutPoint	../server/block.h	/^    COutPoint() { SetNull(); }$/;"	f	class:COutPoint
COutPoint	../server/block.h	/^    COutPoint(uint256 hashIn, unsigned int nIn) { hash = hashIn; n = nIn; }$/;"	f	class:COutPoint
COutPoint	../server/block.h	/^class COutPoint$/;"	c
COutput	../server/wallet.h	/^		COutput(const CWalletTx *txIn, int iIn, int nDepthIn)$/;"	f	class:COutput
COutput	../server/wallet.h	/^class COutput$/;"	c
CPUMINER_WORKER	../stratum/stratum_task.c	42;"	d	file:
CParam	../server/ext/ext_param.h	/^    CParam()$/;"	f	class:CParam
CParam	../server/ext/ext_param.h	/^    CParam(const CParam& param)$/;"	f	class:CParam
CParam	../server/ext/ext_param.h	/^    CParam(string strLabelIn, int64_t nValueIn)$/;"	f	class:CParam
CParam	../server/ext/ext_param.h	/^class CParam : public CExtCore$/;"	c
CPartialMerkleTree	../server/bloom.cpp	/^CPartialMerkleTree::CPartialMerkleTree() : nTransactions(0), fBad(true) {}$/;"	f	class:CPartialMerkleTree
CPartialMerkleTree	../server/bloom.cpp	/^CPartialMerkleTree::CPartialMerkleTree(const std::vector<uint256> &vTxid, const std::vector<bool> &vMatch) : nTransactions(vTxid.size()), fBad(false) {$/;"	f	class:CPartialMerkleTree
CPartialMerkleTree	../server/bloom.h	/^class CPartialMerkleTree$/;"	c
CPool	../server/txmempool.h	/^    CPool(int ifaceIndexIn)$/;"	f	class:CPool
CPool	../server/txmempool.h	/^class CPool : public CTxMemPool$/;"	c
CPoolTx	../server/txmempool.h	/^    CPoolTx()$/;"	f	class:CPoolTx
CPoolTx	../server/txmempool.h	/^    CPoolTx(const CPoolTx& ptxIn)$/;"	f	class:CPoolTx
CPoolTx	../server/txmempool.h	/^    CPoolTx(const CTransaction& txIn)$/;"	f	class:CPoolTx
CPoolTx	../server/txmempool.h	/^class CPoolTx$/;"	c
CPrivKey	../server/key.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;$/;"	t
CPubKey	../server/key.h	/^		CPubKey()$/;"	f	class:CPubKey
CPubKey	../server/key.h	/^		CPubKey(const std::vector<unsigned char> &vchPubKeyIn) : vchPubKey(vchPubKeyIn) { }$/;"	f	class:CPubKey
CPubKey	../server/key.h	/^class CPubKey $/;"	c
CRequestTracker	../server/net.h	/^    explicit CRequestTracker(void (*fnIn)(void*, CDataStream&)=NULL, void* param1In=NULL)$/;"	f	class:CRequestTracker
CRequestTracker	../server/net.h	/^class CRequestTracker$/;"	c
CS	../server/algo/sph_blake.c	/^static const sph_u32 CS[16] = {$/;"	v	file:
CS0	../server/algo/sph_blake.c	304;"	d	file:
CS1	../server/algo/sph_blake.c	305;"	d	file:
CS2	../server/algo/sph_blake.c	306;"	d	file:
CS3	../server/algo/sph_blake.c	307;"	d	file:
CS4	../server/algo/sph_blake.c	308;"	d	file:
CS5	../server/algo/sph_blake.c	309;"	d	file:
CS6	../server/algo/sph_blake.c	310;"	d	file:
CS7	../server/algo/sph_blake.c	311;"	d	file:
CS8	../server/algo/sph_blake.c	312;"	d	file:
CS9	../server/algo/sph_blake.c	313;"	d	file:
CSA	../server/algo/sph_blake.c	314;"	d	file:
CSB	../server/algo/sph_blake.c	315;"	d	file:
CSC	../server/algo/sph_blake.c	316;"	d	file:
CSD	../server/algo/sph_blake.c	317;"	d	file:
CSE	../server/algo/sph_blake.c	318;"	d	file:
CSF	../server/algo/sph_blake.c	319;"	d	file:
CSHA512	../server/algo/sha512.cpp	/^CSHA512::CSHA512() : bytes(0)$/;"	f	class:CSHA512
CSHA512	../server/algo/sha512.h	/^class CSHA512$/;"	c
CScript	../server/script.h	/^    CScript() { }$/;"	f	class:CScript
CScript	../server/script.h	/^    CScript(const CScript& b) : std::vector<unsigned char>(b.begin(), b.end()) { }$/;"	f	class:CScript
CScript	../server/script.h	/^    CScript(const unsigned char* pbegin, const unsigned char* pend) : std::vector<unsigned char>(pbegin, pend) { }$/;"	f	class:CScript
CScript	../server/script.h	/^    CScript(const_iterator pbegin, const_iterator pend) : std::vector<unsigned char>(pbegin, pend) { }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const CBigNum& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const CScriptNum& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const std::vector<unsigned char>& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(const uint256& b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(int b)            { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(int64 b)          { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(long b)           { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(opcodetype b)     { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(short b)          { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(signed char b)    { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(uint64 b)         { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned char b)  { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned int b)   { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned long b)  { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^    explicit CScript(unsigned short b) { operator<<(b); }$/;"	f	class:CScript
CScript	../server/script.h	/^class CScript : public std::vector<unsigned char>$/;"	c
CScriptID	../server/key.h	/^    CScriptID() : uint160(0) { }$/;"	f	class:CScriptID
CScriptID	../server/key.h	/^    CScriptID(const uint160 &in) : uint160(in) { }$/;"	f	class:CScriptID
CScriptID	../server/key.h	/^class CScriptID : public uint160$/;"	c
CScriptID	../server/script.cpp	/^CScriptID::CScriptID(const CScript& in) : uint160(Hash160(cbuff(in.begin(), in.end()))) {}$/;"	f	class:CScriptID
CScriptNum	../server/script.h	/^    explicit CScriptNum(const int64_t& n)$/;"	f	class:CScriptNum
CScriptNum	../server/script.h	/^    explicit CScriptNum(const std::vector<unsigned char>& vch, bool fRequireMinimal,$/;"	f	class:CScriptNum
CScriptNum	../server/script.h	/^class CScriptNum$/;"	c
CScriptVisitor	../server/script.cpp	/^    CScriptVisitor(CScript *scriptin) { script = scriptin; }$/;"	f	class:CScriptVisitor
CScriptVisitor	../server/script.cpp	/^class CScriptVisitor : public boost::static_visitor<bool>$/;"	c	file:
CScriptWitness	../server/block.h	/^    CScriptWitness() { }$/;"	f	struct:CScriptWitness
CScriptWitness	../server/block.h	/^struct CScriptWitness$/;"	s
CSecret	../server/key.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CSecret;$/;"	t
CSemaphore	../server/sync.h	/^		CSemaphore(int init) : value(init) {}$/;"	f	class:CSemaphore
CSemaphore	../server/sync.h	/^class CSemaphore$/;"	c
CSemaphoreGrant	../server/sync.h	/^		CSemaphoreGrant() : sem(NULL), fHaveGrant(false) {}$/;"	f	class:CSemaphoreGrant
CSemaphoreGrant	../server/sync.h	/^		CSemaphoreGrant(CSemaphore &sema, bool fTry = false) : sem(&sema), fHaveGrant(false) {$/;"	f	class:CSemaphoreGrant
CSemaphoreGrant	../server/sync.h	/^class CSemaphoreGrant$/;"	c
CSerActionGetSerializeSize	../server/serialize.h	/^class CSerActionGetSerializeSize { };$/;"	c
CSerActionSerialize	../server/serialize.h	/^class CSerActionSerialize { };$/;"	c
CSerActionUnserialize	../server/serialize.h	/^class CSerActionUnserialize { };$/;"	c
CService	../server/netbase.cpp	/^CService::CService()$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const CNetAddr& cip, unsigned short portIn) : CNetAddr(cip), port(portIn)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const char *pszIpPort, bool fAllowLookup)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const char *pszIpPort, int portDefault, bool fAllowLookup)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const std::string &strIpPort, bool fAllowLookup)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const std::string &strIpPort, int portDefault, bool fAllowLookup)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const struct in6_addr& ipv6Addr, unsigned short portIn) : CNetAddr(ipv6Addr), port(portIn)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const struct in_addr& ipv4Addr, unsigned short portIn) : CNetAddr(ipv4Addr), port(portIn)$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const struct sockaddr_in& addr) : CNetAddr(addr.sin_addr), port(ntohs(addr.sin_port))$/;"	f	class:CService
CService	../server/netbase.cpp	/^CService::CService(const struct sockaddr_in6 &addr) : CNetAddr(addr.sin6_addr), port(ntohs(addr.sin6_port))$/;"	f	class:CService
CService	../server/netbase.h	/^class CService : public CNetAddr$/;"	c
CSign	../server/ext/txext.h	/^    CSign()$/;"	f	class:CSign
CSign	../server/ext/txext.h	/^    CSign(uint160 hash, string hexSeed = string())$/;"	f	class:CSign
CSign	../server/ext/txext.h	/^class CSign$/;"	c
CSignature	../server/txsignature.h	/^    CSignature(int ifaceIndexIn, CTransaction *txIn, unsigned int nIn, int nHashTypeIn=SIGHASH_ALL)$/;"	f	class:CSignature
CSignature	../server/txsignature.h	/^class CSignature$/;"	c
CSx	../server/algo/sph_blake.c	300;"	d	file:
CSx_	../server/algo/sph_blake.c	301;"	d	file:
CSx__	../server/algo/sph_blake.c	302;"	d	file:
CTX_FEE	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_FEE = {$/;"	v
CTX_FINDLOC	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_FINDLOC = {$/;"	v
CTX_GET	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_GET = {$/;"	v
CTX_GETBIN	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_GETBIN = {$/;"	v
CTX_GETFILE	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_GETFILE = {$/;"	v
CTX_GETID	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_GETID = {$/;"	v
CTX_GETLOC	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_GETLOC = {$/;"	v
CTX_GETSTR	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_GETSTR = {$/;"	v
CTX_INFO	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_INFO = {$/;"	v
CTX_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_LIST = {$/;"	v
CTX_LOCTYPES	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_LOCTYPES = {$/;"	v
CTX_SETBIN	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_SETBIN = {$/;"	v
CTX_SETFILE	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_SETFILE = {$/;"	v
CTX_SETID	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_SETID = {$/;"	v
CTX_SETLOC	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_SETLOC = {$/;"	v
CTX_SETSTR	../server/shc/shc_rpc.cpp	/^const RPCOp CTX_SETSTR = {$/;"	v
CT_DELETED	../server/ui_interface.h	/^    CT_DELETED$/;"	e	enum:ChangeType
CT_NEW	../server/ui_interface.h	/^    CT_NEW,$/;"	e	enum:ChangeType
CT_UPDATED	../server/ui_interface.h	/^    CT_UPDATED,$/;"	e	enum:ChangeType
CTransaction	../server/block.h	/^		CTransaction(const CAltTx& tx)$/;"	f	class:CTransaction
CTransaction	../server/block.h	/^    CTransaction()$/;"	f	class:CTransaction
CTransaction	../server/block.h	/^    CTransaction(const CTransaction& tx)$/;"	f	class:CTransaction
CTransaction	../server/block.h	/^class CTransaction : public CTransactionCore$/;"	c
CTransactionCore	../server/block.h	/^    CTransactionCore()$/;"	f	class:CTransactionCore
CTransactionCore	../server/block.h	/^class CTransactionCore$/;"	c
CTxBatchCreator	../server/txcreator.h	/^    CTxBatchCreator(CWallet *wallet, string strAccountIn, CScript scriptPubIn, int64 nValue) : CTxCreator(wallet, strAccountIn)$/;"	f	class:CTxBatchCreator
CTxBatchCreator	../server/txcreator.h	/^class CTxBatchCreator : public CTxCreator$/;"	c
CTxCreator	../server/txcreator.h	/^    CTxCreator(CWallet *wallet)$/;"	f	class:CTxCreator
CTxCreator	../server/txcreator.h	/^    CTxCreator(CWallet *wallet, string strAccountIn) : CWalletTx(wallet)$/;"	f	class:CTxCreator
CTxCreator	../server/txcreator.h	/^    CTxCreator(CWallet* wallet, const CTransaction& txIn) : CWalletTx(wallet, txIn)$/;"	f	class:CTxCreator
CTxCreator	../server/txcreator.h	/^class CTxCreator : public CWalletTx$/;"	c
CTxDB	../server/txidx.h	/^    CTxDB(const char *fname, int index, const char* pszMode="r+") : CDB(fname, pszMode) { ifaceIndex = index; }$/;"	f	class:CTxDB
CTxDB	../server/txidx.h	/^class CTxDB : public CDB$/;"	c
CTxDestination	../server/script.h	/^typedef boost::variant<CNoDestination, CKeyID, CScriptID, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessV14ScriptHash, WitnessV14KeyHash, WitnessUnknown> CTxDestination;$/;"	t
CTxDump	../server/rpc/rpcdump.cpp	/^    CTxDump(CWalletTx* ptx = NULL, int nOut = -1)$/;"	f	class:CTxDump
CTxDump	../server/rpc/rpcdump.cpp	/^class CTxDump$/;"	c	file:
CTxIn	../server/block.h	/^    CTxIn()$/;"	f	class:CTxIn
CTxIn	../server/block.h	/^    CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=SEQUENCE_FINAL)$/;"	f	class:CTxIn
CTxIn	../server/block.h	/^    explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=SEQUENCE_FINAL)$/;"	f	class:CTxIn
CTxIn	../server/block.h	/^class CTxIn$/;"	c
CTxInWitness	../server/block.h	/^    CTxInWitness() { }$/;"	f	class:CTxInWitness
CTxInWitness	../server/block.h	/^class CTxInWitness$/;"	c
CTxIndex	../server/block.h	/^    CTxIndex()$/;"	f	class:CTxIndex
CTxIndex	../server/block.h	/^    CTxIndex(const CDiskTxPos& posIn, unsigned int nOutputs)$/;"	f	class:CTxIndex
CTxIndex	../server/block.h	/^class CTxIndex$/;"	c
CTxMatrix	../server/matrix.h	/^    CTxMatrix()$/;"	f	class:CTxMatrix
CTxMatrix	../server/matrix.h	/^    CTxMatrix(const CTxMatrix& matrix)$/;"	f	class:CTxMatrix
CTxMatrix	../server/matrix.h	/^class CTxMatrix$/;"	c
CTxMemPool	../server/txmempool.h	/^class CTxMemPool$/;"	c
CTxOut	../server/block.h	/^    CTxOut()$/;"	f	class:CTxOut
CTxOut	../server/block.h	/^    CTxOut(int64 nValueIn, CScript scriptPubKeyIn)$/;"	f	class:CTxOut
CTxOut	../server/block.h	/^class CTxOut$/;"	c
CTxWitness	../server/block.h	/^class CTxWitness$/;"	c
CURRENT_VERSION	../server/color/color_block.h	/^    static const int CURRENT_VERSION=4;$/;"	m	class:COLORBlock
CURRENT_VERSION	../server/emc2/emc2_block.h	/^		static const int CURRENT_VERSION=2;$/;"	m	class:EMC2Block
CURRENT_VERSION	../server/ltc/ltc_block.h	/^    static const int CURRENT_VERSION=4;$/;"	m	class:LTCBlock
CURRENT_VERSION	../server/shc/shc_block.h	/^    static const int CURRENT_VERSION=4;$/;"	m	class:SHCBlock
CURRENT_VERSION	../server/test/test_block.h	/^    static const int CURRENT_VERSION=4;$/;"	m	class:TESTBlock
CURRENT_VERSION	../server/testnet/testnet_block.h	/^		static const int CURRENT_VERSION=4;$/;"	m	class:TESTNETBlock
CUTEST_VERSION	../test/CuTest.h	53;"	d
CU_ALLOC	../test/CuTest.h	60;"	d
CU_TEST_H	../test/CuTest.h	44;"	d
CValidateState	../server/net.h	/^class CValidateState$/;"	c
CWaitableCriticalSection	../server/sync.h	/^typedef boost::mutex CWaitableCriticalSection;$/;"	t
CWallet	../server/wallet.h	/^		CWallet(int index)$/;"	f	class:CWallet
CWallet	../server/wallet.h	/^		CWallet(int index, std::string strWalletFileIn)$/;"	f	class:CWallet
CWallet	../server/wallet.h	/^class CWallet : public CBasicKeyStore$/;"	c
CWalletDB	../server/walletdb.h	/^    CWalletDB(std::string strFilename, const char* pszMode="r+") : CDB(strFilename.c_str(), pszMode)$/;"	f	class:CWalletDB
CWalletDB	../server/walletdb.h	/^class CWalletDB : public CDB$/;"	c
CWalletKey	../server/wallet.h	/^		CWalletKey(int64 nExpires=0)$/;"	f	class:CWalletKey
CWalletKey	../server/wallet.h	/^class CWalletKey$/;"	c
CWalletTx	../server/wallet.h	/^		CWalletTx()$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet *pwalletIn, const CTransaction& txIn) : CMerkleTx(txIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet *pwalletIn, const CTransaction& txIn, mapval_t mapValue) : CMerkleTx(txIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet* pwalletIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^		CWalletTx(CWallet* pwalletIn, const CMerkleTx& txIn) : CMerkleTx(txIn)$/;"	f	class:CWalletTx
CWalletTx	../server/wallet.h	/^class CWalletTx : public CMerkleTx$/;"	c
CalcHash	../server/bloom.cpp	/^uint256 CPartialMerkleTree::CalcHash(int height, unsigned int pos, const std::vector<uint256> &vTxid) {$/;"	f	class:CPartialMerkleTree
CalcTreeWidth	../server/bloom.h	/^    unsigned int CalcTreeWidth(int height) {$/;"	f	class:CPartialMerkleTree
CalculateDependencyMetric	../server/txmempool.cpp	/^void CPool::CalculateDependencyMetric(CPoolTx& ptx)$/;"	f	class:CPool
CalculateFee	../server/txcreator.cpp	/^int64 CTxCreator::CalculateFee()$/;"	f	class:CTxCreator
CalculateFee	../server/txmempool.cpp	/^void CPool::CalculateFee(CPoolTx& ptx)$/;"	f	class:CPool
CalculateFee	../server/wallet.cpp	/^int64 CWallet::CalculateFee(CWalletTx& tx, int64 nMinFee, int confTarget)$/;"	f	class:CWallet
CalculateFeePriority	../server/color/color_pool.cpp	/^double COLOR_CTxMemPool::CalculateFeePriority(CPoolTx *ptx)$/;"	f	class:COLOR_CTxMemPool
CalculateFeePriority	../server/emc2/emc2_pool.cpp	/^double EMC2_CTxMemPool::CalculateFeePriority(CPoolTx *ptx)$/;"	f	class:EMC2_CTxMemPool
CalculateFeePriority	../server/ltc/ltc_pool.cpp	/^double LTC_CTxMemPool::CalculateFeePriority(CPoolTx *ptx)$/;"	f	class:LTC_CTxMemPool
CalculateFeePriority	../server/shc/shc_pool.cpp	/^double SHC_CTxMemPool::CalculateFeePriority(CPoolTx *ptx)$/;"	f	class:SHC_CTxMemPool
CalculateFeePriority	../server/test/test_pool.cpp	/^double TEST_CTxMemPool::CalculateFeePriority(CPoolTx *ptx)$/;"	f	class:TEST_CTxMemPool
CalculateFeePriority	../server/testnet/testnet_pool.cpp	/^double TESTNET_CTxMemPool::CalculateFeePriority(CPoolTx *ptx)$/;"	f	class:TESTNET_CTxMemPool
CalculateLimits	../server/txmempool.cpp	/^void CPool::CalculateLimits(CPoolTx& ptx)$/;"	f	class:CPool
CalculateModifiedSize	../server/txmempool.cpp	/^void CPoolTx::CalculateModifiedSize()$/;"	f	class:CPoolTx
CalculateSequenceLocks	../server/block.cpp	/^std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)$/;"	f
CalculateSoftFee	../server/color/color_pool.cpp	/^int64 COLOR_CTxMemPool::CalculateSoftFee(CTransaction& tx)$/;"	f	class:COLOR_CTxMemPool
CalculateSoftFee	../server/emc2/emc2_pool.cpp	/^int64 EMC2_CTxMemPool::CalculateSoftFee(CTransaction& tx)$/;"	f	class:EMC2_CTxMemPool
CalculateSoftFee	../server/ltc/ltc_pool.cpp	/^int64 LTC_CTxMemPool::CalculateSoftFee(CTransaction& tx)$/;"	f	class:LTC_CTxMemPool
CalculateSoftFee	../server/shc/shc_pool.cpp	/^int64 SHC_CTxMemPool::CalculateSoftFee(CTransaction& tx)$/;"	f	class:SHC_CTxMemPool
CalculateSoftFee	../server/test/test_pool.cpp	/^int64 TEST_CTxMemPool::CalculateSoftFee(CTransaction& tx)$/;"	f	class:TEST_CTxMemPool
CalculateSoftFee	../server/testnet/testnet_pool.cpp	/^int64 TESTNET_CTxMemPool::CalculateSoftFee(CTransaction& tx)$/;"	f	class:TESTNET_CTxMemPool
CallExecChain	../server/ext/exec.cpp	/^bool CallExecChain(CIface *iface, CExec& exec, int& nCheckpoint)$/;"	f
CallStack	../server/ext/exec.cpp	/^bool CExec::CallStack(int ifaceIndex, CCoinAddr sendAddr, shjson_t **param_p)$/;"	f	class:CExec
CanSupportFeature	../server/wallet.h	/^		bool CanSupportFeature(enum WalletFeature wf) { return true; }$/;"	f	class:CWallet
CaseInsensitiveEqual	../test/testcoin_block.cpp	1971;"	d	file:
CastToBigNum	../server/script.cpp	/^CBigNum CastToBigNum(const valtype& vch)$/;"	f
CastToBool	../server/script.cpp	/^bool CastToBool(const valtype& vch)$/;"	f
Cat	../server/bech32.cpp	/^	cbuff Cat(cbuff x, const cbuff& y)$/;"	f	namespace:__anon2
Ceven_hi	../server/algo/sph_jh.c	217;"	d	file:
Ceven_lo	../server/algo/sph_jh.c	218;"	d	file:
Ceven_w0	../server/algo/sph_jh.c	488;"	d	file:
Ceven_w1	../server/algo/sph_jh.c	487;"	d	file:
Ceven_w2	../server/algo/sph_jh.c	486;"	d	file:
Ceven_w3	../server/algo/sph_jh.c	485;"	d	file:
Ch	../server/algo/sha512.cpp	/^uint64_t inline Ch(uint64_t x, uint64_t y, uint64_t z) { return z ^ (x & (y ^ z)); }$/;"	f	namespace:__anon18::sha512
Ch	../server/bolo/bolo_validation03.cpp	196;"	d	file:
Ch	../server/bolo/bolo_validation03.cpp	293;"	d	file:
Ch	../test/testcoin_algo.cpp	69;"	d	file:
ChainCode	../server/key.h	/^typedef uint256 ChainCode;$/;"	t
ChainOp	../server/chain.h	/^typedef struct ChainOp$/;"	s
ChainOp	../server/chain.h	/^} ChainOp;$/;"	t	typeref:struct:ChainOp
ChangeType	../server/ui_interface.h	/^enum ChangeType$/;"	g
Char_type	../server/json/json_spirit_reader_template.h	/^        typedef typename Istream_type::char_type Char_type;$/;"	t	struct:json_spirit::Multi_pass_iters
Char_type	../server/json/json_spirit_reader_template.h	/^        typedef typename String_type::value_type Char_type;$/;"	t	class:json_spirit::Semantic_actions
Char_type	../server/json/json_spirit_writer_template.h	/^        typedef typename String_type::value_type Char_type;$/;"	t	class:json_spirit::Generator
Check	../server/addrman.h	/^    void Check()$/;"	f	class:CAddrMan
CheckBlock	../server/checkpoints.cpp	/^bool CCheckpoints::CheckBlock(int nHeight, const uint256& hash)$/;"	f	class:CCheckpoints
CheckBlock	../server/color/color_block.cpp	/^bool COLORBlock::CheckBlock()$/;"	f	class:COLORBlock
CheckBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::CheckBlock()$/;"	f	class:EMC2Block
CheckBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::CheckBlock()$/;"	f	class:LTCBlock
CheckBlock	../server/shc/shc_block.cpp	/^bool SHCBlock::CheckBlock()$/;"	f	class:SHCBlock
CheckBlock	../server/test/test_block.cpp	/^bool TESTBlock::CheckBlock()$/;"	f	class:TESTBlock
CheckBlock	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::CheckBlock()$/;"	f	class:TESTNETBlock
CheckBlock	../server/validation.cpp	/^bool CheckBlock(CBlock *block)$/;"	f
CheckBlockHeader	../server/validation.cpp	/^bool CheckBlockHeader(CBlockHeader *pblock)$/;"	f
CheckFinal	../server/txmempool.cpp	/^bool CPoolTx::CheckFinal(CIface *iface) const$/;"	f	class:CPoolTx
CheckFinalTx	../server/block.cpp	/^bool CheckFinalTx(CIface *iface, const CTransaction& tx, CBlockIndex *pindexPrev, int flags)$/;"	f
CheckIndex	../server/block.h	/^    bool CheckIndex() const$/;"	f	class:CBlockIndex
CheckSequenceLocks	../server/block.cpp	/^bool CheckSequenceLocks(CIface *iface, const CTransaction &tx, int flags)$/;"	f
CheckSig	../server/txsignature.cpp	/^bool CSignature::CheckSig(cbuff vchSig, cbuff vchPubKey, CScript scriptCode, int sigver)$/;"	f	class:CSignature
CheckTransaction	../server/block.cpp	/^bool CTransaction::CheckTransaction(int ifaceIndex)$/;"	f	class:CTransaction
CheckTransactionInputs	../server/block.cpp	/^bool CBlock::CheckTransactionInputs(int ifaceIndex)$/;"	f	class:CBlock
CheckTransactionInputs	../server/block.cpp	/^bool CTransaction::CheckTransactionInputs(int ifaceIndex)$/;"	f	class:CTransaction
CheckWork	../server/main.cpp	/^bool CheckWork(CBlock* pblock, CWallet& wallet)$/;"	f
Check_	../server/addrman.cpp	/^int CAddrMan::Check_()$/;"	f	class:CAddrMan
CheckpointLSN	../server/txidx.cpp	/^void CDBEnv::CheckpointLSN(std::string strFile)$/;"	f	class:CDBEnv
CleanKey	../server/crypter.h	/^    void CleanKey()$/;"	f	class:CCrypter
Clear	../server/versionbits.cpp	/^void VersionBitsCache::Clear()$/;"	f	class:VersionBitsCache
ClearBloomFilter	../server/net.h	/^    void ClearBloomFilter()$/;"	f	class:CNode
ClearCurrent	../server/txfeerate.cpp	/^void TxConfirmStats::ClearCurrent(unsigned int nBlockHeight)$/;"	f	class:TxConfirmStats
ClearInputs	../server/txmempool.h	/^    void ClearInputs()$/;"	f	class:CPoolTx
ClearStackData	../server/ext/exec.cpp	/^static void ClearStackData(CIface *iface, CExec *exec)$/;"	f	file:
ClientConnectInputs	../server/block.cpp	/^bool CTransaction::ClientConnectInputs(int ifaceIndex)$/;"	f	class:CTransaction
Close	../server/txidx.cpp	/^void CDB::Close()$/;"	f	class:CDB
Close	../server/txidx.cpp	/^void CDBEnv::Close()$/;"	f	class:CDBEnv
CloseBlockChain	../server/block.cpp	/^void CloseBlockChain(CIface *iface)$/;"	f
CloseBlockChains	../server/block.cpp	/^void CloseBlockChains(void)$/;"	f
CloseDb	../server/txidx.cpp	/^void CDBEnv::CloseDb(const string& strFile)$/;"	f	class:CDBEnv
Codd_hi	../server/algo/sph_jh.c	219;"	d	file:
Codd_lo	../server/algo/sph_jh.c	220;"	d	file:
Codd_w0	../server/algo/sph_jh.c	492;"	d	file:
Codd_w1	../server/algo/sph_jh.c	491;"	d	file:
Codd_w2	../server/algo/sph_jh.c	490;"	d	file:
Codd_w3	../server/algo/sph_jh.c	489;"	d	file:
CoinSet	../test/testcoin_coin.cpp	/^typedef set<pair<const CWalletTx*,unsigned int> > CoinSet;$/;"	t	file:
ColorsRequired	../fractal/fractal_bmp.c	/^	UINT		ColorsRequired;		\/* Number of color indexes that are required for displaying the bitmap *\/$/;"	m	struct:_BMP_Header	file:
ColorsUsed	../fractal/fractal_bmp.c	/^	UINT		ColorsUsed;			\/* Number of color indexes in the color table that are actually used by the bitmap *\/$/;"	m	struct:_BMP_Header	file:
CombineMultisig	../server/script.cpp	/^static CScript CombineMultisig(int ifaceIndex, CScript scriptPubKey, const CTransaction& txTo, unsigned int nIn, const vector<valtype>& vSolutions, vector<valtype>& sigs1, vector<valtype>& sigs2)$/;"	f	file:
Commit	../server/txmempool.cpp	/^bool CPool::Commit(CBlock& block)$/;"	f	class:CPool
CommitAliasTx	../server/ext/alias.cpp	/^bool CommitAliasTx(CIface *iface, CTransaction& tx, int nHeight)$/;"	f
CommitAltChainOrphanTx	../server/ext/altchain.cpp	/^bool CommitAltChainOrphanTx(CIface *iface \/* not used *\/, const CTransaction& tx)$/;"	f
CommitAltChainPoolTx	../server/ext/altchain.cpp	/^bool CommitAltChainPoolTx(CIface *iface, CTransaction& tx, bool fPool)$/;"	f
CommitAltChainTx	../server/ext/altchain.cpp	/^bool CommitAltChainTx(CIface *iface, CTransaction& tx, CNode *pfrom, bool fUpdate)$/;"	f
CommitChannelTransaction	../server/ext/channel.cpp	/^int CommitChannelTransaction(CWallet *wallet, CTransaction& tx)$/;"	f
CommitContextTx	../server/ext/context.cpp	/^int CommitContextTx(CIface *iface, CTransaction& tx, unsigned int nHeight)$/;"	f
CommitGenerateOffer	../server/ext/offer.cpp	/^bool CommitGenerateOffer(CIface *iface, COffer *offer)$/;"	f
CommitLicenseTx	../server/ext/certificate.cpp	/^bool CommitLicenseTx(CIface *iface, CTransaction& tx, int nHeight)$/;"	f
CommitNewAltChainTx	../server/ext/altchain.cpp	/^static bool CommitNewAltChainTx(CIface *iface, CTransaction& tx, CNode *pfrom, bool fUpdate)$/;"	f	file:
CommitOfferTx	../server/ext/offer.cpp	/^int CommitOfferTx(CIface *iface, CTransaction& tx, unsigned int nHeight)$/;"	f
CommitRemoveAcceptedOffer	../server/ext/offer.cpp	/^static bool CommitRemoveAcceptedOffer(CIface *iface, COffer *offer)$/;"	f	file:
CommitRemoveUnacceptedOffer	../server/ext/offer.cpp	/^static bool CommitRemoveUnacceptedOffer(CIface *iface, COffer *offer)$/;"	f	file:
CommitTransaction	../server/color/color_wallet.cpp	/^bool COLORWallet::CommitTransaction(CWalletTx& wtxNew)$/;"	f	class:COLORWallet
CommitTransaction	../server/emc2/emc2_wallet.cpp	/^bool EMC2Wallet::CommitTransaction(CWalletTx& wtxNew)$/;"	f	class:EMC2Wallet
CommitTransaction	../server/ltc/ltc_wallet.cpp	/^bool LTCWallet::CommitTransaction(CWalletTx& wtxNew)$/;"	f	class:LTCWallet
CommitTransaction	../server/shc/shc_wallet.cpp	/^bool SHCWallet::CommitTransaction(CWalletTx& wtxNew)$/;"	f	class:SHCWallet
CommitTransaction	../server/test/test_wallet.cpp	/^bool TESTWallet::CommitTransaction(CWalletTx& wtxNew)$/;"	f	class:TESTWallet
CommitTransaction	../server/testnet/testnet_wallet.cpp	/^bool TESTNETWallet::CommitTransaction(CWalletTx& wtxNew)$/;"	f	class:TESTNETWallet
Compact	../server/serialize.h	/^    inline void Compact()$/;"	f	class:CDataStream
CompareCells	../server/matrix.h	/^    bool CompareCells(const CTxMatrix& b) const$/;"	f	class:CTxMatrix
CompareTo	../server/base58.h	/^		int CompareTo(const CBase58Data& b58) const$/;"	f	class:CBase58Data
CompareValueOnly	../server/wallet.cpp	/^struct CompareValueOnly$/;"	s	file:
CompressionType	../fractal/fractal_bmp.c	/^	UINT		CompressionType;	\/* Compression type *\/$/;"	m	struct:_BMP_Header	file:
ComputeMerkleBranch	../server/wit_merkle.cpp	/^std::vector<uint256> ComputeMerkleBranch(const std::vector<uint256>& leaves, uint32_t position) {$/;"	f
ComputeMerkleRoot	../server/wit_merkle.cpp	/^uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated) {$/;"	f
ComputeMerkleRootFromBranch	../server/wit_merkle.cpp	/^uint256 ComputeMerkleRootFromBranch(const uint256& leaf, const std::vector<uint256>& vMerkleBranch, uint32_t nIndex) {$/;"	f
Condition	../server/versionbits.cpp	/^      bool Condition(const CBlockIndex* pindex, CIface * params) const$/;"	f	class:__anon15::VersionBitsConditionChecker
Config	../server/json/json_spirit_value.h	/^    typedef Config_vector< std::string > Config;$/;"	t	namespace:json_spirit
Config_map	../server/json/json_spirit_value.h	/^    struct Config_map$/;"	s	namespace:json_spirit
Config_type	../server/json/json_spirit_reader_template.h	/^        typedef typename Value_type::Config_type Config_type;$/;"	t	class:json_spirit::Semantic_actions
Config_type	../server/json/json_spirit_value.h	/^        typedef Config Config_type;$/;"	t	class:json_spirit::Value_impl
Config_type	../server/json/json_spirit_writer_template.h	/^        typedef typename Value_type::Config_type Config_type;$/;"	t	class:json_spirit::Generator
Config_vector	../server/json/json_spirit_value.h	/^    struct Config_vector$/;"	s	namespace:json_spirit
ConnectAliasTx	../server/ext/alias.cpp	/^bool ConnectAliasTx(CIface *iface, CTransaction& tx)$/;"	f
ConnectAltChainTx	../server/ext/altchain.cpp	/^bool ConnectAltChainTx(CIface *iface, const CTransaction& tx)$/;"	f
ConnectBlock	../server/color/color_block.cpp	/^bool COLORBlock::ConnectBlock(CBlockIndex* pindex)$/;"	f	class:COLORBlock
ConnectBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::ConnectBlock(CBlockIndex* pindex)$/;"	f	class:EMC2Block
ConnectBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)$/;"	f	class:EMC2Block
ConnectBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::ConnectBlock(CBlockIndex* pindex)$/;"	f	class:LTCBlock
ConnectBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)$/;"	f	class:LTCBlock
ConnectBlock	../server/shc/shc_block.cpp	/^bool SHCBlock::ConnectBlock(CBlockIndex* pindex)$/;"	f	class:SHCBlock
ConnectBlock	../server/test/test_block.cpp	/^bool TESTBlock::ConnectBlock(CBlockIndex* pindex)$/;"	f	class:TESTBlock
ConnectBlock	../server/test/test_block.cpp	/^bool TESTBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)$/;"	f	class:TESTBlock
ConnectBlock	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::ConnectBlock(CBlockIndex* pindex)$/;"	f	class:TESTNETBlock
ConnectInputs	../server/coin.cpp	/^bool CTransaction::ConnectInputs(int ifaceIndex, const CBlockIndex* pindexBlock, tx_map& mapOutput, map<uint256, CTransaction> mapTx, int& nSigOps, int64& nFees, bool fVerifySig, bool fVerifyInputs, bool fRequireInputs)$/;"	f	class:CTransaction
ConnectParamTx	../server/ext/ext_param.cpp	/^bool ConnectParamTx(CIface *iface, CTransaction *tx, int64_t nTime)$/;"	f
ConnectSocket	../server/netbase.cpp	/^bool ConnectSocket(const CService &addrDest, unsigned int& hSocketRet, int nTimeout)$/;"	f
ConnectSocketByName	../server/netbase.cpp	/^bool ConnectSocketByName(CService &addr, unsigned int& hSocketRet, const char *pszDest, int portDefault, int nTimeout)$/;"	f
ConnectSocketDirectly	../server/netbase.cpp	/^bool static ConnectSocketDirectly(const CService &addrConnect, unsigned int& hSocketRet, int nTimeout)$/;"	f	file:
Connected	../server/addrman.h	/^    void Connected(const CService &addr, int64 nTime = GetAdjustedTime())$/;"	f	class:CAddrMan
Connected_	../server/addrman.cpp	/^void CAddrMan::Connected_(const CService &addr, int64 nTime)$/;"	f	class:CAddrMan
Const_str_ptr	../server/json/json_spirit_value.h	/^        typedef typename String_type::const_pointer Const_str_ptr;  \/\/ eg const char*$/;"	t	class:json_spirit::Value_impl
ContainsTx	../server/txidx.cpp	/^bool CTxDB::ContainsTx(uint256 hash)$/;"	f	class:CTxDB
ContextualCheckBlock	../server/validation.cpp	/^bool ContextualCheckBlock(CBlock *pblock, CBlockIndex *pindexPrev)$/;"	f
ContextualCheckBlockHeader	../server/validation.cpp	/^bool ContextualCheckBlockHeader(CIface *iface, const CBlockHeader& block, CBlockIndex *pindexPrev)$/;"	f
ConvertBits	../server/coinaddr.cpp	/^bool ConvertBits(O& out, I it, I end) $/;"	f
ConvertLocationToObject	../server/rpc/rpccontext_proto.cpp	/^static Object ConvertLocationToObject(shgeo_t *geo, shloc_t *loc)$/;"	f	file:
CopyNodeStats	../server/rpc/rpc_command.cpp	/^static void CopyNodeStats(CIface *iface, std::vector<CNodeStats>& vstats)$/;"	f	file:
CountWitnessSigOps	../server/block.cpp	/^size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags)$/;"	f
Create	../server/addrman.cpp	/^CAddrInfo* CAddrMan::Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId)$/;"	f	class:CAddrMan
CreateAccountTransaction	../server/color/color_wallet.cpp	/^bool COLORWallet::CreateAccountTransaction(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:COLORWallet
CreateAccountTransaction	../server/color/color_wallet.cpp	/^bool COLORWallet::CreateAccountTransaction(string strFromAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:COLORWallet
CreateAccountTransaction	../server/emc2/emc2_wallet.cpp	/^bool EMC2Wallet::CreateAccountTransaction(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:EMC2Wallet
CreateAccountTransaction	../server/emc2/emc2_wallet.cpp	/^bool EMC2Wallet::CreateAccountTransaction(string strFromAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:EMC2Wallet
CreateAccountTransaction	../server/ltc/ltc_wallet.cpp	/^bool LTCWallet::CreateAccountTransaction(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:LTCWallet
CreateAccountTransaction	../server/ltc/ltc_wallet.cpp	/^bool LTCWallet::CreateAccountTransaction(string strFromAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:LTCWallet
CreateAccountTransaction	../server/shc/shc_wallet.cpp	/^bool SHCWallet::CreateAccountTransaction(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:SHCWallet
CreateAccountTransaction	../server/shc/shc_wallet.cpp	/^bool SHCWallet::CreateAccountTransaction(string strFromAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:SHCWallet
CreateAccountTransaction	../server/test/test_wallet.cpp	/^bool TESTWallet::CreateAccountTransaction(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:TESTWallet
CreateAccountTransaction	../server/test/test_wallet.cpp	/^bool TESTWallet::CreateAccountTransaction(string strFromAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:TESTWallet
CreateAccountTransaction	../server/testnet/testnet_wallet.cpp	/^bool TESTNETWallet::CreateAccountTransaction(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:TESTNETWallet
CreateAccountTransaction	../server/testnet/testnet_wallet.cpp	/^bool TESTNETWallet::CreateAccountTransaction(string strFromAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, string& strError, int64& nFeeRet)$/;"	f	class:TESTNETWallet
CreateAlias	../server/block.cpp	/^CAlias *CTransaction::CreateAlias(std::string name, int type)$/;"	f	class:CTransaction
CreateAltChain	../server/block.cpp	/^CAltChain *CTransaction::CreateAltChain()$/;"	f	class:CTransaction
CreateAsset	../server/block.cpp	/^CAsset *CTransaction::CreateAsset(string strAssetName, string strAssetHash)$/;"	f	class:CTransaction
CreateBatchTx	../server/txcreator.cpp	/^bool CTxBatchCreator::CreateBatchTx()$/;"	f	class:CTxBatchCreator
CreateBlockIndex	../server/validation.cpp	/^CBlockIndex *CreateBlockIndex(CIface *iface, CBlockHeader& block)$/;"	f
CreateBlockTemplate	../server/block.cpp	/^CBlock *CreateBlockTemplate(CIface *iface)$/;"	f
CreateCert	../server/block.cpp	/^CCert *CTransaction::CreateCert(int ifaceIndex, string strTitle, CCoinAddr& addr, string hexSeed, int64 nLicenseFee)$/;"	f	class:CTransaction
CreateCheckpoint	../server/color/color_block.cpp	/^bool COLORBlock::CreateCheckpoint()$/;"	f	class:COLORBlock
CreateCheckpoint	../server/emc2/emc2_block.cpp	/^bool EMC2Block::CreateCheckpoint()$/;"	f	class:EMC2Block
CreateCheckpoint	../server/ltc/ltc_block.cpp	/^bool LTCBlock::CreateCheckpoint()$/;"	f	class:LTCBlock
CreateCheckpoint	../server/shc/shc_block.cpp	/^bool SHCBlock::CreateCheckpoint()$/;"	f	class:SHCBlock
CreateCheckpoint	../server/test/test_block.cpp	/^bool TESTBlock::CreateCheckpoint()$/;"	f	class:TESTBlock
CreateCheckpoint	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::CreateCheckpoint()$/;"	f	class:TESTNETBlock
CreateChecksum	../server/bech32.cpp	/^	cbuff CreateChecksum(const std::string& hrp, const cbuff& values)$/;"	f	namespace:__anon2
CreateContext	../server/block.cpp	/^CContext *CTransaction::CreateContext()$/;"	f	class:CTransaction
CreateExec	../server/block.cpp	/^CExec *CTransaction::CreateExec()$/;"	f	class:CTransaction
CreateIdent	../server/block.cpp	/^CIdent *CTransaction::CreateIdent(CIdent *ident)$/;"	f	class:CTransaction
CreateIdent	../server/block.cpp	/^CIdent *CTransaction::CreateIdent(int ifaceIndex, CCoinAddr& addr)$/;"	f	class:CTransaction
CreateLicense	../server/block.cpp	/^CCert *CTransaction::CreateLicense(CCert *cert)$/;"	f	class:CTransaction
CreateMoneyTx	../server/wallet.cpp	/^bool CreateMoneyTx(CIface *iface, CWalletTx& wtxNew, vector<COutput>& vecRecv, vector<CTxOut>& vecSend, CScript scriptPubKey)$/;"	f
CreateNewAddr	../server/account.cpp	/^bool CAccountCache::CreateNewAddr(CTxDestination& addrRet, int type, int flags)$/;"	f	class:CAccountCache
CreateNewPubKey	../server/account.cpp	/^bool CAccountCache::CreateNewPubKey(CPubKey& addrRet, int flags)$/;"	f	class:CAccountCache
CreateOffer	../server/block.cpp	/^COffer *CTransaction::CreateOffer()$/;"	f	class:CTransaction
CreatePidFile	../server/util.cpp	/^void CreatePidFile(const boost::filesystem::path &path, pid_t pid)$/;"	f
CreateSignature	../server/txsignature.cpp	/^bool CSignature::CreateSignature(cbuff& vchSig, const CKeyID& address, const CScript& scriptCode, int sigversion)$/;"	f	class:CSignature
CreateThread	../server/util.h	/^inline HANDLE CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=false)$/;"	f
CreateThread	../server/util.h	/^inline pthread_t CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=false)$/;"	f
CreateTransactionWithInputTx	../server/wallet.cpp	/^bool CreateTransactionWithInputTx(CIface *iface, string strAccount, const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxIn, int nTxOut, CWalletTx& wtxNew, int64 nTxFee)$/;"	f
CreateValidateNotaryTx	../server/matrix.cpp	/^bool CreateValidateNotaryTx(CIface *iface, const CTransaction& txPrev, int nPrevOut, CTransaction& tx, vector<CPubKey> kSend)$/;"	f
CryptedKeyMap	../server/keystore.h	/^typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;$/;"	t
CuAssert	../test/CuTest.h	123;"	d
CuAssertDblEquals	../test/CuTest.h	130;"	d
CuAssertDblEquals_LineMsg	../test/CuTest.c	/^void CuAssertDblEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertDblEquals_Msg	../test/CuTest.h	131;"	d
CuAssertIntEquals	../test/CuTest.h	128;"	d
CuAssertIntEquals_LineMsg	../test/CuTest.c	/^void CuAssertIntEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertIntEquals_Msg	../test/CuTest.h	129;"	d
CuAssertPtrEquals	../test/CuTest.h	132;"	d
CuAssertPtrEquals_LineMsg	../test/CuTest.c	/^void CuAssertPtrEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertPtrEquals_Msg	../test/CuTest.h	133;"	d
CuAssertPtrNotNull	../test/CuTest.h	135;"	d
CuAssertPtrNotNullMsg	../test/CuTest.h	136;"	d
CuAssertStrEquals	../test/CuTest.h	126;"	d
CuAssertStrEquals_LineMsg	../test/CuTest.c	/^void CuAssertStrEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertStrEquals_Msg	../test/CuTest.h	127;"	d
CuAssertTrue	../test/CuTest.h	124;"	d
CuAssert_Line	../test/CuTest.c	/^void CuAssert_Line(CuTest* tc, const char* file, int line, const char* message, int condition)$/;"	f
CuFail	../test/CuTest.h	122;"	d
CuFailInternal	../test/CuTest.c	/^static void CuFailInternal(CuTest* tc, const char* file, int line, CuString* string)$/;"	f	file:
CuFail_Line	../test/CuTest.c	/^void CuFail_Line(CuTest* tc, const char* file, int line, const char* message2, const char* message)$/;"	f
CuStrAlloc	../test/CuTest.c	/^char* CuStrAlloc(int size)$/;"	f
CuStrCopy	../test/CuTest.c	/^char* CuStrCopy(const char* old)$/;"	f
CuString	../test/CuTest.h	/^} CuString;$/;"	t	typeref:struct:__anon16
CuStringAppend	../test/CuTest.c	/^void CuStringAppend(CuString* str, const char* text)$/;"	f
CuStringAppendChar	../test/CuTest.c	/^void CuStringAppendChar(CuString* str, char ch)$/;"	f
CuStringAppendFormat	../test/CuTest.c	/^void CuStringAppendFormat(CuString* str, const char* format, ...)$/;"	f
CuStringDelete	../test/CuTest.c	/^void CuStringDelete(CuString *str)$/;"	f
CuStringInit	../test/CuTest.c	/^void CuStringInit(CuString* str)$/;"	f
CuStringInsert	../test/CuTest.c	/^void CuStringInsert(CuString* str, const char* text, int pos)$/;"	f
CuStringNew	../test/CuTest.c	/^CuString* CuStringNew(void)$/;"	f
CuStringResize	../test/CuTest.c	/^void CuStringResize(CuString* str, int newSize)$/;"	f
CuSuite	../test/CuTest.h	/^} CuSuite;$/;"	t	typeref:struct:__anon17
CuSuiteAdd	../test/CuTest.c	/^void CuSuiteAdd(CuSuite* testSuite, CuTest *testCase)$/;"	f
CuSuiteAddSuite	../test/CuTest.c	/^void CuSuiteAddSuite(CuSuite* testSuite, CuSuite* testSuite2)$/;"	f
CuSuiteDelete	../test/CuTest.c	/^void CuSuiteDelete(CuSuite *testSuite)$/;"	f
CuSuiteDetails	../test/CuTest.c	/^void CuSuiteDetails(CuSuite* testSuite, CuString* details)$/;"	f
CuSuiteInit	../test/CuTest.c	/^void CuSuiteInit(CuSuite* testSuite)$/;"	f
CuSuiteNew	../test/CuTest.c	/^CuSuite* CuSuiteNew(void)$/;"	f
CuSuiteRun	../test/CuTest.c	/^void CuSuiteRun(CuSuite* testSuite)$/;"	f
CuSuiteSummary	../test/CuTest.c	/^void CuSuiteSummary(CuSuite* testSuite, CuString* summary)$/;"	f
CuTest	../test/CuTest.h	/^struct CuTest$/;"	s
CuTest	../test/CuTest.h	/^typedef struct CuTest CuTest;$/;"	t	typeref:struct:CuTest
CuTestDelete	../test/CuTest.c	/^void CuTestDelete(CuTest *t)$/;"	f
CuTestInit	../test/CuTest.c	/^void CuTestInit(CuTest* t, const char* name, TestFunction function)$/;"	f
CuTestNew	../test/CuTest.c	/^CuTest* CuTestNew(const char* name, TestFunction function)$/;"	f
CuTestRun	../test/CuTest.c	/^void CuTestRun(CuTest* tc)$/;"	f
D0	../server/algo/sph_simd.c	1088;"	d	file:
D0	../server/algo/sph_simd.c	1122;"	d	file:
D0	../server/algo/sph_simd.c	1327;"	d	file:
D0	../server/algo/sph_simd.c	1363;"	d	file:
D0	../server/algo/sph_simd.c	1512;"	d	file:
D0	../server/algo/sph_simd.c	824;"	d	file:
D0	../server/algo/sph_simd.c	969;"	d	file:
D0	../server/algo/sph_simd.c	989;"	d	file:
D1	../server/algo/sph_simd.c	1089;"	d	file:
D1	../server/algo/sph_simd.c	1123;"	d	file:
D1	../server/algo/sph_simd.c	1328;"	d	file:
D1	../server/algo/sph_simd.c	1364;"	d	file:
D1	../server/algo/sph_simd.c	1513;"	d	file:
D1	../server/algo/sph_simd.c	825;"	d	file:
D1	../server/algo/sph_simd.c	970;"	d	file:
D1	../server/algo/sph_simd.c	990;"	d	file:
D2	../server/algo/sph_simd.c	1090;"	d	file:
D2	../server/algo/sph_simd.c	1124;"	d	file:
D2	../server/algo/sph_simd.c	1329;"	d	file:
D2	../server/algo/sph_simd.c	1365;"	d	file:
D2	../server/algo/sph_simd.c	1514;"	d	file:
D2	../server/algo/sph_simd.c	826;"	d	file:
D2	../server/algo/sph_simd.c	971;"	d	file:
D2	../server/algo/sph_simd.c	991;"	d	file:
D3	../server/algo/sph_simd.c	1091;"	d	file:
D3	../server/algo/sph_simd.c	1125;"	d	file:
D3	../server/algo/sph_simd.c	1330;"	d	file:
D3	../server/algo/sph_simd.c	1366;"	d	file:
D3	../server/algo/sph_simd.c	1515;"	d	file:
D3	../server/algo/sph_simd.c	827;"	d	file:
D3	../server/algo/sph_simd.c	972;"	d	file:
D3	../server/algo/sph_simd.c	992;"	d	file:
D4	../server/algo/sph_simd.c	1126;"	d	file:
D4	../server/algo/sph_simd.c	1331;"	d	file:
D4	../server/algo/sph_simd.c	1367;"	d	file:
D4	../server/algo/sph_simd.c	1516;"	d	file:
D5	../server/algo/sph_simd.c	1127;"	d	file:
D5	../server/algo/sph_simd.c	1332;"	d	file:
D5	../server/algo/sph_simd.c	1368;"	d	file:
D5	../server/algo/sph_simd.c	1517;"	d	file:
D6	../server/algo/sph_simd.c	1128;"	d	file:
D6	../server/algo/sph_simd.c	1333;"	d	file:
D6	../server/algo/sph_simd.c	1369;"	d	file:
D6	../server/algo/sph_simd.c	1518;"	d	file:
D7	../server/algo/sph_simd.c	1129;"	d	file:
D7	../server/algo/sph_simd.c	1334;"	d	file:
D7	../server/algo/sph_simd.c	1370;"	d	file:
D7	../server/algo/sph_simd.c	1519;"	d	file:
DBErrors	../server/walletdb.h	/^enum DBErrors$/;"	g
DB_CORRUPT	../server/walletdb.h	/^    DB_CORRUPT,$/;"	e	enum:DBErrors
DB_LOAD_FAIL	../server/walletdb.h	/^    DB_LOAD_FAIL,$/;"	e	enum:DBErrors
DB_LOAD_OK	../server/walletdb.h	/^    DB_LOAD_OK,$/;"	e	enum:DBErrors
DB_NEED_REWRITE	../server/walletdb.h	/^    DB_NEED_REWRITE$/;"	e	enum:DBErrors
DB_TOO_NEW	../server/walletdb.h	/^    DB_TOO_NEW,$/;"	e	enum:DBErrors
DECL64	../server/algo/sph_keccak.c	358;"	d	file:
DECL64	../server/algo/sph_keccak.c	762;"	d	file:
DECL_STATE	../server/algo/sph_cubehash.c	139;"	d	file:
DECL_STATE	../server/algo/sph_cubehash.c	178;"	d	file:
DECL_STATE	../server/algo/sph_jh.c	253;"	d	file:
DECL_STATE	../server/algo/sph_jh.c	545;"	d	file:
DECL_STATE	../server/algo/sph_keccak.c	179;"	d	file:
DECL_STATE	../server/algo/sph_keccak.c	197;"	d	file:
DECL_STATE	../server/algo/sph_keccak.c	519;"	d	file:
DECL_STATE	../server/algo/sph_keccak.c	542;"	d	file:
DECL_STATE3	../server/algo/sph_luffa.c	310;"	d	file:
DECL_STATE32	../server/algo/sph_blake.c	474;"	d	file:
DECL_STATE4	../server/algo/sph_luffa.c	495;"	d	file:
DECL_STATE5	../server/algo/sph_luffa.c	748;"	d	file:
DECL_STATE64	../server/algo/sph_blake.c	637;"	d	file:
DECL_STATE_BIG	../server/algo/sph_echo.c	350;"	d	file:
DECL_STATE_BIG	../server/algo/sph_echo.c	81;"	d	file:
DECL_STATE_BIG	../server/algo/sph_groestl.c	1376;"	d	file:
DECL_STATE_BIG	../server/algo/sph_groestl.c	2352;"	d	file:
DECL_STATE_BIG	../server/algo/sph_simd.c	542;"	d	file:
DECL_STATE_BIG	../server/algo/sph_simd.c	589;"	d	file:
DECL_STATE_BIG	../server/algo/sph_skein.c	693;"	d	file:
DECL_STATE_BIG	../server/algo/sph_skein.c	723;"	d	file:
DECL_STATE_SMALL	../server/algo/sph_echo.c	347;"	d	file:
DECL_STATE_SMALL	../server/algo/sph_echo.c	78;"	d	file:
DECL_STATE_SMALL	../server/algo/sph_groestl.c	1221;"	d	file:
DECL_STATE_SMALL	../server/algo/sph_groestl.c	2205;"	d	file:
DECL_STATE_SMALL	../server/algo/sph_simd.c	539;"	d	file:
DECL_STATE_SMALL	../server/algo/sph_simd.c	548;"	d	file:
DECL_TMP8	../server/algo/sph_luffa.c	187;"	d	file:
DEFAULT_ALIAS_LIFESPAN	../server/ext/alias.h	30;"	d
DEFAULT_CONTEXT_LIFESPAN	../server/ext/context.h	31;"	d
DEFAULT_DECAY	../server/txfeerate.h	/^static const double DEFAULT_DECAY = .998;$/;"	v
DEFAULT_EXEC_LIFESPAN	../server/ext/exec.h	31;"	d
DEFAULT_MAX_BLOCK_SIZE	../proto/coin_proto.h	66;"	d
DEFAULT_MIN_RELAY_TX_FEE	../proto/coin_proto.h	98;"	d
DEFAULT_OFFER_LIFESPAN	../stratum/stratum_api.cpp	42;"	d	file:
DEFAULT_PARAM_LIFESPAN	../server/block.cpp	49;"	d	file:
DEFAULT_WORK_DIFFICULTY	../stratum/stratum_protocol.c	33;"	d	file:
DEFCLOSE	../server/algo/sph_keccak.c	1607;"	d	file:
DEFCLOSE	../server/algo/sph_keccak.c	1651;"	d	file:
DEPLOYMENT_ALGO	../proto/coin_proto.h	/^    DEPLOYMENT_ALGO,$/;"	e	enum:DeploymentPos
DEPLOYMENT_BOLO	../proto/coin_proto.h	/^    DEPLOYMENT_BOLO,$/;"	e	enum:DeploymentPos
DEPLOYMENT_CSV	../proto/coin_proto.h	/^    DEPLOYMENT_CSV, \/\/ Deployment of BIP68, BIP112, and BIP113.$/;"	e	enum:DeploymentPos
DEPLOYMENT_PARAM	../proto/coin_proto.h	/^    DEPLOYMENT_PARAM,$/;"	e	enum:DeploymentPos
DEPLOYMENT_RESERVED_0	../proto/coin_proto.h	/^    DEPLOYMENT_RESERVED_0,$/;"	e	enum:DeploymentPos
DEPLOYMENT_RESERVED_1	../proto/coin_proto.h	/^    DEPLOYMENT_RESERVED_1,$/;"	e	enum:DeploymentPos
DEPLOYMENT_RESERVED_2	../proto/coin_proto.h	/^    DEPLOYMENT_RESERVED_2,$/;"	e	enum:DeploymentPos
DEPLOYMENT_SEGWIT	../proto/coin_proto.h	/^    DEPLOYMENT_SEGWIT, \/\/ Deployment of BIP141, BIP143, and BIP147.$/;"	e	enum:DeploymentPos
DEPLOYMENT_TESTDUMMY	../proto/coin_proto.h	/^    DEPLOYMENT_TESTDUMMY,$/;"	e	enum:DeploymentPos
DIExtKey	../server/dikey.h	/^struct DIExtKey$/;"	s
DIExtPubKey	../server/dikey.h	/^struct DIExtPubKey $/;"	s
DIKey	../server/dikey.h	/^    DIKey()$/;"	f	class:DIKey
DIKey	../server/dikey.h	/^    DIKey(CSecret secret)$/;"	f	class:DIKey
DIKey	../server/dikey.h	/^    DIKey(const DIKey& b)$/;"	f	class:DIKey
DIKey	../server/dikey.h	/^class DIKey : public CKey$/;"	c
DIKeyMap	../server/keystore.h	/^typedef std::map<CKeyID, DIKey> DIKeyMap;$/;"	t
DILITHIUM_PRIVATE_KEY_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_PRIVATE_KEY_SIZE = 3504;$/;"	m	class:DIKey
DILITHIUM_PUBLIC_KEY_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_PUBLIC_KEY_SIZE = 1472; $/;"	m	class:DIKey
DILITHIUM_SECRET_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_SECRET_SIZE = 96; $/;"	m	class:DIKey
DILITHIUM_SIGNATURE_SIZE	../server/dikey.h	/^		static const unsigned int DILITHIUM_SIGNATURE_SIZE = 2701;$/;"	m	class:DIKey
DILITHIUM_VERSION	../server/dikey.h	52;"	d
DO	../server/algo/sph_keccak.c	1399;"	d	file:
DUST_RELAY_TX_FEE	../proto/coin_proto.h	101;"	d
Data	../fractal/fractal_bmp.c	/^	UCHAR*		Data;$/;"	m	struct:_BMP	file:
DataOffset	../fractal/fractal_bmp.c	/^	UINT		DataOffset;			\/* Offset of image data relative to the file's start *\/$/;"	m	struct:_BMP_Header	file:
DateTimeStrFormat	../server/util.h	/^inline std::string DateTimeStrFormat(const char* pszFormat, int64 nTime)$/;"	f
Debug	../server/util.cpp	/^int Debug(const char* pszFormat, ...)$/;"	f
Decode	../server/bech32.cpp	/^	std::pair<std::string, cbuff> Decode(const std::string& str) {$/;"	f	namespace:bech32
Decode	../server/eckey.cpp	/^void ECExtKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE])$/;"	f	class:ECExtKey
Decode	../server/eckey.cpp	/^void ECExtPubKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE])$/;"	f	class:ECExtPubKey
DecodeAliasHash	../server/ext/alias.cpp	/^bool DecodeAliasHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeAliasScript	../server/ext/alias.cpp	/^bool DecodeAliasScript(const CScript& script, int& op,$/;"	f
DecodeAltChainHash	../server/ext/altchain.cpp	/^bool DecodeAltChainHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeAltChainScript	../server/ext/altchain.cpp	/^bool DecodeAltChainScript(const CScript& script, int& op,$/;"	f
DecodeAssetHash	../server/ext/asset.cpp	/^bool DecodeAssetHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeAssetScript	../server/ext/asset.cpp	/^bool DecodeAssetScript(const CScript& script, int& op,$/;"	f
DecodeBase32	../server/util.cpp	/^string DecodeBase32(const string& str)$/;"	f
DecodeBase32	../server/util.cpp	/^vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid)$/;"	f
DecodeBase58	../server/base58.cpp	/^bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet)$/;"	f
DecodeBase58	../server/base58.h	/^inline bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet)$/;"	f
DecodeBase58Check	../server/base58.h	/^inline bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)$/;"	f
DecodeBase58Check	../server/base58.h	/^inline bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet)$/;"	f
DecodeBase64	../server/util.cpp	/^string DecodeBase64(const string& str)$/;"	f
DecodeBase64	../server/util.cpp	/^vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)$/;"	f
DecodeCertHash	../server/ext/certificate.cpp	/^bool DecodeCertHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeCertScript	../server/ext/certificate.cpp	/^bool DecodeCertScript(const CScript& script, int& op,$/;"	f
DecodeChannelHash	../server/ext/channel.cpp	/^bool DecodeChannelHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeChannelScript	../server/ext/channel.cpp	/^bool DecodeChannelScript(const CScript& script, int& op,$/;"	f
DecodeContextHash	../server/ext/context.cpp	/^bool DecodeContextHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeContextScript	../server/ext/context.cpp	/^bool DecodeContextScript(const CScript& script, int& op,$/;"	f
DecodeExecHash	../server/ext/exec.cpp	/^bool DecodeExecHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeExecScript	../server/ext/exec.cpp	/^bool DecodeExecScript(const CScript& script, int& op,$/;"	f
DecodeIdentHash	../server/ext/certificate.cpp	/^bool DecodeIdentHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeLicenseHash	../server/ext/certificate.cpp	/^bool DecodeLicenseHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeMatrixHash	../server/wallet.cpp	/^bool DecodeMatrixHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeMnemonic	../server/mnemonic.cpp	/^const string DecodeMnemonic(const string_list& words)$/;"	f
DecodeMnemonicSecret	../server/mnemonic.cpp	/^bool DecodeMnemonicSecret(int ifaceIndex, const string phrase, CCoinSecret& addr)$/;"	f
DecodeOP_N	../server/script.h	/^    static int DecodeOP_N(opcodetype opcode)$/;"	f	class:CScript
DecodeOfferHash	../server/ext/offer.cpp	/^bool DecodeOfferHash(const CScript& script, int& mode, uint160& hash)$/;"	f
DecodeOfferScript	../server/ext/offer.cpp	/^bool DecodeOfferScript(const CScript& script, int& op,$/;"	f
DecodeParamHash	../server/ext/ext_param.cpp	/^bool DecodeParamHash(const CScript& script, int& mode, uint160& hash)$/;"	f
Decrypt	../server/crypter.cpp	/^bool CCrypter::Decrypt(const std::vector<unsigned char>& vchCiphertext, CKeyingMaterial& vchPlaintext)$/;"	f	class:CCrypter
DecryptSecret	../server/crypter.cpp	/^bool DecryptSecret(const CKeyingMaterial& vMasterKey, const std::vector<unsigned char>& vchCiphertext, const uint256& nIV, CSecret& vchPlaintext)$/;"	f
DelAddressBookName	../server/wallet.cpp	/^bool CWallet::DelAddressBookName(const CTxDestination& address)$/;"	f	class:CWallet
DeploymentPos	../proto/coin_proto.h	/^enum DeploymentPos$/;"	g
Derive	../server/dikey.cpp	/^bool DIExtKey::Derive(DIExtKey &out, unsigned int _nChild) const $/;"	f	class:DIExtKey
Derive	../server/dikey.cpp	/^bool DIExtPubKey::Derive(DIExtPubKey& outPubKey, unsigned int nChild) const$/;"	f	class:DIExtPubKey
Derive	../server/dikey.cpp	/^bool DIKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const $/;"	f	class:DIKey
Derive	../server/eckey.cpp	/^bool ECExtKey::Derive(ECExtKey &out, unsigned int _nChild) const $/;"	f	class:ECExtKey
Derive	../server/eckey.cpp	/^bool ECExtPubKey::Derive(ECExtPubKey& outPubKey, unsigned int nChild) const$/;"	f	class:ECExtPubKey
Derive	../server/eckey.cpp	/^bool ECKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const $/;"	f	class:ECKey
DeriveCert	../server/block.cpp	/^CCert *CTransaction::DeriveCert(int ifaceIndex, string strTitle, CCoinAddr& addr, CCert *chain, string hexSeed, int64 nLicenseFee)$/;"	f	class:CTransaction
DeriveNewDIKey	../server/wallet.cpp	/^bool CWallet::DeriveNewDIKey(CAccount *hdChain, DIKey& secret, bool internal)$/;"	f	class:CWallet
DeriveNewECKey	../server/wallet.cpp	/^bool CWallet::DeriveNewECKey(CAccount *hdChain, ECKey& secret, bool internal)$/;"	f	class:CWallet
DisconnectAliasTx	../server/ext/alias.cpp	/^bool DisconnectAliasTx(CIface *iface, CTransaction& tx)$/;"	f
DisconnectAltChainTx	../server/ext/altchain.cpp	/^bool DisconnectAltChainTx(CIface *iface, CTransaction& tx)$/;"	f
DisconnectAssetTx	../server/ext/asset.cpp	/^bool DisconnectAssetTx(CIface *iface, CTransaction& tx)$/;"	f
DisconnectBlock	../server/color/color_block.cpp	/^bool COLORBlock::DisconnectBlock(CBlockIndex* pindex)$/;"	f	class:COLORBlock
DisconnectBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::DisconnectBlock(CBlockIndex* pindex)$/;"	f	class:EMC2Block
DisconnectBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::DisconnectBlock(CTxDB& txdb, CBlockIndex* pindex)$/;"	f	class:EMC2Block
DisconnectBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::DisconnectBlock(CBlockIndex* pindex)$/;"	f	class:LTCBlock
DisconnectBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::DisconnectBlock(CTxDB& txdb, CBlockIndex* pindex)$/;"	f	class:LTCBlock
DisconnectBlock	../server/shc/shc_block.cpp	/^bool SHCBlock::DisconnectBlock(CBlockIndex* pindex)$/;"	f	class:SHCBlock
DisconnectBlock	../server/test/test_block.cpp	/^bool TESTBlock::DisconnectBlock(CBlockIndex* pindex)$/;"	f	class:TESTBlock
DisconnectBlock	../server/test/test_block.cpp	/^bool TESTBlock::DisconnectBlock(CTxDB& txdb, CBlockIndex* pindex)$/;"	f	class:TESTBlock
DisconnectBlock	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::DisconnectBlock(CBlockIndex* pindex)$/;"	f	class:TESTNETBlock
DisconnectCertificate	../server/ext/certificate.cpp	/^bool DisconnectCertificate(CIface *iface, CTransaction& tx)$/;"	f
DisconnectContextTx	../server/ext/context.cpp	/^bool DisconnectContextTx(CIface *iface, CTransaction& tx)$/;"	f
DisconnectExecTx	../server/ext/exec.cpp	/^int DisconnectExecTx(CIface *iface, CTransaction& tx, int mode)$/;"	f
DisconnectInputs	../server/coin.cpp	/^bool CTransaction::DisconnectInputs(int ifaceIndex)$/;"	f	class:CTransaction
DisconnectOfferTx	../server/ext/offer.cpp	/^bool DisconnectOfferTx(CIface *iface, CTransaction& tx)$/;"	f
DisconnectParamTx	../server/ext/ext_param.cpp	/^bool DisconnectParamTx(CIface *iface, CTransaction *tx)$/;"	f
E8	../server/algo/sph_jh.c	741;"	d	file:
E8	../server/algo/sph_jh.c	756;"	d	file:
E8	../server/algo/sph_jh.c	821;"	d	file:
E8	../server/algo/sph_jh.c	874;"	d	file:
ECExtKey	../server/eckey.h	/^struct ECExtKey$/;"	s
ECExtPubKey	../server/eckey.h	/^struct ECExtPubKey $/;"	s
ECKey	../server/eckey.h	/^    ECKey()$/;"	f	class:ECKey
ECKey	../server/eckey.h	/^    ECKey(CSecret secret, bool fCompressed = true)$/;"	f	class:ECKey
ECKey	../server/eckey.h	/^    ECKey(const ECKey& b)$/;"	f	class:ECKey
ECKey	../server/eckey.h	/^class ECKey : public CKey$/;"	c
ECKeyMap	../server/keystore.h	/^typedef std::map<CKeyID, ECKey> ECKeyMap;$/;"	t
EMC2Block	../server/emc2/emc2_block.h	/^		EMC2Block()$/;"	f	class:EMC2Block
EMC2Block	../server/emc2/emc2_block.h	/^		EMC2Block(const CBlock &block)$/;"	f	class:EMC2Block
EMC2Block	../server/emc2/emc2_block.h	/^		EMC2Block(const CBlockHeader &header)$/;"	f	class:EMC2Block
EMC2Block	../server/emc2/emc2_block.h	/^class EMC2Block : public CBlock$/;"	c
EMC2CoinAddr	../server/coinaddr.h	/^    EMC2CoinAddr() : CCoinAddr(EMC2_COIN_IFACE)$/;"	f	class:EMC2CoinAddr
EMC2CoinAddr	../server/coinaddr.h	/^    EMC2CoinAddr(const CTxDestination &dest) : CCoinAddr(EMC2_COIN_IFACE)$/;"	f	class:EMC2CoinAddr
EMC2CoinAddr	../server/coinaddr.h	/^    EMC2CoinAddr(const std::string& strAddress) : CCoinAddr(EMC2_COIN_IFACE)$/;"	f	class:EMC2CoinAddr
EMC2CoinAddr	../server/coinaddr.h	/^class EMC2CoinAddr : public CCoinAddr$/;"	c
EMC2TxDB	../server/emc2/emc2_txidx.h	/^    EMC2TxDB(const char *fileMode = "r+") : CTxDB("emc2_tx.dat", EMC2_COIN_IFACE, fileMode) { }$/;"	f	class:EMC2TxDB
EMC2TxDB	../server/emc2/emc2_txidx.h	/^class EMC2TxDB : public CTxDB$/;"	c
EMC2Wallet	../server/emc2/emc2_wallet.h	/^    EMC2Wallet() : CWallet(EMC2_COIN_IFACE, "emc2_wallet.dat") { };  $/;"	f	class:EMC2Wallet
EMC2Wallet	../server/emc2/emc2_wallet.h	/^class EMC2Wallet : public CWallet$/;"	c
EMC2_COIN	../proto/emc2_proto.h	54;"	d
EMC2_COINBASE_FLAGS	../server/emc2/emc2_wallet.cpp	/^CScript EMC2_COINBASE_FLAGS;$/;"	v
EMC2_COINBASE_MATURITY	../proto/emc2_proto.h	/^static const int EMC2_COINBASE_MATURITY = 100;$/;"	v
EMC2_COIN_DAEMON_PORT	../proto/emc2_proto.h	34;"	d
EMC2_COIN_HEADER_SIZE	../server/emc2/emc2_netmsg.cpp	63;"	d	file:
EMC2_COIN_IFACE	../proto/coin_proto.h	124;"	d
EMC2_CTxMemPool	../server/emc2/emc2_pool.h	/^    EMC2_CTxMemPool() : CPool(EMC2_COIN_IFACE) { };$/;"	f	class:EMC2_CTxMemPool
EMC2_CTxMemPool	../server/emc2/emc2_pool.h	/^class EMC2_CTxMemPool : public CPool$/;"	c
EMC2_DEFAULT_BYTES_PER_SIGOP	../proto/emc2_proto.h	59;"	d
EMC2_MAJORITY_WINDOW	../server/emc2/emc2_block.cpp	59;"	d	file:
EMC2_MAX_BLOCK_SERIALIZED_SIZE	../proto/emc2_proto.h	/^static const unsigned int EMC2_MAX_BLOCK_SERIALIZED_SIZE = 4000000;$/;"	v
EMC2_MAX_BLOCK_SIZE	../proto/emc2_proto.h	57;"	d
EMC2_MAX_BLOCK_WEIGHT	../proto/emc2_proto.h	/^static const unsigned int EMC2_MAX_BLOCK_WEIGHT = 4000000;$/;"	v
EMC2_MAX_DRIFT_TIME	../proto/emc2_proto.h	50;"	d
EMC2_MAX_FREE_TX_SIZE	../proto/emc2_proto.h	65;"	d
EMC2_MAX_GETADDR	../proto/emc2_proto.h	36;"	d
EMC2_MAX_HEADERS_RESULTS	../server/emc2/emc2_netmsg.cpp	/^static const unsigned int EMC2_MAX_HEADERS_RESULTS = 2000;$/;"	v	file:
EMC2_MAX_MONEY	../proto/emc2_proto.h	/^static const int64 EMC2_MAX_MONEY = 298937393 * EMC2_COIN;$/;"	v
EMC2_MAX_ORPHAN_TRANSACTIONS	../proto/emc2_proto.h	38;"	d
EMC2_MAX_SCRIPT_ELEMENT_SIZE	../proto/emc2_proto.h	47;"	d
EMC2_MAX_SCRIPT_SIZE	../proto/emc2_proto.h	45;"	d
EMC2_MAX_SIGOPS	../proto/emc2_proto.h	42;"	d
EMC2_MAX_STANDARD_TX_SIGOP_COST	../proto/emc2_proto.h	62;"	d
EMC2_MAX_STANDARD_TX_WEIGHT	../proto/emc2_proto.h	61;"	d
EMC2_MAX_TRANSACTION_WEIGHT	../proto/emc2_proto.h	40;"	d
EMC2_MAX_TX_FEE	../proto/emc2_proto.h	/^static const int64 EMC2_MAX_TX_FEE = 0.1 * EMC2_COIN;$/;"	v
EMC2_MIN_INPUT	../proto/emc2_proto.h	/^static const int64 EMC2_MIN_INPUT = 29400;$/;"	v
EMC2_MIN_RELAY_TX_FEE	../proto/emc2_proto.h	/^static const int64 EMC2_MIN_RELAY_TX_FEE = 100000;$/;"	v
EMC2_MIN_TX_FEE	../proto/emc2_proto.h	/^static const int64 EMC2_MIN_TX_FEE = 100000;$/;"	v
EMC2_PROTOCOL_VERSION	../proto/emc2_proto.h	/^static const int EMC2_PROTOCOL_VERSION = 70015;$/;"	v
EMC2_SEED_LIST_SIZE	../unet/unet_seed.h	19;"	d
EMC2_SENDHEADERS_VERSION	../server/emc2/emc2_netmsg.cpp	65;"	d	file:
EMC2_SetBestChain	../server/emc2/emc2_block.cpp	/^void static EMC2_SetBestChain(const CBlockLocator& loc)$/;"	f	file:
EMC2_VERSION_BUILD	../proto/emc2_proto.h	32;"	d
EMC2_VERSION_MAJOR	../proto/emc2_proto.h	29;"	d
EMC2_VERSION_MINOR	../proto/emc2_proto.h	30;"	d
EMC2_VERSION_REVISION	../proto/emc2_proto.h	31;"	d
EMC2_WITNESS_SCALE_FACTOR	../proto/emc2_proto.h	/^static const int EMC2_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
EMC2_mapOrphanBlocksByPrev	../server/emc2/emc2_block.cpp	/^static orphan_map EMC2_mapOrphanBlocksByPrev;$/;"	v	file:
END	../server/util.h	30;"	d
ENTER_CRITICAL_SECTION	../server/sync.h	129;"	d
EXEC_COMPILE	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_COMPILE = {$/;"	v
EXEC_FEE	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_FEE = {$/;"	v
EXEC_GET	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_GET = {$/;"	v
EXEC_HISTORY	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_HISTORY = {$/;"	v
EXEC_INFO	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_INFO = {$/;"	v
EXEC_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_LIST = {$/;"	v
EXEC_NEW	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_NEW = {$/;"	v
EXEC_RESET	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_RESET = {$/;"	v
EXEC_RUN	../server/shc/shc_rpc.cpp	/^const RPCOp EXEC_RUN = {$/;"	v
EXTPARAM_BLOCKSIZE	../server/ext/ext_param.cpp	39;"	d	file:
EXTPARAM_MINFEE	../server/ext/ext_param.cpp	40;"	d	file:
EXT_PUBLIC_KEY	../test/testcoin_bip32.cpp	/^	EXT_PUBLIC_KEY,$/;"	e	enum:Base58Type	file:
EXT_PUBLIC_KEY	../test/testcoin_sip33.cpp	/^	EXT_PUBLIC_KEY,$/;"	e	enum:Base58Type	file:
EXT_SECRET_KEY	../test/testcoin_bip32.cpp	/^	EXT_SECRET_KEY,$/;"	e	enum:Base58Type	file:
EXT_SECRET_KEY	../test/testcoin_sip33.cpp	/^	EXT_SECRET_KEY,$/;"	e	enum:Base58Type	file:
Encode	../server/bech32.cpp	/^	std::string Encode(const std::string& hrp, const cbuff& values) {$/;"	f	namespace:bech32
Encode	../server/eckey.cpp	/^void ECExtKey::Encode(unsigned char code[BIP32_EXTKEY_SIZE]) const $/;"	f	class:ECExtKey
Encode	../server/eckey.cpp	/^void ECExtPubKey::Encode(unsigned char code[BIP32_EXTKEY_SIZE]) const $/;"	f	class:ECExtPubKey
EncodeBase32	../server/util.cpp	/^string EncodeBase32(const string& str)$/;"	f
EncodeBase32	../server/util.cpp	/^string EncodeBase32(const unsigned char* pch, size_t len)$/;"	f
EncodeBase58	../server/base58.cpp	/^std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)$/;"	f
EncodeBase58	../server/base58.h	/^inline std::string EncodeBase58(const std::vector<unsigned char>& vch)$/;"	f
EncodeBase58Check	../server/base58.h	/^inline std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn)$/;"	f
EncodeBase64	../server/util.cpp	/^string EncodeBase64(const string& str)$/;"	f
EncodeBase64	../server/util.cpp	/^string EncodeBase64(const unsigned char* pch, size_t len)$/;"	f
EncodeMnemonic	../server/mnemonic.cpp	/^string_list EncodeMnemonic(string& seed)$/;"	f
EncodeMnemonicSecret	../server/mnemonic.cpp	/^const string EncodeMnemonicSecret(CCoinSecret& secret)$/;"	f
EncodeOP_N	../server/script.h	/^    static opcodetype EncodeOP_N(int n)$/;"	f	class:CScript
Encrypt	../server/crypter.cpp	/^bool CCrypter::Encrypt(const CKeyingMaterial& vchPlaintext, std::vector<unsigned char> &vchCiphertext)$/;"	f	class:CCrypter
EncryptSecret	../server/crypter.cpp	/^bool EncryptSecret(CKeyingMaterial& vMasterKey, const CSecret &vchPlaintext, const uint256& nIV, std::vector<unsigned char> &vchCiphertext)$/;"	f
EndMessage	../server/net.h	/^    void EndMessage()$/;"	f	class:CNode
EndMessageAbortIfEmpty	../server/net.h	/^    void EndMessageAbortIfEmpty()$/;"	f	class:CNode
EndTime	../server/versionbits.cpp	/^      int64_t EndTime(CIface * params) const { return params->vDeployments[id].nTimeout; }$/;"	f	class:__anon15::VersionBitsConditionChecker
EnforceCoinStandards	../server/color/color_pool.cpp	/^void COLOR_CTxMemPool::EnforceCoinStandards(CTransaction& tx)$/;"	f	class:COLOR_CTxMemPool
EnforceCoinStandards	../server/emc2/emc2_pool.cpp	/^void EMC2_CTxMemPool::EnforceCoinStandards(CTransaction& tx)$/;"	f	class:EMC2_CTxMemPool
EnforceCoinStandards	../server/ltc/ltc_pool.cpp	/^void LTC_CTxMemPool::EnforceCoinStandards(CTransaction& tx)$/;"	f	class:LTC_CTxMemPool
EnforceCoinStandards	../server/shc/shc_pool.cpp	/^void SHC_CTxMemPool::EnforceCoinStandards(CTransaction& tx)$/;"	f	class:SHC_CTxMemPool
EnforceCoinStandards	../server/test/test_pool.cpp	/^void TEST_CTxMemPool::EnforceCoinStandards(CTransaction& tx)$/;"	f	class:TEST_CTxMemPool
EnforceCoinStandards	../server/testnet/testnet_pool.cpp	/^void TESTNET_CTxMemPool::EnforceCoinStandards(CTransaction& tx)$/;"	f	class:TESTNET_CTxMemPool
EnsureWalletIsUnlocked	../server/rpc/rpc_command.cpp	/^void EnsureWalletIsUnlocked()$/;"	f
Enter	../server/sync.h	/^		void Enter(const char* pszName, const char* pszFile, int nLine)$/;"	f	class:CMutexLock
EnterCritical	../server/sync.cpp	/^void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)$/;"	f
EnterCritical	../server/sync.h	/^void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}$/;"	f
EnvShutdown	../server/txidx.cpp	/^void CDBEnv::EnvShutdown()$/;"	f	class:CDBEnv
Erase	../server/leveldb.h	/^    template<typename K> bool Erase(const K& key, bool fSync = false) throw(leveldb_error) {$/;"	f	class:CLevelDB
Erase	../server/leveldb.h	/^    template<typename K> void Erase(const K& key) {$/;"	f	class:CLevelDBBatch
Erase	../server/txidx.h	/^      bool Erase(const K& key)$/;"	f	class:CDB
EraseArchTx	../server/wallettx.cpp	/^bool CWallet::EraseArchTx(uint256 hash) const$/;"	f	class:CWallet
EraseCoins	../server/coin.cpp	/^bool CTransaction::EraseCoins(int ifaceIndex)$/;"	f	class:CTransaction
EraseFromWallet	../server/wallet.cpp	/^bool CWallet::EraseFromWallet(uint256 hash)$/;"	f	class:CWallet
EraseName	../server/walletdb.cpp	/^bool CWalletDB::EraseName(const string& strAddress)$/;"	f	class:CWalletDB
EraseSetting	../server/walletdb.h	/^    bool EraseSetting(const std::string& strKey)$/;"	f	class:CWalletDB
EraseTx	../server/block.cpp	/^bool CTransaction::EraseTx(int ifaceIndex)$/;"	f	class:CTransaction
EraseTx	../server/walletdb.h	/^    bool EraseTx(uint256 hash)$/;"	f	class:CWalletDB
EraseTxCoins	../server/coin.cpp	/^bool EraseTxCoins(CIface *iface, uint256 hash)$/;"	f
EraseTxIndex	../server/txidx.cpp	/^bool CTxDB::EraseTxIndex(const CTransaction& tx)$/;"	f	class:CTxDB
EraseWalletTx	../server/wallettx.cpp	/^void CWallet::EraseWalletTx(const uint256& hash) const$/;"	f	class:CWallet
Error_position	../server/json/json_spirit_error_position.h	/^    inline Error_position::Error_position( unsigned int line, unsigned int column, const std::string& reason )$/;"	f	class:json_spirit::Error_position
Error_position	../server/json/json_spirit_error_position.h	/^    inline Error_position::Error_position()$/;"	f	class:json_spirit::Error_position
Error_position	../server/json/json_spirit_error_position.h	/^    struct Error_position$/;"	s	namespace:json_spirit
EstimateMedianVal	../server/txfeerate.cpp	/^double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,$/;"	f	class:TxConfirmStats
EvalAltProofScript	../server/script.cpp	/^bool EvalAltProofScript(uint160 hCoin, uint256 hTx)$/;"	f
EvalScript	../server/script.cpp	/^bool EvalScript(CSignature& sig, cstack_t& stack, const CScript& script, unsigned int sigver, int flags)$/;"	f
EvaluateSequenceLocks	../server/block.cpp	/^bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> lockPair)$/;"	f
ExecEraseCheckpoint	../server/ext/exec.cpp	/^bool ExecEraseCheckpoint(CIface *iface, CExec *exec, int nHeight)$/;"	f
ExecEraseCheckpoint	../server/ext/exec.cpp	/^bool ExecEraseCheckpoint(CIface *iface, uint160 hExec, int nHeight)$/;"	f
ExecRestoreCheckpoint	../server/ext/exec.cpp	/^bool ExecRestoreCheckpoint(CIface *iface, CExec *exec)$/;"	f
ExecRestoreCheckpoint	../server/ext/exec.cpp	/^bool ExecRestoreCheckpoint(CIface *iface, const uint160& hExec)$/;"	f
ExecSaveCheckpoint	../server/ext/exec.cpp	/^bool ExecSaveCheckpoint(CIface *iface, CExec *exec, CTransaction *cp_tx)$/;"	f
ExecSaveCheckpoint	../server/ext/exec.cpp	/^bool ExecSaveCheckpoint(CIface *iface, uint160 hExec, CTransaction *cp_tx)$/;"	f
ExecUpdateEvent	../server/ext/exec.cpp	/^static int ExecUpdateEvent(lua_State *L)$/;"	f	file:
ExecuteRPC	../server/rpc/rpc_parse.cpp	/^int ExecuteRPC(int ifaceIndex, shjson_t *json, shbuf_t *buff)$/;"	f
ExecuteStratumRPC	../server/rpc/rpc_parse.cpp	/^int ExecuteStratumRPC(int ifaceIndex, shjson_t *json, shbuf_t *buff)$/;"	f
Exists	../server/leveldb.h	/^    template<typename K> bool Exists(const K& key) throw(leveldb_error) {$/;"	f	class:CLevelDB
Exists	../server/txidx.h	/^      bool Exists(const K& key)$/;"	f	class:CDB
ExitThread	../server/util.h	/^inline void ExitThread(size_t nExitCode)$/;"	f
ExitTimeout	../server/init.cpp	/^void ExitTimeout(void* parg)$/;"	f
ExpandHRP	../server/bech32.cpp	/^	cbuff ExpandHRP(const std::string& hrp)$/;"	f	namespace:__anon2
ExtractDestination	../server/coinaddr.cpp	/^bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)$/;"	f
ExtractDestinationKey	../server/wallet.cpp	/^bool ExtractDestinationKey(CWallet *wallet, const CTxDestination& dest, CKeyID& keyid)$/;"	f
ExtractDestinations	../server/coinaddr.cpp	/^bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vector<CTxDestination>& addressRet, int& nRequiredRet)$/;"	f
ExtractMatches	../server/bloom.cpp	/^uint256 CPartialMerkleTree::ExtractMatches(std::vector<uint256> &vMatch)$/;"	f	class:CPartialMerkleTree
ExtractValidateCoinbaseDestination	../server/matrix.cpp	/^static bool ExtractValidateCoinbaseDestination(CWallet *wallet, const CTransaction& tx, CPubKey& pubkey)$/;"	f	file:
FEATURE_BASE	../server/wallet.h	/^	FEATURE_BASE = 10500, \/\/ the earliest version new wallets supports (only useful for getinfo's clientversion output)$/;"	e	enum:WalletFeature
FEATURE_COMPRPUBKEY	../server/wallet.h	/^	FEATURE_COMPRPUBKEY = 60000, \/\/ compressed public keys$/;"	e	enum:WalletFeature
FEATURE_LATEST	../server/wallet.h	/^	FEATURE_LATEST = 60000$/;"	e	enum:WalletFeature
FEATURE_WALLETCRYPT	../server/wallet.h	/^	FEATURE_WALLETCRYPT = 40000, \/\/ wallet encryption$/;"	e	enum:WalletFeature
FEE_SPACING	../server/txfeerate.h	/^static const double FEE_SPACING = 1.1;$/;"	v
FFT128	../server/algo/sph_simd.c	230;"	d	file:
FFT128	../server/algo/sph_simd.c	245;"	d	file:
FFT16	../server/algo/sph_simd.c	176;"	d	file:
FFT256	../server/algo/sph_simd.c	273;"	d	file:
FFT32	../server/algo/sph_simd.c	202;"	d	file:
FFT64	../server/algo/sph_simd.c	211;"	d	file:
FFT8	../server/algo/sph_simd.c	147;"	d	file:
FFT_LOOP	../server/algo/sph_simd.c	102;"	d	file:
FINAL_BIG	../server/algo/sph_echo.c	309;"	d	file:
FINAL_BIG	../server/algo/sph_echo.c	599;"	d	file:
FINAL_BIG	../server/algo/sph_groestl.c	1658;"	d	file:
FINAL_BIG	../server/algo/sph_groestl.c	2726;"	d	file:
FINAL_SMALL	../server/algo/sph_echo.c	296;"	d	file:
FINAL_SMALL	../server/algo/sph_echo.c	586;"	d	file:
FINAL_SMALL	../server/algo/sph_groestl.c	1367;"	d	file:
FINAL_SMALL	../server/algo/sph_groestl.c	2343;"	d	file:
FLATDATA	../server/serialize.h	246;"	d
FOLD	../server/algo/sph_bmw.c	519;"	d	file:
FOLDb	../server/algo/sph_bmw.c	564;"	d	file:
FOLDs	../server/algo/sph_bmw.c	560;"	d	file:
FORWARD	../server/ui_interface.h	/^        FORWARD               = 0x00001000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
FeeFilterRounder	../server/txfeerate.cpp	/^FeeFilterRounder::FeeFilterRounder(const CFeeRate& minIncrementalFee)$/;"	f	class:FeeFilterRounder
FeeFilterRounder	../server/txfeerate.h	/^class FeeFilterRounder$/;"	c
FetchInputs	../server/txmempool.h	/^    bool FetchInputs(uint256 hash, tx_cache& cacheRet)$/;"	f	class:CPool
FileCommit	../server/util.cpp	/^void FileCommit(FILE *fileout)$/;"	f
FileSize	../fractal/fractal_bmp.c	/^	UINT		FileSize;			\/* Size of the BMP file in bytes *\/$/;"	m	struct:_BMP_Header	file:
FillAltChainBlock	../server/ext/altchain.cpp	/^static int FillAltChainBlock(string strAccount, CBlock *block, CTransaction *tx, uint160 hColor)$/;"	f	file:
FillBlock	../server/block_cmpct.cpp	/^ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<CTransactionRef>& vtx_missing) {$/;"	f	class:PartiallyDownloadedBlock
FillInputs	../server/txmempool.cpp	/^bool CPool::FillInputs(CPoolTx& ptx)$/;"	f	class:CPool
FillInputs	../server/wallet.cpp	/^bool CWallet::FillInputs(const CTransaction& tx, tx_cache& inputs, bool fAllowSpent)$/;"	f	class:CWallet
FillReference	../server/ext/alias.cpp	/^void CAlias::FillReference(SHAlias *ref)$/;"	f	class:CAlias
FillSharenetCertificate	../server/ext/certificate.cpp	/^static void FillSharenetCertificate(SHCert *cert, CCert *c_cert, CCert *iss)$/;"	f	file:
FillShortTxIDSelector	../server/block_cmpct.cpp	/^void CBlockHeaderAndShortTxIDs::FillShortTxIDSelector() const {$/;"	f	class:CBlockHeaderAndShortTxIDs
Finalize	../server/algo/hmac_sha512.cpp	/^void CHMAC_SHA512::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CHMAC_SHA512
Finalize	../server/algo/sha512.cpp	/^void CSHA512::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CSHA512
Find	../server/addrman.cpp	/^CAddrInfo* CAddrMan::Find(const CNetAddr& addr, int *pnId)$/;"	f	class:CAddrMan
Find	../server/script.h	/^    int Find(opcodetype op) const$/;"	f	class:CScript
FindAndDelete	../server/script.h	/^    int FindAndDelete(const CScript& b)$/;"	f	class:CScript
FindNextBlocksToDownload	../server/chain.cpp	/^static bool FindNextBlocksToDownload(CIface *iface, CNode *pfrom, unsigned int count, vector<CBlockIndex*>& vBlocks)$/;"	f	file:
Flush	../server/leveldb.h	/^    bool Flush() {$/;"	f	class:CLevelDB
Flush	../server/txidx.cpp	/^void CDBEnv::Flush(bool fShutdown)$/;"	f	class:CDBEnv
FormatException	../server/util.cpp	/^static std::string FormatException(std::exception* pex, const char* pszThread)$/;"	f	file:
FormatFullVersion	../server/util.cpp	/^string FormatFullVersion()$/;"	f
FormatGeoContext	../server/ext/context.cpp	/^bool FormatGeoContext(CIface *iface, string& strGeo, shnum_t& lat, shnum_t& lon)$/;"	f
FormatHashBlocks	../server/main.cpp	/^int FormatHashBlocks(void* pbuffer, unsigned int len)$/;"	f
FormatHashBuffers	../server/main.cpp	/^void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1)$/;"	f
FormatMoney	../server/coin.cpp	/^string FormatMoney(CAmount n)$/;"	f
FormatSubVersion	../server/util.cpp	/^std::string FormatSubVersion(const std::string& name, int nClientVersion, const std::vector<std::string>& comments)$/;"	f
FormatVersion	../server/util.cpp	/^string FormatVersion(int nVersion)$/;"	f
FreeBlockTable	../server/block.cpp	/^void FreeBlockTable(CIface *iface)$/;"	f
G	../server/algo/blake2s.c	232;"	d	file:
G	../server/algo/blake2s.c	268;"	d	file:
GB	../server/algo/sph_blake.c	425;"	d	file:
GIT_ARCHIVE	../server/version.cpp	66;"	d	file:
GIT_COMMIT_DATE	../server/version.cpp	69;"	d	file:
GIT_COMMIT_ID	../server/version.cpp	68;"	d	file:
GL_BESTCHAIN	../server/global.cpp	34;"	d	file:
GL_VERSION	../server/global.cpp	33;"	d	file:
GMF_BLOCK	../server/block.h	/^    GMF_BLOCK,$/;"	e	enum:GetMinFee_mode
GMF_RELAY	../server/block.h	/^    GMF_RELAY,$/;"	e	enum:GetMinFee_mode
GMF_SEND	../server/block.h	/^    GMF_SEND,$/;"	e	enum:GetMinFee_mode
GNULIB_NAMESPACE	../server/emc2/emc2_netmsg.h	34;"	d
GNULIB_NAMESPACE	../server/ltc/ltc_netmsg.h	34;"	d
GNULIB_NAMESPACE	../server/main.h	29;"	d
GNULIB_NAMESPACE	../server/rpc/rpcalias_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/rpc/rpccert_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/rpc/rpccolor_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/rpc/rpccontext_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/rpc/rpcexec_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/rpc/rpcoffer_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/rpc/rpcparam_proto.cpp	26;"	d	file:
GNULIB_NAMESPACE	../server/shc/shc_netmsg.h	38;"	d
GNULIB_NAMESPACE	../server/testnet/testnet_netmsg.h	38;"	d
GS	../server/algo/sph_blake.c	376;"	d	file:
Gamma0	../server/bolo/bolo_validation03.cpp	202;"	d	file:
Gamma0	../server/bolo/bolo_validation03.cpp	299;"	d	file:
Gamma1	../server/bolo/bolo_validation03.cpp	203;"	d	file:
Gamma1	../server/bolo/bolo_validation03.cpp	300;"	d	file:
Generate	../server/txcreator.cpp	/^bool CTxBatchCreator::Generate()$/;"	f	class:CTxBatchCreator
Generate	../server/txcreator.cpp	/^bool CTxCreator::Generate()$/;"	f	class:CTxCreator
GenerateAltChainBlock	../server/ext/altchain.cpp	/^bool GenerateAltChainBlock(CIface *iface, string strAccount, CAltChain *altchain, uint160 hColor, vector<CTransaction> vTx, const CPubKey& pubkey, CBlock **pBlockRet)$/;"	f
GenerateAltChainGenesisBlock	../server/ext/altchain.cpp	/^bool GenerateAltChainGenesisBlock(CIface *iface, CAltChain *altchain, uint160 hColor, color_opt& opt, const CPubKey& pubkey, CBlock **pBlockRet)$/;"	f
GenerateChainCoinbase	../server/ext/exec.cpp	/^static uint256 GenerateChainCoinbase(CExecCall *call)$/;"	f	file:
GenerateExec	../server/block.cpp	/^CExecCall *CTransaction::GenerateExec(const CExec& execIn)$/;"	f	class:CTransaction
GenerateMasterKey	../server/ext/channel.cpp	/^bool CChannelKey::GenerateMasterKey(CWallet *wallet, string strAccount)$/;"	f	class:CChannelKey
GenerateNewDIKey	../server/wallet.cpp	/^bool CWallet::GenerateNewDIKey(CPubKey& pubkeyRet, int nFlag)$/;"	f	class:CWallet
GenerateNewECKey	../server/wallet.cpp	/^bool CWallet::GenerateNewECKey(CPubKey& pubkeyRet, bool fCompressed, int nFlag)$/;"	f	class:CWallet
GenerateNewECKey	../server/wallet.h	/^		CPubKey GenerateNewECKey(bool fCompressed = true, int nFlag = 0)$/;"	f	class:CWallet
GenerateOffer	../server/block.cpp	/^COffer *CTransaction::GenerateOffer(COffer *offerIn)$/;"	f	class:CTransaction
GeneratePubKey	../server/ext/channel.cpp	/^bool CChannel::GeneratePubKey()$/;"	f	class:CChannel
GenerateSerialNumber	../server/ext/certificate.h	/^    static cbuff GenerateSerialNumber()$/;"	f	class:CCert
GenerateSpringMatrix	../server/matrix.cpp	/^CTxMatrix *CTransaction::GenerateSpringMatrix(int ifaceIndex, CIdent& ident)$/;"	f	class:CTransaction
GenerateValidateMatrix	../server/block.cpp	/^CTxMatrix *CTransaction::GenerateValidateMatrix(int ifaceIndex, CBlockIndex *pindex)$/;"	f	class:CTransaction
GenerateValidateScript	../server/matrix.cpp	/^CScriptID GenerateValidateScript(CWallet *wallet, bool& fConsensus, CScript& script, vector<CPubKey> kSend)$/;"	f
Generator	../server/json/json_spirit_writer_template.h	/^        Generator( const Value_type& value, Ostream_type& os, bool pretty )$/;"	f	class:json_spirit::Generator
Generator	../server/json/json_spirit_writer_template.h	/^    class Generator$/;"	c	namespace:json_spirit
Get	../server/coinaddr.cpp	/^CTxDestination CCoinAddr::Get() const $/;"	f	class:CCoinAddr
Get	../server/shlib.h	/^    shpeer_t *Get()$/;"	f	class:SHPeer
Get64	../server/uint256.h	/^    uint64 Get64(int n=0) const$/;"	f	class:base_uint
GetAccount	../server/wallet.cpp	/^CAccountCache *CWallet::GetAccount(string strAccount)$/;"	f	class:CWallet
GetAccountAddress	../server/wallet.cpp	/^CCoinAddr GetAccountAddress(CWallet *wallet, string strAccount)$/;"	f
GetAccountAddresses	../server/rpc/rpc_parse.cpp	/^void GetAccountAddresses(CWallet *wallet, string strAccount, set<CTxDestination>& setAddress)$/;"	f
GetAccountAddresses	../server/rpc/rpccontext_proto.cpp	/^static void GetAccountAddresses(CWallet *wallet, string strAccount, set<CTxDestination>& setAddress)$/;"	f	file:
GetAccountBalance	../server/wallet.cpp	/^int64 GetAccountBalance(int ifaceIndex, const string& strAccount, int nMinDepth)$/;"	f
GetAccountCreditDebit	../server/walletdb.cpp	/^int64 CWalletDB::GetAccountCreditDebit(const string& strAccount)$/;"	f	class:CWalletDB
GetAccountPubKey	../server/ext/offer.cpp	/^static CPubKey GetAccountPubKey(CWallet *wallet, string strAccount)$/;"	f	file:
GetAccountPubKey	../test/testcoin_block.cpp	/^static CPubKey GetAccountPubKey(CWallet *wallet, string strAccount, bool fNew = false)$/;"	f	file:
GetActiveColorTx	../server/txmempool.cpp	/^vector<CTransaction> CPool::GetActiveColorTx(const uint160& hColor)$/;"	f	class:CPool
GetActiveHash	../server/txmempool.cpp	/^vector<uint256> CPool::GetActiveHash()$/;"	f	class:CPool
GetActiveTotal	../server/txmempool.cpp	/^int CPool::GetActiveTotal()$/;"	f	class:CPool
GetActiveTx	../server/txmempool.cpp	/^vector<CTransaction> CPool::GetActiveTx()$/;"	f	class:CPool
GetActiveWeight	../server/txmempool.h	/^    int64 GetActiveWeight()$/;"	f	class:CPool
GetAddr	../server/account.cpp	/^CCoinAddr CAccountCache::GetAddr(int type)$/;"	f	class:CAccountCache
GetAddr	../server/addrman.h	/^    std::vector<CAddress> GetAddr()$/;"	f	class:CAddrMan
GetAddrDestination	../server/account.cpp	/^void GetAddrDestination(int ifaceIndex, const CKeyID& keyid, vector<CTxDestination>& vDest, int nFlag)$/;"	f
GetAddrDestination	../server/account.h	/^		void GetAddrDestination(const CKeyID& keyid, vector<CTxDestination>& vDest, int nFlag = 0)$/;"	f	class:CAccountCache
GetAddr_	../server/addrman.cpp	/^void CAddrMan::GetAddr_(std::vector<CAddress> &vAddr)$/;"	f	class:CAddrMan
GetAdjustedTime	../server/util.cpp	/^int64 GetAdjustedTime()$/;"	f
GetAlgo	../server/color/color_block.cpp	/^int COLORBlock::GetAlgo() const$/;"	f	class:COLORBlock
GetAlgo	../server/emc2/emc2_block.h	/^		int GetAlgo() const { return (0); }$/;"	f	class:EMC2Block
GetAlgo	../server/ltc/ltc_block.h	/^		int GetAlgo() const { return (0); }$/;"	f	class:LTCBlock
GetAlgo	../server/shc/shc_block.cpp	/^int SHCBlock::GetAlgo() const$/;"	f	class:SHCBlock
GetAlgo	../server/test/test_block.cpp	/^int TESTBlock::GetAlgo() const$/;"	f	class:TESTBlock
GetAlgo	../server/testnet/testnet_block.cpp	/^int TESTNETBlock::GetAlgo() const$/;"	f	class:TESTNETBlock
GetAlgoBits	../server/algobits.cpp	/^int32_t GetAlgoBits(int alg)$/;"	f
GetAlgoName	../server/algobits.cpp	/^const char *GetAlgoName(int alg)$/;"	f
GetAlgoNameStr	../server/algobits.cpp	/^string GetAlgoNameStr(int alg)$/;"	f
GetAlgoWorkFactor	../server/algobits.cpp	/^uint32_t GetAlgoWorkFactor(int alg)$/;"	f
GetAlias	../server/block.h	/^    CAlias *GetAlias()$/;"	f	class:CTransaction
GetAliasByName	../server/ext/alias.cpp	/^CAlias *GetAliasByName(CIface *iface, string label, CTransaction& tx)$/;"	f
GetAliasOpFee	../server/ext/alias.cpp	/^int64 GetAliasOpFee(CIface *iface, int nHeight) $/;"	f
GetAliasReturnFee	../server/ext/alias.cpp	/^int64 GetAliasReturnFee(const CTransaction& tx) $/;"	f
GetAliasTable	../server/ext/alias.cpp	/^alias_list *GetAliasTable(int ifaceIndex)$/;"	f
GetAltBlockHeader	../server/block.h	/^		CAltBlock GetAltBlockHeader() const$/;"	f	class:CBlock
GetAltChain	../server/block.h	/^		CAltChain *GetAltChain() const$/;"	f	class:CTransaction
GetAltChainAddr	../server/ext/altchain.cpp	/^const CPubKey& GetAltChainAddr(uint160 hColor, string strAccount, bool bForceNew)$/;"	f
GetAltChainOpFee	../server/ext/altchain.cpp	/^int64 GetAltChainOpFee(CIface *iface)$/;"	f
GetAltChainTable	../server/ext/altchain.cpp	/^altchain_list *GetAltChainTable(int ifaceIndex)$/;"	f
GetAltColorCode	../server/ext/altchain.cpp	/^void GetAltColorCode(uint160 hash, uint32_t *r_p, uint32_t *g_p, uint32_t *b_p, uint32_t *a_p)$/;"	f
GetAltColorHash	../server/ext/altchain.cpp	/^uint160 GetAltColorHash(CIface *iface, string strTitle, string& strColorRet)$/;"	f
GetAltColorHashAbrev	../server/ext/altchain.cpp	/^string GetAltColorHashAbrev(uint160 hash)$/;"	f
GetAltTx	../server/ext/offer.cpp	/^bool GetAltTx(CTransaction& tx, COffer *offer)$/;"	f
GetAmounts	../server/wallet.cpp	/^void CWalletTx::GetAmounts(int ifaceIndex, int64& nGeneratedImmature, int64& nGeneratedMature) const$/;"	f	class:CWalletTx
GetAmounts	../server/wallet.cpp	/^void CWalletTx::GetAmounts(list<pair<CTxDestination, int64> >& listReceived, list<pair<CTxDestination, int64> >& listSent, int64& nFee, string& strSentAccount) const$/;"	f	class:CWalletTx
GetAncestor	../server/block.cpp	/^CBlockIndex* CBlockIndex::GetAncestor(int height)$/;"	f	class:CBlockIndex
GetAncestor	../server/block.cpp	/^const CBlockIndex* CBlockIndex::GetAncestor(int height) const$/;"	f	class:CBlockIndex
GetArchBlockByHash	../server/block.cpp	/^CBlock *GetArchBlockByHash(CIface *iface, const uint256 hash)$/;"	f
GetArg	../server/util.cpp	/^int64 GetArg(const std::string& strArg, int64 nDefault)$/;"	f
GetArg	../server/util.cpp	/^std::string GetArg(const std::string& strArg, const std::string& strDefault)$/;"	f
GetAsset	../server/block.h	/^		CAsset *GetAsset()$/;"	f	class:CTransaction
GetAssetChain	../server/ext/asset.cpp	/^bool GetAssetChain(CIface *iface, const CTransaction& txIn, vector<CTransaction>& vTx)$/;"	f
GetAssetOpFee	../server/ext/asset.cpp	/^int64 GetAssetOpFee(CIface *iface, int nHeight) $/;"	f
GetAssetPendingTable	../server/ext/asset.cpp	/^asset_list *GetAssetPendingTable(int ifaceIndex)$/;"	f
GetAssetTable	../server/ext/asset.cpp	/^asset_list *GetAssetTable(int ifaceIndex)$/;"	f
GetAvailableCredit	../server/wallet.h	/^			 int64 GetAvailableCredit(bool fUseCache=true) const$/;"	f	class:CWalletTx
GetAverageBlockSpan	../server/rpc/rpc_command.cpp	/^double GetAverageBlockSpan(CIface *iface)$/;"	f
GetBalance	../server/wallet.cpp	/^int64 CWallet::GetBalance() const$/;"	f	class:CWallet
GetBestBlockChain	../server/block.cpp	/^uint256 GetBestBlockChain(CIface *iface)$/;"	f
GetBestBlockIndex	../server/block.cpp	/^CBlockIndex *GetBestBlockIndex(CIface *iface)$/;"	f
GetBestBlockIndex	../server/block.cpp	/^CBlockIndex *GetBestBlockIndex(int ifaceIndex)$/;"	f
GetBestColorBlockIndex	../server/color/color_block.cpp	/^CBlockIndex *GetBestColorBlockIndex(CIface *iface, uint160 hColor)$/;"	f
GetBestHeight	../server/block.cpp	/^int GetBestHeight(CIface *iface)$/;"	f
GetBestHeight	../server/block.cpp	/^int GetBestHeight(int ifaceIndex)$/;"	f
GetBestParamValue	../server/ext/ext_param.cpp	/^int64_t GetBestParamValue(CIface *iface, string strName)$/;"	f
GetBitsDifficulty	../stratum/stratum_miner.cpp	/^static double GetBitsDifficulty(unsigned int nBits)$/;"	f	file:
GetBlankBlock	../server/block.cpp	/^CBlock *GetBlankBlock(CIface *iface)$/;"	f
GetBlock	../server/ext/altchain.cpp	/^CBlock *CAltChain::GetBlock()$/;"	f	class:CAltChain
GetBlockBitsDifficulty	../server/algobits.cpp	/^double GetBlockBitsDifficulty(unsigned int nBits, unsigned int nVersion)$/;"	f
GetBlockByHash	../server/block.cpp	/^CBlock *GetBlockByHash(CIface *iface, const uint256 hash)$/;"	f
GetBlockByHeight	../server/block.cpp	/^CBlock *GetBlockByHeight(CIface *iface, int nHeight)$/;"	f
GetBlockByTx	../server/block.cpp	/^CBlock *GetBlockByTx(CIface *iface, const uint256 hash)$/;"	f
GetBlockChain	../blockchain/bc_block.c	/^bc_t *GetBlockChain(CIface *iface)$/;"	f
GetBlockCoinChain	../blockchain/bc_block.c	/^bc_t *GetBlockCoinChain(CIface *iface)$/;"	f
GetBlockHash	../server/block.h	/^    uint256 GetBlockHash() const$/;"	f	class:CBlockIndex
GetBlockHash	../server/block.h	/^    uint256 GetBlockHash() const$/;"	f	class:CDiskBlockIndex
GetBlockHeader	../server/block.h	/^    CBlockHeader GetBlockHeader() const$/;"	f	class:CBlock
GetBlockHeader	../server/block.h	/^    CBlockHeader GetBlockHeader() const$/;"	f	class:CBlockIndex
GetBlockIndexByHash	../server/block.cpp	/^CBlockIndex *GetBlockIndexByHash(int ifaceIndex, const uint256 hash)$/;"	f
GetBlockIndexByHeight	../server/block.cpp	/^CBlockIndex *GetBlockIndexByHeight(int ifaceIndex, unsigned int nHeight)$/;"	f
GetBlockIndexByTx	../server/block.cpp	/^CBlockIndex *GetBlockIndexByTx(CIface *iface, const uint256 hash)$/;"	f
GetBlockIndexDepth	../stratum/stratum_api.cpp	/^static CBlockIndex *GetBlockIndexDepth(int ifaceIndex, int depth, uint160 hColor)$/;"	f	file:
GetBlockScriptFlags	../server/block.cpp	/^unsigned int GetBlockScriptFlags(CIface *iface, const CBlockIndex* pindex)$/;"	f
GetBlockTable	../server/block.cpp	/^blkidx_t *GetBlockTable(int ifaceIndex)$/;"	f
GetBlockTime	../server/block.h	/^    int64 GetBlockTime() const$/;"	f	class:CBlockHeader
GetBlockTime	../server/block.h	/^    int64 GetBlockTime() const$/;"	f	class:CBlockIndex
GetBlockTime	../server/ext/altchain.h	/^		int64 GetBlockTime() const$/;"	f	class:CAltBlock
GetBlockTxChain	../blockchain/bc_block.c	/^bc_t *GetBlockTxChain(CIface *iface)$/;"	f
GetBlockValue	../server/color/color_wallet.cpp	/^int64 COLORWallet::GetBlockValue(int nHeight, int64 nFees, uint160 hColor)$/;"	f	class:COLORWallet
GetBlockValue	../server/emc2/emc2_wallet.cpp	/^int64 EMC2Wallet::GetBlockValue(int nHeight, int64 nFees, uint160 hColor)$/;"	f	class:EMC2Wallet
GetBlockValue	../server/ltc/ltc_wallet.cpp	/^int64 LTCWallet::GetBlockValue(int nHeight, int64 nFees, uint160 hColor)$/;"	f	class:LTCWallet
GetBlockValue	../server/shc/shc_wallet.cpp	/^int64 SHCWallet::GetBlockValue(int nHeight, int64 nFees, uint160 hColor)$/;"	f	class:SHCWallet
GetBlockValue	../server/test/test_wallet.cpp	/^int64 TESTWallet::GetBlockValue(int nHeight, int64 nFees, uint160 hColor)$/;"	f	class:TESTWallet
GetBlockValue	../server/testnet/testnet_wallet.cpp	/^int64 TESTNETWallet::GetBlockValue(int nHeight, int64 nFees, uint160 hColor)$/;"	f	class:TESTNETWallet
GetBlockWeight	../server/color/color_block.cpp	/^int64_t COLORBlock::GetBlockWeight()$/;"	f	class:COLORBlock
GetBlockWeight	../server/emc2/emc2_block.cpp	/^int64_t EMC2Block::GetBlockWeight()$/;"	f	class:EMC2Block
GetBlockWeight	../server/ltc/ltc_block.cpp	/^int64_t LTCBlock::GetBlockWeight()$/;"	f	class:LTCBlock
GetBlockWeight	../server/shc/shc_block.cpp	/^int64_t SHCBlock::GetBlockWeight()$/;"	f	class:SHCBlock
GetBlockWeight	../server/test/test_block.cpp	/^int64_t TESTBlock::GetBlockWeight()$/;"	f	class:TESTBlock
GetBlockWeight	../server/testnet/testnet_block.cpp	/^int64_t TESTNETBlock::GetBlockWeight()$/;"	f	class:TESTNETBlock
GetBlockWork	../server/block.cpp	/^CBigNum CBlockIndex::GetBlockWork(bool fUseAlgo) const$/;"	f	class:CBlockIndex
GetBlocksToMaturity	../server/wallet.cpp	/^int CMerkleTx::GetBlocksToMaturity(int ifaceIndex) const$/;"	f	class:CMerkleTx
GetBloomFilter	../server/net.h	/^    CBloomFilter *GetBloomFilter()$/;"	f	class:CNode
GetBoolArg	../server/util.cpp	/^bool GetBoolArg(const std::string& strArg, bool fDefault)$/;"	f
GetByte	../server/netbase.cpp	/^int CNetAddr::GetByte(int n) const$/;"	f	class:CNetAddr
GetCScript	../server/keystore.cpp	/^bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const$/;"	f	class:CBasicKeyStore
GetCallByHash	../server/ext/exec.cpp	/^bool GetCallByHash(CIface *iface, const uint160& hCall, CExecCall& callOut)$/;"	f
GetCell	../server/matrix.h	/^    unsigned int GetCell(int row, int col)$/;"	f	class:CTxMatrix
GetCertAccount	../server/ext/certificate.cpp	/^bool GetCertAccount(CIface *iface, const CTransaction& tx, string& strAccount)$/;"	f
GetCertByName	../server/ext/certificate.cpp	/^bool GetCertByName(CIface *iface, string name, CCert& cert)$/;"	f
GetCertHash	../server/account.cpp	/^uint160 CAccountCache::GetCertHash() const$/;"	f	class:CAccountCache
GetCertOpFee	../server/ext/certificate.cpp	/^int64 GetCertOpFee(CIface *iface, int nHeight) $/;"	f
GetCertReturnFee	../server/ext/certificate.cpp	/^int64 GetCertReturnFee(const CTransaction& tx) $/;"	f
GetCertTable	../server/ext/certificate.cpp	/^cert_list *GetCertTable(int ifaceIndex)$/;"	f
GetCertificate	../server/block.h	/^    CCert *GetCertificate()$/;"	f	class:CTransaction
GetChain	../server/hdkey.cpp	/^cbuff HDPrivKey::GetChain() const$/;"	f	class:HDPrivKey
GetChain	../server/hdkey.h	/^    cbuff GetChain() const$/;"	f	class:HDMasterPrivKey
GetChainColorOpt	../server/color/color_block.cpp	/^bool GetChainColorOpt(CIface *iface, CBlockIndex *pindex, color_opt& opt)$/;"	f
GetChainColorOpt	../server/color/color_block.cpp	/^bool GetChainColorOpt(CIface *iface, uint256 hBlock, color_opt& opt)$/;"	f
GetChainColorOpt	../server/color/color_block.cpp	/^bool GetChainColorOpt(uint160 hColor, color_opt& opt)$/;"	f
GetChainHex	../server/hdkey.cpp	/^string HDPrivKey::GetChainHex()$/;"	f	class:HDPrivKey
GetChance	../server/addrman.cpp	/^double CAddrInfo::GetChance(int64 nNow) const$/;"	f	class:CAddrInfo
GetChange	../server/wallet.h	/^			 int64 GetChange() const$/;"	f	class:CWalletTx
GetChange	../server/wallet.h	/^		int64 GetChange(const CTransaction& tx) const$/;"	f	class:CWallet
GetChange	../server/wallet.h	/^		int64 GetChange(const CTxOut& txout) const$/;"	f	class:CWallet
GetChangeAddr	../server/txcreator.cpp	/^CCoinAddr CTxCreator::GetChangeAddr()$/;"	f	class:CTxCreator
GetChangeAddr	../server/wallet.cpp	/^CCoinAddr CWallet::GetChangeAddr(string strAccount)$/;"	f	class:CWallet
GetChannelDestination	../server/ext/channel.cpp	/^bool GetChannelDestination(CTransaction *tx, CTxDestination& addr, int64& nValue)$/;"	f
GetChannelReturnFee	../server/ext/channel.cpp	/^int64 GetChannelReturnFee(const CTransaction& tx) $/;"	f
GetChannelSpentTable	../server/ext/channel.cpp	/^channel_list *GetChannelSpentTable(int ifaceIndex)$/;"	f
GetChannelTable	../server/ext/channel.cpp	/^channel_list *GetChannelTable(int ifaceIndex)$/;"	f
GetChannelTx	../server/ext/channel.cpp	/^bool CChannel::GetChannelTx(int ifaceIndex, CTransaction& tx)$/;"	f	class:CChannel
GetChannelTxMaturity	../server/ext/channel.cpp	/^unsigned int GetChannelTxMaturity(CIface *iface, CTransaction& tx)$/;"	f
GetChecksum	../server/ext/exec.h	/^		uint256 GetChecksum()$/;"	f	class:CExecCall
GetChecksum	../server/ext/exec.h	/^		uint256 GetChecksum()$/;"	f	class:CExecCheckpoint
GetClassName	../server/ext/exec.h	/^		string GetClassName()$/;"	f	class:CExec
GetClientName	../server/version.cpp	/^std::string GetClientName(CIface *iface)$/;"	f
GetCoin	../proto/coin_proto.c	/^coin_iface_t *GetCoin(const char *name)$/;"	f
GetCoinAddr	../server/ext/alias.cpp	/^bool CAlias::GetCoinAddr(int ifaceIndex, CCoinAddr& addrRet)$/;"	f	class:CAlias
GetCoinAddr	../server/wallet.cpp	/^bool GetCoinAddr(CWallet *wallet, CCoinAddr& addrAccount, string& strAccount)$/;"	f
GetCoinAddr	../server/wallet.cpp	/^bool GetCoinAddr(CWallet *wallet, string strAddress, CCoinAddr& addrAccount)$/;"	f
GetCoinAddrAlias	../server/wallet.cpp	/^bool GetCoinAddrAlias(CWallet *wallet, string strAlias, CCoinAddr& addrAccount)$/;"	f
GetCoinAttr	../proto/coin_proto.c	/^int GetCoinAttr(const char *name, char *attr)$/;"	f
GetCoinByHash	../server/coin.cpp	/^CIface *GetCoinByHash(uint160 hash)$/;"	f
GetCoinByIndex	../proto/coin_proto.c	/^coin_iface_t *GetCoinByIndex(int index)$/;"	f
GetCoinHash	../server/coin.cpp	/^uint160 GetCoinHash(string name)$/;"	f
GetCoinIndex	../proto/coin_proto.c	/^int GetCoinIndex(coin_iface_t *iface)$/;"	f
GetCoinbaseFlags	../server/block.cpp	/^CScript GetCoinbaseFlags(int ifaceIndex)$/;"	f
GetCoinbaseFlags	../server/color/color_block.cpp	/^CScript COLORBlock::GetCoinbaseFlags()$/;"	f	class:COLORBlock
GetCoinbaseFlags	../server/emc2/emc2_block.cpp	/^CScript EMC2Block::GetCoinbaseFlags()$/;"	f	class:EMC2Block
GetCoinbaseFlags	../server/ltc/ltc_block.cpp	/^CScript LTCBlock::GetCoinbaseFlags()$/;"	f	class:LTCBlock
GetCoinbaseFlags	../server/shc/shc_block.cpp	/^CScript SHCBlock::GetCoinbaseFlags()$/;"	f	class:SHCBlock
GetCoinbaseFlags	../server/test/test_block.cpp	/^CScript TESTBlock::GetCoinbaseFlags()$/;"	f	class:TESTBlock
GetCoinbaseFlags	../server/testnet/testnet_block.cpp	/^CScript TESTNETBlock::GetCoinbaseFlags()$/;"	f	class:TESTNETBlock
GetCoinbaseMaturity	../server/color/color_wallet.cpp	/^int COLORWallet::GetCoinbaseMaturity(uint160 hColor)$/;"	f	class:COLORWallet
GetCoinbaseMaturity	../server/emc2/emc2_wallet.cpp	/^int EMC2Wallet::GetCoinbaseMaturity(uint160 hColor)$/;"	f	class:EMC2Wallet
GetCoinbaseMaturity	../server/ltc/ltc_wallet.cpp	/^int LTCWallet::GetCoinbaseMaturity(uint160 hColor)$/;"	f	class:LTCWallet
GetCoinbaseMaturity	../server/shc/shc_wallet.cpp	/^int SHCWallet::GetCoinbaseMaturity(uint160 hColor)$/;"	f	class:SHCWallet
GetCoinbaseMaturity	../server/test/test_wallet.cpp	/^int TESTWallet::GetCoinbaseMaturity(uint160 hColor)$/;"	f	class:TESTWallet
GetCoinbaseMaturity	../server/testnet/testnet_wallet.cpp	/^int TESTNETWallet::GetCoinbaseMaturity(uint160 hColor)$/;"	f	class:TESTNETWallet
GetColor	../server/txmempool.h	/^		uint160 GetColor()$/;"	f	class:CPoolTx
GetColor	../server/wallet.h	/^			 uint160 GetColor() const$/;"	f	class:CWalletTx
GetColorBlockHeight	../server/color/color_block.cpp	/^bool GetColorBlockHeight(CBlockIndex *pindex, unsigned int& nHeight)$/;"	f
GetColorBlockHeight	../server/color/color_block.cpp	/^bool GetColorBlockHeight(const uint256& hashBlock, unsigned int& nHeight)$/;"	f
GetColorHash	../server/ext/altchain.h	/^		const uint160 GetColorHash()$/;"	f	class:CAltChain
GetColorOptScript	../server/color/color_block.cpp	/^CScript GetColorOptScript(const color_opt& opt)$/;"	f
GetColorOptValue	../server/color/color_block.cpp	/^int GetColorOptValue(color_opt& opt, int mode)$/;"	f
GetCommand	../server/protocol.cpp	/^std::string CInv::GetCommand() const$/;"	f	class:CInv
GetCommand	../server/protocol.cpp	/^std::string CMessageHeader::GetCommand() const$/;"	f	class:CMessageHeader
GetCommitBranches	../server/block.cpp	/^static bool GetCommitBranches(CBlockIndex *pbest, CBlockIndex *tip, CBlockIndex *pindexNew, vector<CBlockIndex*>& vConnect, vector<CBlockIndex*>& vDisconnect)$/;"	f	file:
GetCommitHeight	../server/ext/exec.h	/^		int64 GetCommitHeight()$/;"	f	class:CExecCall
GetCommitHeight	../server/ext/exec.h	/^		int64 GetCommitHeight()$/;"	f	class:CExecCheckpoint
GetCompact	../server/bignum.h	/^    unsigned int GetCompact() const$/;"	f	class:CBigNum
GetConfigFile	../server/util.cpp	/^boost::filesystem::path GetConfigFile()$/;"	f
GetContext	../server/block.h	/^    CContext *GetContext()$/;"	f	class:CTransaction
GetContextByHash	../server/ext/context.cpp	/^CContext *GetContextByHash(CIface *iface, uint160 hashName, CTransaction& ctx_tx)$/;"	f
GetContextByName	../server/ext/context.cpp	/^CContext *GetContextByName(CIface *iface, string strName, CTransaction& ctx_tx)$/;"	f
GetContextHash	../server/ext/context.cpp	/^uint160 GetContextHash(string strName)$/;"	f
GetContextOpFee	../server/ext/context.cpp	/^int64 GetContextOpFee(CIface *iface, int nHeight, int nSize) $/;"	f
GetContextReturnFee	../server/ext/context.cpp	/^int64 GetContextReturnFee(const CTransaction& tx) $/;"	f
GetContextTable	../server/ext/context.cpp	/^ctx_list *GetContextTable(int ifaceIndex)$/;"	f
GetCredit	../server/wallet.h	/^			 int64 GetCredit(bool fUseCache=true) const$/;"	f	class:CWalletTx
GetCredit	../server/wallet.h	/^		int64 GetCredit(const CTransaction& tx)$/;"	f	class:CWallet
GetCredit	../server/wallet.h	/^		int64 GetCredit(const CTxOut& txout)$/;"	f	class:CWallet
GetCursor	../server/txidx.h	/^    Dbc* GetCursor()$/;"	f	class:CDB
GetDIKey	../server/keystore.cpp	/^bool CBasicKeyStore::GetDIKey(const CKeyID &address, DIKey &keyOut) const$/;"	f	class:CBasicKeyStore
GetDailyTxRate	../server/rpc/rpc_command.cpp	/^unsigned int GetDailyTxRate(CIface *iface)$/;"	f
GetDataDir	../server/util.cpp	/^const boost::filesystem::path &GetDataDir(bool fNetSpecific)$/;"	f
GetDebit	../server/wallet.cpp	/^int64 CWallet::GetDebit(const CTxIn &txin)$/;"	f	class:CWallet
GetDebit	../server/wallet.h	/^			 int64 GetDebit() const$/;"	f	class:CWalletTx
GetDebit	../server/wallet.h	/^		int64 GetDebit(const CTransaction& tx)$/;"	f	class:CWallet
GetDefaultAddr	../server/account.cpp	/^CCoinAddr CAccountCache::GetDefaultAddr()$/;"	f	class:CAccountCache
GetDefaultDataDir	../server/util.cpp	/^boost::filesystem::path GetDefaultDataDir()$/;"	f
GetDepthInMainChain	../server/block.cpp	/^int CTransaction::GetDepthInMainChain(int ifaceIndex, CBlockIndex* &pindexRet) const$/;"	f	class:CTransaction
GetDepthInMainChain	../server/block.h	/^    int GetDepthInMainChain(int ifaceIndex) const { CBlockIndex *pindexRet; return GetDepthInMainChain(ifaceIndex, pindexRet); }$/;"	f	class:CTransaction
GetDepthInMainChain	../server/main.h	/^    int GetDepthInMainChain(int ifaceIndex) const {$/;"	f	class:CMerkleTx
GetDepthInMainChain	../server/wallet.cpp	/^int CMerkleTx::GetDepthInMainChain(int ifaceIndex, CBlockIndex* &pindexRet) const$/;"	f	class:CMerkleTx
GetDetach	../server/txidx.h	/^    bool GetDetach() { return fDetachDB; }$/;"	f	class:CDBEnv
GetDifficulty	../server/chain.cpp	/^double GetDifficulty(unsigned int nBits, unsigned int nVersion)$/;"	f
GetDifficulty	../server/rpc/rpc_parse.cpp	/^double GetDifficulty(int ifaceIndex, const CBlockIndex* blockindex)$/;"	f
GetECKey	../server/keystore.cpp	/^bool CBasicKeyStore::GetECKey(const CKeyID &address, ECKey &keyOut) const$/;"	f	class:CBasicKeyStore
GetError	../server/txcreator.h	/^    string GetError()$/;"	f	class:CTxCreator
GetExec	../server/block.h	/^		CExec *GetExec() const$/;"	f	class:CTransaction
GetExec	../server/ext/exec.cpp	/^bool CExecCall::GetExec(int ifaceIndex, CExec& execOut)$/;"	f	class:CExecCall
GetExecAddr	../server/wallet.cpp	/^CCoinAddr CWallet::GetExecAddr(string strAccount)$/;"	f	class:CWallet
GetExecByHash	../server/ext/exec.cpp	/^bool GetExecByHash(CIface *iface, const uint160& hExec, CExec& execOut)$/;"	f
GetExecByLabel	../server/ext/exec.cpp	/^bool GetExecByLabel(CIface *iface, string strLabel, CExec& execIn)$/;"	f
GetExecCall	../server/block.h	/^		CExecCall *GetExecCall() const$/;"	f	class:CTransaction
GetExecCallPendingTable	../server/ext/exec.cpp	/^exec_call_list *GetExecCallPendingTable(int ifaceIndex)$/;"	f
GetExecCallTable	../server/ext/exec.cpp	/^exec_call_list *GetExecCallTable(int ifaceIndex)$/;"	f
GetExecCheckpoint	../server/block.h	/^		CExecCheckpoint *GetExecCheckpoint() const$/;"	f	class:CTransaction
GetExecHash	../server/ext/exec.h	/^		const uint160 GetExecHash()$/;"	f	class:CExecCall
GetExecHash	../server/ext/exec.h	/^		const uint160 GetExecHash()$/;"	f	class:CExecCheckpoint
GetExecLabelTable	../server/ext/exec.cpp	/^exec_label_list *GetExecLabelTable(int ifaceIndex)$/;"	f
GetExecOpFee	../server/ext/exec.cpp	/^int64 GetExecOpFee(CIface *iface, int nHeight, int nSize)$/;"	f
GetExecReturnFee	../server/ext/exec.cpp	/^int64 GetExecReturnFee(const CTransaction& tx) $/;"	f
GetExecTable	../server/ext/exec.cpp	/^exec_list *GetExecTable(int ifaceIndex)$/;"	f
GetExpireTime	../server/ext/txext.h	/^    time_t GetExpireTime()$/;"	f	class:CExtCore
GetExtAddr	../server/wallet.cpp	/^CCoinAddr CWallet::GetExtAddr(string strAccount)$/;"	f	class:CWallet
GetExtNetwork	../server/netbase.cpp	/^int static GetExtNetwork(const CNetAddr *addr)$/;"	f	file:
GetExtOutput	../server/ext/txext.cpp	/^bool GetExtOutput(const CScript& script, int ext_mode, int& mode, CScript& scriptOut)$/;"	f
GetExtOutput	../server/ext/txext.cpp	/^bool GetExtOutput(const CTransaction& tx, int ext_mode, int& mode, int& nOut, CScript& scriptOut)$/;"	f
GetExtOutputMode	../server/ext/txext.cpp	/^bool GetExtOutputMode(const CTransaction& tx, int ext_mode, int& mode)$/;"	f
GetExtTxOut	../server/ext/offer.cpp	/^static bool GetExtTxOut(int ifaceIndex, CWalletTx& wtxIn, int64& retValue, string& strAccount, unsigned int& nTxOut)$/;"	f	file:
GetFee	../server/ext/certificate.h	/^    int64 GetFee()$/;"	f	class:CCert
GetFee	../server/txfeerate.cpp	/^CAmount CFeeRate::GetFee(size_t nBytes_) const$/;"	f	class:CFeeRate
GetFee	../server/txmempool.cpp	/^bool CPool::GetFee(uint256 hash, int64& nFee)$/;"	f	class:CPool
GetFee	../server/txmempool.h	/^    int64 GetFee()$/;"	f	class:CPoolTx
GetFeeEstimator	../server/txfeerate.cpp	/^CBlockPolicyEstimator *GetFeeEstimator(CIface *iface)$/;"	f
GetFeeEstimator	../server/txfeerate.cpp	/^CBlockPolicyEstimator *GetFeeEstimator(int ifaceIndex)$/;"	f
GetFeePerK	../server/txfeerate.h	/^    CAmount GetFeePerK() const { return GetFee(1000); }$/;"	f	class:CFeeRate
GetFeePriority	../server/txmempool.h	/^    double GetFeePriority()$/;"	f	class:CPoolTx
GetFeeRate	../server/color/color_wallet.cpp	/^int64 COLORWallet::GetFeeRate(uint160 hColor)$/;"	f	class:COLORWallet
GetFeeRate	../server/emc2/emc2_wallet.cpp	/^int64 EMC2Wallet::GetFeeRate(uint160 hColor)$/;"	f	class:EMC2Wallet
GetFeeRate	../server/ltc/ltc_wallet.cpp	/^int64 LTCWallet::GetFeeRate(uint160 hColor)$/;"	f	class:LTCWallet
GetFeeRate	../server/shc/shc_wallet.cpp	/^int64 SHCWallet::GetFeeRate(uint160 hColor)$/;"	f	class:SHCWallet
GetFeeRate	../server/test/test_wallet.cpp	/^int64 TESTWallet::GetFeeRate(uint160 hColor)$/;"	f	class:TESTWallet
GetFeeRate	../server/testnet/testnet_wallet.cpp	/^int64 TESTNETWallet::GetFeeRate(uint160 hColor)$/;"	f	class:TESTNETWallet
GetFilesize	../server/util.cpp	/^int GetFilesize(FILE* file)$/;"	f
GetFlagString	../server/key.h	/^		const string GetFlagString() const$/;"	f	class:CKeyMetadata
GetFlags	../server/block.h	/^		unsigned int GetFlags() const$/;"	f	class:CTransactionCore
GetFlags	../server/ext/certificate.h	/^    int GetFlags()$/;"	f	class:CCert
GetFlags	../server/net.h	/^    int GetFlags()$/;"	f	class:CBloomFilter
GetGenesisBlockHash	../server/block.cpp	/^uint256 GetGenesisBlockHash(int ifaceIndex)$/;"	f
GetGenesisBlockIndex	../server/block.cpp	/^CBlockIndex *GetGenesisBlockIndex(CIface *iface)$/;"	f
GetGroup	../server/netbase.cpp	/^std::vector<unsigned char> CNetAddr::GetGroup() const$/;"	f	class:CNetAddr
GetHash	../server/block.h	/^    uint256 GetHash() const$/;"	f	class:CBlockHeader
GetHash	../server/block.h	/^    uint256 GetHash() const$/;"	f	class:CTransaction
GetHash	../server/block.h	/^    uint256 GetHash() const$/;"	f	class:CTxOut
GetHash	../server/ext/alias.h	/^    const uint160 GetHash()$/;"	f	class:CAlias
GetHash	../server/ext/altchain.cpp	/^const uint160 CAltChain::GetHash()$/;"	f	class:CAltChain
GetHash	../server/ext/altchain.cpp	/^const uint256 CAltTx::GetHash()$/;"	f	class:CAltTx
GetHash	../server/ext/altchain.h	/^		uint256 GetHash() const$/;"	f	class:CAltBlock
GetHash	../server/ext/asset.h	/^    const uint160 GetHash()$/;"	f	class:CAsset
GetHash	../server/ext/certificate.h	/^    const uint160 GetHash()$/;"	f	class:CLicense
GetHash	../server/ext/certificate.h	/^    uint160 GetHash()$/;"	f	class:CCert
GetHash	../server/ext/certificate.h	/^    uint160 GetHash()$/;"	f	class:CIdent
GetHash	../server/ext/channel.h	/^    const uint160 GetHash()$/;"	f	class:CChannel
GetHash	../server/ext/context.h	/^    const uint160 GetHash()$/;"	f	class:CContext
GetHash	../server/ext/exec.h	/^    const uint160 GetHash()$/;"	f	class:CExec
GetHash	../server/ext/exec.h	/^    const uint160 GetHash()$/;"	f	class:CExecCall
GetHash	../server/ext/exec.h	/^    const uint160 GetHash()$/;"	f	class:CExecCheckpoint
GetHash	../server/ext/exec.h	/^    const uint160 GetHash()$/;"	f	class:CExecCore
GetHash	../server/ext/ext_param.cpp	/^const uint160 CParam::GetHash()$/;"	f	class:CParam
GetHash	../server/ext/offer.h	/^    const uint160 GetHash()$/;"	f	class:COffer
GetHash	../server/ext/txext.h	/^    const uint160 GetHash()$/;"	f	class:CSign
GetHash	../server/key.h	/^		uint256 GetHash() const {$/;"	f	class:CPubKey
GetHash	../server/matrix.h	/^    const uint160 GetHash()$/;"	f	class:CTxMatrix
GetHash	../server/netbase.cpp	/^uint64 CNetAddr::GetHash() const$/;"	f	class:CNetAddr
GetHash	../server/txmempool.h	/^    const uint256& GetHash() const$/;"	f	class:CPoolTx
GetHash	../server/util.h	/^    uint256 GetHash() {$/;"	f	class:CHashWriter
GetHeight	../server/matrix.h	/^    unsigned int GetHeight()$/;"	f	class:CTxMatrix
GetHeight	../server/txmempool.h	/^    unsigned int GetHeight()$/;"	f	class:CPoolTx
GetHex	../server/bignum.h	/^    std::string GetHex() const$/;"	f	class:CBigNum
GetHex	../server/hdkey.cpp	/^string HDPrivKey::GetHex()$/;"	f	class:HDPrivKey
GetHex	../server/uint256.h	/^    std::string GetHex() const$/;"	f	class:base_uint
GetID	../server/key.h	/^			CKeyID GetID() const {$/;"	f	class:CPubKey
GetID	../server/script.h	/^    CScriptID GetID() const$/;"	f	class:CScript
GetIdentTable	../server/ext/certificate.cpp	/^cert_list *GetIdentTable(int ifaceIndex)$/;"	f
GetIface	../server/txmempool.h	/^    CIface *GetIface()$/;"	f	class:CPool
GetIface	../server/txsignature.h	/^		CIface *GetIface()$/;"	f	class:CSignature
GetImmatureBalance	../server/wallet.cpp	/^int64 CWallet::GetImmatureBalance()$/;"	f	class:CWallet
GetIn6Addr	../server/netbase.cpp	/^bool CNetAddr::GetIn6Addr(struct in6_addr* pipv6Addr) const$/;"	f	class:CNetAddr
GetInAddr	../server/netbase.cpp	/^bool CNetAddr::GetInAddr(struct in_addr* pipv4Addr) const$/;"	f	class:CNetAddr
GetInitialBlockValue	../server/block.cpp	/^int64 GetInitialBlockValue(int nHeight, int64 nFees)$/;"	f
GetInputs	../server/txmempool.h	/^    tx_cache& GetInputs()$/;"	f	class:CPoolTx
GetIssuerHash	../server/ext/certificate.h	/^    uint160 GetIssuerHash()$/;"	f	class:CCert
GetKey	../server/keystore.cpp	/^CKey *CBasicKeyStore::GetKey(const CKeyID &address) const$/;"	f	class:CBasicKeyStore
GetKey	../server/netbase.cpp	/^std::vector<unsigned char> CService::GetKey() const$/;"	f	class:CService
GetKey	../server/shlib.h	/^    shkey_t *GetKey()$/;"	f	class:SHPeer
GetKey	../server/uint256.h	/^    shkey_t *GetKey()$/;"	f	class:uint160
GetKey	../test/testcoin_bip32.cpp	/^		K GetKey() {$/;"	f	class:CBitcoinExtKeyBase
GetKeyID	../server/coinaddr.cpp	/^bool CCoinAddr::GetKeyID(CKeyID &keyID) const$/;"	f	class:CCoinAddr
GetKeyMetadata	../server/keystore.cpp	/^CKeyMetadata *CBasicKeyStore::GetKeyMetadata(const CKeyID &address) const$/;"	f	class:CBasicKeyStore
GetKeys	../server/keystore.h	/^    void GetKeys(std::set<CKeyID> &setAddress) const$/;"	f	class:CBasicKeyStore
GetLabel	../server/ext/txext.h	/^    std::string GetLabel()$/;"	f	class:CExtCore
GetLastBlockIndexForAlgo	../server/block.cpp	/^const CBlockIndex* GetLastBlockIndexForAlgo(const CBlockIndex* pindex, int algo)$/;"	f
GetLastCheckpoint	../server/checkpoints.cpp	/^CBlockIndex* CCheckpoints::GetLastCheckpoint()$/;"	f	class:CCheckpoints
GetLegacySigOpCount	../server/main.cpp	/^CTransaction::GetLegacySigOpCount() const$/;"	f	class:CTransaction
GetLicenseTable	../server/ext/certificate.cpp	/^cert_list *GetLicenseTable(int ifaceIndex)$/;"	f
GetLocator	../server/wallet.cpp	/^CBlockLocator CWallet::GetLocator(CBlockIndex *pindex)$/;"	f	class:CWallet
GetLocatorIndex	../server/wallet.cpp	/^CBlockIndex *CWallet::GetLocatorIndex(const CBlockLocator& loc)$/;"	f	class:CWallet
GetLock	../server/sync.h	/^		boost::unique_lock<Mutex> &GetLock()$/;"	f	class:CMutexLock
GetMasterKey	../server/ext/channel.cpp	/^bool CChannelKey::GetMasterKey(CWallet *wallet, HDPrivKey& privkey)$/;"	f	class:CChannelKey
GetMasterPubKey	../server/hdkey.cpp	/^HDPubKey HDPrivKey::GetMasterPubKey() const$/;"	f	class:HDPrivKey
GetMatrix	../server/block.h	/^    CTxMatrix *GetMatrix()$/;"	f	class:CTransaction
GetMatrixOrigin	../server/matrix.cpp	/^shgeo_t *GetMatrixOrigin(CTransaction& tx)$/;"	f
GetMaxConfirms	../server/txfeerate.h	/^    unsigned int GetMaxConfirms() { return confAvg.size(); }$/;"	f	class:TxConfirmStats
GetMaxQueueMem	../server/txmempool.h	/^    size_t GetMaxQueueMem()$/;"	f	class:CPool
GetMaxSigOpCost	../server/txmempool.cpp	/^int64_t CPool::GetMaxSigOpCost()$/;"	f	class:CPool
GetMaxWeight	../server/txmempool.cpp	/^int64_t CPool::GetMaxWeight()$/;"	f	class:CPool
GetMedianTime	../server/block.h	/^    int64 GetMedianTime() const$/;"	f	class:CBlockIndex
GetMedianTimePast	../server/block.h	/^    int64 GetMedianTimePast() const$/;"	f	class:CBlockIndex
GetMergedAddr	../server/account.cpp	/^bool CAccountCache::GetMergedAddr(cbuff tag, CCoinAddr& addr)$/;"	f	class:CAccountCache
GetMergedAddr	../server/account.h	/^		bool GetMergedAddr(const char *tag, CCoinAddr& addr)$/;"	f	class:CAccountCache
GetMergedAddress	../server/wallet.cpp	/^bool CWallet::GetMergedAddress(string strAccount, const char *tag, CCoinAddr& addrRet)$/;"	f	class:CWallet
GetMergedPubKey	../server/account.cpp	/^bool CAccountCache::GetMergedPubKey(cbuff tag, CPubKey& pubkey)$/;"	f	class:CAccountCache
GetMergedPubKey	../server/account.h	/^		bool GetMergedPubKey(const char *tag, CPubKey& pubkey)$/;"	f	class:CAccountCache
GetMergedPubKey	../server/wallet.cpp	/^bool CWallet::GetMergedPubKey(string strAccount, const char *tag, CPubKey& pubkey)$/;"	f	class:CWallet
GetMethod	../server/key.h	/^		int GetMethod() const$/;"	f	class:CKey
GetMethod	../server/key.h	/^		int GetMethod() const$/;"	f	class:CPubKey
GetMethodName	../server/ext/exec.h	/^		string GetMethodName()$/;"	f	class:CExecCall
GetMinFee	../server/txfeerate.cpp	/^CFeeRate CBlockPolicyEstimator::GetMinFee(size_t sizelimit)$/;"	f	class:CBlockPolicyEstimator
GetMinFee_mode	../server/block.h	/^enum GetMinFee_mode$/;"	g
GetMode	../server/ext/ext_param.h	/^		string GetMode()$/;"	f	class:CParam
GetMode	../server/net.h	/^    int GetMode()$/;"	f	class:CBloomFilter
GetModifiedSize	../server/txmempool.h	/^    int64 GetModifiedSize()$/;"	f	class:CPoolTx
GetMsgMap	../server/netmsg.cpp	/^netmsg_map *GetMsgMap(int ifaceIndex)$/;"	f
GetName	../server/ext/context.h	/^    uint160 GetName()$/;"	f	class:CContext
GetNameProxy	../server/netbase.cpp	/^bool GetNameProxy() {$/;"	f
GetNetwork	../server/netbase.cpp	/^enum Network CNetAddr::GetNetwork() const$/;"	f	class:CNetAddr
GetNetworkHashPS	../server/rpc/rpc_parse.cpp	/^Value GetNetworkHashPS(int ifaceIndex, int lookup) $/;"	f
GetNewBucket	../server/addrman.cpp	/^int CAddrInfo::GetNewBucket(const std::vector<unsigned char> &nKey, const CNetAddr& src) const$/;"	f	class:CAddrInfo
GetNewBucket	../server/addrman.h	/^    int GetNewBucket(const std::vector<unsigned char> &nKey) const$/;"	f	class:CAddrInfo
GetNextWorkRequired	../server/color/color_block.cpp	/^unsigned int COLORBlock::GetNextWorkRequired(const CBlockIndex* pindexLast)$/;"	f	class:COLORBlock
GetNextWorkRequired	../server/emc2/emc2_block.cpp	/^unsigned int EMC2Block::GetNextWorkRequired(const CBlockIndex* pindexLast)$/;"	f	class:EMC2Block
GetNextWorkRequired	../server/ltc/ltc_block.cpp	/^unsigned int LTCBlock::GetNextWorkRequired(const CBlockIndex* pindexLast)$/;"	f	class:LTCBlock
GetNextWorkRequired	../server/shc/shc_block.cpp	/^unsigned int SHCBlock::GetNextWorkRequired(const CBlockIndex* pindexLast)$/;"	f	class:SHCBlock
GetNextWorkRequired	../server/test/test_block.cpp	/^unsigned int TESTBlock::GetNextWorkRequired(const CBlockIndex* pindexLast)$/;"	f	class:TESTBlock
GetNextWorkRequired	../server/testnet/testnet_block.cpp	/^unsigned int TESTNETBlock::GetNextWorkRequired(const CBlockIndex* pindexLast)$/;"	f	class:TESTNETBlock
GetNotaryAddr	../server/wallet.cpp	/^CCoinAddr CWallet::GetNotaryAddr(string strAccount)$/;"	f	class:CWallet
GetNotorizedBlockHash	../server/checkpoints.h	/^		const uint256 GetNotorizedBlockHash()$/;"	f	class:CCheckpoints
GetNotorizedBlockHeight	../server/checkpoints.h	/^		const unsigned int GetNotorizedBlockHeight()$/;"	f	class:CCheckpoints
GetObjectInt	../stratum/stratum_api.cpp	/^static unsigned int GetObjectInt(Object obj, string cmp_name)$/;"	f	file:
GetObjectValue	../server/ext/context.cpp	/^static string GetObjectValue(Object obj, string cmp_name)$/;"	f	file:
GetObjectValue	../server/rpc/rpccontext_proto.cpp	/^static string GetObjectValue(Object obj, string cmp_name)$/;"	f	file:
GetOffer	../server/block.h	/^    COffer *GetOffer() const$/;"	f	class:CTransaction
GetOfferOpFee	../server/ext/offer.cpp	/^int64 GetOfferOpFee(CIface *iface)$/;"	f
GetOfferPendingTable	../server/ext/offer.cpp	/^offer_list *GetOfferPendingTable(int ifaceIndex)$/;"	f
GetOfferTable	../server/ext/offer.cpp	/^offer_list *GetOfferTable(int ifaceIndex)$/;"	f
GetOp	../server/script.h	/^    bool GetOp(const_iterator& pc, opcodetype& opcodeRet) const$/;"	f	class:CScript
GetOp	../server/script.h	/^    bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const$/;"	f	class:CScript
GetOp	../server/script.h	/^    bool GetOp(iterator& pc, opcodetype& opcodeRet)$/;"	f	class:CScript
GetOp	../server/script.h	/^    bool GetOp(iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet)$/;"	f	class:CScript
GetOp2	../server/script.h	/^    bool GetOp2(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet) const$/;"	f	class:CScript
GetOpName	../server/script.cpp	/^const char* GetOpName(opcodetype opcode)$/;"	f
GetOpenChannel	../server/ext/channel.cpp	/^bool GetOpenChannel(int ifaceIndex, uint160 hChan, CTransaction& tx)$/;"	f
GetOptions	../server/leveldb.cpp	/^static leveldb::Options GetOptions(size_t nCacheSize) {$/;"	f	file:
GetOrigin	../server/ext/channel.h	/^    CChannelKey *GetOrigin()$/;"	f	class:CChannel
GetOriginAddr	../server/ext/channel.cpp	/^const CCoinAddr CChannel::GetOriginAddr(int ifaceIndex)$/;"	f	class:CChannel
GetOriginPubKey	../server/ext/channel.h	/^    cbuff GetOriginPubKey()$/;"	f	class:CChannel
GetOriginValue	../server/ext/channel.h	/^    int64 GetOriginValue()$/;"	f	class:CChannel
GetOutDestination	../server/ext/certificate.cpp	/^static bool GetOutDestination(int ifaceIndex, const CTransaction& tx, CCoinAddr addr, int& nOut)$/;"	f	file:
GetOutput	../server/txmempool.cpp	/^bool CPoolTx::GetOutput(const CTxIn& input, CTxOut& retOut)$/;"	f	class:CPoolTx
GetOutputFor	../server/main.cpp	/^bool CTransaction::GetOutputFor(const CTxIn& input, tx_cache& inputs, CTxOut& retOut)$/;"	f	class:CTransaction
GetOutputFor	../server/main.cpp	/^const CTxOut& CTransaction::GetOutputFor(const CTxIn& input, const MapPrevTx& inputs) const$/;"	f	class:CTransaction
GetOutputsForAccount	../stratum/stratum_api.cpp	/^bool GetOutputsForAccount(CWallet *wallet, string strAccount, vector<CTxDestination>& addr_list)$/;"	f
GetOutputsHash	../server/script.cpp	/^uint256 GetOutputsHash(const CTransaction& txTo) {$/;"	f
GetOutputsHash	../server/txsignature.cpp	/^static uint256 GetOutputsHash(const CTransaction& txTo) {$/;"	f	file:
GetOverflowTx	../server/txmempool.cpp	/^vector<CTransaction> CPool::GetOverflowTx()$/;"	f	class:CPool
GetOverflowTxSize	../server/txmempool.h	/^    int64 GetOverflowTxSize()$/;"	f	class:CPool
GetP2SHSigOpCount	../server/main.cpp	/^unsigned int CTransaction::GetP2SHSigOpCount(const MapPrevTx& inputs) const$/;"	f	class:CTransaction
GetParam	../server/block.h	/^		CParam *GetParam() const$/;"	f	class:CTransaction
GetParamOpFee	../server/ext/ext_param.cpp	/^int64 GetParamOpFee(CIface *iface)$/;"	f
GetParamTxConsensus	../server/ext/ext_param.cpp	/^bool GetParamTxConsensus(CIface *iface, string strName, int64_t nTime, int64_t& nValue)$/;"	f
GetParamTxDefaultValue	../server/ext/ext_param.cpp	/^int64_t GetParamTxDefaultValue(CIface *iface, string strName)$/;"	f
GetParamTxValue	../server/ext/ext_param.cpp	/^int64_t GetParamTxValue(CIface *iface, string strName)$/;"	f
GetPayAccount	../server/ext/offer.cpp	/^bool COffer::GetPayAccount(int ifaceIndex, CCoinAddr& addr, std::string& account)$/;"	f	class:COffer
GetPayAddr	../server/ext/offer.cpp	/^bool COffer::GetPayAddr(int ifaceIndex, CCoinAddr& addr)$/;"	f	class:COffer
GetPayIface	../server/ext/offer.h	/^    CIface *GetPayIface()$/;"	f	class:COffer
GetPeer	../server/ext/channel.h	/^    CChannelKey *GetPeer()$/;"	f	class:CChannel
GetPeerAddr	../server/ext/channel.cpp	/^const CCoinAddr CChannel::GetPeerAddr(int ifaceIndex)$/;"	f	class:CChannel
GetPeerPubKey	../server/ext/channel.h	/^    cbuff GetPeerPubKey()$/;"	f	class:CChannel
GetPeerValue	../server/ext/channel.h	/^    int64 GetPeerValue()$/;"	f	class:CChannel
GetPerformanceCounter	../server/util.h	/^inline int64 GetPerformanceCounter()$/;"	f
GetPidFile	../server/util.cpp	/^boost::filesystem::path GetPidFile()$/;"	f
GetPoWHash	../server/block.cpp	/^uint256 CBlockHeader::GetPoWHash() const$/;"	f	class:CBlockHeader
GetPoolTx	../server/txmempool.h	/^    CPoolTx *GetPoolTx(uint256 hash)$/;"	f	class:CPool
GetPort	../server/netbase.cpp	/^unsigned short CService::GetPort() const$/;"	f	class:CService
GetPrevHash	../server/ext/exec.h	/^		const uint160 GetPrevHash()$/;"	f	class:CExecCall
GetPrevHash	../server/ext/exec.h	/^		const uint160 GetPrevHash()$/;"	f	class:CExecCheckpoint
GetPrevoutHash	../server/script.cpp	/^uint256 GetPrevoutHash(const CTransaction& txTo) {$/;"	f
GetPrevoutHash	../server/txsignature.cpp	/^static uint256 GetPrevoutHash(const CTransaction& txTo) {$/;"	f	file:
GetPrimaryAddr	../server/account.cpp	/^bool CAccountCache::GetPrimaryAddr(int type, CTxDestination& addrRet)$/;"	f	class:CAccountCache
GetPrimaryAddr	../server/wallet.cpp	/^CCoinAddr CWallet::GetPrimaryAddr(string strAccount)$/;"	f	class:CWallet
GetPrimaryPubKey	../server/account.cpp	/^bool CAccountCache::GetPrimaryPubKey(int type, CPubKey& pubkeyRet)$/;"	f	class:CAccountCache
GetPrimaryPubKey	../server/wallet.cpp	/^CPubKey CWallet::GetPrimaryPubKey(string strAccount)$/;"	f	class:CWallet
GetPriority	../server/txcreator.cpp	/^double CTxCreator::GetPriority(int64 nBytes)$/;"	f	class:CTxCreator
GetPriority	../server/txmempool.cpp	/^double CPoolTx::GetPriority(unsigned int currentHeight) const$/;"	f	class:CPoolTx
GetPriority	../server/wallet.cpp	/^double CWallet::GetPriority(const CTransaction& tx, tx_cache& inputs)$/;"	f	class:CWallet
GetPrivKey	../server/dikey.cpp	/^CPrivKey DIKey::GetPrivKey() const$/;"	f	class:DIKey
GetPrivKey	../server/eckey.cpp	/^CPrivKey ECKey::GetPrivKey() const$/;"	f	class:ECKey
GetProxy	../server/netbase.cpp	/^bool GetProxy(enum Network net, CService &addrProxy) {$/;"	f
GetPubKey	../server/dikey.cpp	/^CPubKey DIKey::GetPubKey() const$/;"	f	class:DIKey
GetPubKey	../server/eckey.cpp	/^CPubKey ECKey::GetPubKey() const$/;"	f	class:ECKey
GetPubKey	../server/ext/channel.cpp	/^bool CChannelKey::GetPubKey(cbuff& ret_buff, int idx)$/;"	f	class:CChannelKey
GetPubKey	../server/hdkey.cpp	/^CPubKey HDPrivKey::GetPubKey() const$/;"	f	class:HDPrivKey
GetPubKey	../server/keystore.cpp	/^bool CKeyStore::GetPubKey(const CKeyID &address, CPubKey &vchPubKeyOut) const$/;"	f	class:CKeyStore
GetPubKeyMode	../server/account.cpp	/^int GetPubKeyMode(const char *tag)$/;"	f
GetPubKeyTag	../server/account.cpp	/^static const char *GetPubKeyTag(int type)$/;"	f	file:
GetPubKeyVersion	../server/coinaddr.cpp	/^int CCoinAddr::GetPubKeyVersion() const $/;"	f	class:CCoinAddr
GetRPCAlias	../server/rpc/rpc_parse.cpp	/^RPCOp *GetRPCAlias(int ifaceIndex, string name)$/;"	f
GetRPCAliasTable	../server/rpc/rpc_parse.cpp	/^rpcfn_map *GetRPCAliasTable(int ifaceIndex)$/;"	f
GetRPCArgLabel	../server/rpc/rpc_parse.cpp	/^static string GetRPCArgLabel(RPCOp *op)$/;"	f	file:
GetRPCMaxArgs	../server/rpc/rpc_parse.cpp	/^static int GetRPCMaxArgs(RPCOp *op)$/;"	f	file:
GetRPCOp	../server/rpc/rpc_parse.cpp	/^RPCOp *GetRPCOp(int ifaceIndex, string name)$/;"	f
GetRPCTable	../server/rpc/rpc_parse.cpp	/^rpcfn_map *GetRPCTable(int ifaceIndex)$/;"	f
GetRand	../server/util.cpp	/^uint64 GetRand(uint64 nMax)$/;"	f
GetRandHash	../server/util.cpp	/^uint256 GetRandHash()$/;"	f
GetRandInt	../server/util.cpp	/^int GetRandInt(int nMax)$/;"	f
GetRaw	../server/uint256.h	/^    unsigned int *GetRaw()$/;"	f	class:base_uint
GetReachabilityFrom	../server/netbase.cpp	/^int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const$/;"	f	class:CNetAddr
GetRecvAddr	../server/wallet.cpp	/^CCoinAddr CWallet::GetRecvAddr(string strAccount)$/;"	f	class:CWallet
GetRedeemScript	../server/ext/channel.cpp	/^bool CChannel::GetRedeemScript(CScript& script)$/;"	f	class:CChannel
GetRefCount	../server/net.h	/^    int GetRefCount()$/;"	f	class:CNode
GetReferenceHash	../server/matrix.h	/^    uint160 GetReferenceHash()$/;"	f	class:CTxMatrix
GetRequestCount	../server/wallet.cpp	/^int CWalletTx::GetRequestCount() const$/;"	f	class:CWalletTx
GetResultHash	../server/ext/exec.h	/^		const uint64 GetResultHash()$/;"	f	class:CExecCall
GetScript	../server/coinaddr.cpp	/^CScript CCoinAddr::GetScript()$/;"	f	class:CCoinAddr
GetScriptForDestination	../server/script.cpp	/^CScript GetScriptForDestination(const CTxDestination& dest)$/;"	f
GetScriptForWitness	../server/coinaddr.cpp	/^CScript GetScriptForWitness(const CScript& redeemscript, int nVer)$/;"	f
GetScriptID	../server/coinaddr.cpp	/^bool CCoinAddr::GetScriptID(CScriptID& scriptID) const $/;"	f	class:CCoinAddr
GetScriptVersion	../server/coinaddr.cpp	/^int CCoinAddr::GetScriptVersion() const$/;"	f	class:CCoinAddr
GetSecret	../server/base58.h	/^		CSecret GetSecret(bool &fCompressedOut)$/;"	f	class:CCoinSecret
GetSecret	../server/key.h	/^    CSecret GetSecret(bool &fCompressed) const$/;"	f	class:CKey
GetSecret	../server/keystore.h	/^    virtual bool GetSecret(const CKeyID &address, CSecret& vchSecret, bool &fCompressed) const$/;"	f	class:CKeyStore
GetSendTime	../server/ext/exec.h	/^		time_t GetSendTime()$/;"	f	class:CExecCall
GetSendTime	../server/ext/exec.h	/^		time_t GetSendTime()$/;"	f	class:CExecCheckpoint
GetSendTxObj	../stratum/stratum_api.cpp	/^Object GetSendTxObj(CWallet *wallet, CWalletTx& wtx, CScript& scriptPub, tx_cache& inputs)$/;"	f
GetSendValue	../server/ext/exec.h	/^    int64 GetSendValue()$/;"	f	class:CExecCall
GetSenderAddr	../server/ext/exec.cpp	/^CCoinAddr CExecCore::GetSenderAddr(int ifaceIndex)$/;"	f	class:CExecCore
GetSenderKey	../server/ext/exec.h	/^		CKeyID GetSenderKey()$/;"	f	class:CExecCore
GetSequenceHash	../server/script.cpp	/^uint256 GetSequenceHash(const CTransaction& txTo) {$/;"	f
GetSequenceHash	../server/txsignature.cpp	/^static uint256 GetSequenceHash(const CTransaction& txTo) {$/;"	f	file:
GetSerialNumber	../server/ext/certificate.h	/^    std::string GetSerialNumber()$/;"	f	class:CCert
GetSerializeSize	../server/bignum.h	/^    unsigned int GetSerializeSize(int nType=0, int nVersion=1\/*PROTOCOL_VERSION*\/) const$/;"	f	class:CBigNum
GetSerializeSize	../server/emc2/emc2_netmsg.cpp	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:LimitedString
GetSerializeSize	../server/ltc/ltc_netmsg.cpp	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:LimitedString
GetSerializeSize	../server/serialize.h	/^    unsigned int GetSerializeSize(const T& obj)$/;"	f	class:CAutoFile
GetSerializeSize	../server/serialize.h	/^    unsigned int GetSerializeSize(const T& obj)$/;"	f	class:CDataStream
GetSerializeSize	../server/serialize.h	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:CFlatData
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(bool a, int, int=0)                          { return sizeof(char); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(char a,           int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(const CScript& v, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(const T& a, long nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(const std::vector<T, A>& v, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(double a,         int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(float a,          int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(int64 a,          int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(signed char a,    int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(signed int a,     int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(signed long a,    int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(signed short a,   int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(uint64 a,         int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(unsigned char a,  int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(unsigned int a,   int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(unsigned long a,  int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^inline unsigned int GetSerializeSize(unsigned short a, int, int=0) { return sizeof(a); }$/;"	f
GetSerializeSize	../server/serialize.h	/^unsigned int GetSerializeSize(const boost::tuple<T0, T1, T2, T3>& item, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^unsigned int GetSerializeSize(const boost::tuple<T0, T1, T2>& item, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^unsigned int GetSerializeSize(const std::basic_string<C>& str, int, int)$/;"	f
GetSerializeSize	../server/serialize.h	/^unsigned int GetSerializeSize(const std::map<K, T, Pred, A>& m, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^unsigned int GetSerializeSize(const std::pair<K, T>& item, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/serialize.h	/^unsigned int GetSerializeSize(const std::set<K, Pred, A>& m, int nType, int nVersion)$/;"	f
GetSerializeSize	../server/shc/shc_netmsg.cpp	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:LimitedString
GetSerializeSize	../server/testnet/testnet_netmsg.cpp	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:LimitedString
GetSerializeSize	../server/uint256.h	/^    unsigned int GetSerializeSize(int nType, int nVersion) const$/;"	f	class:base_uint
GetSerializeSize_impl	../server/serialize.h	/^unsigned int GetSerializeSize_impl(const std::vector<T, A>& v, int nType, int nVersion, const boost::false_type&)$/;"	f
GetSerializeSize_impl	../server/serialize.h	/^unsigned int GetSerializeSize_impl(const std::vector<T, A>& v, int nType, int nVersion, const boost::true_type&)$/;"	f
GetSerializedSize	../server/txcreator.cpp	/^size_t CTxCreator::GetSerializedSize()$/;"	f	class:CTxCreator
GetShortID	../server/block_cmpct.cpp	/^uint64_t CBlockHeaderAndShortTxIDs::GetShortID(const uint256& txhash) const {$/;"	f	class:CBlockHeaderAndShortTxIDs
GetSigOpCost	../server/block.cpp	/^int64_t CTransaction::GetSigOpCost(MapPrevTx& mapInputs, int flags)$/;"	f	class:CTransaction
GetSigOpCost	../server/block.cpp	/^int64_t CTransaction::GetSigOpCost(tx_cache& mapInputs, int flags)$/;"	f	class:CTransaction
GetSigOpCount	../server/script.cpp	/^unsigned int CScript::GetSigOpCount(bool fAccurate) const$/;"	f	class:CScript
GetSigOpCount	../server/script.cpp	/^unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const$/;"	f	class:CScript
GetSize	../server/matrix.h	/^    unsigned int GetSize()$/;"	f	class:CTxMatrix
GetSizeOfCompactSize	../server/serialize.h	/^inline unsigned int GetSizeOfCompactSize(uint64 nSize)$/;"	f
GetSkipHeight	../server/block.cpp	/^static int GetSkipHeight(int height) $/;"	f	file:
GetSockAddr	../server/netbase.cpp	/^bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const$/;"	f	class:CService
GetSoftSigOpCost	../server/color/color_pool.cpp	/^int64_t COLOR_CTxMemPool::GetSoftSigOpCost()$/;"	f	class:COLOR_CTxMemPool
GetSoftSigOpCost	../server/emc2/emc2_pool.cpp	/^int64_t EMC2_CTxMemPool::GetSoftSigOpCost()$/;"	f	class:EMC2_CTxMemPool
GetSoftSigOpCost	../server/ltc/ltc_pool.cpp	/^int64_t LTC_CTxMemPool::GetSoftSigOpCost()$/;"	f	class:LTC_CTxMemPool
GetSoftSigOpCost	../server/shc/shc_pool.cpp	/^int64_t SHC_CTxMemPool::GetSoftSigOpCost()$/;"	f	class:SHC_CTxMemPool
GetSoftSigOpCost	../server/test/test_pool.cpp	/^int64_t TEST_CTxMemPool::GetSoftSigOpCost()$/;"	f	class:TEST_CTxMemPool
GetSoftSigOpCost	../server/testnet/testnet_pool.cpp	/^int64_t TESTNET_CTxMemPool::GetSoftSigOpCost()$/;"	f	class:TESTNET_CTxMemPool
GetSoftWeight	../server/color/color_pool.cpp	/^int64_t COLOR_CTxMemPool::GetSoftWeight()$/;"	f	class:COLOR_CTxMemPool
GetSoftWeight	../server/emc2/emc2_pool.cpp	/^int64_t EMC2_CTxMemPool::GetSoftWeight()$/;"	f	class:EMC2_CTxMemPool
GetSoftWeight	../server/ltc/ltc_pool.cpp	/^int64_t LTC_CTxMemPool::GetSoftWeight()$/;"	f	class:LTC_CTxMemPool
GetSoftWeight	../server/shc/shc_pool.cpp	/^int64_t SHC_CTxMemPool::GetSoftWeight()$/;"	f	class:SHC_CTxMemPool
GetSoftWeight	../server/test/test_pool.cpp	/^int64_t TEST_CTxMemPool::GetSoftWeight()$/;"	f	class:TEST_CTxMemPool
GetSoftWeight	../server/testnet/testnet_pool.cpp	/^int64_t TESTNET_CTxMemPool::GetSoftWeight()$/;"	f	class:TESTNET_CTxMemPool
GetSpecialFolderPath	../server/util.cpp	/^boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate)$/;"	f
GetSpentChannel	../server/ext/channel.cpp	/^bool GetSpentChannel(int ifaceIndex, const uint160& hChan, CTransaction& tx)$/;"	f
GetStack	../server/ext/exec.h	/^    cbuff GetStack()$/;"	f	class:CExec
GetStackData	../server/ext/exec.cpp	/^bool CExec::GetStackData(int ifaceIndex, shjson_t **j_p)$/;"	f	class:CExec
GetStackHeight	../server/ext/exec.cpp	/^int64 CExec::GetStackHeight(int ifaceIndex)$/;"	f	class:CExec
GetStaleTxSize	../server/txmempool.h	/^    int64 GetStaleTxSize()$/;"	f	class:CPool
GetStamp	../server/txmempool.h	/^    time_t GetStamp()$/;"	f	class:CPoolTx
GetStateFor	../server/versionbits.cpp	/^ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex *pindexPrev, CIface *params, DeploymentPos pos) const$/;"	f	class:AbstractThresholdConditionChecker
GetSupportedPow	../server/rpc/rpc_command.cpp	/^static string GetSupportedPow(CIface *iface)$/;"	f	file:
GetTime	../server/util.cpp	/^int64 GetTime()$/;"	f
GetTimeMillis	../server/util.h	/^inline int64 GetTimeMillis()$/;"	f
GetTotalAssets	../server/rpc/rpccert_proto.cpp	/^static int GetTotalAssets(int ifaceIndex)$/;"	f	file:
GetTotalBlocksEstimate	../server/checkpoints.cpp	/^int CCheckpoints::GetTotalBlocksEstimate()$/;"	f	class:CCheckpoints
GetTotalBlocksEstimate	../server/color/color_block.cpp	/^uint64_t COLORBlock::GetTotalBlocksEstimate()$/;"	f	class:COLORBlock
GetTotalBlocksEstimate	../server/emc2/emc2_block.cpp	/^uint64_t EMC2Block::GetTotalBlocksEstimate()$/;"	f	class:EMC2Block
GetTotalBlocksEstimate	../server/ltc/ltc_block.cpp	/^uint64_t LTCBlock::GetTotalBlocksEstimate()$/;"	f	class:LTCBlock
GetTotalBlocksEstimate	../server/shc/shc_block.cpp	/^uint64_t SHCBlock::GetTotalBlocksEstimate()$/;"	f	class:SHCBlock
GetTotalBlocksEstimate	../server/test/test_block.cpp	/^uint64_t TESTBlock::GetTotalBlocksEstimate()$/;"	f	class:TESTBlock
GetTotalBlocksEstimate	../server/testnet/testnet_block.cpp	/^uint64_t TESTNETBlock::GetTotalBlocksEstimate()$/;"	f	class:TESTNETBlock
GetTotalCertificates	../server/ext/certificate.cpp	/^int GetTotalCertificates(int ifaceIndex)$/;"	f
GetTransaction	../server/block.cpp	/^bool GetTransaction(CIface *iface, const uint256 &hash, CTransaction &tx, uint256 *hashBlock)$/;"	f
GetTransaction	../server/wallet.cpp	/^bool CWallet::GetTransaction(const uint256 &hashTx, CWalletTx& wtx)$/;"	f	class:CWallet
GetTransactionWeight	../server/color/color_wallet.cpp	/^unsigned int COLORWallet::GetTransactionWeight(const CTransaction& tx)$/;"	f	class:COLORWallet
GetTransactionWeight	../server/emc2/emc2_wallet.cpp	/^unsigned int EMC2Wallet::GetTransactionWeight(const CTransaction& tx)$/;"	f	class:EMC2Wallet
GetTransactionWeight	../server/ltc/ltc_wallet.cpp	/^unsigned int LTCWallet::GetTransactionWeight(const CTransaction& tx)$/;"	f	class:LTCWallet
GetTransactionWeight	../server/shc/shc_wallet.cpp	/^unsigned int SHCWallet::GetTransactionWeight(const CTransaction& tx)$/;"	f	class:SHCWallet
GetTransactionWeight	../server/test/test_wallet.cpp	/^unsigned int TESTWallet::GetTransactionWeight(const CTransaction& tx)$/;"	f	class:TESTWallet
GetTransactionWeight	../server/testnet/testnet_wallet.cpp	/^unsigned int TESTNETWallet::GetTransactionWeight(const CTransaction& tx)$/;"	f	class:TESTNETWallet
GetTriedBucket	../server/addrman.cpp	/^int CAddrInfo::GetTriedBucket(const std::vector<unsigned char> &nKey) const$/;"	f	class:CAddrInfo
GetTx	../server/block.cpp	/^const CTransaction *CBlock::GetTx(uint256 hash)$/;"	f	class:CBlock
GetTx	../server/txmempool.cpp	/^bool CPool::GetTx(uint256 hash, CTransaction& retTx, int flags)$/;"	f	class:CPool
GetTx	../server/txmempool.h	/^    CTransaction& GetTx()$/;"	f	class:CPoolTx
GetTx	../server/wallettx.cpp	/^CWalletTx& CWallet::GetTx(const uint256& hTx)$/;"	f	class:CWallet
GetTxChain	../server/ext/exec.h	/^		const vector<uint256> GetTxChain()$/;"	f	class:CExecCall
GetTxChainHash	../server/ext/exec.h	/^		const uint256 GetTxChainHash()$/;"	f	class:CExecCall
GetTxFee	../server/color/color_wallet.cpp	/^int64 COLORWallet::GetTxFee(CTransaction tx)$/;"	f	class:COLORWallet
GetTxFee	../server/emc2/emc2_wallet.cpp	/^int64 EMC2Wallet::GetTxFee(CTransaction tx)$/;"	f	class:EMC2Wallet
GetTxFee	../server/ltc/ltc_wallet.cpp	/^int64 LTCWallet::GetTxFee(CTransaction tx)$/;"	f	class:LTCWallet
GetTxFee	../server/shc/shc_wallet.cpp	/^int64 SHCWallet::GetTxFee(CTransaction tx)$/;"	f	class:SHCWallet
GetTxFee	../server/test/test_wallet.cpp	/^int64 TESTWallet::GetTxFee(CTransaction tx)$/;"	f	class:TESTWallet
GetTxFee	../server/testnet/testnet_wallet.cpp	/^int64 TESTNETWallet::GetTxFee(CTransaction tx)$/;"	f	class:TESTNETWallet
GetTxFee	../server/wallet.cpp	/^int64 GetTxFee(int ifaceIndex, CTransaction tx)$/;"	f
GetTxList	../server/txcreator.h	/^    vector<CWalletTx>& GetTxList()$/;"	f	class:CTxBatchCreator
GetTxMemPool	../server/txmempool.cpp	/^CTxMemPool *GetTxMemPool(CIface *iface)$/;"	f
GetTxOfAcceptOffer	../server/ext/offer.cpp	/^bool GetTxOfAcceptOffer(CIface *iface, const uint160& hashOffer, CTransaction& tx) $/;"	f
GetTxOfAlias	../server/ext/alias.cpp	/^bool GetTxOfAlias(CIface *iface, const std::string strTitle, CTransaction& tx) $/;"	f
GetTxOfAsset	../server/ext/asset.cpp	/^bool GetTxOfAsset(CIface *iface, const uint160& hashAsset, CTransaction& tx) $/;"	f
GetTxOfCert	../server/ext/certificate.cpp	/^bool GetTxOfCert(CIface *iface, const uint160& hash, CTransaction& tx)$/;"	f
GetTxOfChannel	../server/ext/channel.cpp	/^bool GetTxOfChannel(CIface *iface, const uint160& hashChannel, CTransaction& tx) $/;"	f
GetTxOfContext	../server/ext/context.cpp	/^bool GetTxOfContext(CIface *iface, const uint160& hashContext, CTransaction& tx) $/;"	f
GetTxOfExec	../server/ext/exec.cpp	/^bool GetTxOfExec(CIface *iface, const uint160& hashExec, CTransaction& tx) $/;"	f
GetTxOfIdent	../server/ext/certificate.cpp	/^bool GetTxOfIdent(CIface *iface, const uint160& hash, CTransaction& tx)$/;"	f
GetTxOfLicense	../server/ext/certificate.cpp	/^bool GetTxOfLicense(CIface *iface, const uint160& hash, CTransaction& tx)$/;"	f
GetTxOfOffer	../server/ext/offer.cpp	/^bool GetTxOfOffer(CIface *iface, const uint160& hashOffer, CTransaction& tx) $/;"	f
GetTxSize	../server/txmempool.h	/^    int64 GetTxSize()$/;"	f	class:CPoolTx
GetTxTime	../server/wallet.cpp	/^int64 CWalletTx::GetTxTime() const$/;"	f	class:CWalletTx
GetTxnOutputType	../server/script.cpp	/^const char* GetTxnOutputType(txnouttype t)$/;"	f
GetType	../server/ext/certificate.h	/^    unsigned int GetType()$/;"	f	class:CIdent
GetType	../server/matrix.h	/^    unsigned int GetType()$/;"	f	class:CTxMatrix
GetType	../server/serialize.h	/^    int GetType()                { return nType; }$/;"	f	class:CAutoFile
GetType	../server/serialize.h	/^    int GetType()                { return nType; }$/;"	f	class:CDataStream
GetUnconfirmedBalance	../server/wallet.cpp	/^int64 CWallet::GetUnconfirmedBalance() const$/;"	f	class:CWallet
GetValidIndexSet	../server/block.cpp	/^ValidIndexSet *GetValidIndexSet(int ifaceIndex)$/;"	f
GetValidateNotaries	../server/matrix.cpp	/^bool GetValidateNotaries(CWallet *wallet, vector<CPubKey>& kSend, uint256 hMatrixTx = 0)$/;"	f
GetValue	../server/ext/channel.h	/^    int64 GetValue()$/;"	f	class:CChannelKey
GetValue	../server/ext/ext_param.h	/^		int64_t GetValue()$/;"	f	class:CParam
GetValueIn	../server/main.cpp	/^int64 CTransaction::GetValueIn(const MapPrevTx& inputs)$/;"	f	class:CTransaction
GetValueIn	../server/main.cpp	/^int64 CTransaction::GetValueIn(tx_cache& inputs)$/;"	f	class:CTransaction
GetValueOut	../server/block.h	/^    int64 GetValueOut() const$/;"	f	class:CTransaction
GetVersion	../server/base58.h	/^		const cbuff& GetVersion() const$/;"	f	class:CBase58Data
GetVersion	../server/block.h	/^		int GetVersion() const$/;"	f	class:CTransactionCore
GetVersion	../server/ext/txext.h	/^    int GetVersion()$/;"	f	class:CExtCore
GetVersion	../server/serialize.h	/^    int GetVersion()             { return nVersion; }$/;"	f	class:CAutoFile
GetVersion	../server/serialize.h	/^    int GetVersion()             { return nVersion; }$/;"	f	class:CDataStream
GetVersionAlgo	../server/algobits.cpp	/^int GetVersionAlgo(unsigned int nVersion)$/;"	f
GetVersionBitsCache	../server/versionbits.cpp	/^VersionBitsCache *GetVersionBitsCache(CIface *iface)$/;"	f
GetVirtualTransactionSize	../server/wallet.h	/^		unsigned int GetVirtualTransactionSize(const CTransaction& tx)$/;"	f	class:CWallet
GetVirtualTransactionSize	../server/wallet.h	/^		unsigned int GetVirtualTransactionSize(int64 nWeight)$/;"	f	class:CWallet
GetWallet	../server/wallet.cpp	/^CWallet *GetWallet(CIface *iface)$/;"	f
GetWallet	../server/wallet.cpp	/^CWallet *GetWallet(int iface_idx)$/;"	f
GetWalletFile	../server/wallet.cpp	/^bool GetWalletFile(CWallet* pwallet, string &strWalletFileOut)$/;"	f
GetWalletTxChain	../blockchain/bc_block.c	/^bc_t *GetWalletTxChain(CIface *iface)$/;"	f
GetWarnings	../server/main.cpp	/^string GetWarnings(int ifaceIndex, string strFor)$/;"	f
GetWeight	../server/txmempool.h	/^    int64 GetWeight()$/;"	f	class:CPoolTx
GetWitness	../server/coinaddr.cpp	/^CTxDestination CCoinAddr::GetWitness(int output_type) const $/;"	f	class:CCoinAddr
GetWitnessCommitmentIndex	../server/block.cpp	/^int GetWitnessCommitmentIndex(const CBlock& block)$/;"	f
GetWitnessHash	../server/block.h	/^    uint256 GetWitnessHash() const$/;"	f	class:CTransaction
GetXferAccount	../server/ext/offer.cpp	/^bool COffer::GetXferAccount(int ifaceIndex, CCoinAddr& addr, std::string& account)$/;"	f	class:COffer
GetXferAddr	../server/ext/offer.cpp	/^bool COffer::GetXferAddr(int ifaceIndex, CCoinAddr& addr)$/;"	f	class:COffer
GetXferIface	../server/ext/offer.h	/^    CIface *GetXferIface()$/;"	f	class:COffer
Good	../server/addrman.h	/^    void Good(const CService &addr, int64 nTime = GetAdjustedTime())$/;"	f	class:CAddrMan
Good_	../server/addrman.cpp	/^void CAddrMan::Good_(const CService &addr, int64 nTime)$/;"	f	class:CAddrMan
H	../server/algo/sph_blake.h	/^	sph_u32 H[8];$/;"	m	struct:__anon19
H	../server/algo/sph_blake.h	/^	sph_u64 H[8];$/;"	m	struct:__anon20
H	../server/algo/sph_bmw.c	594;"	d	file:
H	../server/algo/sph_bmw.c	600;"	d	file:
H	../server/algo/sph_bmw.c	742;"	d	file:
H	../server/algo/sph_bmw.c	748;"	d	file:
H	../server/algo/sph_bmw.h	/^	sph_u32 H[16];$/;"	m	struct:__anon21
H	../server/algo/sph_bmw.h	/^	sph_u64 H[16];$/;"	m	struct:__anon22
H	../server/algo/sph_jh.h	/^	} H;$/;"	m	struct:__anon32	typeref:union:__anon32::__anon33
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey() : HDPrivKey()$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(CSecret secretIn, cbuff vchChainIn)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(ECKey seed_key)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(HDMasterPrivKey& b)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(cbuff seedIn)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^    HDMasterPrivKey(cbuff vchKeyIn, cbuff vchChainIn)$/;"	f	class:HDMasterPrivKey
HDMasterPrivKey	../server/hdkey.h	/^class HDMasterPrivKey : public HDPrivKey$/;"	c
HDPrivKey	../server/hdkey.h	/^    HDPrivKey()$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^    HDPrivKey(CSecret secret, bool fCompressed)$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^    HDPrivKey(const HDPrivKey& b)$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^    HDPrivKey(const HDPrivKey& parent, cbuff vchKeyIn, cbuff vchChainIn, int indexIn)$/;"	f	class:HDPrivKey
HDPrivKey	../server/hdkey.h	/^class HDPrivKey : public ECKey$/;"	c
HDPubKey	../server/hdkey.h	/^    HDPubKey()$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(cbuff vchPubKeyIn)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(cbuff vchPubKeyIn, cbuff vchChainIn)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(cbuff vchPubKeyIn, cbuff vchChainIn, int depthIn, int indexIn)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^    HDPubKey(const HDPubKey& b)$/;"	f	class:HDPubKey
HDPubKey	../server/hdkey.h	/^class HDPubKey : public CPubKey$/;"	c
HEADER_PREFIX	../proto/coin_proto.h	160;"	d
HELP	../server/ui_interface.h	/^        HELP                  = 0x00008000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
HMAC_SHA256Context	../server/algo/scrypt.c	/^typedef struct HMAC_SHA256Context {$/;"	s	file:
HMAC_SHA256_CTX	../server/algo/scrypt.c	/^} HMAC_SHA256_CTX;$/;"	t	typeref:struct:HMAC_SHA256Context	file:
HMAC_SHA256_Final	../server/algo/scrypt.c	/^HMAC_SHA256_Final(unsigned char digest[32], HMAC_SHA256_CTX *ctx)$/;"	f	file:
HMAC_SHA256_Init	../server/algo/scrypt.c	/^HMAC_SHA256_Init(HMAC_SHA256_CTX *ctx, const void *_K, size_t Klen)$/;"	f	file:
HMAC_SHA256_Update	../server/algo/scrypt.c	/^HMAC_SHA256_Update(HMAC_SHA256_CTX *ctx, const void *in, size_t len)$/;"	f	file:
HPixelsPerMeter	../fractal/fractal_bmp.c	/^	UINT		HPixelsPerMeter;	\/* Horizontal resolution (pixels per meter) *\/$/;"	m	struct:_BMP_Header	file:
HTTPF_DISABLE	../stratum/stratum_http.h	33;"	d
HUGE_STRING_LEN	../test/CuTest.h	62;"	d
HandleError	../server/leveldb.cpp	/^void HandleError(const leveldb::Status &status) throw(leveldb_error) {$/;"	f
HandleSIGHUP	../server/init.cpp	/^void HandleSIGHUP(int)$/;"	f
HandleSIGTERM	../server/init.cpp	/^void HandleSIGTERM(int)$/;"	f
HasAlgoConsensus	../server/chain.cpp	/^bool HasAlgoConsensus(CIface *iface, CBlockIndex *pindexLast)$/;"	f
HasArchTx	../server/wallettx.cpp	/^bool CWallet::HasArchTx(uint256 hash) const$/;"	f	class:CWallet
HasBlockHash	../server/block.cpp	/^bool HasBlockHash(CIface *iface, uint256 hash)$/;"	f
HasTx	../server/wallettx.cpp	/^bool CWallet::HasTx(const uint256 hTx) const$/;"	f	class:CWallet
HasTxCoins	../server/coin.cpp	/^bool HasTxCoins(CIface *iface, uint256 hash)$/;"	f
Hash	../server/bloom.cpp	/^inline unsigned int CBloomFilter::Hash(unsigned int nHashNum, const std::vector<unsigned char>& vDataToHash) const$/;"	f	class:CBloomFilter
Hash	../server/util.h	/^inline uint256 Hash(const T1 p1begin, const T1 p1end,$/;"	f
Hash	../server/util.h	/^inline uint256 Hash(const T1 pbegin, const T1 pend)$/;"	f
Hash	../server/util.h	/^inline uint256 Hash(uint160 hash)$/;"	f
Hash160	../server/util.h	/^inline uint160 Hash160(const std::vector<unsigned char>& vch)$/;"	f
HashList	../server/block.h	/^typedef std::vector<uint256> HashList;$/;"	t
HaveCScript	../server/keystore.cpp	/^bool CBasicKeyStore::HaveCScript(const CScriptID& hash) const$/;"	f	class:CBasicKeyStore
HaveInput	../server/txcreator.cpp	/^bool CTxCreator::HaveInput(CWalletTx *tx, unsigned int n)$/;"	f	class:CTxCreator
HaveInput	../server/txcreator.cpp	/^bool CTxCreator::HaveInput(const CPubKey& pubKey)$/;"	f	class:CTxCreator
HaveInput	../server/txcreator.cpp	/^bool CTxCreator::HaveInput(const CTxDestination& input)$/;"	f	class:CTxCreator
HaveKey	../server/keystore.h	/^    bool HaveKey(const CKeyID &address) const$/;"	f	class:CBasicKeyStore
HaveKeys	../server/script.cpp	/^unsigned int HaveKeys(const vector<valtype>& pubkeys, const CKeyStore& keystore)$/;"	f
HaveOutput	../server/txcreator.cpp	/^bool CTxCreator::HaveOutput(const CPubKey& pubKey)$/;"	f	class:CTxCreator
HaveOutput	../server/txcreator.cpp	/^bool CTxCreator::HaveOutput(const CTxDestination& input)$/;"	f	class:CTxCreator
HaveTx	../server/txmempool.h	/^    bool HaveTx(uint256 hash)$/;"	f	class:CPool
Header	../fractal/fractal_bmp.c	/^	BMP_Header	Header;$/;"	m	struct:_BMP	file:
HeaderSize	../fractal/fractal_bmp.c	/^	UINT		HeaderSize;			\/* Size of the header in bytes *\/$/;"	m	struct:_BMP_Header	file:
Height	../fractal/fractal_bmp.c	/^	UINT		Height;				\/* Bitmap's height *\/$/;"	m	struct:_BMP_Header	file:
HelpRequiringPassphrase	../server/rpc/rpc_command.cpp	/^std::string HelpRequiringPassphrase()$/;"	f
HexBits	../server/rpc/rpc_command.cpp	/^std::string HexBits(unsigned int nBits)$/;"	f
HexBits	../stratum/stratum_miner.cpp	/^static std::string HexBits(unsigned int nBits)$/;"	f	file:
HexStr	../server/util.h	/^inline std::string HexStr(const std::vector<unsigned char>& vch, bool fSpaces=false)$/;"	f
HexStr	../server/util.h	/^std::string HexStr(const T itbegin, const T itend, bool fSpaces=false)$/;"	f
I16_16	../server/algo/sph_bmw.c	104;"	d	file:
I16_17	../server/algo/sph_bmw.c	105;"	d	file:
I16_18	../server/algo/sph_bmw.c	106;"	d	file:
I16_19	../server/algo/sph_bmw.c	107;"	d	file:
I16_20	../server/algo/sph_bmw.c	108;"	d	file:
I16_21	../server/algo/sph_bmw.c	109;"	d	file:
I16_22	../server/algo/sph_bmw.c	110;"	d	file:
I16_23	../server/algo/sph_bmw.c	111;"	d	file:
I16_24	../server/algo/sph_bmw.c	112;"	d	file:
I16_25	../server/algo/sph_bmw.c	113;"	d	file:
I16_26	../server/algo/sph_bmw.c	114;"	d	file:
I16_27	../server/algo/sph_bmw.c	115;"	d	file:
I16_28	../server/algo/sph_bmw.c	116;"	d	file:
I16_29	../server/algo/sph_bmw.c	117;"	d	file:
I16_30	../server/algo/sph_bmw.c	118;"	d	file:
I16_31	../server/algo/sph_bmw.c	119;"	d	file:
ICON_ASTERISK	../server/ui_interface.h	/^        ICON_ASTERISK         = ICON_INFORMATION,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_ERROR	../server/ui_interface.h	/^        ICON_ERROR            = ICON_HAND,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_EXCLAMATION	../server/ui_interface.h	/^        ICON_EXCLAMATION      = 0x00000100,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_HAND	../server/ui_interface.h	/^        ICON_HAND             = 0x00000200,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_INFORMATION	../server/ui_interface.h	/^        ICON_INFORMATION      = 0x00000800,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_MASK	../server/ui_interface.h	/^        ICON_MASK             = (0x00000100|0x00000200|0x00000400|0x00000800),$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_QUESTION	../server/ui_interface.h	/^        ICON_QUESTION         = 0x00000400,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_STOP	../server/ui_interface.h	/^        ICON_STOP             = ICON_HAND,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ICON_WARNING	../server/ui_interface.h	/^        ICON_WARNING          = ICON_EXCLAMATION,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
IF	../server/algo/sph_simd.c	458;"	d	file:
IMPLEMENT_RANDOMIZE_STACK	../server/util.h	334;"	d
IMPLEMENT_SERIALIZE	../server/serialize.h	62;"	d
INCR_COUNTER	../server/algo/sph_echo.c	637;"	d	file:
INF_FEERATE	../server/txfeerate.h	240;"	d
INF_PRIORITY	../server/txfeerate.h	243;"	d
INIT_SECP256K1	../server/eckey.cpp	/^void INIT_SECP256K1(void)$/;"	f
INIT_UNET_PEER_SCAN_SIZE	../unet/unet_peerdb.c	29;"	d	file:
INNER	../server/algo/sph_simd.c	373;"	d	file:
INPUT_BLOCK	../server/algo/sph_cubehash.c	256;"	d	file:
INPUT_BLOCK_BIG	../server/algo/sph_echo.c	368;"	d	file:
INPUT_BLOCK_BIG	../server/algo/sph_echo.c	95;"	d	file:
INPUT_BLOCK_SMALL	../server/algo/sph_echo.c	353;"	d	file:
INPUT_BLOCK_SMALL	../server/algo/sph_echo.c	84;"	d	file:
INPUT_BUF	../server/algo/sph_keccak.c	183;"	d	file:
INPUT_BUF	../server/algo/sph_keccak.c	329;"	d	file:
INPUT_BUF	../server/algo/sph_keccak.c	523;"	d	file:
INPUT_BUF	../server/algo/sph_keccak.c	733;"	d	file:
INPUT_BUF1	../server/algo/sph_jh.c	296;"	d	file:
INPUT_BUF1	../server/algo/sph_jh.c	622;"	d	file:
INPUT_BUF104	../server/algo/sph_keccak.c	192;"	d	file:
INPUT_BUF104	../server/algo/sph_keccak.c	301;"	d	file:
INPUT_BUF104	../server/algo/sph_keccak.c	537;"	d	file:
INPUT_BUF104	../server/algo/sph_keccak.c	705;"	d	file:
INPUT_BUF136	../server/algo/sph_keccak.c	191;"	d	file:
INPUT_BUF136	../server/algo/sph_keccak.c	281;"	d	file:
INPUT_BUF136	../server/algo/sph_keccak.c	536;"	d	file:
INPUT_BUF136	../server/algo/sph_keccak.c	685;"	d	file:
INPUT_BUF144	../server/algo/sph_keccak.c	190;"	d	file:
INPUT_BUF144	../server/algo/sph_keccak.c	260;"	d	file:
INPUT_BUF144	../server/algo/sph_keccak.c	535;"	d	file:
INPUT_BUF144	../server/algo/sph_keccak.c	664;"	d	file:
INPUT_BUF2	../server/algo/sph_jh.c	314;"	d	file:
INPUT_BUF2	../server/algo/sph_jh.c	656;"	d	file:
INPUT_BUF72	../server/algo/sph_keccak.c	193;"	d	file:
INPUT_BUF72	../server/algo/sph_keccak.c	317;"	d	file:
INPUT_BUF72	../server/algo/sph_keccak.c	538;"	d	file:
INPUT_BUF72	../server/algo/sph_keccak.c	721;"	d	file:
INTERLEAVE	../server/algo/sph_keccak.c	427;"	d	file:
INTERLEAVE	../server/algo/sph_keccak.c	461;"	d	file:
INVALID_SOCKET	../server/compat.h	37;"	d
IOTA	../server/algo/sph_keccak.c	1137;"	d	file:
IS_ACCOUNT	../server/account.cpp	59;"	d	file:
IV224	../server/algo/sph_blake.c	/^static const sph_u32 IV224[8] = {$/;"	v	file:
IV224	../server/algo/sph_bmw.c	/^static const sph_u32 IV224[] = {$/;"	v	file:
IV224	../server/algo/sph_cubehash.c	/^static const sph_u32 IV224[] = {$/;"	v	file:
IV224	../server/algo/sph_jh.c	/^static const sph_u32 IV224[] = {$/;"	v	file:
IV224	../server/algo/sph_jh.c	/^static const sph_u64 IV224[] = {$/;"	v	file:
IV224	../server/algo/sph_shavite.c	/^static const sph_u32 IV224[] = {$/;"	v	file:
IV224	../server/algo/sph_simd.c	/^static const u32 IV224[] = {$/;"	v	file:
IV224	../server/algo/sph_skein.c	/^static const sph_u64 IV224[] = {$/;"	v	file:
IV256	../server/algo/sph_blake.c	/^static const sph_u32 IV256[8] = {$/;"	v	file:
IV256	../server/algo/sph_bmw.c	/^static const sph_u32 IV256[] = {$/;"	v	file:
IV256	../server/algo/sph_cubehash.c	/^static const sph_u32 IV256[] = {$/;"	v	file:
IV256	../server/algo/sph_jh.c	/^static const sph_u32 IV256[] = {$/;"	v	file:
IV256	../server/algo/sph_jh.c	/^static const sph_u64 IV256[] = {$/;"	v	file:
IV256	../server/algo/sph_shavite.c	/^static const sph_u32 IV256[] = {$/;"	v	file:
IV256	../server/algo/sph_simd.c	/^static const u32 IV256[] = {$/;"	v	file:
IV256	../server/algo/sph_skein.c	/^static const sph_u64 IV256[] = {$/;"	v	file:
IV384	../server/algo/sph_blake.c	/^static const sph_u64 IV384[8] = {$/;"	v	file:
IV384	../server/algo/sph_bmw.c	/^static const sph_u64 IV384[] = {$/;"	v	file:
IV384	../server/algo/sph_cubehash.c	/^static const sph_u32 IV384[] = {$/;"	v	file:
IV384	../server/algo/sph_jh.c	/^static const sph_u32 IV384[] = {$/;"	v	file:
IV384	../server/algo/sph_jh.c	/^static const sph_u64 IV384[] = {$/;"	v	file:
IV384	../server/algo/sph_shavite.c	/^static const sph_u32 IV384[] = {$/;"	v	file:
IV384	../server/algo/sph_simd.c	/^static const u32 IV384[] = {$/;"	v	file:
IV384	../server/algo/sph_skein.c	/^static const sph_u64 IV384[] = {$/;"	v	file:
IV512	../server/algo/sph_blake.c	/^static const sph_u64 IV512[8] = {$/;"	v	file:
IV512	../server/algo/sph_bmw.c	/^static const sph_u64 IV512[] = {$/;"	v	file:
IV512	../server/algo/sph_cubehash.c	/^static const sph_u32 IV512[] = {$/;"	v	file:
IV512	../server/algo/sph_jh.c	/^static const sph_u32 IV512[] = {$/;"	v	file:
IV512	../server/algo/sph_jh.c	/^static const sph_u64 IV512[] = {$/;"	v	file:
IV512	../server/algo/sph_shavite.c	/^static const sph_u32 IV512[] = {$/;"	v	file:
IV512	../server/algo/sph_simd.c	/^static const u32 IV512[] = {$/;"	v	file:
IV512	../server/algo/sph_skein.c	/^static const sph_u64 IV512[] = {$/;"	v	file:
ImageDataSize	../fractal/fractal_bmp.c	/^	UINT		ImageDataSize;		\/* Size of uncompressed image's data *\/$/;"	m	struct:_BMP_Header	file:
IndexOfAssetOutput	../server/ext/asset.cpp	/^static int IndexOfAssetOutput(const CTransaction& tx)$/;"	f	file:
IndexOfExecOutput	../server/ext/exec.cpp	/^static int IndexOfExecOutput(const CTransaction& tx)$/;"	f	file:
IndexOfExtOutput	../server/wallet.cpp	/^int IndexOfExtOutput(const CTransaction& tx)$/;"	f
Init	../server/addrman.h	/^    void Init()$/;"	f	class:CAddrInfo
Init	../server/block.cpp	/^void CTransaction::Init(const CTransaction& tx)$/;"	f	class:CTransaction
Init	../server/ext/alias.h	/^    void Init(const CAlias& alias)$/;"	f	class:CAlias
Init	../server/ext/altchain.h	/^    void Init(const CAltChain& altchain)$/;"	f	class:CAltChain
Init	../server/ext/asset.h	/^    void Init(const CAsset& assetIn)$/;"	f	class:CAsset
Init	../server/ext/certificate.h	/^    void Init(const CCert& b)$/;"	f	class:CCert
Init	../server/ext/certificate.h	/^    void Init(const CIdent& b)$/;"	f	class:CIdent
Init	../server/ext/certificate.h	/^    void Init(const CLicense& b)$/;"	f	class:CLicense
Init	../server/ext/channel.h	/^    void Init(const CChannel& channelIn)$/;"	f	class:CChannel
Init	../server/ext/channel.h	/^    void Init(const CChannelKey& b)$/;"	f	class:CChannelKey
Init	../server/ext/context.h	/^    void Init(const CContext& ctxIn)$/;"	f	class:CContext
Init	../server/ext/exec.h	/^    void Init(const CExec& execIn)$/;"	f	class:CExec
Init	../server/ext/exec.h	/^    void Init(const CExecCall& execIn)$/;"	f	class:CExecCall
Init	../server/ext/exec.h	/^    void Init(const CExecCheckpoint& execIn)$/;"	f	class:CExecCheckpoint
Init	../server/ext/exec.h	/^    void Init(const CExecCore& execIn)$/;"	f	class:CExecCore
Init	../server/ext/ext_param.h	/^    void Init(const CParam& param)$/;"	f	class:CParam
Init	../server/ext/offer.h	/^    void Init(const COffer& b)$/;"	f	class:COffer
Init	../server/ext/txext.h	/^    void Init(const CExtCore& b)$/;"	f	class:CExtCore
Init	../server/ext/txext.h	/^    void Init(const CSign& b)$/;"	f	class:CSign
Init	../server/hdkey.h	/^    void Init(const HDMasterPrivKey& b)$/;"	f	class:HDMasterPrivKey
Init	../server/hdkey.h	/^    void Init(const HDPrivKey& b)$/;"	f	class:HDPrivKey
Init	../server/hdkey.h	/^    void Init(const HDPubKey& b)$/;"	f	class:HDPubKey
Init	../server/key.h	/^		void Init(const CKey& b)$/;"	f	class:CKey
Init	../server/key.h	/^		void Init(const CKeyMetadata& b)$/;"	f	class:CKeyMetadata
Init	../server/main.h	/^    void Init()$/;"	f	class:CMerkleTx
Init	../server/matrix.h	/^    void Init(const CTxMatrix& b)$/;"	f	class:CTxMatrix
Init	../server/netbase.cpp	/^void CNetAddr::Init()$/;"	f	class:CNetAddr
Init	../server/netbase.cpp	/^void CService::Init()$/;"	f	class:CService
Init	../server/protocol.h	/^		void Init()$/;"	f	class:CAddress
Init	../server/serialize.h	/^    void Init(int nTypeIn, int nVersionIn)$/;"	f	class:CDataStream
Init	../server/txcreator.h	/^    void Init(CWallet *wallet)$/;"	f	class:CTxCreator
Init	../server/txmempool.h	/^    void Init(const CPoolTx& b)$/;"	f	class:CPoolTx
Init	../server/txmempool.h	/^    void Init(const CTransaction& txIn)$/;"	f	class:CPoolTx
Init	../server/util.h	/^    void Init() {$/;"	f	class:CHashWriter
Init	../server/wallet.h	/^		void Init(CWallet *pwalletIn)$/;"	f	class:CWalletTx
Init	../server/wallet.h	/^		void Init(const CAccount& b)$/;"	f	class:CAccount
InitCells	../server/matrix.h	/^    void InitCells(const CTxMatrix& b)$/;"	f	class:CTxMatrix
InitChainExport	../server/chain.cpp	/^int InitChainExport(int ifaceIndex, const char *path, int min, int max)$/;"	f
InitChainImport	../server/chain.cpp	/^int InitChainImport(int ifaceIndex, const char *path, int offset)$/;"	f
InitCoinHash	../server/coin.cpp	/^static void InitCoinHash()$/;"	f	file:
InitData	../server/block_cmpct.cpp	/^ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn) {$/;"	f	class:PartiallyDownloadedBlock
InitError	../server/init.cpp	/^bool static InitError(const std::string &str)$/;"	f	file:
InitServiceBlockEvent	../server/chain.cpp	/^int InitServiceBlockEvent(int ifaceIndex, uint64_t nHeight)$/;"	f
InitServiceMinerEvent	../server/chain.cpp	/^int InitServiceMinerEvent(int ifaceIndex, uint64_t nIncr)$/;"	f
InitServiceValidateEvent	../server/chain.cpp	/^void InitServiceValidateEvent(CWallet *wallet, uint64_t nHeight)$/;"	f
InitServiceWalletEvent	../server/chain.cpp	/^void InitServiceWalletEvent(CWallet *wallet, uint64_t nHeight)$/;"	f
InitTxChain	../server/ext/exec.cpp	/^void CExecCall::InitTxChain()$/;"	f	class:CExecCall
InitWarning	../server/init.cpp	/^bool static InitWarning(const std::string &str)$/;"	f	file:
Initialize	../server/algo/sha512.cpp	/^void inline Initialize(uint64_t* s)$/;"	f	namespace:__anon18::sha512
Initialize	../server/txfeerate.cpp	/^void TxConfirmStats::Initialize(std::vector<double>& defaultBuckets, unsigned int maxConfirms, double _decay, std::string _dataTypeString)$/;"	f	class:TxConfirmStats
InsertBlockIndex	../server/color/color_txidx.cpp	/^CBlockIndex static * InsertBlockIndex(uint256 hash)$/;"	f	file:
InsertBlockIndex	../server/emc2/emc2_txidx.cpp	/^CBlockIndex static * InsertBlockIndex(uint256 hash)$/;"	f	file:
InsertBlockIndex	../server/ltc/ltc_txidx.cpp	/^CBlockIndex static * InsertBlockIndex(uint256 hash)$/;"	f	file:
InsertBlockIndex	../server/shc/shc_txidx.cpp	/^CBlockIndex static * InsertBlockIndex(uint256 hash)$/;"	f	file:
InsertBlockIndex	../server/testnet/testnet_txidx.cpp	/^CBlockIndex static * InsertBlockIndex(uint256 hash)$/;"	f	file:
InsertBlockIndex	../server/txidx.cpp	/^CBlockIndex *InsertBlockIndex(blkidx_t *blockIndex, uint256 hash)$/;"	f
InsertCertTable	../server/ext/certificate.cpp	/^bool InsertCertTable(CIface *iface, CTransaction& tx, unsigned int nHeight, bool fUpdate)$/;"	f
InsertExecCallPendingTable	../server/ext/exec.cpp	/^bool InsertExecCallPendingTable(CIface *iface, const uint160& hExec, const CTransaction& tx)$/;"	f
InsertExecCallTable	../server/ext/exec.cpp	/^bool InsertExecCallTable(CIface *iface, const uint160& hExec, const CTransaction& tx)$/;"	f
InsertExecTable	../server/ext/exec.cpp	/^bool InsertExecTable(CIface *iface, const CTransaction& tx)$/;"	f
InsertIdentTable	../server/ext/certificate.cpp	/^bool InsertIdentTable(CIface *iface, CTransaction& tx)$/;"	f
InsertOfferTable	../server/ext/offer.cpp	/^bool InsertOfferTable(int ifaceIndex, uint256 hTx, uint160 hOffer)$/;"	f
InsertPendingTable	../server/ext/offer.cpp	/^bool InsertPendingTable(int ifaceIndex, uint256 hTx, uint160 hAccept)$/;"	f
InsertValidateNotary	../server/matrix.cpp	/^void InsertValidateNotary(CWallet *wallet, const CTransaction& tx)$/;"	f
IntToByteVector	../server/bolo/bolo_validation03.cpp	/^cbuff IntToByteVector(int val)$/;"	f
InterpretNegativeSetting	../server/util.cpp	/^static void InterpretNegativeSetting(string name, map<string, string>& mapSettingsRet)$/;"	f	file:
InvalidChainFound	../server/color/color_block.cpp	/^void COLORBlock::InvalidChainFound(CBlockIndex* pindexNew)$/;"	f	class:COLORBlock
InvalidChainFound	../server/emc2/emc2_block.cpp	/^void EMC2Block::InvalidChainFound(CBlockIndex* pindexNew)$/;"	f	class:EMC2Block
InvalidChainFound	../server/ltc/ltc_block.cpp	/^void LTCBlock::InvalidChainFound(CBlockIndex* pindexNew)$/;"	f	class:LTCBlock
InvalidChainFound	../server/shc/shc_block.cpp	/^void SHCBlock::InvalidChainFound(CBlockIndex* pindexNew)$/;"	f	class:SHCBlock
InvalidChainFound	../server/test/test_block.cpp	/^void TESTBlock::InvalidChainFound(CBlockIndex* pindexNew)$/;"	f	class:TESTBlock
InvalidChainFound	../server/testnet/testnet_block.cpp	/^void TESTNETBlock::InvalidChainFound(CBlockIndex* pindexNew)$/;"	f	class:TESTNETBlock
Invalidate	../server/key.h	/^		void Invalidate()$/;"	f	class:CPubKey
Inventory	../server/emc2/emc2_netmsg.cpp	/^void static Inventory(const uint256& hash)$/;"	f	file:
Inventory	../server/ltc/ltc_netmsg.cpp	/^void static Inventory(const uint256& hash)$/;"	f	file:
Inventory	../server/shc/shc_netmsg.cpp	/^void static Inventory(const uint256& hash)$/;"	f	file:
Inventory	../server/testnet/testnet_netmsg.cpp	/^void static Inventory(const uint256& hash)$/;"	f	file:
Inventory	../server/wallet.h	/^		void Inventory(const uint256 &hash)$/;"	f	class:CWallet
InvertLowestOne	../server/block.cpp	/^int static inline InvertLowestOne(int n) { return n & (n - 1); }$/;"	f	file:
IsAccountValid	../server/wallet.cpp	/^bool IsAccountValid(CIface *iface, std::string strAccount)$/;"	f
IsAddrUsed	../server/account.cpp	/^bool CAccountCache::IsAddrUsed(const CCoinAddr& addr)$/;"	f	class:CAccountCache
IsAddrUsed	../server/account.cpp	/^bool CAccountCache::IsAddrUsed(const CPubKey& vchPubKey)$/;"	f	class:CAccountCache
IsAlgoBitsMask	../server/algobits.cpp	/^bool IsAlgoBitsMask(unsigned int nVersion)$/;"	f
IsAlgoSupported	../server/color/color_wallet.cpp	/^bool COLORWallet::IsAlgoSupported(int alg, CBlockIndex *pindexPrev, uint160 hColor)$/;"	f	class:COLORWallet
IsAlgoSupported	../server/emc2/emc2_wallet.cpp	/^bool EMC2Wallet::IsAlgoSupported(int alg, CBlockIndex *pindexPrev, uint160 hColor)$/;"	f	class:EMC2Wallet
IsAlgoSupported	../server/ltc/ltc_wallet.cpp	/^bool LTCWallet::IsAlgoSupported(int alg, CBlockIndex *pindexPrev, uint160 hColor)$/;"	f	class:LTCWallet
IsAlgoSupported	../server/shc/shc_wallet.cpp	/^bool SHCWallet::IsAlgoSupported(int alg, CBlockIndex *pindexPrev, uint160 hColor)$/;"	f	class:SHCWallet
IsAlgoSupported	../server/test/test_wallet.cpp	/^bool TESTWallet::IsAlgoSupported(int alg, CBlockIndex *pindexPrev, uint160 hColor)$/;"	f	class:TESTWallet
IsAlgoSupported	../server/testnet/testnet_wallet.cpp	/^bool TESTNETWallet::IsAlgoSupported(int alg, CBlockIndex *pindexPrev, uint160 hColor)$/;"	f	class:TESTNETWallet
IsAliasOp	../server/ext/alias.cpp	/^bool IsAliasOp(int op) {$/;"	f
IsAliasTx	../server/ext/alias.cpp	/^bool IsAliasTx(const CTransaction& tx)$/;"	f
IsAltChainOp	../server/ext/altchain.cpp	/^bool IsAltChainOp(int op) {$/;"	f
IsAltChainTx	../server/ext/altchain.cpp	/^bool IsAltChainTx(const CTransaction& tx)$/;"	f
IsAssetTx	../server/ext/asset.cpp	/^bool IsAssetTx(const CTransaction& tx)$/;"	f
IsBestChain	../server/color/color_block.cpp	/^bool COLORBlock::IsBestChain()$/;"	f	class:COLORBlock
IsBestChain	../server/emc2/emc2_block.cpp	/^bool EMC2Block::IsBestChain()$/;"	f	class:EMC2Block
IsBestChain	../server/ltc/ltc_block.cpp	/^bool LTCBlock::IsBestChain()$/;"	f	class:LTCBlock
IsBestChain	../server/shc/shc_block.cpp	/^bool SHCBlock::IsBestChain()$/;"	f	class:SHCBlock
IsBestChain	../server/test/test_block.cpp	/^bool TESTBlock::IsBestChain()$/;"	f	class:TESTBlock
IsBestChain	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::IsBestChain()$/;"	f	class:TESTNETBlock
IsCertAccount	../server/ext/certificate.cpp	/^bool IsCertAccount(CIface *iface, CTransaction& tx, string strAccount)$/;"	f
IsCertOp	../server/ext/certificate.cpp	/^bool IsCertOp(int op) {$/;"	f
IsCertTx	../server/ext/certificate.cpp	/^bool IsCertTx(const CTransaction& tx)$/;"	f
IsChainFile	../server/color/color_txidx.h	/^static bool IsChainFile(std::string strFile)$/;"	f
IsChainFile	../server/emc2/emc2_txidx.h	/^static bool IsChainFile(std::string strFile)$/;"	f
IsChainFile	../server/ltc/ltc_txidx.h	/^static bool IsChainFile(std::string strFile)$/;"	f
IsChainFile	../server/shc/shc_txidx.h	/^static bool IsChainFile(std::string strFile)$/;"	f
IsChainFile	../server/test/test_txidx.h	/^static bool IsChainFile(std::string strFile)$/;"	f
IsChange	../server/wallet.cpp	/^bool CWallet::IsChange(const CTxOut& txout) const$/;"	f	class:CWallet
IsChannelOp	../server/ext/channel.cpp	/^bool IsChannelOp(int op) {$/;"	f
IsChannelTx	../server/ext/channel.cpp	/^bool IsChannelTx(const CTransaction& tx)$/;"	f
IsCoinBase	../server/block.h	/^    bool IsCoinBase() const$/;"	f	class:CTransaction
IsCoinBase	../server/ext/altchain.cpp	/^bool CAltTx::IsCoinBase() const$/;"	f	class:CAltTx
IsCompressed	../server/key.h	/^		bool IsCompressed() const$/;"	f	class:CPubKey
IsCompressed	../server/key.h	/^    bool IsCompressed() const$/;"	f	class:CKey
IsConfirmed	../server/wallet.cpp	/^bool CWalletTx::IsConfirmed() const$/;"	f	class:CWalletTx
IsContextName	../server/ext/context.cpp	/^bool IsContextName(CIface *iface, string strName)$/;"	f
IsContextOp	../server/ext/context.cpp	/^bool IsContextOp(int op) {$/;"	f
IsContextTx	../server/ext/context.cpp	/^bool IsContextTx(const CTransaction& tx)$/;"	f
IsDependent	../server/txmempool.cpp	/^bool CPoolTx::IsDependent(const CPoolTx& ptx) const$/;"	f	class:CPoolTx
IsDilithium	../server/key.h	/^		bool IsDilithium() const$/;"	f	class:CKey
IsDilithium	../server/key.h	/^		bool IsDilithium() const$/;"	f	class:CPubKey
IsEmpty	../server/block.h	/^    bool IsEmpty() const { return vtxinwit.empty(); }$/;"	f	class:CTxWitness
IsExecCallHash	../server/ext/exec.cpp	/^bool IsExecCallHash(CIface *iface, const uint160& hExec, const uint160& hCall)$/;"	f
IsExecOp	../server/ext/exec.cpp	/^bool IsExecOp(int op) {$/;"	f
IsExecPending	../server/ext/exec.cpp	/^bool IsExecPending(CIface *iface, const uint160& hExec)$/;"	f
IsExecTx	../server/ext/exec.cpp	/^bool IsExecTx(const CTransaction& tx, int& mode) \/* int& nOut *\/$/;"	f
IsExpired	../server/ext/txext.h	/^    bool IsExpired()$/;"	f	class:CExtCore
IsExpired	../server/ext/txext.h	/^    bool IsExpired(int64_t nTime)$/;"	f	class:CExtCore
IsExpired	../server/txmempool.h	/^    bool IsExpired(time_t span)$/;"	f	class:CPoolTx
IsFinal	../server/block.cpp	/^bool CTransaction::IsFinal(int ifaceIndex, int nBlockHeight, int64 nBlockTime) const$/;"	f	class:CTransaction
IsFinal	../server/block.h	/^    bool IsFinal() const$/;"	f	class:CTxIn
IsFlag	../server/txmempool.h	/^    bool IsFlag(int flag)$/;"	f	class:CPoolTx
IsFreeRelay	../server/color/color_pool.cpp	/^int64 COLOR_CTxMemPool::IsFreeRelay(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:COLOR_CTxMemPool
IsFreeRelay	../server/emc2/emc2_pool.cpp	/^int64 EMC2_CTxMemPool::IsFreeRelay(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:EMC2_CTxMemPool
IsFreeRelay	../server/ltc/ltc_pool.cpp	/^int64 LTC_CTxMemPool::IsFreeRelay(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:LTC_CTxMemPool
IsFreeRelay	../server/shc/shc_pool.cpp	/^int64 SHC_CTxMemPool::IsFreeRelay(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:SHC_CTxMemPool
IsFreeRelay	../server/test/test_pool.cpp	/^int64 TEST_CTxMemPool::IsFreeRelay(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:TEST_CTxMemPool
IsFreeRelay	../server/testnet/testnet_pool.cpp	/^int64 TESTNET_CTxMemPool::IsFreeRelay(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:TESTNET_CTxMemPool
IsFromMe	../server/wallet.h	/^			 bool IsFromMe() const$/;"	f	class:CWalletTx
IsFromMe	../server/wallet.h	/^		bool IsFromMe(const CTransaction& tx)$/;"	f	class:CWallet
IsHex	../server/util.cpp	/^bool IsHex(const string& str)$/;"	f
IsI2P	../server/netbase.cpp	/^bool CNetAddr::IsI2P() const$/;"	f	class:CNetAddr
IsIPv4	../server/netbase.cpp	/^bool CNetAddr::IsIPv4() const$/;"	f	class:CNetAddr
IsIPv6	../server/netbase.cpp	/^bool CNetAddr::IsIPv6() const$/;"	f	class:CNetAddr
IsIdentTx	../server/ext/certificate.cpp	/^bool IsIdentTx(const CTransaction& tx)$/;"	f
IsInMainChain	../server/block.cpp	/^bool CBlockIndex::IsInMainChain(int ifaceIndex) const$/;"	f	class:CBlockIndex
IsInMainChain	../server/main.h	/^    bool IsInMainChain(int ifaceIndex) const { return GetDepthInMainChain(ifaceIndex) > 0; }$/;"	f	class:CMerkleTx
IsInMemoryPool	../server/block.cpp	/^bool CTransaction::IsInMemoryPool(int ifaceIndex)$/;"	f	class:CTransaction
IsInitialBlockDownload	../server/block.cpp	/^bool IsInitialBlockDownload(int ifaceIndex)$/;"	f
IsInputTx	../server/txmempool.cpp	/^bool CPool::IsInputTx(const uint256 hash, int nOut)$/;"	f	class:CPool
IsInvalidTx	../server/txmempool.h	/^    bool IsInvalidTx(const uint256 hash) const$/;"	f	class:CPool
IsKnownType	../server/protocol.cpp	/^bool CInv::IsKnownType() const$/;"	f	class:CInv
IsLicenseTx	../server/ext/certificate.cpp	/^bool IsLicenseTx(const CTransaction& tx)$/;"	f
IsLocal	../server/netbase.cpp	/^bool CNetAddr::IsLocal() const$/;"	f	class:CNetAddr
IsLocal	../server/txmempool.h	/^    bool IsLocal()$/;"	f	class:CPoolTx
IsLocalAlias	../server/ext/alias.cpp	/^bool IsLocalAlias(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalAlias	../server/ext/alias.cpp	/^bool IsLocalAlias(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalAltChain	../server/ext/altchain.cpp	/^bool IsLocalAltChain(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalAltChain	../server/ext/altchain.cpp	/^bool IsLocalAltChain(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalAsset	../server/ext/asset.cpp	/^bool IsLocalAsset(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalAsset	../server/ext/asset.cpp	/^bool IsLocalAsset(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalCert	../server/ext/certificate.cpp	/^bool IsLocalCert(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalCert	../server/ext/certificate.cpp	/^bool IsLocalCert(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalChannel	../server/ext/channel.cpp	/^bool IsLocalChannel(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalChannel	../server/ext/channel.cpp	/^bool IsLocalChannel(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalContext	../server/ext/context.cpp	/^bool IsLocalContext(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalContext	../server/ext/context.cpp	/^bool IsLocalContext(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalExec	../server/ext/exec.cpp	/^bool IsLocalExec(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalExec	../server/ext/exec.cpp	/^bool IsLocalExec(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalIdent	../server/ext/certificate.cpp	/^bool IsLocalIdent(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalOffer	../server/ext/offer.cpp	/^bool IsLocalOffer(CIface *iface, const CTransaction& tx)$/;"	f
IsLocalOffer	../server/ext/offer.cpp	/^bool IsLocalOffer(CIface *iface, const CTxOut& txout) $/;"	f
IsLocalRegion	../server/ext/certificate.h	/^    bool IsLocalRegion()$/;"	f	class:CIdent
IsMine	../server/script.cpp	/^bool IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool fWitnessFlag)$/;"	f
IsMine	../server/script.cpp	/^bool IsMine(const CKeyStore &keystore, const CTxDestination &dest)$/;"	f
IsMine	../server/wallet.cpp	/^bool CWallet::IsMine(const CTxIn &txin)$/;"	f	class:CWallet
IsMine	../server/wallet.h	/^		bool IsMine(const CTransaction& tx)$/;"	f	class:CWallet
IsMine	../server/wallet.h	/^		bool IsMine(const CTxOut& txout)$/;"	f	class:CWallet
IsMulticast	../server/netbase.cpp	/^bool CNetAddr::IsMulticast() const$/;"	f	class:CNetAddr
IsNewerCheckpoint	../server/ext/exec.cpp	/^bool IsNewerCheckpoint(CIface *iface, uint160 hExec, CExecCheckpoint *cp)$/;"	f
IsNewerThan	../server/block.h	/^    bool IsNewerThan(const CTransaction& old) const$/;"	f	class:CTransaction
IsNull	../server/account.h	/^		bool IsNull() const { $/;"	f	class:CAccountCache
IsNull	../server/block.h	/^    bool IsNull() const { return (hash == 0 && n == (unsigned int) -1); }$/;"	f	class:COutPoint
IsNull	../server/block.h	/^    bool IsNull() const { return (nFile == (unsigned int) -1); }$/;"	f	class:CDiskTxPos
IsNull	../server/block.h	/^    bool IsNull() const { return (ptx == NULL && n == (unsigned int) -1); }$/;"	f	class:CInPoint
IsNull	../server/block.h	/^    bool IsNull() const { return scriptWitness.IsNull(); }$/;"	f	class:CTxInWitness
IsNull	../server/block.h	/^    bool IsNull() const { return stack.empty(); }$/;"	f	struct:CScriptWitness
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CBlock
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CBlockHeader
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CTransactionCore
IsNull	../server/block.h	/^    bool IsNull() const$/;"	f	class:CTxWitness
IsNull	../server/block.h	/^    bool IsNull()$/;"	f	class:CBlockLocator
IsNull	../server/block.h	/^    bool IsNull()$/;"	f	class:CTxIndex
IsNull	../server/block.h	/^    bool IsNull()$/;"	f	class:CTxOut
IsNull	../server/dikey.cpp	/^bool DIKey::IsNull() const$/;"	f	class:DIKey
IsNull	../server/eckey.cpp	/^bool ECKey::IsNull() const$/;"	f	class:ECKey
IsNull	../server/ext/altchain.h	/^		bool IsNull() const$/;"	f	class:CAltBlock
IsNull	../server/ext/altchain.h	/^		bool IsNull() const$/;"	f	class:CAltTx
IsNull	../server/ext/offer.h	/^    bool IsNull() const $/;"	f	class:COffer
IsNull	../server/ext/txext.h	/^    bool IsNull()$/;"	f	class:CSign
IsNull	../server/key.h	/^    bool IsNull() const$/;"	f	class:CKey
IsNull	../server/net.h	/^    bool IsNull()$/;"	f	class:CRequestTracker
IsNull	../server/uint256.h	/^    bool IsNull()$/;"	f	class:base_uint
IsOfferOp	../server/ext/offer.cpp	/^bool IsOfferOp(int op) {$/;"	f
IsOfferTx	../server/ext/offer.cpp	/^bool IsOfferTx(const CTransaction& tx)$/;"	f
IsOrphan	../server/color/color_block.cpp	/^bool COLORBlock::IsOrphan()$/;"	f	class:COLORBlock
IsOrphan	../server/emc2/emc2_block.cpp	/^bool EMC2Block::IsOrphan()$/;"	f	class:EMC2Block
IsOrphan	../server/ltc/ltc_block.cpp	/^bool LTCBlock::IsOrphan()$/;"	f	class:LTCBlock
IsOrphan	../server/shc/shc_block.cpp	/^bool SHCBlock::IsOrphan()$/;"	f	class:SHCBlock
IsOrphan	../server/test/test_block.cpp	/^bool TESTBlock::IsOrphan()$/;"	f	class:TESTBlock
IsOrphan	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::IsOrphan()$/;"	f	class:TESTNETBlock
IsOutputForAccount	../stratum/stratum_api.cpp	/^bool IsOutputForAccount(CWallet *wallet, vector<CTxDestination> addr_list, CTxDestination address)$/;"	f
IsParamOp	../server/ext/ext_param.cpp	/^bool IsParamOp(int op) {$/;"	f
IsParamTx	../server/ext/ext_param.cpp	/^bool IsParamTx(const CTransaction& tx)$/;"	f
IsPayToScriptHash	../server/script.cpp	/^bool CScript::IsPayToScriptHash() const$/;"	f	class:CScript
IsPendingTx	../server/txmempool.h	/^    bool IsPendingTx(const uint256 hash) const$/;"	f	class:CPool
IsProxy	../server/netbase.cpp	/^bool IsProxy(const CNetAddr &addr) {$/;"	f
IsPushOnly	../server/script.h	/^    bool IsPushOnly() const$/;"	f	class:CScript
IsRFC1918	../server/netbase.cpp	/^bool CNetAddr::IsRFC1918() const$/;"	f	class:CNetAddr
IsRFC3849	../server/netbase.cpp	/^bool CNetAddr::IsRFC3849() const$/;"	f	class:CNetAddr
IsRFC3927	../server/netbase.cpp	/^bool CNetAddr::IsRFC3927() const$/;"	f	class:CNetAddr
IsRFC3964	../server/netbase.cpp	/^bool CNetAddr::IsRFC3964() const$/;"	f	class:CNetAddr
IsRFC4193	../server/netbase.cpp	/^bool CNetAddr::IsRFC4193() const$/;"	f	class:CNetAddr
IsRFC4380	../server/netbase.cpp	/^bool CNetAddr::IsRFC4380() const$/;"	f	class:CNetAddr
IsRFC4843	../server/netbase.cpp	/^bool CNetAddr::IsRFC4843() const$/;"	f	class:CNetAddr
IsRFC4862	../server/netbase.cpp	/^bool CNetAddr::IsRFC4862() const$/;"	f	class:CNetAddr
IsRFC6052	../server/netbase.cpp	/^bool CNetAddr::IsRFC6052() const$/;"	f	class:CNetAddr
IsRFC6145	../server/netbase.cpp	/^bool CNetAddr::IsRFC6145() const$/;"	f	class:CNetAddr
IsRelevant	../server/bloom.cpp	/^bool CBloomFilter::IsRelevant(const CTransaction& tx, const uint256& hash, bool fUpdate)$/;"	f	class:CBloomFilter
IsRelevantAndUpdate	../server/bloom.cpp	/^bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& hash)$/;"	f	class:CBloomFilter
IsRoutable	../server/netbase.cpp	/^bool CNetAddr::IsRoutable() const$/;"	f	class:CNetAddr
IsScript	../server/coinaddr.cpp	/^bool CCoinAddr::IsScript() const $/;"	f	class:CCoinAddr
IsSignatureOwner	../server/ext/certificate.cpp	/^bool CCert::IsSignatureOwner(string strAccount)$/;"	f	class:CCert
IsSpent	../server/wallet.h	/^			 bool IsSpent(unsigned int nOut) const$/;"	f	class:CWalletTx
IsStandard	../server/block.cpp	/^bool CTransaction::IsStandard() const$/;"	f	class:CTransaction
IsStandard	../server/script.cpp	/^bool IsStandard(const CScript& scriptPubKey)$/;"	f
IsSwitchChar	../server/util.h	/^inline bool IsSwitchChar(char c)$/;"	f
IsTerrible	../server/addrman.cpp	/^bool CAddrInfo::IsTerrible(int64 nNow) const$/;"	f	class:CAddrInfo
IsTest	../server/net.h	/^    bool IsTest()$/;"	f	class:CBloomFilter
IsTor	../server/netbase.cpp	/^bool CNetAddr::IsTor() const$/;"	f	class:CNetAddr
IsTxAvailable	../server/block_cmpct.cpp	/^bool PartiallyDownloadedBlock::IsTxAvailable(size_t index) const {$/;"	f	class:PartiallyDownloadedBlock
IsValid	../server/base58.h	/^		bool IsValid() const$/;"	f	class:CCoinSecret
IsValid	../server/block.h	/^    bool IsValid(int nUpTo = BLOCK_VALID_TRANSACTIONS) const$/;"	f	class:CBlockIndex
IsValid	../server/coinaddr.cpp	/^bool CCoinAddr::IsValid() const$/;"	f	class:CCoinAddr
IsValid	../server/dikey.cpp	/^bool DIKey::IsValid()$/;"	f	class:DIKey
IsValid	../server/eckey.cpp	/^bool ECKey::IsValid()$/;"	f	class:ECKey
IsValid	../server/hdkey.cpp	/^bool HDPrivKey::IsValid()$/;"	f	class:HDPrivKey
IsValid	../server/key.h	/^		bool IsValid() const$/;"	f	class:CPubKey
IsValid	../server/netbase.cpp	/^bool CNetAddr::IsValid() const$/;"	f	class:CNetAddr
IsValid	../server/protocol.cpp	/^bool CMessageHeader::IsValid() const$/;"	f	class:CMessageHeader
IsValidAliasName	../server/ext/alias.cpp	/^bool IsValidAliasName(CIface *iface, string label)$/;"	f
IsValidExecHash	../server/ext/exec.cpp	/^bool IsValidExecHash(CIface *iface, const uint160& hExec)$/;"	f
IsValidKey	../server/hdkey.cpp	/^bool HDMasterPrivKey::IsValidKey()$/;"	f	class:HDMasterPrivKey
IsValidKey	../server/hdkey.cpp	/^bool HDPrivKey::IsValidKey()$/;"	f	class:HDPrivKey
IsValidParamTxConsensus	../server/ext/ext_param.cpp	/^bool IsValidParamTxConsensus(CIface *iface, CParam *param, int64_t nCurrent)$/;"	f
IsValidParamTxConsensus	../server/ext/ext_param.cpp	/^bool IsValidParamTxConsensus(string strMode, int64_t nValue, int64_t nCurrent)$/;"	f
IsWithinSizeConstraints	../server/bloom.cpp	/^bool CBloomFilter::IsWithinSizeConstraints() const$/;"	f	class:CBloomFilter
IsWitnessEnabled	../server/block.cpp	/^bool IsWitnessEnabled(CIface *iface, const CBlockIndex* pindexPrev)$/;"	f
IsWitnessProgram	../server/script.cpp	/^bool CScript::IsWitnessProgram(int& version, std::vector<unsigned char>& program) const $/;"	f	class:CScript
JSONRPCError	../server/rpc/rpc_parse.cpp	/^Object JSONRPCError(int code, const string& message)$/;"	f
JSONRPCReply	../server/rpc/rpc_parse.cpp	/^string JSONRPCReply(const Value& result, const Value& error, const Value& id)$/;"	f
JSONRPCReplyObj	../server/rpc/rpc_parse.cpp	/^Object JSONRPCReplyObj(const Value& result, const Value& error, const Value& id)$/;"	f
JSONRequest	../server/rpc/rpc_parse.cpp	/^    JSONRequest() { id = Value::null; }$/;"	f	class:JSONRequest
JSONRequest	../server/rpc/rpc_parse.cpp	/^class JSONRequest$/;"	c	file:
JSON_SPIRIT	../server/json/json_spirit.h	2;"	d
JSON_SPIRIT_ERROR_POSITION	../server/json/json_spirit_error_position.h	2;"	d
JSON_SPIRIT_READER	../server/json/json_spirit_reader.h	2;"	d
JSON_SPIRIT_READER_TEMPLATE	../server/json/json_spirit_reader_template.h	2;"	d
JSON_SPIRIT_READ_STREAM	../server/json/json_spirit_stream_reader.h	2;"	d
JSON_SPIRIT_UTILS	../server/json/json_spirit_utils.h	2;"	d
JSON_SPIRIT_VALUE	../server/json/json_spirit_value.h	2;"	d
JSON_SPIRIT_WRITER	../server/json/json_spirit_writer.h	2;"	d
JSON_SPIRIT_WRITER_TEMPLATE	../server/json/json_spirit_writer_template.h	2;"	d
Json_grammer	../server/json/json_spirit_reader_template.h	/^        Json_grammer( Semantic_actions_t& semantic_actions )$/;"	f	class:json_spirit::Json_grammer
Json_grammer	../server/json/json_spirit_reader_template.h	/^    class Json_grammer : public spirit_namespace::grammar< Json_grammer< Value_type, Iter_type > >$/;"	c	namespace:json_spirit
KECCAK_F_1600	../server/algo/sph_keccak.c	1401;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1405;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1415;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1426;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1439;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1454;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1471;"	d	file:
KECCAK_F_1600_	../server/algo/sph_keccak.c	1492;"	d	file:
KECCAK_WORK_CYCLE_TIME	../stratum/stratum_keccak.c	34;"	d	file:
KEY_EXPAND_ELT	../server/algo/sph_shavite.c	141;"	d	file:
KF_ELT	../server/algo/sph_keccak.c	1392;"	d	file:
KHI	../server/algo/sph_keccak.c	1070;"	d	file:
KHI_XA	../server/algo/sph_keccak.c	1064;"	d	file:
KHI_XO	../server/algo/sph_keccak.c	1058;"	d	file:
Kb	../server/algo/sph_bmw.c	212;"	d	file:
Kb_tab	../server/algo/sph_bmw.c	/^static const sph_u64 Kb_tab[] = {$/;"	v	file:
KimotoGravityWell	../server/shc/shc_block.cpp	/^static unsigned int KimotoGravityWell(const CBlockIndex* pindexLast, const CBlock *pblock, uint64 TargetBlocksSpacingSeconds, uint64 PastBlocksMin, uint64 PastBlocksMax)$/;"	f	file:
KimotoGravityWell	../server/testnet/testnet_block.cpp	/^static unsigned int KimotoGravityWell(const CBlockIndex* pindexLast, const CBlock *pblock, uint64 TargetBlocksSpacingSeconds, uint64 PastBlocksMin, uint64 PastBlocksMax, int nAlg = ALGO_SCRYPT)$/;"	f	file:
Ks	../server/algo/sph_bmw.c	156;"	d	file:
L	../server/algo/sph_jh.c	227;"	d	file:
L	../server/algo/sph_jh.c	501;"	d	file:
LEAVE_CRITICAL_SECTION	../server/sync.h	135;"	d
LIMITED_STRING	../server/emc2/emc2_netmsg.cpp	186;"	d	file:
LIMITED_STRING	../server/ltc/ltc_netmsg.cpp	184;"	d	file:
LIMITED_STRING	../server/shc/shc_netmsg.cpp	72;"	d	file:
LIMITED_STRING	../server/testnet/testnet_netmsg.cpp	70;"	d	file:
LN2	../server/bloom.cpp	35;"	d	file:
LN2SQUARED	../server/bloom.cpp	34;"	d	file:
LOAD32H	../server/bolo/bolo_validation03.cpp	176;"	d	file:
LOAD32L	../server/bolo/bolo_validation03.cpp	154;"	d	file:
LOAD64H	../server/bolo/bolo_validation03.cpp	188;"	d	file:
LOAD64L	../server/bolo/bolo_validation03.cpp	166;"	d	file:
LOCAL_BIND	../server/net.h	/^    LOCAL_BIND,   \/\/ address explicit bound to$/;"	e	enum:__anon6
LOCAL_HTTP	../server/net.h	/^    LOCAL_HTTP,   \/\/ address reported by whatismyip.com and similars$/;"	e	enum:__anon6
LOCAL_IF	../server/net.h	/^    LOCAL_IF,     \/\/ address a local interface listens on$/;"	e	enum:__anon6
LOCAL_IRC	../server/net.h	/^    LOCAL_IRC,    \/\/ address reported by IRC (deprecated)$/;"	e	enum:__anon6
LOCAL_MANUAL	../server/net.h	/^    LOCAL_MANUAL, \/\/ address explicitly specified (-externalip=)$/;"	e	enum:__anon6
LOCAL_MAX	../server/net.h	/^    LOCAL_MAX$/;"	e	enum:__anon6
LOCAL_NONE	../server/net.h	/^    LOCAL_NONE,   \/\/ unknown$/;"	e	enum:__anon6
LOCAL_UPNP	../server/net.h	/^    LOCAL_UPNP,   \/\/ address reported by UPnP$/;"	e	enum:__anon6
LOCK	../server/sync.h	125;"	d
LOCK2	../server/sync.h	126;"	d
LOCKTIME_MEDIAN_TIME_PAST	../server/block.cpp	/^static const unsigned int LOCKTIME_MEDIAN_TIME_PAST = (1 << 1);$/;"	v	file:
LOCKTIME_MEDIAN_TIME_PAST	../server/coin.cpp	/^static const unsigned int LOCKTIME_MEDIAN_TIME_PAST = (1 << 1);$/;"	v	file:
LOCKTIME_MEDIAN_TIME_PAST	../server/txmempool.cpp	/^static const unsigned int LOCKTIME_MEDIAN_TIME_PAST = (1 << 1);$/;"	v	file:
LOCKTIME_MEDIAN_TIME_PAST	../server/validation.cpp	/^static const unsigned int LOCKTIME_MEDIAN_TIME_PAST = (1 << 1);$/;"	v	file:
LOCKTIME_MEDIAN_TIME_PAST	../server/wallet.cpp	/^static const unsigned int LOCKTIME_MEDIAN_TIME_PAST = (1 << 1);$/;"	v	file:
LOCKTIME_THRESHOLD	../server/block.h	/^static const unsigned int LOCKTIME_THRESHOLD = 500000000; \/\/ Tue Nov  5 00:53:20 1985 UTC$/;"	v
LOCKTIME_VERIFY_SEQUENCE	../server/block.cpp	/^static const unsigned int LOCKTIME_VERIFY_SEQUENCE = (1 << 0);$/;"	v	file:
LOCKTIME_VERIFY_SEQUENCE	../server/coin.cpp	/^static const unsigned int LOCKTIME_VERIFY_SEQUENCE = (1 << 0);$/;"	v	file:
LOCKTIME_VERIFY_SEQUENCE	../server/txmempool.cpp	/^static const unsigned int LOCKTIME_VERIFY_SEQUENCE = (1 << 0);$/;"	v	file:
LOCKTIME_VERIFY_SEQUENCE	../server/validation.cpp	/^static const unsigned int LOCKTIME_VERIFY_SEQUENCE = (1 << 0);$/;"	v	file:
LOCKTIME_VERIFY_SEQUENCE	../server/wallet.cpp	/^static const unsigned int LOCKTIME_VERIFY_SEQUENCE = (1 << 0);$/;"	v	file:
LPAR	../server/algo/sph_bmw.c	102;"	d	file:
LPAR	../server/algo/sph_keccak.c	1389;"	d	file:
LTCBlock	../server/ltc/ltc_block.h	/^    LTCBlock()$/;"	f	class:LTCBlock
LTCBlock	../server/ltc/ltc_block.h	/^    LTCBlock(const CBlock &block)$/;"	f	class:LTCBlock
LTCBlock	../server/ltc/ltc_block.h	/^    LTCBlock(const CBlockHeader &header)$/;"	f	class:LTCBlock
LTCBlock	../server/ltc/ltc_block.h	/^class LTCBlock : public CBlock$/;"	c
LTCTxDB	../server/ltc/ltc_txidx.h	/^    LTCTxDB(const char *fileMode = "r+") : CTxDB("ltc_tx.dat", LTC_COIN_IFACE, fileMode) { }$/;"	f	class:LTCTxDB
LTCTxDB	../server/ltc/ltc_txidx.h	/^class LTCTxDB : public CTxDB$/;"	c
LTCWallet	../server/ltc/ltc_wallet.h	/^    LTCWallet() : CWallet(LTC_COIN_IFACE, "ltc_wallet.dat") { };  $/;"	f	class:LTCWallet
LTCWallet	../server/ltc/ltc_wallet.h	/^class LTCWallet : public CWallet$/;"	c
LTC_COIN	../proto/ltc_proto.h	51;"	d
LTC_COINBASE_FLAGS	../server/ltc/ltc_wallet.cpp	/^CScript LTC_COINBASE_FLAGS;$/;"	v
LTC_COINBASE_MATURITY	../proto/ltc_proto.h	/^static const int LTC_COINBASE_MATURITY = 100;$/;"	v
LTC_COIN_DAEMON_PORT	../proto/ltc_proto.h	35;"	d
LTC_COIN_HEADER_SIZE	../server/ltc/ltc_netmsg.cpp	65;"	d	file:
LTC_COIN_IFACE	../proto/coin_proto.h	127;"	d
LTC_CTxMemPool	../server/ltc/ltc_pool.h	/^    LTC_CTxMemPool() : CPool(LTC_COIN_IFACE) { };$/;"	f	class:LTC_CTxMemPool
LTC_CTxMemPool	../server/ltc/ltc_pool.h	/^class LTC_CTxMemPool : public CPool$/;"	c
LTC_DEFAULT_BYTES_PER_SIGOP	../proto/ltc_proto.h	61;"	d
LTC_MAJORITY_WINDOW	../server/ltc/ltc_block.cpp	60;"	d	file:
LTC_MAX_BLOCK_SIZE	../proto/ltc_proto.h	53;"	d
LTC_MAX_DRIFT_TIME	../proto/ltc_proto.h	47;"	d
LTC_MAX_FREE_TX_SIZE	../proto/ltc_proto.h	64;"	d
LTC_MAX_GETADDR	../proto/ltc_proto.h	37;"	d
LTC_MAX_MONEY	../proto/ltc_proto.h	/^static const int64 LTC_MAX_MONEY = 84000000 * LTC_COIN;$/;"	v
LTC_MAX_ORPHAN_TRANSACTIONS	../proto/ltc_proto.h	39;"	d
LTC_MAX_SCRIPT_ELEMENT_SIZE	../proto/ltc_proto.h	45;"	d
LTC_MAX_SCRIPT_SIZE	../proto/ltc_proto.h	43;"	d
LTC_MAX_SIGOPS	../proto/ltc_proto.h	41;"	d
LTC_MAX_STANDARD_TX_SIGOP_COST	../proto/ltc_proto.h	59;"	d
LTC_MAX_STANDARD_TX_WEIGHT	../proto/ltc_proto.h	57;"	d
LTC_MAX_TRANSACTION_WEIGHT	../proto/ltc_proto.h	55;"	d
LTC_MAX_TX_FEE	../proto/ltc_proto.h	/^static const int64 LTC_MAX_TX_FEE = 1000 * SHC_COIN;$/;"	v
LTC_MIN_INPUT	../proto/ltc_proto.h	/^static const int64 LTC_MIN_INPUT = 1;\/\/294;$/;"	v
LTC_MIN_RELAY_TX_FEE	../proto/ltc_proto.h	/^static const int64 LTC_MIN_RELAY_TX_FEE = 1000;$/;"	v
LTC_MIN_TX_FEE	../proto/ltc_proto.h	/^static const int64 LTC_MIN_TX_FEE = 10000;$/;"	v
LTC_PROTOCOL_VERSION	../proto/ltc_proto.h	/^static const int LTC_PROTOCOL_VERSION = 70015;$/;"	v
LTC_SENDHEADERS_VERSION	../server/ltc/ltc_netmsg.cpp	67;"	d	file:
LTC_SetBestChain	../server/ltc/ltc_block.cpp	/^void static LTC_SetBestChain(const CBlockLocator& loc)$/;"	f	file:
LTC_VERSION_BUILD	../proto/ltc_proto.h	33;"	d
LTC_VERSION_MAJOR	../proto/ltc_proto.h	30;"	d
LTC_VERSION_MINOR	../proto/ltc_proto.h	31;"	d
LTC_VERSION_REVISION	../proto/ltc_proto.h	32;"	d
LTC_WITNESS_SCALE_FACTOR	../proto/ltc_proto.h	/^static const int LTC_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
LTC_mapOrphanBlocksByPrev	../server/ltc/ltc_block.cpp	/^static orphan_map LTC_mapOrphanBlocksByPrev;$/;"	v	file:
LastCommonAncestor	../server/block.cpp	/^CBlockIndex* LastCommonAncestor(CBlockIndex* pa, CBlockIndex* pb) $/;"	f
Lb	../server/algo/sph_jh.c	117;"	d	file:
Leave	../server/sync.h	/^		void Leave()$/;"	f	class:CMutexLock
LeaveCritical	../server/sync.cpp	/^void LeaveCritical()$/;"	f
LeaveCritical	../server/sync.h	/^void static inline LeaveCritical() {}$/;"	f
LimitedString	../server/emc2/emc2_netmsg.cpp	/^    LimitedString(std::string& string) : string(string) {}$/;"	f	class:LimitedString
LimitedString	../server/emc2/emc2_netmsg.cpp	/^class LimitedString$/;"	c	file:
LimitedString	../server/ltc/ltc_netmsg.cpp	/^    LimitedString(std::string& string) : string(string) {}$/;"	f	class:LimitedString
LimitedString	../server/ltc/ltc_netmsg.cpp	/^class LimitedString$/;"	c	file:
LimitedString	../server/shc/shc_netmsg.cpp	/^    LimitedString(std::string& string) : string(string) {}$/;"	f	class:LimitedString
LimitedString	../server/shc/shc_netmsg.cpp	/^class LimitedString$/;"	c	file:
LimitedString	../server/testnet/testnet_netmsg.cpp	/^    LimitedString(std::string& string) : string(string) {}$/;"	f	class:LimitedString
LimitedString	../server/testnet/testnet_netmsg.cpp	/^class LimitedString$/;"	c	file:
ListAccountCreditDebit	../server/walletdb.cpp	/^void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountingEntry>& entries)$/;"	f	class:CWalletDB
ListReceived	../server/rpc/rpc_wallet_addr.cpp	/^static Value ListReceived(CWallet *wallet, const Array& params, bool fByAccounts)$/;"	f	file:
ListTransactions	../server/rpc/rpc_parse.cpp	/^void ListTransactions(int ifaceIndex, const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, Array& ret)$/;"	f
LoadBlockIndex	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::LoadBlockIndex()$/;"	f	class:EMC2TxDB
LoadBlockIndex	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::LoadBlockIndex()$/;"	f	class:LTCTxDB
LoadBlockIndex	../server/shc/shc_txidx.cpp	/^bool SHCTxDB::LoadBlockIndex()$/;"	f	class:SHCTxDB
LoadCScript	../server/wallet.h	/^		bool LoadCScript(const CScript& redeemScript) { return CBasicKeyStore::AddCScript(redeemScript); }$/;"	f	class:CWallet
LoadData	../server/ext/exec.cpp	/^bool CExec::LoadData(string path, cbuff& data)$/;"	f	class:CExec
LoadExternalBlockchainFile	../server/chain.cpp	/^bool LoadExternalBlockchainFile()$/;"	f
LoadKey	../server/wallet.h	/^		bool LoadKey(const DIKey& key) { return CBasicKeyStore::AddKey(key); }$/;"	f	class:CWallet
LoadKey	../server/wallet.h	/^		bool LoadKey(const ECKey& key) { return CBasicKeyStore::AddKey(key); }$/;"	f	class:CWallet
LoadWallet	../server/wallet.cpp	/^int CWallet::LoadWallet(bool& fFirstRunRet)$/;"	f	class:CWallet
LoadWallet	../server/walletdb.cpp	/^int CWalletDB::LoadWallet(CWallet* pwallet)$/;"	f	class:CWalletDB
LockStack	../server/sync.cpp	/^typedef std::vector< std::pair<void*, CLockLocation> > LockStack;$/;"	t	file:
LogException	../server/util.cpp	/^void LogException(std::exception* pex, const char* pszThread)$/;"	f
Lookup	../server/netbase.cpp	/^bool Lookup(const char *pszName, CService& addr, int portDefault, bool fAllowLookup)$/;"	f
Lookup	../server/netbase.cpp	/^bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions)$/;"	f
LookupHost	../server/netbase.cpp	/^bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)$/;"	f
LookupHostNumeric	../server/netbase.cpp	/^bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions)$/;"	f
LookupIntern	../server/netbase.cpp	/^bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)$/;"	f	file:
LookupNumeric	../server/netbase.cpp	/^bool LookupNumeric(const char *pszName, CService& addr, int portDefault)$/;"	f
LowerCase	../server/bech32.cpp	/^	inline unsigned char LowerCase(unsigned char c)$/;"	f	namespace:__anon2
M	../server/algo/sph_bmw.c	572;"	d	file:
M	../server/algo/sph_bmw.c	599;"	d	file:
M	../server/algo/sph_bmw.c	720;"	d	file:
M	../server/algo/sph_bmw.c	747;"	d	file:
M16_16	../server/algo/sph_bmw.c	121;"	d	file:
M16_17	../server/algo/sph_bmw.c	122;"	d	file:
M16_18	../server/algo/sph_bmw.c	123;"	d	file:
M16_19	../server/algo/sph_bmw.c	124;"	d	file:
M16_20	../server/algo/sph_bmw.c	125;"	d	file:
M16_21	../server/algo/sph_bmw.c	126;"	d	file:
M16_22	../server/algo/sph_bmw.c	127;"	d	file:
M16_23	../server/algo/sph_bmw.c	128;"	d	file:
M16_24	../server/algo/sph_bmw.c	129;"	d	file:
M16_25	../server/algo/sph_bmw.c	130;"	d	file:
M16_26	../server/algo/sph_bmw.c	131;"	d	file:
M16_27	../server/algo/sph_bmw.c	132;"	d	file:
M16_28	../server/algo/sph_bmw.c	133;"	d	file:
M16_29	../server/algo/sph_bmw.c	134;"	d	file:
M16_30	../server/algo/sph_bmw.c	135;"	d	file:
M16_31	../server/algo/sph_bmw.c	136;"	d	file:
M2	../server/algo/sph_luffa.c	190;"	d	file:
M3_0_0	../server/algo/sph_simd.c	705;"	d	file:
M3_0_0	../server/algo/sph_skein.c	334;"	d	file:
M3_0_1	../server/algo/sph_simd.c	714;"	d	file:
M3_0_1	../server/algo/sph_skein.c	335;"	d	file:
M3_0_2	../server/algo/sph_simd.c	723;"	d	file:
M3_10_0	../server/algo/sph_skein.c	354;"	d	file:
M3_10_1	../server/algo/sph_skein.c	355;"	d	file:
M3_11_0	../server/algo/sph_skein.c	356;"	d	file:
M3_11_1	../server/algo/sph_skein.c	357;"	d	file:
M3_12_0	../server/algo/sph_skein.c	358;"	d	file:
M3_12_1	../server/algo/sph_skein.c	359;"	d	file:
M3_13_0	../server/algo/sph_skein.c	360;"	d	file:
M3_13_1	../server/algo/sph_skein.c	361;"	d	file:
M3_14_0	../server/algo/sph_skein.c	362;"	d	file:
M3_14_1	../server/algo/sph_skein.c	363;"	d	file:
M3_15_0	../server/algo/sph_skein.c	364;"	d	file:
M3_15_1	../server/algo/sph_skein.c	365;"	d	file:
M3_16_0	../server/algo/sph_skein.c	366;"	d	file:
M3_16_1	../server/algo/sph_skein.c	367;"	d	file:
M3_17_0	../server/algo/sph_skein.c	368;"	d	file:
M3_17_1	../server/algo/sph_skein.c	369;"	d	file:
M3_18_0	../server/algo/sph_skein.c	370;"	d	file:
M3_18_1	../server/algo/sph_skein.c	371;"	d	file:
M3_1_0	../server/algo/sph_simd.c	706;"	d	file:
M3_1_0	../server/algo/sph_skein.c	336;"	d	file:
M3_1_1	../server/algo/sph_simd.c	715;"	d	file:
M3_1_1	../server/algo/sph_skein.c	337;"	d	file:
M3_1_2	../server/algo/sph_simd.c	724;"	d	file:
M3_2_0	../server/algo/sph_simd.c	707;"	d	file:
M3_2_0	../server/algo/sph_skein.c	338;"	d	file:
M3_2_1	../server/algo/sph_simd.c	716;"	d	file:
M3_2_1	../server/algo/sph_skein.c	339;"	d	file:
M3_2_2	../server/algo/sph_simd.c	725;"	d	file:
M3_3_0	../server/algo/sph_simd.c	708;"	d	file:
M3_3_0	../server/algo/sph_skein.c	340;"	d	file:
M3_3_1	../server/algo/sph_simd.c	717;"	d	file:
M3_3_1	../server/algo/sph_skein.c	341;"	d	file:
M3_3_2	../server/algo/sph_simd.c	726;"	d	file:
M3_4_0	../server/algo/sph_simd.c	709;"	d	file:
M3_4_0	../server/algo/sph_skein.c	342;"	d	file:
M3_4_1	../server/algo/sph_simd.c	718;"	d	file:
M3_4_1	../server/algo/sph_skein.c	343;"	d	file:
M3_4_2	../server/algo/sph_simd.c	727;"	d	file:
M3_5_0	../server/algo/sph_simd.c	710;"	d	file:
M3_5_0	../server/algo/sph_skein.c	344;"	d	file:
M3_5_1	../server/algo/sph_simd.c	719;"	d	file:
M3_5_1	../server/algo/sph_skein.c	345;"	d	file:
M3_5_2	../server/algo/sph_simd.c	728;"	d	file:
M3_6_0	../server/algo/sph_simd.c	711;"	d	file:
M3_6_0	../server/algo/sph_skein.c	346;"	d	file:
M3_6_1	../server/algo/sph_simd.c	720;"	d	file:
M3_6_1	../server/algo/sph_skein.c	347;"	d	file:
M3_6_2	../server/algo/sph_simd.c	729;"	d	file:
M3_7_0	../server/algo/sph_simd.c	712;"	d	file:
M3_7_0	../server/algo/sph_skein.c	348;"	d	file:
M3_7_1	../server/algo/sph_simd.c	721;"	d	file:
M3_7_1	../server/algo/sph_skein.c	349;"	d	file:
M3_7_2	../server/algo/sph_simd.c	730;"	d	file:
M3_8_0	../server/algo/sph_skein.c	350;"	d	file:
M3_8_1	../server/algo/sph_skein.c	351;"	d	file:
M3_9_0	../server/algo/sph_skein.c	352;"	d	file:
M3_9_1	../server/algo/sph_skein.c	353;"	d	file:
M7_0_0	../server/algo/sph_simd.c	753;"	d	file:
M7_0_1	../server/algo/sph_simd.c	762;"	d	file:
M7_0_2	../server/algo/sph_simd.c	771;"	d	file:
M7_0_3	../server/algo/sph_simd.c	780;"	d	file:
M7_1_0	../server/algo/sph_simd.c	754;"	d	file:
M7_1_1	../server/algo/sph_simd.c	763;"	d	file:
M7_1_2	../server/algo/sph_simd.c	772;"	d	file:
M7_1_3	../server/algo/sph_simd.c	781;"	d	file:
M7_2_0	../server/algo/sph_simd.c	755;"	d	file:
M7_2_1	../server/algo/sph_simd.c	764;"	d	file:
M7_2_2	../server/algo/sph_simd.c	773;"	d	file:
M7_2_3	../server/algo/sph_simd.c	782;"	d	file:
M7_3_0	../server/algo/sph_simd.c	756;"	d	file:
M7_3_1	../server/algo/sph_simd.c	765;"	d	file:
M7_3_2	../server/algo/sph_simd.c	774;"	d	file:
M7_3_3	../server/algo/sph_simd.c	783;"	d	file:
M7_4_0	../server/algo/sph_simd.c	757;"	d	file:
M7_4_1	../server/algo/sph_simd.c	766;"	d	file:
M7_4_2	../server/algo/sph_simd.c	775;"	d	file:
M7_4_3	../server/algo/sph_simd.c	784;"	d	file:
M7_5_0	../server/algo/sph_simd.c	758;"	d	file:
M7_5_1	../server/algo/sph_simd.c	767;"	d	file:
M7_5_2	../server/algo/sph_simd.c	776;"	d	file:
M7_5_3	../server/algo/sph_simd.c	785;"	d	file:
M7_6_0	../server/algo/sph_simd.c	759;"	d	file:
M7_6_1	../server/algo/sph_simd.c	768;"	d	file:
M7_6_2	../server/algo/sph_simd.c	777;"	d	file:
M7_6_3	../server/algo/sph_simd.c	786;"	d	file:
M7_7_0	../server/algo/sph_simd.c	760;"	d	file:
M7_7_1	../server/algo/sph_simd.c	769;"	d	file:
M7_7_2	../server/algo/sph_simd.c	778;"	d	file:
M7_7_3	../server/algo/sph_simd.c	787;"	d	file:
M9_0_0	../server/algo/sph_skein.c	159;"	d	file:
M9_0_1	../server/algo/sph_skein.c	160;"	d	file:
M9_0_2	../server/algo/sph_skein.c	161;"	d	file:
M9_0_3	../server/algo/sph_skein.c	162;"	d	file:
M9_0_4	../server/algo/sph_skein.c	163;"	d	file:
M9_0_5	../server/algo/sph_skein.c	164;"	d	file:
M9_0_6	../server/algo/sph_skein.c	165;"	d	file:
M9_0_7	../server/algo/sph_skein.c	166;"	d	file:
M9_10_0	../server/algo/sph_skein.c	249;"	d	file:
M9_10_1	../server/algo/sph_skein.c	250;"	d	file:
M9_10_2	../server/algo/sph_skein.c	251;"	d	file:
M9_10_3	../server/algo/sph_skein.c	252;"	d	file:
M9_10_4	../server/algo/sph_skein.c	253;"	d	file:
M9_10_5	../server/algo/sph_skein.c	254;"	d	file:
M9_10_6	../server/algo/sph_skein.c	255;"	d	file:
M9_10_7	../server/algo/sph_skein.c	256;"	d	file:
M9_11_0	../server/algo/sph_skein.c	258;"	d	file:
M9_11_1	../server/algo/sph_skein.c	259;"	d	file:
M9_11_2	../server/algo/sph_skein.c	260;"	d	file:
M9_11_3	../server/algo/sph_skein.c	261;"	d	file:
M9_11_4	../server/algo/sph_skein.c	262;"	d	file:
M9_11_5	../server/algo/sph_skein.c	263;"	d	file:
M9_11_6	../server/algo/sph_skein.c	264;"	d	file:
M9_11_7	../server/algo/sph_skein.c	265;"	d	file:
M9_12_0	../server/algo/sph_skein.c	267;"	d	file:
M9_12_1	../server/algo/sph_skein.c	268;"	d	file:
M9_12_2	../server/algo/sph_skein.c	269;"	d	file:
M9_12_3	../server/algo/sph_skein.c	270;"	d	file:
M9_12_4	../server/algo/sph_skein.c	271;"	d	file:
M9_12_5	../server/algo/sph_skein.c	272;"	d	file:
M9_12_6	../server/algo/sph_skein.c	273;"	d	file:
M9_12_7	../server/algo/sph_skein.c	274;"	d	file:
M9_13_0	../server/algo/sph_skein.c	276;"	d	file:
M9_13_1	../server/algo/sph_skein.c	277;"	d	file:
M9_13_2	../server/algo/sph_skein.c	278;"	d	file:
M9_13_3	../server/algo/sph_skein.c	279;"	d	file:
M9_13_4	../server/algo/sph_skein.c	280;"	d	file:
M9_13_5	../server/algo/sph_skein.c	281;"	d	file:
M9_13_6	../server/algo/sph_skein.c	282;"	d	file:
M9_13_7	../server/algo/sph_skein.c	283;"	d	file:
M9_14_0	../server/algo/sph_skein.c	285;"	d	file:
M9_14_1	../server/algo/sph_skein.c	286;"	d	file:
M9_14_2	../server/algo/sph_skein.c	287;"	d	file:
M9_14_3	../server/algo/sph_skein.c	288;"	d	file:
M9_14_4	../server/algo/sph_skein.c	289;"	d	file:
M9_14_5	../server/algo/sph_skein.c	290;"	d	file:
M9_14_6	../server/algo/sph_skein.c	291;"	d	file:
M9_14_7	../server/algo/sph_skein.c	292;"	d	file:
M9_15_0	../server/algo/sph_skein.c	294;"	d	file:
M9_15_1	../server/algo/sph_skein.c	295;"	d	file:
M9_15_2	../server/algo/sph_skein.c	296;"	d	file:
M9_15_3	../server/algo/sph_skein.c	297;"	d	file:
M9_15_4	../server/algo/sph_skein.c	298;"	d	file:
M9_15_5	../server/algo/sph_skein.c	299;"	d	file:
M9_15_6	../server/algo/sph_skein.c	300;"	d	file:
M9_15_7	../server/algo/sph_skein.c	301;"	d	file:
M9_16_0	../server/algo/sph_skein.c	303;"	d	file:
M9_16_1	../server/algo/sph_skein.c	304;"	d	file:
M9_16_2	../server/algo/sph_skein.c	305;"	d	file:
M9_16_3	../server/algo/sph_skein.c	306;"	d	file:
M9_16_4	../server/algo/sph_skein.c	307;"	d	file:
M9_16_5	../server/algo/sph_skein.c	308;"	d	file:
M9_16_6	../server/algo/sph_skein.c	309;"	d	file:
M9_16_7	../server/algo/sph_skein.c	310;"	d	file:
M9_17_0	../server/algo/sph_skein.c	312;"	d	file:
M9_17_1	../server/algo/sph_skein.c	313;"	d	file:
M9_17_2	../server/algo/sph_skein.c	314;"	d	file:
M9_17_3	../server/algo/sph_skein.c	315;"	d	file:
M9_17_4	../server/algo/sph_skein.c	316;"	d	file:
M9_17_5	../server/algo/sph_skein.c	317;"	d	file:
M9_17_6	../server/algo/sph_skein.c	318;"	d	file:
M9_17_7	../server/algo/sph_skein.c	319;"	d	file:
M9_18_0	../server/algo/sph_skein.c	321;"	d	file:
M9_18_1	../server/algo/sph_skein.c	322;"	d	file:
M9_18_2	../server/algo/sph_skein.c	323;"	d	file:
M9_18_3	../server/algo/sph_skein.c	324;"	d	file:
M9_18_4	../server/algo/sph_skein.c	325;"	d	file:
M9_18_5	../server/algo/sph_skein.c	326;"	d	file:
M9_18_6	../server/algo/sph_skein.c	327;"	d	file:
M9_18_7	../server/algo/sph_skein.c	328;"	d	file:
M9_1_0	../server/algo/sph_skein.c	168;"	d	file:
M9_1_1	../server/algo/sph_skein.c	169;"	d	file:
M9_1_2	../server/algo/sph_skein.c	170;"	d	file:
M9_1_3	../server/algo/sph_skein.c	171;"	d	file:
M9_1_4	../server/algo/sph_skein.c	172;"	d	file:
M9_1_5	../server/algo/sph_skein.c	173;"	d	file:
M9_1_6	../server/algo/sph_skein.c	174;"	d	file:
M9_1_7	../server/algo/sph_skein.c	175;"	d	file:
M9_2_0	../server/algo/sph_skein.c	177;"	d	file:
M9_2_1	../server/algo/sph_skein.c	178;"	d	file:
M9_2_2	../server/algo/sph_skein.c	179;"	d	file:
M9_2_3	../server/algo/sph_skein.c	180;"	d	file:
M9_2_4	../server/algo/sph_skein.c	181;"	d	file:
M9_2_5	../server/algo/sph_skein.c	182;"	d	file:
M9_2_6	../server/algo/sph_skein.c	183;"	d	file:
M9_2_7	../server/algo/sph_skein.c	184;"	d	file:
M9_3_0	../server/algo/sph_skein.c	186;"	d	file:
M9_3_1	../server/algo/sph_skein.c	187;"	d	file:
M9_3_2	../server/algo/sph_skein.c	188;"	d	file:
M9_3_3	../server/algo/sph_skein.c	189;"	d	file:
M9_3_4	../server/algo/sph_skein.c	190;"	d	file:
M9_3_5	../server/algo/sph_skein.c	191;"	d	file:
M9_3_6	../server/algo/sph_skein.c	192;"	d	file:
M9_3_7	../server/algo/sph_skein.c	193;"	d	file:
M9_4_0	../server/algo/sph_skein.c	195;"	d	file:
M9_4_1	../server/algo/sph_skein.c	196;"	d	file:
M9_4_2	../server/algo/sph_skein.c	197;"	d	file:
M9_4_3	../server/algo/sph_skein.c	198;"	d	file:
M9_4_4	../server/algo/sph_skein.c	199;"	d	file:
M9_4_5	../server/algo/sph_skein.c	200;"	d	file:
M9_4_6	../server/algo/sph_skein.c	201;"	d	file:
M9_4_7	../server/algo/sph_skein.c	202;"	d	file:
M9_5_0	../server/algo/sph_skein.c	204;"	d	file:
M9_5_1	../server/algo/sph_skein.c	205;"	d	file:
M9_5_2	../server/algo/sph_skein.c	206;"	d	file:
M9_5_3	../server/algo/sph_skein.c	207;"	d	file:
M9_5_4	../server/algo/sph_skein.c	208;"	d	file:
M9_5_5	../server/algo/sph_skein.c	209;"	d	file:
M9_5_6	../server/algo/sph_skein.c	210;"	d	file:
M9_5_7	../server/algo/sph_skein.c	211;"	d	file:
M9_6_0	../server/algo/sph_skein.c	213;"	d	file:
M9_6_1	../server/algo/sph_skein.c	214;"	d	file:
M9_6_2	../server/algo/sph_skein.c	215;"	d	file:
M9_6_3	../server/algo/sph_skein.c	216;"	d	file:
M9_6_4	../server/algo/sph_skein.c	217;"	d	file:
M9_6_5	../server/algo/sph_skein.c	218;"	d	file:
M9_6_6	../server/algo/sph_skein.c	219;"	d	file:
M9_6_7	../server/algo/sph_skein.c	220;"	d	file:
M9_7_0	../server/algo/sph_skein.c	222;"	d	file:
M9_7_1	../server/algo/sph_skein.c	223;"	d	file:
M9_7_2	../server/algo/sph_skein.c	224;"	d	file:
M9_7_3	../server/algo/sph_skein.c	225;"	d	file:
M9_7_4	../server/algo/sph_skein.c	226;"	d	file:
M9_7_5	../server/algo/sph_skein.c	227;"	d	file:
M9_7_6	../server/algo/sph_skein.c	228;"	d	file:
M9_7_7	../server/algo/sph_skein.c	229;"	d	file:
M9_8_0	../server/algo/sph_skein.c	231;"	d	file:
M9_8_1	../server/algo/sph_skein.c	232;"	d	file:
M9_8_2	../server/algo/sph_skein.c	233;"	d	file:
M9_8_3	../server/algo/sph_skein.c	234;"	d	file:
M9_8_4	../server/algo/sph_skein.c	235;"	d	file:
M9_8_5	../server/algo/sph_skein.c	236;"	d	file:
M9_8_6	../server/algo/sph_skein.c	237;"	d	file:
M9_8_7	../server/algo/sph_skein.c	238;"	d	file:
M9_9_0	../server/algo/sph_skein.c	240;"	d	file:
M9_9_1	../server/algo/sph_skein.c	241;"	d	file:
M9_9_2	../server/algo/sph_skein.c	242;"	d	file:
M9_9_3	../server/algo/sph_skein.c	243;"	d	file:
M9_9_4	../server/algo/sph_skein.c	244;"	d	file:
M9_9_5	../server/algo/sph_skein.c	245;"	d	file:
M9_9_6	../server/algo/sph_skein.c	246;"	d	file:
M9_9_7	../server/algo/sph_skein.c	247;"	d	file:
MAJ	../server/algo/sph_simd.c	459;"	d	file:
MAKE_Qab	../server/algo/sph_bmw.c	431;"	d	file:
MAKE_Qab	../server/algo/sph_bmw.c	470;"	d	file:
MAKE_Qas	../server/algo/sph_bmw.c	313;"	d	file:
MAKE_Qas	../server/algo/sph_bmw.c	363;"	d	file:
MAKE_Qb	../server/algo/sph_bmw.c	510;"	d	file:
MAKE_Qbb	../server/algo/sph_bmw.c	460;"	d	file:
MAKE_Qbb	../server/algo/sph_bmw.c	489;"	d	file:
MAKE_Qbs	../server/algo/sph_bmw.c	342;"	d	file:
MAKE_Qbs	../server/algo/sph_bmw.c	382;"	d	file:
MAKE_Qs	../server/algo/sph_bmw.c	403;"	d	file:
MAKE_W	../server/algo/sph_bmw.c	290;"	d	file:
MAX_ACCADDR	../server/wallet.h	78;"	d
MAX_ALGOBITS	../server/algobits.h	37;"	d
MAX_API_LIST_ITEMS	../stratum/stratum_api.cpp	40;"	d	file:
MAX_BASE58_TYPES	../server/coinaddr.h	/^			MAX_BASE58_TYPES$/;"	e	enum:CCoinAddr::__anon5
MAX_BASE58_TYPES	../test/testcoin_bip32.cpp	/^	MAX_BASE58_TYPES$/;"	e	enum:Base58Type	file:
MAX_BASE58_TYPES	../test/testcoin_sip33.cpp	/^	MAX_BASE58_TYPES$/;"	e	enum:Base58Type	file:
MAX_BC_MAP_SIZE	../blockchain/bc_fmap.c	44;"	d	file:
MAX_BLOCKS_IN_TRANSIT_PER_PEER	../proto/coin_proto.h	/^static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER = 16;$/;"	v
MAX_BLOCKS_TO_ANNOUNCE	../server/emc2/emc2_netmsg.cpp	/^static const unsigned int MAX_BLOCKS_TO_ANNOUNCE = 8;$/;"	v	file:
MAX_BLOCKS_TO_ANNOUNCE	../server/ltc/ltc_netmsg.cpp	/^static const unsigned int MAX_BLOCKS_TO_ANNOUNCE = 8;$/;"	v	file:
MAX_BLOCKS_TO_ANNOUNCE	../server/shc/shc_netmsg.cpp	/^static const unsigned int MAX_BLOCKS_TO_ANNOUNCE = 8;$/;"	v	file:
MAX_BLOCKS_TO_ANNOUNCE	../server/testnet/testnet_netmsg.cpp	/^static const unsigned int MAX_BLOCKS_TO_ANNOUNCE = 8;$/;"	v	file:
MAX_BLOCK_CONFIRMS	../server/txfeerate.h	/^static const unsigned int MAX_BLOCK_CONFIRMS = 25;$/;"	v
MAX_BLOCK_DOWNLOAD_BATCH	../server/chain.cpp	42;"	d	file:
MAX_BLOCK_DOWNLOAD_TIME	../server/block.cpp	47;"	d	file:
MAX_BLOCK_SIGOPS	../proto/coin_proto.h	55;"	d
MAX_BLOCK_SIGOP_COST	../proto/coin_proto.h	58;"	d
MAX_BLOCK_SIZE	../proto/coin_proto.h	64;"	d
MAX_BLOCK_WEIGHT	../proto/coin_proto.h	69;"	d
MAX_BLOOM_FILTER_SIZE	../server/bloom.h	/^static const unsigned int MAX_BLOOM_FILTER_SIZE = 36000; \/\/ bytes$/;"	v
MAX_CLROPT	../server/color/color_block.h	49;"	d
MAX_COIN_IFACE	../proto/coin_proto.h	135;"	d
MAX_CONNECT_IDLE_TIME	../unet/unet.h	91;"	d
MAX_EMC2_STANDARD_TX_WEIGHT	../server/emc2/emc2_wallet.cpp	/^static const unsigned int MAX_EMC2_STANDARD_TX_WEIGHT = 400000;$/;"	v	file:
MAX_EXEC_SIZE	../server/ext/exec.h	33;"	d
MAX_FEERATE	../server/txfeerate.h	/^static const double MAX_FEERATE = 1e7;$/;"	v
MAX_FREE_TX_SIZE	../proto/coin_proto.h	113;"	d
MAX_HASH_FUNCS	../server/bloom.h	/^static const unsigned int MAX_HASH_FUNCS = 50;$/;"	v
MAX_HD_SEED_INDEX	../server/hdkey.cpp	52;"	d	file:
MAX_HEADERS_RESULTS	../proto/coin_proto.h	/^static const unsigned int MAX_HEADERS_RESULTS = 2000;$/;"	v
MAX_IDLE_TIME	../unet/unet.h	92;"	d
MAX_INV_SZ	../server/emc2/emc2_netmsg.cpp	/^static const unsigned int MAX_INV_SZ = 50000;$/;"	v	file:
MAX_INV_SZ	../server/ltc/ltc_netmsg.cpp	/^static const unsigned int MAX_INV_SZ = 50000;$/;"	v	file:
MAX_INV_SZ	../server/shc/shc_netmsg.cpp	/^static const unsigned int MAX_INV_SZ = 50000;$/;"	v	file:
MAX_INV_SZ	../server/testnet/testnet_netmsg.cpp	/^static const unsigned int MAX_INV_SZ = 50000;$/;"	v	file:
MAX_IPADDR_TABLE_SIZE	../unet/unet_local.c	31;"	d	file:
MAX_LTC_STANDARD_TX_WEIGHT	../server/ltc/ltc_wallet.cpp	/^static const unsigned int MAX_LTC_STANDARD_TX_WEIGHT = 400000;$/;"	v	file:
MAX_MEMPOOL_ACTIVE_SPAN	../server/txmempool.h	30;"	d
MAX_MEMPOOL_INVAL_SPAN	../server/txmempool.h	33;"	d
MAX_MEMPOOL_OVERFLOW_SPAN	../server/txmempool.h	31;"	d
MAX_MEMPOOL_PENDING_SPAN	../server/txmempool.h	32;"	d
MAX_MEMPOOL_STALE_SPAN	../server/txmempool.h	34;"	d
MAX_MODE_LENGTH	../server/ext/ext_param.h	/^		static const int MAX_MODE_LENGTH = 135;$/;"	m	class:CParam
MAX_MONEY	../proto/coin_proto.h	84;"	d
MAX_NONCE_SEQUENCE	../stratum/stratum_miner.cpp	55;"	d	file:
MAX_OPCODE	../server/block.cpp	51;"	d	file:
MAX_ORPHAN_TRANSACTIONS	../proto/coin_proto.h	72;"	d
MAX_PEERDB_TRACK_LIST_SIZE	../unet/unet_peerdb.c	32;"	d	file:
MAX_PEERDB_TRACK_PRUNE_SIZE	../unet/unet_peerdb.c	33;"	d	file:
MAX_PRIORITY	../server/txfeerate.h	/^static const double MAX_PRIORITY = 1e16;$/;"	v
MAX_REWARD_WAIT_TIME	../stratum/stratum_task.c	38;"	d	file:
MAX_ROUNDS_PER_HOUR	../stratum/stratum.h	38;"	d
MAX_ROUND_TIME	../stratum/stratum_task.c	37;"	d	file:
MAX_RPC_ARGS	../server/rpc/rpc_proto.h	40;"	d
MAX_RPC_ARG_TYPES	../server/rpc/rpc_proto.h	52;"	d
MAX_SCRIPT_ELEMENT_SIZE	../proto/coin_proto.h	181;"	d
MAX_SCRIPT_ELEMENT_SIZE	../server/emc2/emc2_netmsg.cpp	/^static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; \/* (bytes) *\/$/;"	v	file:
MAX_SCRIPT_ELEMENT_SIZE	../server/ltc/ltc_netmsg.cpp	/^static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; \/* (bytes) *\/$/;"	v	file:
MAX_SCRIPT_ELEMENT_SIZE	../server/shc/shc_netmsg.cpp	/^static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; \/\/ bytes$/;"	v	file:
MAX_SCRIPT_ELEMENT_SIZE	../server/testnet/testnet_netmsg.cpp	/^static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; \/\/ bytes$/;"	v	file:
MAX_SCRIPT_SIZE	../proto/coin_proto.h	178;"	d
MAX_SERVER_NONCE	../stratum/stratum_task.c	36;"	d	file:
MAX_SIZE	../server/serialize.h	/^static const unsigned int MAX_SIZE = 0x05000000;$/;"	v
MAX_SOCKET_BUFFER_SIZE	../unet/unet_close.c	28;"	d	file:
MAX_SPEED_STEP	../stratum/stratum.h	37;"	d
MAX_STRATUM_MESSAGE_SIZE	../stratum/stratum.h	44;"	d
MAX_STRATUM_USERS	../stratum/stratum_user.c	31;"	d	file:
MAX_TASK_LIFESPAN	../stratum/stratum_task.h	32;"	d
MAX_TEST_CASES	../test/CuTest.h	140;"	d
MAX_TRANSACTION_FEE	../proto/coin_proto.h	81;"	d
MAX_TRANSACTION_WEIGHT	../proto/coin_proto.h	75;"	d
MAX_TX_FEE	../proto/coin_proto.h	78;"	d
MAX_TX_SIGOP_COST	../proto/coin_proto.h	61;"	d
MAX_UNET_COIN_MODES	../unet/unet.h	47;"	d
MAX_UNET_MODES	../unet/unet.h	71;"	d
MAX_UNET_PEER_SCAN_SIZE	../unet/unet_peerdb.c	30;"	d	file:
MAX_USER_FLAGS	../stratum/stratum_user.c	43;"	d	file:
MAX_USER_WORK_DIFFICULTY	../stratum/stratum_user.c	40;"	d	file:
MAX_VALUE_SIZE	../server/ext/context.h	/^    static const unsigned int MAX_VALUE_SIZE = 4096;$/;"	m	class:CContext
MAX_VERSION_BITS_DEPLOYMENTS	../proto/coin_proto.h	/^    MAX_VERSION_BITS_DEPLOYMENTS$/;"	e	enum:DeploymentPos
MAX_WORDS	../server/mnemonic.cpp	1668;"	d	file:
MESSAGE_SIZE_OFFSET	../server/protocol.h	/^				MESSAGE_SIZE_OFFSET=MESSAGE_START_SIZE+COMMAND_SIZE,$/;"	e	enum:CMessageHeader::__anon8
MESSAGE_SIZE_SIZE	../server/protocol.h	/^				MESSAGE_SIZE_SIZE=sizeof(int),$/;"	e	enum:CMessageHeader::__anon8
MESSAGE_START_SIZE	../server/protocol.h	/^				MESSAGE_START_SIZE=4,$/;"	e	enum:CMessageHeader::__anon8
META_HD_KEY	../server/key.h	/^		static const int META_HD_KEY = (1 << 1);$/;"	m	class:CKeyMetadata
META_INTERNAL	../server/key.h	/^		static const int META_INTERNAL = (1 << 2);$/;"	m	class:CKeyMetadata
META_SEGWIT	../server/key.h	/^		static const int META_SEGWIT = (1 << 0);$/;"	m	class:CKeyMetadata
MI3	../server/algo/sph_luffa.c	369;"	d	file:
MI4	../server/algo/sph_luffa.c	571;"	d	file:
MI5	../server/algo/sph_luffa.c	841;"	d	file:
MIDLEN	../server/algo/blake2.c	13;"	d	file:
MIME_BMP	../stratum/stratum_http.h	31;"	d
MIME_HTML	../stratum/stratum_http.h	30;"	d
MIN3	../server/ext/altchain_color.c	484;"	d	file:
MIN_EMC2_PROTO_VERSION	../server/emc2/emc2_netmsg.cpp	62;"	d	file:
MIN_EXEC_CHECKPOINT_HEIGHT	../server/ext/exec.cpp	67;"	d	file:
MIN_EXEC_FEE	../server/ext/exec.cpp	65;"	d	file:
MIN_FEERATE	../server/txfeerate.h	/^static const double MIN_FEERATE = 10;$/;"	v
MIN_INPUT_VALUE	../proto/coin_proto.h	107;"	d
MIN_LTC_PROTO_VERSION	../server/ltc/ltc_netmsg.cpp	64;"	d	file:
MIN_PARAM_CONCENSUS_PERCENT	../server/ext/ext_param.cpp	43;"	d	file:
MIN_PARAM_CONCENSUS_TOTAL	../server/ext/ext_param.cpp	45;"	d	file:
MIN_PRIORITY	../server/txfeerate.h	/^static const double MIN_PRIORITY = 10;$/;"	v
MIN_RELAY_TX_FEE	../proto/coin_proto.h	96;"	d
MIN_SHARE_DIFFICULTY	../stratum/stratum_user.c	34;"	d	file:
MIN_SHC_PROTO_VERSION	../server/shc/shc_netmsg.cpp	68;"	d	file:
MIN_SUCCESS_PCT	../server/txfeerate.h	/^static const double MIN_SUCCESS_PCT = .95;$/;"	v
MIN_TESTNET_PROTO_VERSION	../server/testnet/testnet_netmsg.cpp	66;"	d	file:
MIN_TX_FEE	../proto/coin_proto.h	87;"	d
MIN_TX_FEE_RATE	../proto/coin_proto.h	90;"	d
MIN_USER_WORK_DIFFICULTY	../stratum/stratum_user.c	37;"	d	file:
MIN_VALIDATE_NOTARY_CONSENSUS	../server/matrix.cpp	35;"	d	file:
MIX_COLUMN	../server/algo/sph_echo.c	252;"	d	file:
MIX_COLUMN	../server/algo/sph_echo.c	276;"	d	file:
MIX_COLUMN	../server/algo/sph_echo.c	540;"	d	file:
MIX_COLUMN	../server/algo/sph_echo.c	564;"	d	file:
MIX_COLUMN1	../server/algo/sph_echo.c	256;"	d	file:
MIX_COLUMN1	../server/algo/sph_echo.c	544;"	d	file:
MIX_WORD	../server/algo/sph_luffa.c	302;"	d	file:
MIX_WORDW	../server/algo/sph_luffa.c	258;"	d	file:
MODAL	../server/ui_interface.h	/^        MODAL                 = 0x00040000$/;"	e	enum:CClientUIInterface::MessageBoxFlags
MORE	../server/ui_interface.h	/^        MORE                  = 0x00010000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
MOV64	../server/algo/sph_keccak.c	359;"	d	file:
MOV64	../server/algo/sph_keccak.c	763;"	d	file:
MSG_BLOCK	../server/net.h	/^    MSG_BLOCK,$/;"	e	enum:__anon7
MSG_CMPCT_BLOCK	../server/net.h	/^    MSG_CMPCT_BLOCK,$/;"	e	enum:__anon7
MSG_DONTWAIT	../unet/unet.h	86;"	d
MSG_FILTERED_BLOCK	../server/net.h	/^    MSG_FILTERED_BLOCK, \/* bloom *\/$/;"	e	enum:__anon7
MSG_FILTERED_WITNESS_BLOCK	../server/net.h	/^    MSG_FILTERED_WITNESS_BLOCK = MSG_FILTERED_BLOCK | MSG_WITNESS_FLAG$/;"	e	enum:__anon7
MSG_NOSIGNAL	../unet/unet.h	85;"	d
MSG_SIGN	../server/rpc/rpc_parse.cpp	/^const RPCOp MSG_SIGN = {$/;"	v
MSG_TX	../server/net.h	/^    MSG_TX = 1, $/;"	e	enum:__anon7
MSG_TYPE_MASK	../server/net.h	123;"	d
MSG_TYPE_MAX	../server/net.h	120;"	d
MSG_VERIFY	../server/rpc/rpc_parse.cpp	/^const RPCOp MSG_VERIFY = {$/;"	v
MSG_WITNESS_BLOCK	../server/net.h	/^    MSG_WITNESS_BLOCK = MSG_BLOCK | MSG_WITNESS_FLAG,$/;"	e	enum:__anon7
MSG_WITNESS_FLAG	../server/net.h	122;"	d
MSG_WITNESS_TX	../server/net.h	/^    MSG_WITNESS_TX = MSG_TX | MSG_WITNESS_FLAG,$/;"	e	enum:__anon7
M_SPRING	../server/matrix.h	/^    static const int M_SPRING = 2;$/;"	m	class:CTxMatrix
M_VALIDATE	../server/matrix.h	/^    static const int M_VALIDATE = 1;$/;"	m	class:CTxMatrix
Magic	../fractal/fractal_bmp.c	/^	USHORT		Magic;				\/* Magic identifier: "BM" *\/$/;"	m	struct:_BMP_Header	file:
Maj	../server/algo/sha512.cpp	/^uint64_t inline Maj(uint64_t x, uint64_t y, uint64_t z) { return (x & y) | (z & (x | y)); }$/;"	f	namespace:__anon18::sha512
Maj	../server/bolo/bolo_validation03.cpp	197;"	d	file:
Maj	../server/bolo/bolo_validation03.cpp	294;"	d	file:
Maj	../test/testcoin_algo.cpp	70;"	d	file:
MakeNewKey	../server/dikey.cpp	/^void DIKey::MakeNewKey()$/;"	f	class:DIKey
MakeNewKey	../server/dikey.h	/^    void MakeNewKey(bool fCompressed) \/* CKey *\/$/;"	f	class:DIKey
MakeNewKey	../server/eckey.cpp	/^void ECKey::MakeNewKey(bool fCompressed)$/;"	f	class:ECKey
MakeNewKey	../server/hdkey.cpp	/^void HDMasterPrivKey::MakeNewKey(bool fCompressed)$/;"	f	class:HDMasterPrivKey
MakeNewKey	../server/hdkey.cpp	/^void HDPrivKey::MakeNewKey(bool fCompressed)$/;"	f	class:HDPrivKey
MakeNewKey	../server/hdkey.h	/^    void MakeNewKey()$/;"	f	class:HDMasterPrivKey
MakeSameSize	../server/script.cpp	/^void MakeSameSize(valtype& vch1, valtype& vch2)$/;"	f
MakeTried	../server/addrman.cpp	/^void CAddrMan::MakeTried(CAddrInfo& info, int nId, int nOrigin)$/;"	f	class:CAddrMan
MapCheckpoints	../server/checkpoints.h	/^typedef std::map<int, uint256> MapCheckpoints;$/;"	t
MapPrevTx	../server/block.h	/^typedef std::map<uint256, std::pair<CTxIndex, CTransaction> > MapPrevTx;$/;"	t
Mapped_obj	../server/json/json_spirit_utils.h	/^    typedef std::map< std::string, Value > Mapped_obj;$/;"	t	namespace:json_spirit
MarkDirty	../server/wallet.cpp	/^void CWallet::MarkDirty()$/;"	f	class:CWallet
MarkDirty	../server/wallet.h	/^			 void MarkDirty()$/;"	f	class:CWalletTx
MarkSpent	../server/wallet.h	/^			 void MarkSpent(unsigned int nOut)$/;"	f	class:CWalletTx
Mask	../server/versionbits.cpp	/^      uint32_t Mask(CIface * params) const { return ((uint32_t)1) << params->vDeployments[id].bit; }$/;"	f	class:__anon15::VersionBitsConditionChecker
MergeKey	../server/dikey.cpp	/^void DIKey::MergeKey(CKey& childKey, cbuff tag)$/;"	f	class:DIKey
MergeKey	../server/eckey.cpp	/^void ECKey::MergeKey(CKey& childKey, cbuff tag)$/;"	f	class:ECKey
MerkleComputation	../server/wit_merkle.cpp	/^static void MerkleComputation(const std::vector<uint256>& leaves, uint256* proot, bool* pmutated, uint32_t branchpos, std::vector<uint256>* pbranch) $/;"	f	file:
MessageBoxFlags	../server/ui_interface.h	/^    enum MessageBoxFlags$/;"	g	class:CClientUIInterface
MoneyRange	../server/block.h	/^inline bool MoneyRange(CIface *iface, int64 nValue) $/;"	f
MoneyRange	../server/block.h	/^inline bool MoneyRange(int ifaceIndex, int64 nValue) $/;"	f
MoveTo	../server/sync.h	/^		void MoveTo(CSemaphoreGrant &grant) {$/;"	f	class:CSemaphoreGrant
Mp_iter	../server/json/json_spirit_reader_template.h	/^        typedef spirit_namespace::multi_pass< istream_iter > Mp_iter;$/;"	t	struct:json_spirit::Multi_pass_iters
Mp_iters	../server/json/json_spirit_stream_reader.h	/^        typedef Multi_pass_iters< Istream_type > Mp_iters;$/;"	t	class:json_spirit::Stream_reader
Mp_iters	../server/json/json_spirit_stream_reader.h	/^        typedef Multi_pass_iters< Istream_type > Mp_iters;$/;"	t	class:json_spirit::Stream_reader_thrower
Multi_pass_iters	../server/json/json_spirit_reader_template.h	/^        Multi_pass_iters( Istream_type& is )$/;"	f	struct:json_spirit::Multi_pass_iters
Multi_pass_iters	../server/json/json_spirit_reader_template.h	/^    struct Multi_pass_iters$/;"	s	namespace:json_spirit
MurmurHash3	../server/bloom.cpp	/^unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char>& vDataToHash)$/;"	f
Mx	../server/algo/sph_blake.c	296;"	d	file:
Mx_	../server/algo/sph_blake.c	297;"	d	file:
Mx__	../server/algo/sph_blake.c	298;"	d	file:
NATIVE_LITTLE_ENDIAN	../server/algo/blake2s.h	29;"	d
NET_I2P	../server/netbase.h	/^  NET_I2P,$/;"	e	enum:Network
NET_IPV4	../server/netbase.h	/^  NET_IPV4,$/;"	e	enum:Network
NET_IPV6	../server/netbase.h	/^  NET_IPV6,$/;"	e	enum:Network
NET_MAX	../server/netbase.h	/^  NET_MAX,$/;"	e	enum:Network
NET_TEREDO	../server/netbase.cpp	/^static const int NET_TEREDO  = NET_MAX + 1;$/;"	v	file:
NET_TOR	../server/netbase.h	/^  NET_TOR,$/;"	e	enum:Network
NET_UNKNOWN	../server/netbase.cpp	/^static const int NET_UNKNOWN = NET_MAX + 0;$/;"	v	file:
NET_UNROUTABLE	../server/netbase.h	/^  NET_UNROUTABLE,$/;"	e	enum:Network
NO	../server/ui_interface.h	/^        NO                    = 0x00000008,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
NODE_BLOOM	../server/protocol.h	/^	NODE_BLOOM = (1 << 2),$/;"	e	enum:__anon9
NODE_GETUTXO	../server/protocol.h	/^	NODE_GETUTXO = (1 << 1),$/;"	e	enum:__anon9
NODE_NETWORK	../server/protocol.h	/^	NODE_NETWORK = (1 << 0),$/;"	e	enum:__anon9
NODE_WITNESS	../server/protocol.h	/^	NODE_WITNESS = (1 << 3)$/;"	e	enum:__anon9
NOMINMAX	../server/compat.h	32;"	d
NOMINMAX	../server/util.cpp	55;"	d	file:
NOT64	../server/algo/sph_keccak.c	363;"	d	file:
NOT64	../server/algo/sph_keccak.c	767;"	d	file:
NO_DEFAULT	../server/ui_interface.h	/^        NO_DEFAULT            = 0x00000080,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
NULL_ACCOUNT	../server/wallet.cpp	/^const string NULL_ACCOUNT = "*";$/;"	v
Network	../server/netbase.h	/^enum Network$/;"	g
Neuter	../server/dikey.cpp	/^DIExtPubKey DIExtKey::Neuter() const $/;"	f	class:DIExtKey
Neuter	../server/eckey.cpp	/^ECExtPubKey ECExtKey::Neuter() const $/;"	f	class:ECExtKey
NewIterator	../server/leveldb.h	/^    leveldb::Iterator *NewIterator() {$/;"	f	class:CLevelDB
NewTx	../server/txfeerate.cpp	/^unsigned int TxConfirmStats::NewTx(unsigned int nBlockHeight, double val)$/;"	f	class:TxConfirmStats
NodeList	../proto/coin_proto.h	/^typedef std::vector<CNode *> NodeList;$/;"	t
NotifySharenet	../server/ext/alias.cpp	/^void CAlias::NotifySharenet(int ifaceIndex)$/;"	f	class:CAlias
NotifySharenet	../server/ext/certificate.cpp	/^void CCert::NotifySharenet(int ifaceIndex)$/;"	f	class:CCert
NotifySharenet	../server/ext/certificate.cpp	/^void CLicense::NotifySharenet(int ifaceIndex)$/;"	f	class:CLicense
NotifySharenet	../server/ext/context.cpp	/^void CContext::NotifySharenet(int ifaceIndex)$/;"	f	class:CContext
OFFER_ACCEPT	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_ACCEPT = {$/;"	v
OFFER_CANCEL	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_CANCEL = {$/;"	v
OFFER_COMMIT	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_COMMIT = {$/;"	v
OFFER_EXPIRE_SPAN	../server/ext/offer.cpp	35;"	d	file:
OFFER_INFO	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_INFO = {$/;"	v
OFFER_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_LIST = {$/;"	v
OFFER_NEW	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_NEW = {$/;"	v
OFFER_STATUS	../server/shc/shc_rpc.cpp	/^const RPCOp OFFER_STATUS = {$/;"	v
OK	../server/ui_interface.h	/^        OK                    = 0x00000004,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
OK_DEFAULT	../server/ui_interface.h	/^        OK_DEFAULT            = 0x00000000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
ONE_ROUND_BIG	../server/algo/sph_simd.c	791;"	d	file:
ONE_ROUND_SMALL	../server/algo/sph_simd.c	734;"	d	file:
OP_0	../server/script.h	/^    OP_0 = 0x00,$/;"	e	enum:opcodetype
OP_0NOTEQUAL	../server/script.h	/^    OP_0NOTEQUAL = 0x92,$/;"	e	enum:opcodetype
OP_1	../server/script.h	/^    OP_1 = 0x51,$/;"	e	enum:opcodetype
OP_10	../server/script.h	/^    OP_10 = 0x5a,$/;"	e	enum:opcodetype
OP_11	../server/script.h	/^    OP_11 = 0x5b,$/;"	e	enum:opcodetype
OP_12	../server/script.h	/^    OP_12 = 0x5c,$/;"	e	enum:opcodetype
OP_13	../server/script.h	/^    OP_13 = 0x5d,$/;"	e	enum:opcodetype
OP_14	../server/script.h	/^    OP_14 = 0x5e,$/;"	e	enum:opcodetype
OP_15	../server/script.h	/^    OP_15 = 0x5f,$/;"	e	enum:opcodetype
OP_16	../server/script.h	/^    OP_16 = 0x60,$/;"	e	enum:opcodetype
OP_1ADD	../server/script.h	/^    OP_1ADD = 0x8b,$/;"	e	enum:opcodetype
OP_1NEGATE	../server/script.h	/^    OP_1NEGATE = 0x4f,$/;"	e	enum:opcodetype
OP_1SUB	../server/script.h	/^    OP_1SUB = 0x8c,$/;"	e	enum:opcodetype
OP_2	../server/script.h	/^    OP_2 = 0x52,$/;"	e	enum:opcodetype
OP_2DIV	../server/script.h	/^    OP_2DIV = 0x8e,$/;"	e	enum:opcodetype
OP_2DROP	../server/script.h	/^    OP_2DROP = 0x6d,$/;"	e	enum:opcodetype
OP_2DUP	../server/script.h	/^    OP_2DUP = 0x6e,$/;"	e	enum:opcodetype
OP_2MUL	../server/script.h	/^    OP_2MUL = 0x8d,$/;"	e	enum:opcodetype
OP_2OVER	../server/script.h	/^    OP_2OVER = 0x70,$/;"	e	enum:opcodetype
OP_2ROT	../server/script.h	/^    OP_2ROT = 0x71,$/;"	e	enum:opcodetype
OP_2SWAP	../server/script.h	/^    OP_2SWAP = 0x72,$/;"	e	enum:opcodetype
OP_3	../server/script.h	/^    OP_3 = 0x53,$/;"	e	enum:opcodetype
OP_3DUP	../server/script.h	/^    OP_3DUP = 0x6f,$/;"	e	enum:opcodetype
OP_4	../server/script.h	/^    OP_4 = 0x54,$/;"	e	enum:opcodetype
OP_5	../server/script.h	/^    OP_5 = 0x55,$/;"	e	enum:opcodetype
OP_6	../server/script.h	/^    OP_6 = 0x56,$/;"	e	enum:opcodetype
OP_7	../server/script.h	/^    OP_7 = 0x57,$/;"	e	enum:opcodetype
OP_8	../server/script.h	/^    OP_8 = 0x58,$/;"	e	enum:opcodetype
OP_9	../server/script.h	/^    OP_9 = 0x59,$/;"	e	enum:opcodetype
OP_ABS	../server/script.h	/^    OP_ABS = 0x90,$/;"	e	enum:opcodetype
OP_ADD	../server/script.h	/^    OP_ADD = 0x93,$/;"	e	enum:opcodetype
OP_ALIAS	../server/script.h	/^    OP_ALIAS = 0x0a,$/;"	e	enum:opcodetype
OP_ALTCHAIN	../server/script.h	/^		OP_ALTCHAIN = 0x04,$/;"	e	enum:opcodetype
OP_AND	../server/script.h	/^    OP_AND = 0x84,$/;"	e	enum:opcodetype
OP_ASSET	../server/script.h	/^    OP_ASSET = 0x0f,$/;"	e	enum:opcodetype
OP_BOOLAND	../server/script.h	/^    OP_BOOLAND = 0x9a,$/;"	e	enum:opcodetype
OP_BOOLOR	../server/script.h	/^    OP_BOOLOR = 0x9b,$/;"	e	enum:opcodetype
OP_CAT	../server/script.h	/^    OP_CAT = 0x7e,$/;"	e	enum:opcodetype
OP_CERT	../server/script.h	/^    OP_CERT=0x0d,$/;"	e	enum:opcodetype
OP_CHANNEL	../server/script.h	/^    OP_CHANNEL = 0x07,$/;"	e	enum:opcodetype
OP_CHECKALTPROOF	../server/script.h	/^		OP_CHECKALTPROOF = 0xb7,$/;"	e	enum:opcodetype
OP_CHECKLOCKTIMEVERIFY	../server/script.h	/^		OP_CHECKLOCKTIMEVERIFY = 0xb1,$/;"	e	enum:opcodetype
OP_CHECKMULTISIG	../server/script.h	/^    OP_CHECKMULTISIG = 0xae,$/;"	e	enum:opcodetype
OP_CHECKMULTISIGVERIFY	../server/script.h	/^    OP_CHECKMULTISIGVERIFY = 0xaf,$/;"	e	enum:opcodetype
OP_CHECKSEQUENCEVERIFY	../server/script.h	/^		OP_CHECKSEQUENCEVERIFY = 0xb2,$/;"	e	enum:opcodetype
OP_CHECKSIG	../server/script.h	/^    OP_CHECKSIG = 0xac,$/;"	e	enum:opcodetype
OP_CHECKSIGVERIFY	../server/script.h	/^    OP_CHECKSIGVERIFY = 0xad,$/;"	e	enum:opcodetype
OP_CODESEPARATOR	../server/script.h	/^    OP_CODESEPARATOR = 0xab,$/;"	e	enum:opcodetype
OP_CONTEXT	../server/script.h	/^    OP_CONTEXT = 0x05,$/;"	e	enum:opcodetype
OP_DEPTH	../server/script.h	/^    OP_DEPTH = 0x74,$/;"	e	enum:opcodetype
OP_DIV	../server/script.h	/^    OP_DIV = 0x96,$/;"	e	enum:opcodetype
OP_DROP	../server/script.h	/^    OP_DROP = 0x75,$/;"	e	enum:opcodetype
OP_DUP	../server/script.h	/^    OP_DUP = 0x76,$/;"	e	enum:opcodetype
OP_ELSE	../server/script.h	/^    OP_ELSE = 0x67,$/;"	e	enum:opcodetype
OP_ENDIF	../server/script.h	/^    OP_ENDIF = 0x68,$/;"	e	enum:opcodetype
OP_EQUAL	../server/script.h	/^    OP_EQUAL = 0x87,$/;"	e	enum:opcodetype
OP_EQUALVERIFY	../server/script.h	/^    OP_EQUALVERIFY = 0x88,$/;"	e	enum:opcodetype
OP_EXEC	../server/script.h	/^    OP_EXEC = 0x06,$/;"	e	enum:opcodetype
OP_EXT_ACTIVATE	../server/script.h	/^    OP_EXT_ACTIVATE = 0xf1,$/;"	e	enum:opcodetype
OP_EXT_GENERATE	../server/script.h	/^    OP_EXT_GENERATE = 0xf4,$/;"	e	enum:opcodetype
OP_EXT_HASH	../server/script.h	/^    OP_EXT_HASH = 0xfc,$/;"	e	enum:opcodetype
OP_EXT_NEW	../server/script.h	/^    OP_EXT_NEW = 0xf0,$/;"	e	enum:opcodetype
OP_EXT_NOP8	../server/script.h	/^		OP_EXT_NOP8 = 0xf8,$/;"	e	enum:opcodetype
OP_EXT_NOP9	../server/script.h	/^		OP_EXT_NOP9 = 0xf9,$/;"	e	enum:opcodetype
OP_EXT_PAY	../server/script.h	/^    OP_EXT_PAY = 0xf6,$/;"	e	enum:opcodetype
OP_EXT_REMOVE	../server/script.h	/^    OP_EXT_REMOVE = 0xf3,$/;"	e	enum:opcodetype
OP_EXT_RESERVED1	../server/script.h	/^    OP_EXT_RESERVED1 = 0x01,$/;"	e	enum:opcodetype
OP_EXT_RESERVED2	../server/script.h	/^    OP_EXT_RESERVED2 = 0x02,$/;"	e	enum:opcodetype
OP_EXT_RESERVED8	../server/script.h	/^    OP_EXT_RESERVED8 = 0x08,$/;"	e	enum:opcodetype
OP_EXT_TRANSFER	../server/script.h	/^    OP_EXT_TRANSFER = 0xf5,$/;"	e	enum:opcodetype
OP_EXT_UPDATE	../server/script.h	/^    OP_EXT_UPDATE = 0xf2,$/;"	e	enum:opcodetype
OP_EXT_VALIDATE	../server/script.h	/^    OP_EXT_VALIDATE = 0xf7,$/;"	e	enum:opcodetype
OP_FALSE	../server/script.h	/^    OP_FALSE = OP_0,$/;"	e	enum:opcodetype
OP_FROMALTSTACK	../server/script.h	/^    OP_FROMALTSTACK = 0x6c,$/;"	e	enum:opcodetype
OP_GREATERTHAN	../server/script.h	/^    OP_GREATERTHAN = 0xa0,$/;"	e	enum:opcodetype
OP_GREATERTHANOREQUAL	../server/script.h	/^    OP_GREATERTHANOREQUAL = 0xa2,$/;"	e	enum:opcodetype
OP_HASH160	../server/script.h	/^    OP_HASH160 = 0xa9,$/;"	e	enum:opcodetype
OP_HASH256	../server/script.h	/^    OP_HASH256 = 0xaa,$/;"	e	enum:opcodetype
OP_IDENT	../server/script.h	/^    OP_IDENT=0x0c,$/;"	e	enum:opcodetype
OP_IF	../server/script.h	/^    OP_IF = 0x63,$/;"	e	enum:opcodetype
OP_IFDUP	../server/script.h	/^    OP_IFDUP = 0x73,$/;"	e	enum:opcodetype
OP_INVALIDOPCODE	../server/script.h	/^    OP_INVALIDOPCODE = 0xff,$/;"	e	enum:opcodetype
OP_INVERT	../server/script.h	/^    OP_INVERT = 0x83,$/;"	e	enum:opcodetype
OP_LEFT	../server/script.h	/^    OP_LEFT = 0x80,$/;"	e	enum:opcodetype
OP_LESSTHAN	../server/script.h	/^    OP_LESSTHAN = 0x9f,$/;"	e	enum:opcodetype
OP_LESSTHANOREQUAL	../server/script.h	/^    OP_LESSTHANOREQUAL = 0xa1,$/;"	e	enum:opcodetype
OP_LICENSE	../server/script.h	/^    OP_LICENSE = 0x0e,$/;"	e	enum:opcodetype
OP_LSHIFT	../server/script.h	/^    OP_LSHIFT = 0x98,$/;"	e	enum:opcodetype
OP_MATRIX	../server/script.h	/^    OP_MATRIX = 0x09,$/;"	e	enum:opcodetype
OP_MAX	../server/script.h	/^    OP_MAX = 0xa4,$/;"	e	enum:opcodetype
OP_MIN	../server/script.h	/^    OP_MIN = 0xa3,$/;"	e	enum:opcodetype
OP_MOD	../server/script.h	/^    OP_MOD = 0x97,$/;"	e	enum:opcodetype
OP_MUL	../server/script.h	/^    OP_MUL = 0x95,$/;"	e	enum:opcodetype
OP_NEGATE	../server/script.h	/^    OP_NEGATE = 0x8f,$/;"	e	enum:opcodetype
OP_NIP	../server/script.h	/^    OP_NIP = 0x77,$/;"	e	enum:opcodetype
OP_NOP	../server/script.h	/^    OP_NOP = 0x61,$/;"	e	enum:opcodetype
OP_NOP1	../server/script.h	/^		OP_NOP1 = 0xb0,$/;"	e	enum:opcodetype
OP_NOP10	../server/script.h	/^    OP_NOP10 = 0xb9,$/;"	e	enum:opcodetype
OP_NOP2	../server/script.h	/^		OP_NOP2 = OP_CHECKLOCKTIMEVERIFY,$/;"	e	enum:opcodetype
OP_NOP3	../server/script.h	/^		OP_NOP3 = OP_CHECKSEQUENCEVERIFY,$/;"	e	enum:opcodetype
OP_NOP4	../server/script.h	/^    OP_NOP4 = 0xb3,$/;"	e	enum:opcodetype
OP_NOP5	../server/script.h	/^    OP_NOP5 = 0xb4,$/;"	e	enum:opcodetype
OP_NOP6	../server/script.h	/^    OP_NOP6 = 0xb5,$/;"	e	enum:opcodetype
OP_NOP7	../server/script.h	/^    OP_NOP7 = 0xb6,$/;"	e	enum:opcodetype
OP_NOP8	../server/script.h	/^		OP_NOP8 = OP_CHECKALTPROOF,$/;"	e	enum:opcodetype
OP_NOP9	../server/script.h	/^    OP_NOP9 = 0xb8,$/;"	e	enum:opcodetype
OP_NOT	../server/script.h	/^    OP_NOT = 0x91,$/;"	e	enum:opcodetype
OP_NOTIF	../server/script.h	/^    OP_NOTIF = 0x64,$/;"	e	enum:opcodetype
OP_NUMEQUAL	../server/script.h	/^    OP_NUMEQUAL = 0x9c,$/;"	e	enum:opcodetype
OP_NUMEQUALVERIFY	../server/script.h	/^    OP_NUMEQUALVERIFY = 0x9d,$/;"	e	enum:opcodetype
OP_NUMNOTEQUAL	../server/script.h	/^    OP_NUMNOTEQUAL = 0x9e,$/;"	e	enum:opcodetype
OP_OFFER	../server/script.h	/^    OP_OFFER=0x0b,$/;"	e	enum:opcodetype
OP_OR	../server/script.h	/^    OP_OR = 0x85,$/;"	e	enum:opcodetype
OP_OVER	../server/script.h	/^    OP_OVER = 0x78,$/;"	e	enum:opcodetype
OP_PARAM	../server/script.h	/^		OP_PARAM = 0x03,$/;"	e	enum:opcodetype
OP_PICK	../server/script.h	/^    OP_PICK = 0x79,$/;"	e	enum:opcodetype
OP_PUBKEY	../server/script.h	/^    OP_PUBKEY = 0xfe,$/;"	e	enum:opcodetype
OP_PUBKEYHASH	../server/script.h	/^    OP_PUBKEYHASH = 0xfd,$/;"	e	enum:opcodetype
OP_PUBKEYS	../server/script.h	/^    OP_PUBKEYS = 0xfb,$/;"	e	enum:opcodetype
OP_PUSHDATA1	../server/script.h	/^    OP_PUSHDATA1 = 0x4c,$/;"	e	enum:opcodetype
OP_PUSHDATA2	../server/script.h	/^    OP_PUSHDATA2 = 0x4d,$/;"	e	enum:opcodetype
OP_PUSHDATA4	../server/script.h	/^    OP_PUSHDATA4 = 0x4e,$/;"	e	enum:opcodetype
OP_RESERVED	../server/script.h	/^    OP_RESERVED = 0x50,$/;"	e	enum:opcodetype
OP_RESERVED1	../server/script.h	/^    OP_RESERVED1 = 0x89,$/;"	e	enum:opcodetype
OP_RESERVED2	../server/script.h	/^    OP_RESERVED2 = 0x8a,$/;"	e	enum:opcodetype
OP_RETURN	../server/script.h	/^    OP_RETURN = 0x6a,$/;"	e	enum:opcodetype
OP_RIGHT	../server/script.h	/^    OP_RIGHT = 0x81,$/;"	e	enum:opcodetype
OP_RIPEMD160	../server/script.h	/^    OP_RIPEMD160 = 0xa6,$/;"	e	enum:opcodetype
OP_ROLL	../server/script.h	/^    OP_ROLL = 0x7a,$/;"	e	enum:opcodetype
OP_ROT	../server/script.h	/^    OP_ROT = 0x7b,$/;"	e	enum:opcodetype
OP_RSHIFT	../server/script.h	/^    OP_RSHIFT = 0x99,$/;"	e	enum:opcodetype
OP_SHA1	../server/script.h	/^    OP_SHA1 = 0xa7,$/;"	e	enum:opcodetype
OP_SHA256	../server/script.h	/^    OP_SHA256 = 0xa8,$/;"	e	enum:opcodetype
OP_SIZE	../server/script.h	/^    OP_SIZE = 0x82,$/;"	e	enum:opcodetype
OP_SMALLINTEGER	../server/script.h	/^    OP_SMALLINTEGER = 0xfa,$/;"	e	enum:opcodetype
OP_SUB	../server/script.h	/^    OP_SUB = 0x94,$/;"	e	enum:opcodetype
OP_SUBSTR	../server/script.h	/^    OP_SUBSTR = 0x7f,$/;"	e	enum:opcodetype
OP_SWAP	../server/script.h	/^    OP_SWAP = 0x7c,$/;"	e	enum:opcodetype
OP_TOALTSTACK	../server/script.h	/^    OP_TOALTSTACK = 0x6b,$/;"	e	enum:opcodetype
OP_TRUE	../server/script.h	/^    OP_TRUE=OP_1,$/;"	e	enum:opcodetype
OP_TUCK	../server/script.h	/^    OP_TUCK = 0x7d,$/;"	e	enum:opcodetype
OP_VER	../server/script.h	/^    OP_VER = 0x62,$/;"	e	enum:opcodetype
OP_VERIF	../server/script.h	/^    OP_VERIF = 0x65,$/;"	e	enum:opcodetype
OP_VERIFY	../server/script.h	/^    OP_VERIFY = 0x69,$/;"	e	enum:opcodetype
OP_VERNOTIF	../server/script.h	/^    OP_VERNOTIF = 0x66,$/;"	e	enum:opcodetype
OP_WITHIN	../server/script.h	/^    OP_WITHIN = 0xa5,$/;"	e	enum:opcodetype
OP_XOR	../server/script.h	/^    OP_XOR = 0x86,$/;"	e	enum:opcodetype
OR64	../server/algo/sph_keccak.c	362;"	d	file:
OR64	../server/algo/sph_keccak.c	766;"	d	file:
OUTPUT_SIZE	../server/algo/hmac_sha512.h	/^    static const size_t OUTPUT_SIZE = 64;$/;"	m	class:CHMAC_SHA512
OUTPUT_SIZE	../server/algo/sha512.h	/^    static const size_t OUTPUT_SIZE = 64;$/;"	m	class:CSHA512
OUTPUT_TYPE_BECH32	../server/coinaddr.h	38;"	d
OUTPUT_TYPE_DILITHIUM	../server/coinaddr.h	39;"	d
OUTPUT_TYPE_LEGACY	../server/coinaddr.h	36;"	d
OUTPUT_TYPE_NONE	../server/coinaddr.h	35;"	d
OUTPUT_TYPE_P2SH_SEGWIT	../server/coinaddr.h	37;"	d
Obj_member_type	../server/json/json_spirit_writer_template.h	/^        typedef typename Object_type::value_type Obj_member_type;$/;"	t	class:json_spirit::Generator
Object	../server/json/json_spirit_value.h	/^        typedef typename Config::Object_type Object;$/;"	t	class:json_spirit::Value_impl
Object	../server/json/json_spirit_value.h	/^    typedef Config::Object_type Object;$/;"	t	namespace:json_spirit
Object_type	../server/json/json_spirit_reader_template.h	/^        typedef typename Config_type::Object_type Object_type;$/;"	t	class:json_spirit::Semantic_actions
Object_type	../server/json/json_spirit_value.h	/^        typedef std::map< String_type, Value_type > Object_type;$/;"	t	struct:json_spirit::Config_map
Object_type	../server/json/json_spirit_value.h	/^        typedef std::vector< Pair_type > Object_type;$/;"	t	struct:json_spirit::Config_vector
Object_type	../server/json/json_spirit_writer_template.h	/^        typedef typename Config_type::Object_type Object_type;$/;"	t	class:json_spirit::Generator
OfferHoldAltCoin	../server/ext/offer.cpp	/^std::string OfferHoldAltCoin(CIface *iface, string strAccount, COffer *offer, int64 nValue)$/;"	f
Open	../server/txidx.cpp	/^bool CDBEnv::Open(boost::filesystem::path pathEnv_)$/;"	f	class:CDBEnv
OpenBlockFile	../server/main.cpp	/^FILE* OpenBlockFile(unsigned int nFile, unsigned int nBlockPos, const char* pszMode)$/;"	f
OpenChannel	../server/ext/channel.cpp	/^bool OpenChannel(int ifaceIndex, CWalletTx& wtx)$/;"	f
P0	../server/algo/sph_keccak.c	1139;"	d	file:
P1	../server/algo/sph_keccak.c	1141;"	d	file:
P10	../server/algo/sph_keccak.c	1159;"	d	file:
P11	../server/algo/sph_keccak.c	1161;"	d	file:
P12	../server/algo/sph_keccak.c	1163;"	d	file:
P12_TO_P0	../server/algo/sph_keccak.c	1349;"	d	file:
P13	../server/algo/sph_keccak.c	1165;"	d	file:
P14	../server/algo/sph_keccak.c	1167;"	d	file:
P15	../server/algo/sph_keccak.c	1169;"	d	file:
P16	../server/algo/sph_keccak.c	1171;"	d	file:
P17	../server/algo/sph_keccak.c	1173;"	d	file:
P18	../server/algo/sph_keccak.c	1175;"	d	file:
P19	../server/algo/sph_keccak.c	1177;"	d	file:
P1_TO_P0	../server/algo/sph_keccak.c	1188;"	d	file:
P2	../server/algo/sph_keccak.c	1143;"	d	file:
P20	../server/algo/sph_keccak.c	1179;"	d	file:
P21	../server/algo/sph_keccak.c	1181;"	d	file:
P22	../server/algo/sph_keccak.c	1183;"	d	file:
P23	../server/algo/sph_keccak.c	1185;"	d	file:
P2_TO_P0	../server/algo/sph_keccak.c	1217;"	d	file:
P3	../server/algo/sph_keccak.c	1145;"	d	file:
P3	../server/algo/sph_luffa.c	406;"	d	file:
P3	../server/algo/sph_luffa.c	458;"	d	file:
P4	../server/algo/sph_keccak.c	1147;"	d	file:
P4	../server/algo/sph_luffa.c	625;"	d	file:
P4	../server/algo/sph_luffa.c	701;"	d	file:
P4_TO_P0	../server/algo/sph_keccak.c	1247;"	d	file:
P5	../server/algo/sph_keccak.c	1149;"	d	file:
P5	../server/algo/sph_luffa.c	1001;"	d	file:
P5	../server/algo/sph_luffa.c	915;"	d	file:
P6	../server/algo/sph_keccak.c	1151;"	d	file:
P6_TO_P0	../server/algo/sph_keccak.c	1279;"	d	file:
P7	../server/algo/sph_keccak.c	1153;"	d	file:
P8	../server/algo/sph_keccak.c	1155;"	d	file:
P8_TO_P0	../server/algo/sph_keccak.c	1313;"	d	file:
P9	../server/algo/sph_keccak.c	1157;"	d	file:
PAGESIZE	../server/allocators.h	46;"	d
PAIRTYPE	../server/util.h	48;"	d
PARAM_GET	../server/shc/shc_rpc.cpp	/^const RPCOp PARAM_GET = {$/;"	v
PARAM_LIST	../server/shc/shc_rpc.cpp	/^const RPCOp PARAM_LIST = {$/;"	v
PARAM_VALUE	../server/shc/shc_rpc.cpp	/^const RPCOp PARAM_VALUE = {$/;"	v
PBKDF2_SHA256	../server/algo/scrypt.c	/^PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,$/;"	f	file:
PC32dn	../server/algo/sph_groestl.c	140;"	d	file:
PC32dn	../server/algo/sph_groestl.c	98;"	d	file:
PC32up	../server/algo/sph_groestl.c	139;"	d	file:
PC32up	../server/algo/sph_groestl.c	97;"	d	file:
PC64	../server/algo/sph_groestl.c	122;"	d	file:
PC64	../server/algo/sph_groestl.c	157;"	d	file:
PEER_ADD	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_ADD = {$/;"	v
PEER_COUNT	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_COUNT = {$/;"	v
PEER_EXPORT	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_EXPORT = {$/;"	v
PEER_HASHPS	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_HASHPS = {$/;"	v
PEER_IMPORT	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_IMPORT = {$/;"	v
PEER_IMPORTDAT	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_IMPORTDAT = {$/;"	v
PEER_INFO	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_INFO = {$/;"	v
PEER_LIST	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_LIST = {$/;"	v
PEER_REMOVE	../server/rpc/rpc_parse.cpp	/^const RPCOp PEER_REMOVE = {$/;"	v
PERM_BIG_P	../server/algo/sph_groestl.c	1597;"	d	file:
PERM_BIG_P	../server/algo/sph_groestl.c	2681;"	d	file:
PERM_BIG_P	../server/algo/sph_groestl.c	2695;"	d	file:
PERM_BIG_Q	../server/algo/sph_groestl.c	1605;"	d	file:
PERM_BIG_Q	../server/algo/sph_groestl.c	2687;"	d	file:
PERM_BIG_Q	../server/algo/sph_groestl.c	2703;"	d	file:
PERM_SMALL_P	../server/algo/sph_groestl.c	1318;"	d	file:
PERM_SMALL_P	../server/algo/sph_groestl.c	1336;"	d	file:
PERM_SMALL_P	../server/algo/sph_groestl.c	2298;"	d	file:
PERM_SMALL_P	../server/algo/sph_groestl.c	2312;"	d	file:
PERM_SMALL_Q	../server/algo/sph_groestl.c	1324;"	d	file:
PERM_SMALL_Q	../server/algo/sph_groestl.c	1344;"	d	file:
PERM_SMALL_Q	../server/algo/sph_groestl.c	2304;"	d	file:
PERM_SMALL_Q	../server/algo/sph_groestl.c	2320;"	d	file:
POOL_ACTIVE	../server/txmempool.h	37;"	d
POOL_DEPENDENCY	../server/txmempool.h	48;"	d
POOL_FEE_LOW	../server/txmempool.h	43;"	d
POOL_INVALID	../server/txmempool.h	40;"	d
POOL_NOT_FINAL	../server/txmempool.h	44;"	d
POOL_NO_INPUT	../server/txmempool.h	46;"	d
POOL_OVERFLOW	../server/txmempool.h	39;"	d
POOL_PENDING	../server/txmempool.h	38;"	d
POOL_PEND_TX	../server/txmempool.h	45;"	d
POOL_SOFT_LIMIT	../server/txmempool.h	47;"	d
POOL_STALE	../server/txmempool.h	41;"	d
POST_BLOCK_TIME	../stratum/stratum_task.c	40;"	d	file:
PP4_0_0	../server/algo/sph_simd.c	461;"	d	file:
PP4_0_1	../server/algo/sph_simd.c	462;"	d	file:
PP4_0_2	../server/algo/sph_simd.c	463;"	d	file:
PP4_0_3	../server/algo/sph_simd.c	464;"	d	file:
PP4_1_0	../server/algo/sph_simd.c	465;"	d	file:
PP4_1_1	../server/algo/sph_simd.c	466;"	d	file:
PP4_1_2	../server/algo/sph_simd.c	467;"	d	file:
PP4_1_3	../server/algo/sph_simd.c	468;"	d	file:
PP4_2_0	../server/algo/sph_simd.c	469;"	d	file:
PP4_2_1	../server/algo/sph_simd.c	470;"	d	file:
PP4_2_2	../server/algo/sph_simd.c	471;"	d	file:
PP4_2_3	../server/algo/sph_simd.c	472;"	d	file:
PP8_0_0	../server/algo/sph_simd.c	474;"	d	file:
PP8_0_1	../server/algo/sph_simd.c	475;"	d	file:
PP8_0_2	../server/algo/sph_simd.c	476;"	d	file:
PP8_0_3	../server/algo/sph_simd.c	477;"	d	file:
PP8_0_4	../server/algo/sph_simd.c	478;"	d	file:
PP8_0_5	../server/algo/sph_simd.c	479;"	d	file:
PP8_0_6	../server/algo/sph_simd.c	480;"	d	file:
PP8_0_7	../server/algo/sph_simd.c	481;"	d	file:
PP8_1_0	../server/algo/sph_simd.c	483;"	d	file:
PP8_1_1	../server/algo/sph_simd.c	484;"	d	file:
PP8_1_2	../server/algo/sph_simd.c	485;"	d	file:
PP8_1_3	../server/algo/sph_simd.c	486;"	d	file:
PP8_1_4	../server/algo/sph_simd.c	487;"	d	file:
PP8_1_5	../server/algo/sph_simd.c	488;"	d	file:
PP8_1_6	../server/algo/sph_simd.c	489;"	d	file:
PP8_1_7	../server/algo/sph_simd.c	490;"	d	file:
PP8_2_0	../server/algo/sph_simd.c	492;"	d	file:
PP8_2_1	../server/algo/sph_simd.c	493;"	d	file:
PP8_2_2	../server/algo/sph_simd.c	494;"	d	file:
PP8_2_3	../server/algo/sph_simd.c	495;"	d	file:
PP8_2_4	../server/algo/sph_simd.c	496;"	d	file:
PP8_2_5	../server/algo/sph_simd.c	497;"	d	file:
PP8_2_6	../server/algo/sph_simd.c	498;"	d	file:
PP8_2_7	../server/algo/sph_simd.c	499;"	d	file:
PP8_3_0	../server/algo/sph_simd.c	501;"	d	file:
PP8_3_1	../server/algo/sph_simd.c	502;"	d	file:
PP8_3_2	../server/algo/sph_simd.c	503;"	d	file:
PP8_3_3	../server/algo/sph_simd.c	504;"	d	file:
PP8_3_4	../server/algo/sph_simd.c	505;"	d	file:
PP8_3_5	../server/algo/sph_simd.c	506;"	d	file:
PP8_3_6	../server/algo/sph_simd.c	507;"	d	file:
PP8_3_7	../server/algo/sph_simd.c	508;"	d	file:
PP8_4_0	../server/algo/sph_simd.c	510;"	d	file:
PP8_4_1	../server/algo/sph_simd.c	511;"	d	file:
PP8_4_2	../server/algo/sph_simd.c	512;"	d	file:
PP8_4_3	../server/algo/sph_simd.c	513;"	d	file:
PP8_4_4	../server/algo/sph_simd.c	514;"	d	file:
PP8_4_5	../server/algo/sph_simd.c	515;"	d	file:
PP8_4_6	../server/algo/sph_simd.c	516;"	d	file:
PP8_4_7	../server/algo/sph_simd.c	517;"	d	file:
PP8_5_0	../server/algo/sph_simd.c	519;"	d	file:
PP8_5_1	../server/algo/sph_simd.c	520;"	d	file:
PP8_5_2	../server/algo/sph_simd.c	521;"	d	file:
PP8_5_3	../server/algo/sph_simd.c	522;"	d	file:
PP8_5_4	../server/algo/sph_simd.c	523;"	d	file:
PP8_5_5	../server/algo/sph_simd.c	524;"	d	file:
PP8_5_6	../server/algo/sph_simd.c	525;"	d	file:
PP8_5_7	../server/algo/sph_simd.c	526;"	d	file:
PP8_6_0	../server/algo/sph_simd.c	528;"	d	file:
PP8_6_1	../server/algo/sph_simd.c	529;"	d	file:
PP8_6_2	../server/algo/sph_simd.c	530;"	d	file:
PP8_6_3	../server/algo/sph_simd.c	531;"	d	file:
PP8_6_4	../server/algo/sph_simd.c	532;"	d	file:
PP8_6_5	../server/algo/sph_simd.c	533;"	d	file:
PP8_6_6	../server/algo/sph_simd.c	534;"	d	file:
PP8_6_7	../server/algo/sph_simd.c	535;"	d	file:
PRI64d	../server/util.h	37;"	d
PRI64d	../server/util.h	41;"	d
PRI64u	../server/util.h	38;"	d
PRI64u	../server/util.h	42;"	d
PRI64x	../server/util.h	39;"	d
PRI64x	../server/util.h	43;"	d
PRI_SPACING	../server/txfeerate.h	/^static const double PRI_SPACING = 2;$/;"	v
PROTO_EXT_VERSION	../server/ext/txext.h	/^  static const int PROTO_EXT_VERSION = 1;$/;"	m	class:CExtCore
PUBKEY_ADDRESS	../test/testcoin_bip32.cpp	/^	PUBKEY_ADDRESS,$/;"	e	enum:Base58Type	file:
PUBKEY_ADDRESS	../test/testcoin_sip33.cpp	/^	PUBKEY_ADDRESS,$/;"	e	enum:Base58Type	file:
PUBKEY_C_ADDRESS	../server/coinaddr.h	/^			PUBKEY_C_ADDRESS = 29,$/;"	e	enum:CCoinAddr::__anon4
PUBKEY_E_ADDRESS	../server/coinaddr.h	/^			PUBKEY_E_ADDRESS = 33,$/;"	e	enum:CCoinAddr::__anon4
PUBKEY_G_ADDRESS	../server/coinaddr.h	/^			PUBKEY_G_ADDRESS = 38,$/;"	e	enum:CCoinAddr::__anon4
PUBKEY_L_ADDRESS	../server/coinaddr.h	/^			PUBKEY_L_ADDRESS = 48,$/;"	e	enum:CCoinAddr::__anon4
PUBKEY_S_ADDRESS	../server/coinaddr.h	/^			PUBKEY_S_ADDRESS = 62,$/;"	e	enum:CCoinAddr::__anon4
PUBKEY_T_ADDRESS	../server/coinaddr.h	/^			PUBKEY_T_ADDRESS = 65,$/;"	e	enum:CCoinAddr::__anon4
Pair	../server/json/json_spirit_value.h	/^    typedef Config::Pair_type   Pair;$/;"	t	namespace:json_spirit
Pair_impl	../server/json/json_spirit_value.h	/^    Pair_impl< Config >::Pair_impl( const String_type& name, const Value_type& value )$/;"	f	class:json_spirit::Pair_impl
Pair_impl	../server/json/json_spirit_value.h	/^    struct Pair_impl$/;"	s	namespace:json_spirit
Pair_type	../server/json/json_spirit_value.h	/^        typedef Pair_impl < Config_vector > Pair_type;$/;"	t	struct:json_spirit::Config_vector
Pair_type	../server/json/json_spirit_value.h	/^        typedef typename Object_type::value_type Pair_type;$/;"	t	struct:json_spirit::Config_map
Palette	../fractal/fractal_bmp.c	/^	UCHAR*		Palette;$/;"	m	struct:_BMP	file:
ParseColorOptScript	../server/color/color_block.cpp	/^void ParseColorOptScript(color_opt& opt, CScript script)$/;"	f
ParseHex	../server/util.cpp	/^vector<unsigned char> ParseHex(const char* psz)$/;"	f
ParseHex	../server/util.cpp	/^vector<unsigned char> ParseHex(const string& str)$/;"	f
ParseMoney	../server/coin.cpp	/^bool ParseMoney(const char* pszIn, CAmount& nRet)$/;"	f
ParseMoney	../server/coin.cpp	/^bool ParseMoney(const string& str, CAmount& nRet)$/;"	f
ParseNetwork	../server/netbase.cpp	/^enum Network ParseNetwork(std::string net) {$/;"	f
ParseParameters	../server/util.cpp	/^void ParseParameters(int argc, const char* const argv[])$/;"	f
ParseString	../server/util.cpp	/^void ParseString(const string& str, char c, vector<string>& v)$/;"	f
PartiallyDownloadedBlock	../server/block_cmpct.h	/^		explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}$/;"	f	class:PartiallyDownloadedBlock
PartiallyDownloadedBlock	../server/block_cmpct.h	/^class PartiallyDownloadedBlock $/;"	c
PayOffer	../server/block.cpp	/^COffer *CTransaction::PayOffer(COffer *accept)$/;"	f	class:CTransaction
PerformBlockChainOperation	../server/chain.cpp	/^void PerformBlockChainOperation(int ifaceIndex)$/;"	f
Period	../server/versionbits.cpp	/^      int Period(CIface * params) const { return params->nMinerConfirmationWindow; }$/;"	f	class:__anon15::VersionBitsConditionChecker
Planes	../fractal/fractal_bmp.c	/^	USHORT		Planes;				\/* Number of color planes in the bitmap *\/$/;"	m	struct:_BMP_Header	file:
PolyMod	../server/bech32.cpp	/^	uint32_t PolyMod(const cbuff& v)$/;"	f	namespace:__anon2
PopTx	../server/txmempool.cpp	/^bool CPool::PopTx(const CTransaction& tx, CPoolTx& ptx)$/;"	f	class:CPool
Posn_iter_t	../server/json/json_spirit_stream_reader.h	/^        typedef spirit_namespace::position_iterator< typename Mp_iters::Mp_iter > Posn_iter_t;$/;"	t	class:json_spirit::Stream_reader_thrower
PrefilledTransaction	../server/block_cmpct.h	/^struct PrefilledTransaction $/;"	s
PrintException	../server/util.cpp	/^void PrintException(std::exception* pex, const char* pszThread)$/;"	f
PrintExceptionContinue	../server/util.cpp	/^void PrintExceptionContinue(std::exception* pex, const char* pszThread)$/;"	f
PrintHex	../server/script.h	/^    void PrintHex() const$/;"	f	class:CScript
PrintHex	../server/util.h	/^inline void PrintHex(const std::vector<unsigned char>& vch, const char* pszFormat="%s", bool fSpaces=true)$/;"	f
PrintHex	../server/util.h	/^void PrintHex(const T pbegin, const T pend, const char* pszFormat="%s", bool fSpaces=true)$/;"	f
PrintLockContention	../server/sync.cpp	/^void PrintLockContention(const char* pszName, const char* pszFile, int nLine)$/;"	f
PrintWallet	../server/wallet.cpp	/^void CWallet::PrintWallet(const CBlock& block)$/;"	f	class:CWallet
ProcessAssetTx	../server/ext/asset.cpp	/^bool ProcessAssetTx(CIface *iface, CTransaction& tx, int nHeight)$/;"	f
ProcessBlock	../server/block.cpp	/^bool ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
ProcessBlockAvailability	../server/chain.cpp	/^void ProcessBlockAvailability(int ifaceIndex, CNode *pfrom)$/;"	f
ProcessExecGenerateTx	../server/ext/exec.cpp	/^static int ProcessExecGenerateTx(int ifaceIndex, CExec *execIn, CExecCall *exec, shjson_t **param_p, bool bGenerate)$/;"	f	file:
ProcessExecTx	../server/ext/exec.cpp	/^int ProcessExecTx(CIface *iface, CNode *pfrom, CTransaction& tx, int64 nHeight)$/;"	f
ProcessNewAssetTx	../server/ext/asset.cpp	/^bool ProcessNewAssetTx(CIface *iface, CTransaction& tx)$/;"	f
ProcessNewBlockHeaders	../server/validation.cpp	/^bool ProcessNewBlockHeaders(CIface *iface, std::vector<CBlockHeader>& headers, CBlockIndex** ppindex)$/;"	f
ProcessRemoveAssetTx	../server/ext/asset.cpp	/^bool ProcessRemoveAssetTx(CIface *iface, CTransaction& tx)$/;"	f
ProcessUpdateAssetTx	../server/ext/asset.cpp	/^bool ProcessUpdateAssetTx(CIface *iface, CTransaction& tx)$/;"	f
ProcessValidateMatrixNotaryTx	../server/matrix.cpp	/^bool ProcessValidateMatrixNotaryTx(CIface *iface, const CTransaction& tx)$/;"	f
PurgeActiveTx	../server/txmempool.cpp	/^void CPool::PurgeActiveTx()$/;"	f	class:CPool
PurgeOverflowTx	../server/txmempool.cpp	/^void CPool::PurgeOverflowTx()$/;"	f	class:CPool
PurgePendingTx	../server/txmempool.cpp	/^void CPool::PurgePendingTx()$/;"	f	class:CPool
PushAddress	../server/net.h	/^    void PushAddress(const CAddress& addr)$/;"	f	class:CNode
PushAll	../server/script.cpp	/^static CScript PushAll(const vector<valtype>& values)$/;"	f	file:
PushAll	../server/txsignature.cpp	/^static CScript PushAll(const vector<valtype>& values)$/;"	f	file:
PushBlock	../server/netbase.cpp	/^void CNode::PushBlock(const CBlock& block, int nFlag)$/;"	f	class:CNode
PushBlockHash	../server/net.h	/^		void PushBlockHash(const uint256 &hash)$/;"	f	class:CNode
PushInventory	../server/net.h	/^    void PushInventory(const CInv& inv)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6, const T7& a7)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6, const T7& a7, const T8& a8)$/;"	f	class:CNode
PushMessage	../server/net.h	/^    void PushMessage(const char* pszCommand, const T1& a1, const T2& a2, const T3& a3, const T4& a4, const T5& a5, const T6& a6, const T7& a7, const T8& a8, const T9& a9)$/;"	f	class:CNode
PushReject	../server/net.h	/^		void PushReject(std::string mode, uint256 hash, int err_code, std::string err_text)$/;"	f	class:CNode
PushRequest	../server/net.h	/^    void PushRequest(const char* pszCommand, const T1& a1, const T2& a2,$/;"	f	class:CNode
PushRequest	../server/net.h	/^    void PushRequest(const char* pszCommand, const T1& a1,$/;"	f	class:CNode
PushRequest	../server/net.h	/^    void PushRequest(const char* pszCommand,$/;"	f	class:CNode
PushTx	../server/netbase.cpp	/^void CNode::PushTx(const CTransaction& tx, int flags)$/;"	f	class:CNode
QC32dn	../server/algo/sph_groestl.c	100;"	d	file:
QC32dn	../server/algo/sph_groestl.c	142;"	d	file:
QC32up	../server/algo/sph_groestl.c	141;"	d	file:
QC32up	../server/algo/sph_groestl.c	99;"	d	file:
QC64	../server/algo/sph_groestl.c	123;"	d	file:
QC64	../server/algo/sph_groestl.c	158;"	d	file:
QDBMP_VERSION_MAJOR	../fractal/fractal_bmp.h	83;"	d
QDBMP_VERSION_MINOR	../fractal/fractal_bmp.h	84;"	d
QDBMP_VERSION_PATCH	../fractal/fractal_bmp.h	85;"	d
Qb	../server/algo/sph_bmw.c	515;"	d	file:
Qs	../server/algo/sph_bmw.c	408;"	d	file:
R	../server/bolo/bolo_validation03.cpp	199;"	d	file:
R	../server/bolo/bolo_validation03.cpp	296;"	d	file:
R32d	../server/algo/sph_groestl.c	137;"	d	file:
R32d	../server/algo/sph_groestl.c	95;"	d	file:
R32u	../server/algo/sph_groestl.c	136;"	d	file:
R32u	../server/algo/sph_groestl.c	94;"	d	file:
R64	../server/algo/sph_groestl.c	121;"	d	file:
R64	../server/algo/sph_groestl.c	156;"	d	file:
RANDOM_REPEATS	../test/testcoin_coin.cpp	19;"	d	file:
RBTT	../server/algo/sph_groestl.c	1389;"	d	file:
RBTT	../server/algo/sph_groestl.c	1402;"	d	file:
RBTT	../server/algo/sph_groestl.c	2365;"	d	file:
RBTT	../server/algo/sph_groestl.c	2394;"	d	file:
RC	../server/algo/sph_keccak.c	/^static const sph_u64 RC[] = {$/;"	v	file:
RC	../server/algo/sph_keccak.c	/^} RC[] = {$/;"	v	typeref:struct:__anon34	file:
RC00	../server/algo/sph_luffa.c	/^static const sph_u32 RC00[8] = {$/;"	v	file:
RC04	../server/algo/sph_luffa.c	/^static const sph_u32 RC04[8] = {$/;"	v	file:
RC10	../server/algo/sph_luffa.c	/^static const sph_u32 RC10[8] = {$/;"	v	file:
RC14	../server/algo/sph_luffa.c	/^static const sph_u32 RC14[8] = {$/;"	v	file:
RC20	../server/algo/sph_luffa.c	/^static const sph_u32 RC20[8] = {$/;"	v	file:
RC24	../server/algo/sph_luffa.c	/^static const sph_u32 RC24[8] = {$/;"	v	file:
RC30	../server/algo/sph_luffa.c	/^static const sph_u32 RC30[8] = {$/;"	v	file:
RC34	../server/algo/sph_luffa.c	/^static const sph_u32 RC34[8] = {$/;"	v	file:
RC40	../server/algo/sph_luffa.c	/^static const sph_u32 RC40[8] = {$/;"	v	file:
RC44	../server/algo/sph_luffa.c	/^static const sph_u32 RC44[8] = {$/;"	v	file:
RCW010	../server/algo/sph_luffa.c	/^static const sph_u64 RCW010[8] = {$/;"	v	file:
RCW014	../server/algo/sph_luffa.c	/^static const sph_u64 RCW014[8] = {$/;"	v	file:
RCW230	../server/algo/sph_luffa.c	/^static const sph_u64 RCW230[8] = {$/;"	v	file:
RCW234	../server/algo/sph_luffa.c	/^static const sph_u64 RCW234[8] = {$/;"	v	file:
READ64	../server/algo/sph_keccak.c	655;"	d	file:
READDATA	../server/serialize.h	111;"	d
READWRITE	../server/serialize.h	100;"	d
READ_STATE	../server/algo/sph_cubehash.c	140;"	d	file:
READ_STATE	../server/algo/sph_cubehash.c	184;"	d	file:
READ_STATE	../server/algo/sph_jh.c	258;"	d	file:
READ_STATE	../server/algo/sph_jh.c	552;"	d	file:
READ_STATE	../server/algo/sph_keccak.c	180;"	d	file:
READ_STATE	../server/algo/sph_keccak.c	204;"	d	file:
READ_STATE	../server/algo/sph_keccak.c	520;"	d	file:
READ_STATE	../server/algo/sph_keccak.c	549;"	d	file:
READ_STATE3	../server/algo/sph_luffa.c	315;"	d	file:
READ_STATE32	../server/algo/sph_blake.c	478;"	d	file:
READ_STATE4	../server/algo/sph_luffa.c	501;"	d	file:
READ_STATE5	../server/algo/sph_luffa.c	755;"	d	file:
READ_STATE64	../server/algo/sph_blake.c	641;"	d	file:
READ_STATE_BIG	../server/algo/sph_groestl.c	1379;"	d	file:
READ_STATE_BIG	../server/algo/sph_groestl.c	2355;"	d	file:
READ_STATE_BIG	../server/algo/sph_simd.c	543;"	d	file:
READ_STATE_BIG	../server/algo/sph_simd.c	595;"	d	file:
READ_STATE_BIG	../server/algo/sph_skein.c	697;"	d	file:
READ_STATE_BIG	../server/algo/sph_skein.c	727;"	d	file:
READ_STATE_SMALL	../server/algo/sph_groestl.c	1224;"	d	file:
READ_STATE_SMALL	../server/algo/sph_groestl.c	2208;"	d	file:
READ_STATE_SMALL	../server/algo/sph_simd.c	540;"	d	file:
READ_STATE_SMALL	../server/algo/sph_simd.c	551;"	d	file:
READ_STATUS_CHECKBLOCK_FAILED	../server/block_cmpct.h	/^    READ_STATUS_CHECKBLOCK_FAILED, \/\/ Used only by FillBlock to indicate a$/;"	e	enum:ReadStatus_t
READ_STATUS_FAILED	../server/block_cmpct.h	/^    READ_STATUS_FAILED, \/\/ Failed to process object$/;"	e	enum:ReadStatus_t
READ_STATUS_INVALID	../server/block_cmpct.h	/^    READ_STATUS_INVALID, \/\/ Invalid object, peer is sending bogus$/;"	e	enum:ReadStatus_t
READ_STATUS_OK	../server/block_cmpct.h	/^    READ_STATUS_OK,$/;"	e	enum:ReadStatus_t
REDS1	../server/algo/sph_simd.c	93;"	d	file:
REDS2	../server/algo/sph_simd.c	94;"	d	file:
REF	../server/serialize.h	/^inline T& REF(const T& val)$/;"	f
REJECT_CHECKPOINT	../server/net.h	/^static const unsigned char REJECT_CHECKPOINT = 0x43;$/;"	v
REJECT_DUPLICATE	../server/net.h	/^static const unsigned char REJECT_DUPLICATE = 0x12;$/;"	v
REJECT_INSUFFICIENTFEE	../server/net.h	/^static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;$/;"	v
REJECT_INVALID	../server/net.h	/^static const unsigned char REJECT_INVALID = 0x10;$/;"	v
REJECT_MALFORMED	../server/net.h	/^static const unsigned char REJECT_MALFORMED = 0x01;$/;"	v
REJECT_NONSTANDARD	../server/net.h	/^static const unsigned char REJECT_NONSTANDARD = 0x40;$/;"	v
REJECT_OBSOLETE	../server/net.h	/^static const unsigned char REJECT_OBSOLETE = 0x11;$/;"	v
RESET	../server/ui_interface.h	/^        RESET                 = 0x00004000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
RGB_TABLE_MAX	../server/ext/altchain_color.c	15;"	d	file:
RHO	../server/algo/sph_keccak.c	1016;"	d	file:
RND	../server/bolo/bolo_validation03.cpp	216;"	d	file:
RND	../server/bolo/bolo_validation03.cpp	286;"	d	file:
RND	../test/testcoin_algo.cpp	78;"	d	file:
RNDr	../test/testcoin_algo.cpp	87;"	d	file:
ROL32	../server/algo/sph_simd.c	55;"	d	file:
ROL64	../server/algo/sph_keccak.c	364;"	d	file:
ROL64	../server/algo/sph_keccak.c	768;"	d	file:
ROL64_0	../server/algo/sph_keccak.c	798;"	d	file:
ROL64_0	../server/algo/sph_keccak.c	872;"	d	file:
ROL64_1	../server/algo/sph_keccak.c	799;"	d	file:
ROL64_1	../server/algo/sph_keccak.c	873;"	d	file:
ROL64_10	../server/algo/sph_keccak.c	808;"	d	file:
ROL64_10	../server/algo/sph_keccak.c	882;"	d	file:
ROL64_11	../server/algo/sph_keccak.c	809;"	d	file:
ROL64_11	../server/algo/sph_keccak.c	883;"	d	file:
ROL64_12	../server/algo/sph_keccak.c	810;"	d	file:
ROL64_12	../server/algo/sph_keccak.c	884;"	d	file:
ROL64_13	../server/algo/sph_keccak.c	811;"	d	file:
ROL64_13	../server/algo/sph_keccak.c	885;"	d	file:
ROL64_14	../server/algo/sph_keccak.c	812;"	d	file:
ROL64_14	../server/algo/sph_keccak.c	886;"	d	file:
ROL64_15	../server/algo/sph_keccak.c	813;"	d	file:
ROL64_15	../server/algo/sph_keccak.c	887;"	d	file:
ROL64_16	../server/algo/sph_keccak.c	814;"	d	file:
ROL64_16	../server/algo/sph_keccak.c	888;"	d	file:
ROL64_17	../server/algo/sph_keccak.c	815;"	d	file:
ROL64_17	../server/algo/sph_keccak.c	889;"	d	file:
ROL64_18	../server/algo/sph_keccak.c	816;"	d	file:
ROL64_18	../server/algo/sph_keccak.c	890;"	d	file:
ROL64_19	../server/algo/sph_keccak.c	817;"	d	file:
ROL64_19	../server/algo/sph_keccak.c	891;"	d	file:
ROL64_2	../server/algo/sph_keccak.c	800;"	d	file:
ROL64_2	../server/algo/sph_keccak.c	874;"	d	file:
ROL64_20	../server/algo/sph_keccak.c	818;"	d	file:
ROL64_20	../server/algo/sph_keccak.c	892;"	d	file:
ROL64_21	../server/algo/sph_keccak.c	819;"	d	file:
ROL64_21	../server/algo/sph_keccak.c	893;"	d	file:
ROL64_22	../server/algo/sph_keccak.c	820;"	d	file:
ROL64_22	../server/algo/sph_keccak.c	894;"	d	file:
ROL64_23	../server/algo/sph_keccak.c	821;"	d	file:
ROL64_23	../server/algo/sph_keccak.c	895;"	d	file:
ROL64_24	../server/algo/sph_keccak.c	822;"	d	file:
ROL64_24	../server/algo/sph_keccak.c	896;"	d	file:
ROL64_25	../server/algo/sph_keccak.c	823;"	d	file:
ROL64_25	../server/algo/sph_keccak.c	897;"	d	file:
ROL64_26	../server/algo/sph_keccak.c	824;"	d	file:
ROL64_26	../server/algo/sph_keccak.c	898;"	d	file:
ROL64_27	../server/algo/sph_keccak.c	825;"	d	file:
ROL64_27	../server/algo/sph_keccak.c	899;"	d	file:
ROL64_28	../server/algo/sph_keccak.c	826;"	d	file:
ROL64_28	../server/algo/sph_keccak.c	900;"	d	file:
ROL64_29	../server/algo/sph_keccak.c	827;"	d	file:
ROL64_29	../server/algo/sph_keccak.c	901;"	d	file:
ROL64_3	../server/algo/sph_keccak.c	801;"	d	file:
ROL64_3	../server/algo/sph_keccak.c	875;"	d	file:
ROL64_30	../server/algo/sph_keccak.c	828;"	d	file:
ROL64_30	../server/algo/sph_keccak.c	902;"	d	file:
ROL64_31	../server/algo/sph_keccak.c	829;"	d	file:
ROL64_31	../server/algo/sph_keccak.c	903;"	d	file:
ROL64_32	../server/algo/sph_keccak.c	830;"	d	file:
ROL64_32	../server/algo/sph_keccak.c	905;"	d	file:
ROL64_33	../server/algo/sph_keccak.c	831;"	d	file:
ROL64_33	../server/algo/sph_keccak.c	919;"	d	file:
ROL64_34	../server/algo/sph_keccak.c	832;"	d	file:
ROL64_34	../server/algo/sph_keccak.c	920;"	d	file:
ROL64_35	../server/algo/sph_keccak.c	833;"	d	file:
ROL64_35	../server/algo/sph_keccak.c	921;"	d	file:
ROL64_36	../server/algo/sph_keccak.c	834;"	d	file:
ROL64_36	../server/algo/sph_keccak.c	922;"	d	file:
ROL64_37	../server/algo/sph_keccak.c	835;"	d	file:
ROL64_37	../server/algo/sph_keccak.c	923;"	d	file:
ROL64_38	../server/algo/sph_keccak.c	836;"	d	file:
ROL64_38	../server/algo/sph_keccak.c	924;"	d	file:
ROL64_39	../server/algo/sph_keccak.c	837;"	d	file:
ROL64_39	../server/algo/sph_keccak.c	925;"	d	file:
ROL64_4	../server/algo/sph_keccak.c	802;"	d	file:
ROL64_4	../server/algo/sph_keccak.c	876;"	d	file:
ROL64_40	../server/algo/sph_keccak.c	838;"	d	file:
ROL64_40	../server/algo/sph_keccak.c	926;"	d	file:
ROL64_41	../server/algo/sph_keccak.c	839;"	d	file:
ROL64_41	../server/algo/sph_keccak.c	927;"	d	file:
ROL64_42	../server/algo/sph_keccak.c	840;"	d	file:
ROL64_42	../server/algo/sph_keccak.c	928;"	d	file:
ROL64_43	../server/algo/sph_keccak.c	841;"	d	file:
ROL64_43	../server/algo/sph_keccak.c	929;"	d	file:
ROL64_44	../server/algo/sph_keccak.c	842;"	d	file:
ROL64_44	../server/algo/sph_keccak.c	930;"	d	file:
ROL64_45	../server/algo/sph_keccak.c	843;"	d	file:
ROL64_45	../server/algo/sph_keccak.c	931;"	d	file:
ROL64_46	../server/algo/sph_keccak.c	844;"	d	file:
ROL64_46	../server/algo/sph_keccak.c	932;"	d	file:
ROL64_47	../server/algo/sph_keccak.c	845;"	d	file:
ROL64_47	../server/algo/sph_keccak.c	933;"	d	file:
ROL64_48	../server/algo/sph_keccak.c	846;"	d	file:
ROL64_48	../server/algo/sph_keccak.c	934;"	d	file:
ROL64_49	../server/algo/sph_keccak.c	847;"	d	file:
ROL64_49	../server/algo/sph_keccak.c	935;"	d	file:
ROL64_5	../server/algo/sph_keccak.c	803;"	d	file:
ROL64_5	../server/algo/sph_keccak.c	877;"	d	file:
ROL64_50	../server/algo/sph_keccak.c	848;"	d	file:
ROL64_50	../server/algo/sph_keccak.c	936;"	d	file:
ROL64_51	../server/algo/sph_keccak.c	849;"	d	file:
ROL64_51	../server/algo/sph_keccak.c	937;"	d	file:
ROL64_52	../server/algo/sph_keccak.c	850;"	d	file:
ROL64_52	../server/algo/sph_keccak.c	938;"	d	file:
ROL64_53	../server/algo/sph_keccak.c	851;"	d	file:
ROL64_53	../server/algo/sph_keccak.c	939;"	d	file:
ROL64_54	../server/algo/sph_keccak.c	852;"	d	file:
ROL64_54	../server/algo/sph_keccak.c	940;"	d	file:
ROL64_55	../server/algo/sph_keccak.c	853;"	d	file:
ROL64_55	../server/algo/sph_keccak.c	941;"	d	file:
ROL64_56	../server/algo/sph_keccak.c	854;"	d	file:
ROL64_56	../server/algo/sph_keccak.c	942;"	d	file:
ROL64_57	../server/algo/sph_keccak.c	855;"	d	file:
ROL64_57	../server/algo/sph_keccak.c	943;"	d	file:
ROL64_58	../server/algo/sph_keccak.c	856;"	d	file:
ROL64_58	../server/algo/sph_keccak.c	944;"	d	file:
ROL64_59	../server/algo/sph_keccak.c	857;"	d	file:
ROL64_59	../server/algo/sph_keccak.c	945;"	d	file:
ROL64_6	../server/algo/sph_keccak.c	804;"	d	file:
ROL64_6	../server/algo/sph_keccak.c	878;"	d	file:
ROL64_60	../server/algo/sph_keccak.c	858;"	d	file:
ROL64_60	../server/algo/sph_keccak.c	946;"	d	file:
ROL64_61	../server/algo/sph_keccak.c	859;"	d	file:
ROL64_61	../server/algo/sph_keccak.c	947;"	d	file:
ROL64_62	../server/algo/sph_keccak.c	860;"	d	file:
ROL64_62	../server/algo/sph_keccak.c	948;"	d	file:
ROL64_63	../server/algo/sph_keccak.c	861;"	d	file:
ROL64_63	../server/algo/sph_keccak.c	949;"	d	file:
ROL64_7	../server/algo/sph_keccak.c	805;"	d	file:
ROL64_7	../server/algo/sph_keccak.c	879;"	d	file:
ROL64_8	../server/algo/sph_keccak.c	806;"	d	file:
ROL64_8	../server/algo/sph_keccak.c	880;"	d	file:
ROL64_9	../server/algo/sph_keccak.c	807;"	d	file:
ROL64_9	../server/algo/sph_keccak.c	881;"	d	file:
ROL64_big	../server/algo/sph_keccak.c	912;"	d	file:
ROL64_even	../server/algo/sph_keccak.c	793;"	d	file:
ROL64_odd	../server/algo/sph_keccak.c	786;"	d	file:
ROL64_odd1	../server/algo/sph_keccak.c	772;"	d	file:
ROL64_odd63	../server/algo/sph_keccak.c	779;"	d	file:
ROL64_small	../server/algo/sph_keccak.c	865;"	d	file:
ROLLING_FEE_HALFLIFE	../server/txfeerate.cpp	59;"	d	file:
RORc	../server/bolo/bolo_validation03.cpp	195;"	d	file:
RORc	../server/bolo/bolo_validation03.cpp	292;"	d	file:
ROTL	../server/algo/scrypt.c	195;"	d	file:
ROTL32	../server/algo/sph_cubehash.c	135;"	d	file:
ROTL32	../server/bloom.cpp	/^inline uint32_t ROTL32 ( uint32_t x, int8_t r )$/;"	f
ROTR	../test/testcoin_algo.cpp	71;"	d	file:
ROUND	../server/algo/blake2s.c	243;"	d	file:
ROUND	../server/algo/blake2s.c	269;"	d	file:
ROUND_B	../server/algo/sph_blake.c	438;"	d	file:
ROUND_B	../server/algo/sph_blake.c	459;"	d	file:
ROUND_BIG_P	../server/algo/sph_groestl.c	1417;"	d	file:
ROUND_BIG_P	../server/algo/sph_groestl.c	1491;"	d	file:
ROUND_BIG_P	../server/algo/sph_groestl.c	2417;"	d	file:
ROUND_BIG_P	../server/algo/sph_groestl.c	2539;"	d	file:
ROUND_BIG_Q	../server/algo/sph_groestl.c	1453;"	d	file:
ROUND_BIG_Q	../server/algo/sph_groestl.c	1543;"	d	file:
ROUND_BIG_Q	../server/algo/sph_groestl.c	2477;"	d	file:
ROUND_BIG_Q	../server/algo/sph_groestl.c	2608;"	d	file:
ROUND_EVEN	../server/algo/sph_cubehash.c	267;"	d	file:
ROUND_ODD	../server/algo/sph_cubehash.c	366;"	d	file:
ROUND_S	../server/algo/sph_blake.c	389;"	d	file:
ROUND_S	../server/algo/sph_blake.c	410;"	d	file:
ROUND_SMALL_P	../server/algo/sph_groestl.c	1260;"	d	file:
ROUND_SMALL_P	../server/algo/sph_groestl.c	2238;"	d	file:
ROUND_SMALL_Q	../server/algo/sph_groestl.c	1288;"	d	file:
ROUND_SMALL_Q	../server/algo/sph_groestl.c	2267;"	d	file:
RPAR	../server/algo/sph_keccak.c	1390;"	d	file:
RPCConvertParam	../server/rpc/rpc_parse.cpp	/^static void RPCConvertParam(CIface *iface, RPCOp *op, int arg_idx, Array& param)$/;"	f	file:
RPCConvertTo	../server/rpc/rpc_parse.cpp	/^void RPCConvertTo(string strJSON, Value& value)$/;"	f
RPCConvertToAddr	../server/rpc/rpc_parse.cpp	/^static string RPCConvertToAddr(CIface *iface, string str)$/;"	f	file:
RPCOp	../server/rpc/rpc_proto.h	/^class RPCOp$/;"	c
RPCTypeCheck	../server/rpc/rpc_parse.cpp	/^void RPCTypeCheck(const Array& params,$/;"	f
RPCTypeCheck	../server/rpc/rpc_parse.cpp	/^void RPCTypeCheck(const Object& o,$/;"	f
RPC_ACCOUNT	../server/rpc/rpc_proto.h	50;"	d
RPC_ARRAY	../server/rpc/rpc_proto.h	48;"	d
RPC_AUTH_FREQ	../server/rpc/rpc_parse.cpp	57;"	d	file:
RPC_AUTH_FREQ	../stratum/stratum.h	41;"	d
RPC_BOOL	../server/rpc/rpc_proto.h	47;"	d
RPC_COINADDR	../server/rpc/rpc_proto.h	51;"	d
RPC_DOUBLE	../server/rpc/rpc_proto.h	46;"	d
RPC_INT	../server/rpc/rpc_proto.h	44;"	d
RPC_INT64	../server/rpc/rpc_proto.h	45;"	d
RPC_NULL	../server/rpc/rpc_proto.h	42;"	d
RPC_OBJECT	../server/rpc/rpc_proto.h	49;"	d
RPC_STRING	../server/rpc/rpc_proto.h	43;"	d
RSTT	../server/algo/sph_groestl.c	1234;"	d	file:
RSTT	../server/algo/sph_groestl.c	1247;"	d	file:
RSTT	../server/algo/sph_groestl.c	2219;"	d	file:
RUN_TESTS	../test/testcoin_coin.cpp	15;"	d	file:
RaiseValidity	../server/block.h	/^    bool RaiseValidity(int nUpTo)$/;"	f	class:CBlockIndex
RandAddSeed	../server/util.cpp	/^void RandAddSeed()$/;"	f
Raw	../server/hdkey.h	/^    cbuff Raw() const$/;"	f	class:HDPrivKey
Raw	../server/key.h	/^		std::vector<unsigned char> Raw() const $/;"	f	class:CPubKey
ReacceptWalletTransactions	../server/color/color_wallet.cpp	/^void COLORWallet::ReacceptWalletTransactions()$/;"	f	class:COLORWallet
ReacceptWalletTransactions	../server/emc2/emc2_wallet.cpp	/^void EMC2Wallet::ReacceptWalletTransactions()$/;"	f	class:EMC2Wallet
ReacceptWalletTransactions	../server/ltc/ltc_wallet.cpp	/^void LTCWallet::ReacceptWalletTransactions()$/;"	f	class:LTCWallet
ReacceptWalletTransactions	../server/shc/shc_wallet.cpp	/^void SHCWallet::ReacceptWalletTransactions()$/;"	f	class:SHCWallet
ReacceptWalletTransactions	../server/test/test_wallet.cpp	/^void TESTWallet::ReacceptWalletTransactions()$/;"	f	class:TESTWallet
ReacceptWalletTransactions	../server/testnet/testnet_wallet.cpp	/^void TESTNETWallet::ReacceptWalletTransactions()$/;"	f	class:TESTNETWallet
Read	../server/addrman.cpp	/^bool CAddrDB::Read(CAddrMan& addr)$/;"	f	class:CAddrDB
Read	../server/leveldb.h	/^    template<typename K, typename V> bool Read(const K& key, V& value) throw(leveldb_error) {$/;"	f	class:CLevelDB
Read	../server/txidx.h	/^      bool Read(const K& key, T& value)$/;"	f	class:CDB
ReadAccount	../server/walletdb.cpp	/^bool CWalletDB::ReadAccount(const string& strAccount, CAccount& account)$/;"	f	class:CWalletDB
ReadArchBlock	../server/color/color_block.cpp	/^bool COLORBlock::ReadArchBlock(uint256 hash)$/;"	f	class:COLORBlock
ReadArchBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::ReadArchBlock(uint256 hash)$/;"	f	class:EMC2Block
ReadArchBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::ReadArchBlock(uint256 hash)$/;"	f	class:LTCBlock
ReadArchBlock	../server/shc/shc_block.cpp	/^bool SHCBlock::ReadArchBlock(uint256 hash)$/;"	f	class:SHCBlock
ReadArchBlock	../server/test/test_block.cpp	/^bool TESTBlock::ReadArchBlock(uint256 hash)$/;"	f	class:TESTBlock
ReadArchBlock	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::ReadArchBlock(uint256 hash)$/;"	f	class:TESTNETBlock
ReadArchTx	../server/wallettx.cpp	/^bool CWallet::ReadArchTx(uint256 hash, CWalletTx& wtx) const$/;"	f	class:CWallet
ReadAtCursor	../server/txidx.h	/^    int ReadAtCursor(Dbc* pcursor, CDataStream& ssKey, CDataStream& ssValue, unsigned int fFlags=DB_NEXT)$/;"	f	class:CDB
ReadBE64	../server/algo/sha512.cpp	/^uint64_t static inline ReadBE64(const unsigned char* ptr)$/;"	f	file:
ReadBestBlock	../server/walletdb.h	/^    bool ReadBestBlock(CBlockLocator& locator)$/;"	f	class:CWalletDB
ReadBestChain	../server/global.cpp	/^uint256 ReadBestChain(CIface *iface)$/;"	f
ReadBlock	../server/color/color_block.cpp	/^bool COLORBlock::ReadBlock(uint64_t nHeight)$/;"	f	class:COLORBlock
ReadBlock	../server/emc2/emc2_block.cpp	/^bool EMC2Block::ReadBlock(uint64_t nHeight)$/;"	f	class:EMC2Block
ReadBlock	../server/ltc/ltc_block.cpp	/^bool LTCBlock::ReadBlock(uint64_t nHeight)$/;"	f	class:LTCBlock
ReadBlock	../server/shc/shc_block.cpp	/^bool SHCBlock::ReadBlock(uint64_t nHeight)$/;"	f	class:SHCBlock
ReadBlock	../server/test/test_block.cpp	/^bool TESTBlock::ReadBlock(uint64_t nHeight)$/;"	f	class:TESTBlock
ReadBlock	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::ReadBlock(uint64_t nHeight)$/;"	f	class:TESTNETBlock
ReadCScript	../server/walletdb.h	/^    bool ReadCScript(const uint160 &hash, CScript& redeemScript)$/;"	f	class:CWalletDB
ReadCoins	../server/coin.cpp	/^bool CTransaction::ReadCoins(int ifaceIndex, vector<uint256>& vOuts)$/;"	f	class:CTransaction
ReadCompactSize	../server/serialize.h	/^uint64 ReadCompactSize(Stream& is)$/;"	f
ReadDefaultKey	../server/walletdb.h	/^    bool ReadDefaultKey(std::vector<unsigned char>& vchPubKey)$/;"	f	class:CWalletDB
ReadDiskTx	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx)$/;"	f	class:EMC2TxDB
ReadDiskTx	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx, CTxIndex& txindex)$/;"	f	class:EMC2TxDB
ReadDiskTx	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::ReadDiskTx(uint256 hash, CTransaction& tx)$/;"	f	class:EMC2TxDB
ReadDiskTx	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::ReadDiskTx(uint256 hash, CTransaction& tx, CTxIndex& txindex)$/;"	f	class:EMC2TxDB
ReadDiskTx	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx)$/;"	f	class:LTCTxDB
ReadDiskTx	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx, CTxIndex& txindex)$/;"	f	class:LTCTxDB
ReadDiskTx	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::ReadDiskTx(uint256 hash, CTransaction& tx)$/;"	f	class:LTCTxDB
ReadDiskTx	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::ReadDiskTx(uint256 hash, CTransaction& tx, CTxIndex& txindex)$/;"	f	class:LTCTxDB
ReadDiskTx	../server/shc/shc_txidx.cpp	/^bool SHCTxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx)$/;"	f	class:SHCTxDB
ReadDiskTx	../server/shc/shc_txidx.cpp	/^bool SHCTxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx, CTxIndex& txindex)$/;"	f	class:SHCTxDB
ReadDiskTx	../server/shc/shc_txidx.cpp	/^bool SHCTxDB::ReadDiskTx(uint256 hash, CTransaction& tx)$/;"	f	class:SHCTxDB
ReadDiskTx	../server/shc/shc_txidx.cpp	/^bool SHCTxDB::ReadDiskTx(uint256 hash, CTransaction& tx, CTxIndex& txindex)$/;"	f	class:SHCTxDB
ReadDiskTx	../server/txidx.cpp	/^bool CTxDB::ReadDiskTx(COutPoint outpoint, CTransaction& tx)$/;"	f	class:CTxDB
ReadDiskTx	../server/txidx.cpp	/^bool CTxDB::ReadDiskTx(uint256 hash, CTransaction& tx)$/;"	f	class:CTxDB
ReadFlag	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::ReadFlag(const std::string &name, bool &fValue) $/;"	f	class:EMC2TxDB
ReadFlag	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::ReadFlag(const std::string &name, bool &fValue) $/;"	f	class:LTCTxDB
ReadFromDisk	../server/block.cpp	/^bool CBlock::ReadFromDisk(const CBlockIndex* pindex, bool fReadTransactions)$/;"	f	class:CBlock
ReadFromDisk	../server/main.cpp	/^bool CTransaction::ReadFromDisk(int ifaceIndex, COutPoint prevout)$/;"	f	class:CTransaction
ReadGlobalVar	../server/global.cpp	/^const char *ReadGlobalVar(char *tag, char *var)$/;"	f
ReadHashBestChain	../server/coin.cpp	/^bool ReadHashBestChain(CIface *iface, uint256& ret_hash)$/;"	f
ReadHashBestChain	../server/txidx.cpp	/^bool CTxDB::ReadHashBestChain(uint256& hashBestChain)$/;"	f	class:CTxDB
ReadHeader	../fractal/fractal_bmp.c	/^int	ReadHeader( BMP* bmp, FILE* f )$/;"	f
ReadKey	../server/walletdb.h	/^    bool ReadKey(const CPubKey& vchPubKey, CPrivKey& vchPrivKey)$/;"	f	class:CWalletDB
ReadName	../server/walletdb.h	/^    bool ReadName(const std::string& strAddress, std::string& strName)$/;"	f	class:CWalletDB
ReadSetting	../server/walletdb.h	/^    bool ReadSetting(const std::string& strKey, T& value)$/;"	f	class:CWalletDB
ReadStatus	../server/block_cmpct.h	/^} ReadStatus;$/;"	t	typeref:enum:ReadStatus_t
ReadStatus_t	../server/block_cmpct.h	/^typedef enum ReadStatus_t$/;"	g
ReadTx	../server/block.cpp	/^bool CTransaction::ReadTx(int ifaceIndex, uint256 txHash)$/;"	f	class:CTransaction
ReadTx	../server/block.cpp	/^bool CTransaction::ReadTx(int ifaceIndex, uint256 txHash, uint256 *hashBlock)$/;"	f	class:CTransaction
ReadTx	../server/walletdb.h	/^    bool ReadTx(uint256 hash, CWalletTx& wtx)$/;"	f	class:CWalletDB
ReadTxIndex	../server/txidx.cpp	/^bool CTxDB::ReadTxIndex(uint256 hash, CTxIndex& txindex)$/;"	f	class:CTxDB
ReadUINT	../fractal/fractal_bmp.c	/^int	ReadUINT( UINT* x, FILE* f )$/;"	f
ReadUSHORT	../fractal/fractal_bmp.c	/^int	ReadUSHORT( USHORT *x, FILE* f )$/;"	f
ReadVersion	../server/global.cpp	/^int ReadVersion(CIface *iface)$/;"	f
ReadVersion	../server/serialize.h	/^    void ReadVersion()           { *this >> nVersion; }$/;"	f	class:CAutoFile
ReadVersion	../server/serialize.h	/^    void ReadVersion()           { *this >> nVersion; }$/;"	f	class:CDataStream
ReadVersion	../server/txidx.h	/^    bool ReadVersion(int& nVersion)$/;"	f	class:CDB
ReceiveBufferSize	../server/net.h	/^inline unsigned int ReceiveBufferSize() { return 1000*GetArg("-maxreceivebuffer", 5*1000); }$/;"	f
Record	../server/txfeerate.cpp	/^void TxConfirmStats::Record(int blocksToConfirm, double val)$/;"	f	class:TxConfirmStats
RefillInputs	../server/txmempool.cpp	/^bool CPool::RefillInputs(CPoolTx& ptx)$/;"	f	class:CPool
RegisterRPCAlias	../server/rpc/rpc_parse.cpp	/^void RegisterRPCAlias(int ifaceIndex, string name, const RPCOp& op)$/;"	f
RegisterRPCOp	../server/rpc/rpc_parse.cpp	/^void RegisterRPCOp(int ifaceIndex, string name, const RPCOp& op)$/;"	f
RegisterRPCOpDefaults	../server/rpc/rpc_parse.cpp	/^void RegisterRPCOpDefaults(int ifaceIndex)$/;"	f
RelayInventory	../server/net.h	/^inline void RelayInventory(const CInv& inv)$/;"	f
RelayMessage	../server/net.h	/^inline void RelayMessage<>(const CInv& inv, const CDataStream& ss)$/;"	f
RelayMessage	../server/net.h	/^void RelayMessage(const CInv& inv, const T& a)$/;"	f
RelayTransaction	../server/wallet.cpp	/^void RelayTransaction(int ifaceIndex, const CTransaction& tx, const uint256& hash)$/;"	f
RelayValidateMatrixNotaryTx	../server/matrix.cpp	/^bool RelayValidateMatrixNotaryTx(CIface *iface, const CTransaction& txMatrix, CTransaction *txIn)$/;"	f
RelayWalletTransaction	../server/color/color_wallet.cpp	/^void COLORWallet::RelayWalletTransaction(CWalletTx& wtx)$/;"	f	class:COLORWallet
RelayWalletTransaction	../server/emc2/emc2_wallet.cpp	/^void EMC2Wallet::RelayWalletTransaction(CWalletTx& wtx)$/;"	f	class:EMC2Wallet
RelayWalletTransaction	../server/ltc/ltc_wallet.cpp	/^void LTCWallet::RelayWalletTransaction(CWalletTx& wtx)$/;"	f	class:LTCWallet
RelayWalletTransaction	../server/shc/shc_wallet.cpp	/^void SHCWallet::RelayWalletTransaction(CWalletTx& wtx)$/;"	f	class:SHCWallet
RelayWalletTransaction	../server/test/test_wallet.cpp	/^void TESTWallet::RelayWalletTransaction(CWalletTx& wtx)$/;"	f	class:TESTWallet
RelayWalletTransaction	../server/testnet/testnet_wallet.cpp	/^void TESTNETWallet::RelayWalletTransaction(CWalletTx& wtx)$/;"	f	class:TESTNETWallet
Release	../server/net.h	/^    void Release()$/;"	f	class:CNode
Release	../server/sync.h	/^		void Release() {$/;"	f	class:CSemaphoreGrant
RemoveAlias	../server/block.cpp	/^CAlias *CTransaction::RemoveAlias(std::string name)$/;"	f	class:CTransaction
RemoveAliasScriptPrefix	../server/ext/alias.cpp	/^CScript RemoveAliasScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveAliasTx	../server/ext/alias.cpp	/^bool RemoveAliasTx(CIface *iface, CTransaction& tx)$/;"	f
RemoveAltChainScriptPrefix	../server/ext/altchain.cpp	/^CScript RemoveAltChainScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveAsset	../server/block.cpp	/^CAsset *CTransaction::RemoveAsset(const CAsset& assetIn)$/;"	f	class:CTransaction
RemoveAssetScriptPrefix	../server/ext/asset.cpp	/^CScript RemoveAssetScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveBloomFilter	../server/net.h	/^    void RemoveBloomFilter()$/;"	f	class:CNode
RemoveCertScriptPrefix	../server/ext/certificate.cpp	/^CScript RemoveCertScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveChannelScriptPrefix	../server/ext/channel.cpp	/^CScript RemoveChannelScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveCheckpoint	../server/checkpoints.cpp	/^bool CCheckpoints::RemoveCheckpoint(int nHeight)$/;"	f	class:CCheckpoints
RemoveContextScriptPrefix	../server/ext/context.cpp	/^CScript RemoveContextScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveExecScriptPrefix	../server/ext/exec.cpp	/^CScript RemoveExecScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveExtOutputPrefix	../server/ext/txext.cpp	/^bool RemoveExtOutputPrefix(CScript& script)$/;"	f
RemoveOffer	../server/block.cpp	/^COffer *CTransaction::RemoveOffer(uint160 hashOffer)$/;"	f	class:CTransaction
RemoveOfferScriptPrefix	../server/ext/offer.cpp	/^CScript RemoveOfferScriptPrefix(const CScript& scriptIn) $/;"	f
RemoveOfferTable	../server/ext/offer.cpp	/^void RemoveOfferTable(int ifaceIndex, uint160 hOffer)$/;"	f
RemovePendingTable	../server/ext/offer.cpp	/^void RemovePendingTable(int ifaceIndex, uint160 hAccept)$/;"	f
RemoveSolverDropPrefix	../server/script.cpp	/^static bool RemoveSolverDropPrefix(const CScript& script, CScript::const_iterator& pc1, opcodetype& opcode1, cbuff& vch1)$/;"	f	file:
RemoveTx	../server/txmempool.cpp	/^bool CPool::RemoveTx(const uint256& hash)$/;"	f	class:CPool
RemoveTx	../server/txmempool.h	/^    bool RemoveTx(CTransaction &tx)$/;"	f	class:CPool
RemoveTx	../server/wallettx.cpp	/^void CWallet::RemoveTx(uint256 hash)$/;"	f	class:CWallet
RemoveTxWithInput	../server/txmempool.cpp	/^void CPool::RemoveTxWithInput(const CTxIn& txin)$/;"	f	class:CPool
RenameOver	../server/util.cpp	/^bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest)$/;"	f
RenameThread	../server/util.cpp	/^void RenameThread(const char* name)$/;"	f
ReorganizeColorPoolMap	../server/ext/altchain.cpp	/^static void ReorganizeColorPoolMap(CIface *iface, const uint160& hColor, const uint256& hashBlock)$/;"	f	file:
ResendWalletTransactions	../server/color/color_wallet.cpp	/^void COLORWallet::ResendWalletTransactions()$/;"	f	class:COLORWallet
ResendWalletTransactions	../server/emc2/emc2_netmsg.cpp	/^void static ResendWalletTransactions()$/;"	f	file:
ResendWalletTransactions	../server/emc2/emc2_wallet.cpp	/^void EMC2Wallet::ResendWalletTransactions()$/;"	f	class:EMC2Wallet
ResendWalletTransactions	../server/ltc/ltc_netmsg.cpp	/^void static ResendWalletTransactions()$/;"	f	file:
ResendWalletTransactions	../server/ltc/ltc_wallet.cpp	/^void LTCWallet::ResendWalletTransactions()$/;"	f	class:LTCWallet
ResendWalletTransactions	../server/shc/shc_netmsg.cpp	/^void static ResendWalletTransactions()$/;"	f	file:
ResendWalletTransactions	../server/shc/shc_wallet.cpp	/^void SHCWallet::ResendWalletTransactions()$/;"	f	class:SHCWallet
ResendWalletTransactions	../server/test/test_wallet.cpp	/^void TESTWallet::ResendWalletTransactions()$/;"	f	class:TESTWallet
ResendWalletTransactions	../server/testnet/testnet_netmsg.cpp	/^void static ResendWalletTransactions()$/;"	f	file:
ResendWalletTransactions	../server/testnet/testnet_wallet.cpp	/^void TESTNETWallet::ResendWalletTransactions()$/;"	f	class:TESTNETWallet
Reserved1	../fractal/fractal_bmp.c	/^	USHORT		Reserved1;			\/* Reserved *\/$/;"	m	struct:_BMP_Header	file:
Reserved2	../fractal/fractal_bmp.c	/^	USHORT		Reserved2;			\/* Reserved *\/$/;"	m	struct:_BMP_Header	file:
Reset	../server/algo/sha512.cpp	/^CSHA512& CSHA512::Reset()$/;"	f	class:CSHA512
Reset	../server/key.h	/^		void Reset()$/;"	f	class:CKey
ResetAddr	../server/account.cpp	/^void CAccountCache::ResetAddr(int type)$/;"	f	class:CAccountCache
ResetExecChain	../server/ext/exec.cpp	/^void ResetExecChain(CIface *iface, const uint160& hExec)$/;"	f
ResetNotorizedBlock	../server/checkpoints.cpp	/^void CCheckpoints::ResetNotorizedBlock()$/;"	f	class:CCheckpoints
ResetServiceValidateEvent	../server/chain.cpp	/^void ResetServiceValidateEvent(CWallet *wallet)$/;"	f
ResetServiceWalletEvent	../server/chain.cpp	/^void ResetServiceWalletEvent(CWallet *wallet)$/;"	f
ResolveConflicts	../server/txmempool.cpp	/^bool CPool::ResolveConflicts(CPoolTx& ptx)$/;"	f	class:CPool
Retract	../server/matrix.cpp	/^void CTxMatrix::Retract(int heightIn, uint256 hash)$/;"	f	class:CTxMatrix
Rewind	../server/serialize.h	/^    bool Rewind(size_type n)$/;"	f	class:CDataStream
Rewrite	../server/txidx.cpp	/^bool CDB::Rewrite(const string& strFile, const char* pszSkip)$/;"	f	class:CDB
Round	../server/algo/sha512.cpp	/^void inline Round(uint64_t a, uint64_t b, uint64_t c, uint64_t& d, uint64_t e, uint64_t f, uint64_t g, uint64_t& h, uint64_t k, uint64_t w)$/;"	f	namespace:__anon18::sha512
S	../server/algo/sph_blake.h	/^	sph_u32 S[4];$/;"	m	struct:__anon19
S	../server/algo/sph_blake.h	/^	sph_u64 S[4];$/;"	m	struct:__anon20
S	../server/algo/sph_jh.c	222;"	d	file:
S	../server/algo/sph_jh.c	494;"	d	file:
S	../server/bolo/bolo_validation03.cpp	198;"	d	file:
S	../server/bolo/bolo_validation03.cpp	295;"	d	file:
S0	../test/testcoin_algo.cpp	72;"	d	file:
S1	../test/testcoin_algo.cpp	73;"	d	file:
SCALE_FACTOR	../proto/coin_proto.h	52;"	d
SCRIPT_ADDRESS	../server/coinaddr.h	/^			SCRIPT_ADDRESS = 5,$/;"	e	enum:CCoinAddr::__anon4
SCRIPT_ADDRESS	../test/testcoin_bip32.cpp	/^	SCRIPT_ADDRESS,$/;"	e	enum:Base58Type	file:
SCRIPT_ADDRESS	../test/testcoin_sip33.cpp	/^	SCRIPT_ADDRESS,$/;"	e	enum:Base58Type	file:
SCRIPT_ADDRESS2	../test/testcoin_bip32.cpp	/^	SCRIPT_ADDRESS2,$/;"	e	enum:Base58Type	file:
SCRIPT_ADDRESS2	../test/testcoin_sip33.cpp	/^	SCRIPT_ADDRESS2,$/;"	e	enum:Base58Type	file:
SCRIPT_ADDRESS_2	../server/coinaddr.h	/^			SCRIPT_ADDRESS_2 = 50,$/;"	e	enum:CCoinAddr::__anon4
SCRIPT_ADDRESS_2G	../server/coinaddr.h	/^			SCRIPT_ADDRESS_2G = 55,$/;"	e	enum:CCoinAddr::__anon4
SCRIPT_ADDRESS_2S	../server/coinaddr.h	/^			SCRIPT_ADDRESS_2S = 25,$/;"	e	enum:CCoinAddr::__anon4
SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY	../server/script.h	/^  SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),$/;"	e	enum:__anon10
SCRIPT_VERIFY_CHECKSEQUENCEVERIFY	../server/script.h	/^  SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10),$/;"	e	enum:__anon10
SCRIPT_VERIFY_CLEANSTACK	../server/script.h	/^  SCRIPT_VERIFY_CLEANSTACK = (1U << 8),$/;"	e	enum:__anon10
SCRIPT_VERIFY_DERSIG	../server/script.h	/^  SCRIPT_VERIFY_DERSIG    = (1U << 2),$/;"	e	enum:__anon10
SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS	../server/script.h	/^  SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS  = (1U << 7),$/;"	e	enum:__anon10
SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM	../server/script.h	/^  SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12),$/;"	e	enum:__anon10
SCRIPT_VERIFY_LOW_S	../server/script.h	/^  SCRIPT_VERIFY_LOW_S     = (1U << 3),$/;"	e	enum:__anon10
SCRIPT_VERIFY_MINIMALDATA	../server/script.h	/^  SCRIPT_VERIFY_MINIMALDATA = (1U << 6),$/;"	e	enum:__anon10
SCRIPT_VERIFY_MINIMALIF	../server/script.h	/^  SCRIPT_VERIFY_MINIMALIF = (1U << 13),$/;"	e	enum:__anon10
SCRIPT_VERIFY_NONE	../server/script.h	/^  SCRIPT_VERIFY_NONE      = 0,$/;"	e	enum:__anon10
SCRIPT_VERIFY_NULLDUMMY	../server/script.h	/^  SCRIPT_VERIFY_NULLDUMMY = (1U << 4),$/;"	e	enum:__anon10
SCRIPT_VERIFY_NULLFAIL	../server/script.h	/^  SCRIPT_VERIFY_NULLFAIL = (1U << 14),$/;"	e	enum:__anon10
SCRIPT_VERIFY_P2SH	../server/script.h	/^  SCRIPT_VERIFY_P2SH      = (1U << 0),$/;"	e	enum:__anon10
SCRIPT_VERIFY_SIGPUSHONLY	../server/script.h	/^  SCRIPT_VERIFY_SIGPUSHONLY = (1U << 5),$/;"	e	enum:__anon10
SCRIPT_VERIFY_STRICTENC	../server/script.h	/^  SCRIPT_VERIFY_STRICTENC = (1U << 1),$/;"	e	enum:__anon10
SCRIPT_VERIFY_WITNESS	../server/script.h	/^  SCRIPT_VERIFY_WITNESS = (1U << 11),$/;"	e	enum:__anon10
SCRIPT_VERIFY_WITNESS_PUBKEYTYPE	../server/script.h	/^  SCRIPT_VERIFY_WITNESS_PUBKEYTYPE = (1U << 15),$/;"	e	enum:__anon10
SCRYPT_H	../server/algo/scrypt.h	2;"	d
SCRYPT_SCRATCHPAD_SIZE	../server/algo/scrypt.h	/^const int SCRYPT_SCRATCHPAD_SIZE = 131072 + 63;$/;"	v
SECP256K1_SIGN_CONTEXT	../server/eckey.cpp	/^secp256k1_context *SECP256K1_SIGN_CONTEXT(void)$/;"	f
SECP256K1_VERIFY_CONTEXT	../server/eckey.cpp	/^secp256k1_context *SECP256K1_VERIFY_CONTEXT(void)$/;"	f
SECRET_KEY	../test/testcoin_bip32.cpp	/^	SECRET_KEY,$/;"	e	enum:Base58Type	file:
SECRET_KEY	../test/testcoin_sip33.cpp	/^	SECRET_KEY,$/;"	e	enum:Base58Type	file:
SEQUENCE_FINAL	../server/block.h	/^		static const uint32_t SEQUENCE_FINAL = 0xffffffff;$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_DISABLE_FLAG	../server/block.h	/^		static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_GRANULARITY	../server/block.h	/^		static const int SEQUENCE_LOCKTIME_GRANULARITY = 9;$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_MASK	../server/block.h	/^		static const uint32_t SEQUENCE_LOCKTIME_MASK = 0x0000ffff;$/;"	m	class:CTxIn
SEQUENCE_LOCKTIME_TYPE_FLAG	../server/block.h	/^		static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);$/;"	m	class:CTxIn
SERIALIZE_TRANSACTION_NO_WITNESS	../server/block.h	465;"	d
SERIALIZE_TRANSACTION_NO_WITNESS	../server/net.h	55;"	d
SERVER__MAIN_H	../server/main.h	37;"	d
SERVER__UI_INTERFACE_H	../server/ui_interface.h	27;"	d
SER_BLOCKHEADERONLY	../server/serialize.h	/^    SER_BLOCKHEADERONLY = (1 << 17),$/;"	e	enum:__anon11
SER_DISK	../server/serialize.h	/^    SER_DISK            = (1 << 1),$/;"	e	enum:__anon11
SER_GETHASH	../server/serialize.h	/^    SER_GETHASH         = (1 << 2),$/;"	e	enum:__anon11
SER_NETWORK	../server/serialize.h	/^    SER_NETWORK         = (1 << 0),$/;"	e	enum:__anon11
SER_SKIPSIG	../server/serialize.h	/^    SER_SKIPSIG         = (1 << 16),$/;"	e	enum:__anon11
SETUP	../server/ui_interface.h	/^        SETUP                 = 0x00020000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
SHA256D_WORK_CYCLE_TIME	../stratum/stratum_sha256d.c	33;"	d	file:
SHA256Transform	../server/main.cpp	/^void SHA256Transform(void* pstate, void* pinput, const void* pinit)$/;"	f
SHAlias	../server/shlib.h	/^typedef shref_t SHAlias;$/;"	t
SHAsset	../server/shlib.h	/^typedef shasset_t SHAsset;$/;"	t
SHCBlock	../server/shc/shc_block.h	/^    SHCBlock()$/;"	f	class:SHCBlock
SHCBlock	../server/shc/shc_block.h	/^    SHCBlock(const CBlock &block)$/;"	f	class:SHCBlock
SHCBlock	../server/shc/shc_block.h	/^    SHCBlock(const CBlockHeader &block)$/;"	f	class:SHCBlock
SHCBlock	../server/shc/shc_block.h	/^class SHCBlock : public CBlock$/;"	c
SHCCoinAddr	../server/coinaddr.h	/^    SHCCoinAddr() : CCoinAddr(SHC_COIN_IFACE)$/;"	f	class:SHCCoinAddr
SHCCoinAddr	../server/coinaddr.h	/^    SHCCoinAddr(const CTxDestination &dest) : CCoinAddr(SHC_COIN_IFACE)$/;"	f	class:SHCCoinAddr
SHCCoinAddr	../server/coinaddr.h	/^    SHCCoinAddr(const std::string& strAddress) : CCoinAddr(SHC_COIN_IFACE)$/;"	f	class:SHCCoinAddr
SHCCoinAddr	../server/coinaddr.h	/^class SHCCoinAddr : public CCoinAddr$/;"	c
SHCTxDB	../server/shc/shc_txidx.h	/^    SHCTxDB(const char *fileMode = "r+") : CTxDB("shc_tx.dat", SHC_COIN_IFACE, fileMode) { }$/;"	f	class:SHCTxDB
SHCTxDB	../server/shc/shc_txidx.h	/^class SHCTxDB : public CTxDB$/;"	c
SHCWallet	../server/shc/shc_wallet.h	/^    SHCWallet() : CWallet(SHC_COIN_IFACE, "shc_wallet.dat") { };  $/;"	f	class:SHCWallet
SHCWallet	../server/shc/shc_wallet.h	/^class SHCWallet : public CWallet$/;"	c
SHC_COIN	../proto/shc_proto.h	64;"	d
SHC_COINBASE_FLAGS	../server/shc/shc_wallet.cpp	/^CScript SHC_COINBASE_FLAGS;$/;"	v
SHC_COINBASE_MATURITY	../proto/shc_proto.h	/^static const int SHC_COINBASE_MATURITY = 60;$/;"	v
SHC_COIN_DAEMON_PORT	../proto/shc_proto.h	36;"	d
SHC_COIN_HEADER_SIZE	../server/shc/shc_netmsg.cpp	70;"	d	file:
SHC_COIN_IFACE	../proto/coin_proto.h	121;"	d
SHC_CTxMemPool	../server/shc/shc_pool.h	/^    SHC_CTxMemPool() : CPool(SHC_COIN_IFACE) { };$/;"	f	class:SHC_CTxMemPool
SHC_CTxMemPool	../server/shc/shc_pool.h	/^class SHC_CTxMemPool : public CPool$/;"	c
SHC_DEFAULT_BYTES_PER_SIGOP	../proto/shc_proto.h	77;"	d
SHC_MAX_BLOCK_SIZE	../proto/shc_proto.h	69;"	d
SHC_MAX_DRIFT_TIME	../proto/shc_proto.h	54;"	d
SHC_MAX_FREE_TX_SIZE	../proto/shc_proto.h	80;"	d
SHC_MAX_GETADDR	../proto/shc_proto.h	39;"	d
SHC_MAX_MONEY	../proto/shc_proto.h	/^static const int64 SHC_MAX_MONEY = 500000794 * SHC_COIN; \/* ~500mil *\/$/;"	v
SHC_MAX_ORPHAN_TRANSACTIONS	../proto/shc_proto.h	41;"	d
SHC_MAX_SCRIPT_ELEMENT_SIZE	../proto/shc_proto.h	51;"	d
SHC_MAX_SCRIPT_SIZE	../proto/shc_proto.h	49;"	d
SHC_MAX_SIGOPS	../proto/shc_proto.h	47;"	d
SHC_MAX_STANDARD_TX_SIGOP_COST	../proto/shc_proto.h	75;"	d
SHC_MAX_STANDARD_TX_WEIGHT	../proto/shc_proto.h	73;"	d
SHC_MAX_TRANSACTION_WEIGHT	../proto/shc_proto.h	71;"	d
SHC_MAX_TX_FEE	../proto/shc_proto.h	/^static const int64 SHC_MAX_TX_FEE = 1000 * SHC_COIN;$/;"	v
SHC_MIN_INPUT	../proto/shc_proto.h	/^static const int64 SHC_MIN_INPUT = 1;$/;"	v
SHC_MIN_RELAY_TX_FEE	../proto/shc_proto.h	/^static const int64 SHC_MIN_RELAY_TX_FEE = 1000;$/;"	v
SHC_MIN_TX_FEE	../proto/shc_proto.h	/^static const int64 SHC_MIN_TX_FEE = 10000;$/;"	v
SHC_PROTOCOL_VERSION	../proto/shc_proto.h	/^static const int SHC_PROTOCOL_VERSION = 2000000;$/;"	v
SHC_SEED_LIST_SIZE	../unet/unet_seed.h	7;"	d
SHC_SetBestChain	../server/shc/shc_block.cpp	/^void static SHC_SetBestChain(const CBlockLocator& loc)$/;"	f	file:
SHC_VERSION_BUILD	../proto/shc_proto.h	33;"	d
SHC_VERSION_MAJOR	../proto/shc_proto.h	30;"	d
SHC_VERSION_MINOR	../proto/shc_proto.h	31;"	d
SHC_VERSION_REVISION	../proto/shc_proto.h	32;"	d
SHC_WITNESS_SCALE_FACTOR	../proto/shc_proto.h	/^static const int SHC_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
SHC_mapOrphanBlocksByPrev	../server/shc/shc_block.cpp	/^static orphan_map SHC_mapOrphanBlocksByPrev;$/;"	v	file:
SHCert	../server/shlib.h	/^typedef shesig_t SHCert;$/;"	t
SHIFT_ROW1	../server/algo/sph_echo.c	186;"	d	file:
SHIFT_ROW1	../server/algo/sph_echo.c	452;"	d	file:
SHIFT_ROW2	../server/algo/sph_echo.c	200;"	d	file:
SHIFT_ROW2	../server/algo/sph_echo.c	476;"	d	file:
SHIFT_ROW3	../server/algo/sph_echo.c	216;"	d	file:
SHIFT_ROW3	../server/algo/sph_echo.c	504;"	d	file:
SHLicense	../server/shlib.h	/^typedef shlic_t SHLicense;$/;"	t
SHORTTXIDS_LENGTH	../server/block_cmpct.h	/^		static const int SHORTTXIDS_LENGTH = 6;$/;"	m	class:CBlockHeaderAndShortTxIDs
SHPeer	../server/shlib.h	/^    SHPeer()$/;"	f	class:SHPeer
SHPeer	../server/shlib.h	/^    SHPeer(shpeer_t *peerIn)$/;"	f	class:SHPeer
SHPeer	../server/shlib.h	/^class SHPeer$/;"	c
SHSig	../server/shlib.h	/^    SHSig()$/;"	f	class:SHSig
SHSig	../server/shlib.h	/^    SHSig(shsig_t *sigIn)$/;"	f	class:SHSig
SHSig	../server/shlib.h	/^class SHSig$/;"	c
SIGHASH_ALL	../server/txsignature.h	/^    SIGHASH_ALL = 1,$/;"	e	enum:__anon12
SIGHASH_ANYONECANPAY	../server/txsignature.h	/^    SIGHASH_ANYONECANPAY = 0x80$/;"	e	enum:__anon12
SIGHASH_HDKEY	../server/txsignature.h	/^    SIGHASH_HDKEY = 0x40,$/;"	e	enum:__anon12
SIGHASH_NONE	../server/txsignature.h	/^    SIGHASH_NONE = 2,$/;"	e	enum:__anon12
SIGHASH_SINGLE	../server/txsignature.h	/^    SIGHASH_SINGLE = 3,$/;"	e	enum:__anon12
SIGN_ALG_DILITHIUM	../server/key.h	41;"	d
SIGN_ALG_ECDSA	../server/key.h	40;"	d
SIGN_ALG_NONE	../server/key.h	39;"	d
SIGVERSION_BASE	../server/txsignature.h	/^  SIGVERSION_BASE = 0,$/;"	e	enum:__anon13
SIGVERSION_WITNESS_V0	../server/txsignature.h	/^  SIGVERSION_WITNESS_V0 = 1,$/;"	e	enum:__anon13
SIGVERSION_WITNESS_V14	../server/txsignature.h	/^  SIGVERSION_WITNESS_V14 = 15$/;"	e	enum:__anon13
SIP33Hash	../server/dikey.cpp	/^static void SIP33Hash(const ChainCode &chainCode, unsigned int nChild, uint16_t header, uint8_t *data, size_t data_len, unsigned char *output\/*[128]*\/)$/;"	f	file:
SIP33_EXTKEY_SIZE	../server/dikey.cpp	35;"	d	file:
SIXTEEN_ROUNDS	../server/algo/sph_cubehash.c	475;"	d	file:
SIXTEEN_ROUNDS	../server/algo/sph_cubehash.c	485;"	d	file:
SIXTEEN_ROUNDS	../server/algo/sph_cubehash.c	497;"	d	file:
SIXTEEN_ROUNDS	../server/algo/sph_cubehash.c	513;"	d	file:
SIZEOF_COINHDR_T	../proto/coin_proto.h	337;"	d
SKBI	../server/algo/sph_skein.c	382;"	d	file:
SKBT	../server/algo/sph_skein.c	383;"	d	file:
SL	../server/algo/sph_jh.c	720;"	d	file:
SLu	../server/algo/sph_jh.c	722;"	d	file:
SOCKET_ERROR	../server/compat.h	41;"	d
SPH_64	../server/algo/sph_types.h	456;"	d
SPH_64	../server/algo/sph_types.h	816;"	d
SPH_64	../server/algo/sph_types.h	849;"	d
SPH_64	../server/algo/sph_types.h	894;"	d
SPH_64	../server/algo/sph_types.h	903;"	d
SPH_64_TRUE	../server/algo/sph_types.h	462;"	d
SPH_64_TRUE	../server/algo/sph_types.h	817;"	d
SPH_64_TRUE	../server/algo/sph_types.h	923;"	d
SPH_AMD64_GCC	../server/algo/sph_types.h	1167;"	d
SPH_AMD64_MSVC	../server/algo/sph_types.h	1170;"	d
SPH_BIG_ENDIAN	../server/algo/sph_types.h	1143;"	d
SPH_BIG_ENDIAN	../server/algo/sph_types.h	533;"	d
SPH_BIG_FAST	../server/algo/sph_types.h	1149;"	d
SPH_BIG_FAST	../server/algo/sph_types.h	1183;"	d
SPH_BIG_FAST	../server/algo/sph_types.h	551;"	d
SPH_BLAKE_H__	../server/algo/sph_blake.h	38;"	d
SPH_BMW_H__	../server/algo/sph_bmw.h	37;"	d
SPH_C32	../server/algo/sph_types.h	418;"	d
SPH_C32	../server/algo/sph_types.h	846;"	d
SPH_C32	../server/algo/sph_types.h	866;"	d
SPH_C32	../server/algo/sph_types.h	873;"	d
SPH_C64	../server/algo/sph_types.h	473;"	d
SPH_C64	../server/algo/sph_types.h	848;"	d
SPH_C64	../server/algo/sph_types.h	892;"	d
SPH_C64	../server/algo/sph_types.h	901;"	d
SPH_COMPACT_BLAKE_32	../server/algo/sph_blake.c	48;"	d	file:
SPH_COMPACT_BLAKE_64	../server/algo/sph_blake.c	52;"	d	file:
SPH_CUBEHASH_H__	../server/algo/sph_cubehash.h	38;"	d
SPH_CUBEHASH_NOCOPY	../server/algo/sph_cubehash.c	60;"	d	file:
SPH_CUBEHASH_NOCOPY	../server/algo/sph_cubehash.c	69;"	d	file:
SPH_CUBEHASH_UNROLL	../server/algo/sph_cubehash.c	57;"	d	file:
SPH_CUBEHASH_UNROLL	../server/algo/sph_cubehash.c	66;"	d	file:
SPH_DETECT_AMD64_GCC	../server/algo/sph_types.h	1031;"	d
SPH_DETECT_AMD64_MSVC	../server/algo/sph_types.h	1034;"	d
SPH_DETECT_BIG_ENDIAN	../server/algo/sph_types.h	1043;"	d
SPH_DETECT_BIG_ENDIAN	../server/algo/sph_types.h	1056;"	d
SPH_DETECT_BIG_ENDIAN	../server/algo/sph_types.h	1082;"	d
SPH_DETECT_BIG_ENDIAN	../server/algo/sph_types.h	1105;"	d
SPH_DETECT_BIG_ENDIAN	../server/algo/sph_types.h	1117;"	d
SPH_DETECT_I386_GCC	../server/algo/sph_types.h	1016;"	d
SPH_DETECT_I386_MSVC	../server/algo/sph_types.h	1019;"	d
SPH_DETECT_LITTLE_ENDIAN	../server/algo/sph_types.h	1013;"	d
SPH_DETECT_LITTLE_ENDIAN	../server/algo/sph_types.h	1028;"	d
SPH_DETECT_LITTLE_ENDIAN	../server/algo/sph_types.h	1068;"	d
SPH_DETECT_LITTLE_ENDIAN	../server/algo/sph_types.h	1075;"	d
SPH_DETECT_LITTLE_ENDIAN	../server/algo/sph_types.h	1107;"	d
SPH_DETECT_LITTLE_ENDIAN	../server/algo/sph_types.h	1119;"	d
SPH_DETECT_LITTLE_FAST	../server/algo/sph_types.h	1047;"	d
SPH_DETECT_LITTLE_FAST	../server/algo/sph_types.h	1060;"	d
SPH_DETECT_PPC32_GCC	../server/algo/sph_types.h	1100;"	d
SPH_DETECT_PPC64_GCC	../server/algo/sph_types.h	1098;"	d
SPH_DETECT_SPARCV9_GCC	../server/algo/sph_types.h	1130;"	d
SPH_DETECT_SPARCV9_GCC_32	../server/algo/sph_types.h	1059;"	d
SPH_DETECT_SPARCV9_GCC_64	../server/algo/sph_types.h	1046;"	d
SPH_DETECT_UNALIGNED	../server/algo/sph_types.h	1012;"	d
SPH_DETECT_UNALIGNED	../server/algo/sph_types.h	1027;"	d
SPH_DETECT_UPTR	../server/algo/sph_types.h	1014;"	d
SPH_DETECT_UPTR	../server/algo/sph_types.h	1029;"	d
SPH_DETECT_UPTR	../server/algo/sph_types.h	1044;"	d
SPH_DETECT_UPTR	../server/algo/sph_types.h	1057;"	d
SPH_DETECT_UPTR	../server/algo/sph_types.h	1122;"	d
SPH_DETECT_UPTR	../server/algo/sph_types.h	1124;"	d
SPH_ECHO_64	../server/algo/sph_echo.c	53;"	d	file:
SPH_ECHO_64	../server/algo/sph_echo.c	60;"	d	file:
SPH_ECHO_H__	../server/algo/sph_echo.h	37;"	d
SPH_GROESTL_64	../server/algo/sph_groestl.c	52;"	d	file:
SPH_GROESTL_64	../server/algo/sph_groestl.c	54;"	d	file:
SPH_GROESTL_64	../server/algo/sph_groestl.c	59;"	d	file:
SPH_GROESTL_H__	../server/algo/sph_groestl.h	36;"	d
SPH_I386_GCC	../server/algo/sph_types.h	1161;"	d
SPH_I386_MSVC	../server/algo/sph_types.h	1164;"	d
SPH_INLINE	../server/algo/sph_types.h	517;"	d
SPH_INLINE	../server/algo/sph_types.h	960;"	d
SPH_INLINE	../server/algo/sph_types.h	962;"	d
SPH_INLINE	../server/algo/sph_types.h	964;"	d
SPH_JH_64	../server/algo/sph_jh.c	48;"	d	file:
SPH_JH_64	../server/algo/sph_jh.c	52;"	d	file:
SPH_JH_H__	../server/algo/sph_jh.h	37;"	d
SPH_KECCAK_64	../server/algo/sph_keccak.c	97;"	d	file:
SPH_KECCAK_H__	../server/algo/sph_keccak.h	37;"	d
SPH_KECCAK_INTERLEAVE	../server/algo/sph_keccak.c	104;"	d	file:
SPH_KECCAK_NOCOPY	../server/algo/sph_keccak.c	124;"	d	file:
SPH_KECCAK_NOCOPY	../server/algo/sph_keccak.c	126;"	d	file:
SPH_KECCAK_UNROLL	../server/algo/sph_keccak.c	112;"	d	file:
SPH_KECCAK_UNROLL	../server/algo/sph_keccak.c	114;"	d	file:
SPH_LITTLE_ENDIAN	../server/algo/sph_types.h	1140;"	d
SPH_LITTLE_ENDIAN	../server/algo/sph_types.h	525;"	d
SPH_LITTLE_FAST	../server/algo/sph_types.h	1146;"	d
SPH_LITTLE_FAST	../server/algo/sph_types.h	1180;"	d
SPH_LITTLE_FAST	../server/algo/sph_types.h	542;"	d
SPH_LUFFA_H__	../server/algo/sph_luffa.h	37;"	d
SPH_LUFFA_PARALLEL	../server/algo/sph_luffa.c	44;"	d	file:
SPH_PPC32_GCC	../server/algo/sph_types.h	1173;"	d
SPH_PPC64_GCC	../server/algo/sph_types.h	1176;"	d
SPH_ROTL32	../server/algo/sph_types.h	438;"	d
SPH_ROTL32	../server/algo/sph_types.h	934;"	d
SPH_ROTL32	../server/algo/sph_types.h	937;"	d
SPH_ROTL64	../server/algo/sph_types.h	495;"	d
SPH_ROTL64	../server/algo/sph_types.h	945;"	d
SPH_ROTL64	../server/algo/sph_types.h	948;"	d
SPH_ROTR32	../server/algo/sph_types.h	450;"	d
SPH_ROTR32	../server/algo/sph_types.h	935;"	d
SPH_ROTR32	../server/algo/sph_types.h	938;"	d
SPH_ROTR64	../server/algo/sph_types.h	508;"	d
SPH_ROTR64	../server/algo/sph_types.h	946;"	d
SPH_ROTR64	../server/algo/sph_types.h	949;"	d
SPH_SHAVITE_H__	../server/algo/sph_shavite.h	39;"	d
SPH_SIMD_H__	../server/algo/sph_simd.h	37;"	d
SPH_SIZE_blake224	../server/algo/sph_blake.h	50;"	d
SPH_SIZE_blake256	../server/algo/sph_blake.h	55;"	d
SPH_SIZE_blake384	../server/algo/sph_blake.h	62;"	d
SPH_SIZE_blake512	../server/algo/sph_blake.h	67;"	d
SPH_SIZE_bmw224	../server/algo/sph_bmw.h	49;"	d
SPH_SIZE_bmw256	../server/algo/sph_bmw.h	54;"	d
SPH_SIZE_bmw384	../server/algo/sph_bmw.h	61;"	d
SPH_SIZE_bmw512	../server/algo/sph_bmw.h	66;"	d
SPH_SIZE_cubehash224	../server/algo/sph_cubehash.h	50;"	d
SPH_SIZE_cubehash256	../server/algo/sph_cubehash.h	55;"	d
SPH_SIZE_cubehash384	../server/algo/sph_cubehash.h	60;"	d
SPH_SIZE_cubehash512	../server/algo/sph_cubehash.h	65;"	d
SPH_SIZE_echo224	../server/algo/sph_echo.h	49;"	d
SPH_SIZE_echo256	../server/algo/sph_echo.h	54;"	d
SPH_SIZE_echo384	../server/algo/sph_echo.h	59;"	d
SPH_SIZE_echo512	../server/algo/sph_echo.h	64;"	d
SPH_SIZE_groestl224	../server/algo/sph_groestl.h	48;"	d
SPH_SIZE_groestl256	../server/algo/sph_groestl.h	53;"	d
SPH_SIZE_groestl384	../server/algo/sph_groestl.h	58;"	d
SPH_SIZE_groestl512	../server/algo/sph_groestl.h	63;"	d
SPH_SIZE_jh224	../server/algo/sph_jh.h	49;"	d
SPH_SIZE_jh256	../server/algo/sph_jh.h	54;"	d
SPH_SIZE_jh384	../server/algo/sph_jh.h	59;"	d
SPH_SIZE_jh512	../server/algo/sph_jh.h	64;"	d
SPH_SIZE_keccak224	../server/algo/sph_keccak.h	49;"	d
SPH_SIZE_keccak256	../server/algo/sph_keccak.h	54;"	d
SPH_SIZE_keccak384	../server/algo/sph_keccak.h	59;"	d
SPH_SIZE_keccak512	../server/algo/sph_keccak.h	64;"	d
SPH_SIZE_luffa224	../server/algo/sph_luffa.h	49;"	d
SPH_SIZE_luffa256	../server/algo/sph_luffa.h	54;"	d
SPH_SIZE_luffa384	../server/algo/sph_luffa.h	59;"	d
SPH_SIZE_luffa512	../server/algo/sph_luffa.h	64;"	d
SPH_SIZE_shavite224	../server/algo/sph_shavite.h	51;"	d
SPH_SIZE_shavite256	../server/algo/sph_shavite.h	56;"	d
SPH_SIZE_shavite384	../server/algo/sph_shavite.h	61;"	d
SPH_SIZE_shavite512	../server/algo/sph_shavite.h	66;"	d
SPH_SIZE_simd224	../server/algo/sph_simd.h	49;"	d
SPH_SIZE_simd256	../server/algo/sph_simd.h	54;"	d
SPH_SIZE_simd384	../server/algo/sph_simd.h	59;"	d
SPH_SIZE_simd512	../server/algo/sph_simd.h	64;"	d
SPH_SIZE_skein224	../server/algo/sph_skein.h	56;"	d
SPH_SIZE_skein256	../server/algo/sph_skein.h	61;"	d
SPH_SIZE_skein384	../server/algo/sph_skein.h	66;"	d
SPH_SIZE_skein512	../server/algo/sph_skein.h	71;"	d
SPH_SKEIN_H__	../server/algo/sph_skein.h	42;"	d
SPH_SMALL_FOOTPRINT_BLAKE	../server/algo/sph_blake.c	44;"	d	file:
SPH_SMALL_FOOTPRINT_BMW	../server/algo/sph_bmw.c	44;"	d	file:
SPH_SMALL_FOOTPRINT_CUBEHASH	../server/algo/sph_cubehash.c	43;"	d	file:
SPH_SMALL_FOOTPRINT_ECHO	../server/algo/sph_echo.c	44;"	d	file:
SPH_SMALL_FOOTPRINT_GROESTL	../server/algo/sph_groestl.c	43;"	d	file:
SPH_SMALL_FOOTPRINT_JH	../server/algo/sph_jh.c	44;"	d	file:
SPH_SMALL_FOOTPRINT_KECCAK	../server/algo/sph_keccak.c	88;"	d	file:
SPH_SMALL_FOOTPRINT_SHAVITE	../server/algo/sph_shavite.c	43;"	d	file:
SPH_SMALL_FOOTPRINT_SIMD	../server/algo/sph_simd.c	44;"	d	file:
SPH_SMALL_FOOTPRINT_SKEIN	../server/algo/sph_skein.c	44;"	d	file:
SPH_SPARCV9_DEC32LE	../server/algo/sph_types.h	1333;"	d
SPH_SPARCV9_GCC	../server/algo/sph_types.h	1158;"	d
SPH_SPARCV9_GCC_32	../server/algo/sph_types.h	1152;"	d
SPH_SPARCV9_GCC_64	../server/algo/sph_types.h	1155;"	d
SPH_SPARCV9_RESET_ASI	../server/algo/sph_types.h	1330;"	d
SPH_SPARCV9_SET_ASI	../server/algo/sph_types.h	1325;"	d
SPH_T32	../server/algo/sph_types.h	426;"	d
SPH_T32	../server/algo/sph_types.h	932;"	d
SPH_T64	../server/algo/sph_types.h	482;"	d
SPH_T64	../server/algo/sph_types.h	943;"	d
SPH_TYPES_H__	../server/algo/sph_types.h	48;"	d
SPH_UNALIGNED	../server/algo/sph_types.h	1134;"	d
SPH_UNALIGNED	../server/algo/sph_types.h	566;"	d
SPH_UPTR	../server/algo/sph_types.h	1137;"	d
SPH_UPTR	../server/algo/sph_types.h	559;"	d
SPRING_MATRIX_BMP	../stratum/stratum_http.c	522;"	d	file:
SPRING_MATRIX_HTML	../stratum/stratum_http.c	521;"	d	file:
SPRING_OFFSET_LATITUDE	../server/spring.h	52;"	d
SPRING_OFFSET_LONGITUDE	../server/spring.h	57;"	d
SPRING_X_FACTOR	../server/spring.h	61;"	d
SPRING_Y_FACTOR	../server/spring.h	59;"	d
STANDARD_LOCKTIME_VERIFY_FLAGS	../server/block.cpp	/^static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = $/;"	v	file:
STANDARD_LOCKTIME_VERIFY_FLAGS	../server/coin.cpp	/^static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS =$/;"	v	file:
STANDARD_LOCKTIME_VERIFY_FLAGS	../server/txmempool.cpp	/^static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = $/;"	v	file:
STANDARD_LOCKTIME_VERIFY_FLAGS	../server/validation.cpp	/^static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = $/;"	v	file:
STANDARD_LOCKTIME_VERIFY_FLAGS	../server/wallet.cpp	/^static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = $/;"	v	file:
STAT_BLOCK_ACCEPTS	../proto/coin_proto.h	148;"	d
STAT_BLOCK_ORPHAN	../proto/coin_proto.h	150;"	d
STAT_BLOCK_SUBMITS	../proto/coin_proto.h	149;"	d
STAT_TX_ACCEPTS	../proto/coin_proto.h	151;"	d
STAT_TX_MINT	../proto/coin_proto.h	154;"	d
STAT_TX_RETURNS	../proto/coin_proto.h	153;"	d
STAT_TX_SUBMITS	../proto/coin_proto.h	152;"	d
STEP2_BIG	../server/algo/sph_simd.c	1143;"	d	file:
STEP2_ELT	../server/algo/sph_simd.c	829;"	d	file:
STEP2_SMALL	../server/algo/sph_simd.c	837;"	d	file:
STEP_BIG	../server/algo/sph_simd.c	686;"	d	file:
STEP_BIG_	../server/algo/sph_simd.c	789;"	d	file:
STEP_ELT	../server/algo/sph_simd.c	667;"	d	file:
STEP_SMALL	../server/algo/sph_simd.c	675;"	d	file:
STEP_SMALL_	../server/algo/sph_simd.c	732;"	d	file:
STORE32H	../server/bolo/bolo_validation03.cpp	172;"	d	file:
STORE32L	../server/bolo/bolo_validation03.cpp	150;"	d	file:
STORE64H	../server/bolo/bolo_validation03.cpp	182;"	d	file:
STORE64L	../server/bolo/bolo_validation03.cpp	160;"	d	file:
STRATUM_BLOCKS	../server/rpc/rpc_parse.cpp	/^const RPCOp STRATUM_BLOCKS = {$/;"	v
STRATUM_DAEMON_PORT	../proto/network.h	34;"	d
STRATUM_INFO	../server/rpc/rpc_parse.cpp	/^const RPCOp STRATUM_INFO = {$/;"	v
STRATUM_KEY	../server/rpc/rpc_parse.cpp	/^const RPCOp STRATUM_KEY = {$/;"	v
STRATUM_KEYADD	../server/rpc/rpc_parse.cpp	/^const RPCOp STRATUM_KEYADD = {$/;"	v
STRATUM_KEYREMOVE	../server/rpc/rpc_parse.cpp	/^const RPCOp STRATUM_KEYREMOVE = {$/;"	v
STRATUM_LIST	../server/rpc/rpc_parse.cpp	/^const RPCOp STRATUM_LIST = {$/;"	v
STRINGIFY	../server/version.cpp	72;"	d	file:
STRING_INC	../test/CuTest.h	64;"	d
STRING_MAX	../test/CuTest.h	63;"	d
SUB_CRUMB	../server/algo/sph_luffa.c	236;"	d	file:
SUB_CRUMB	../server/algo/sph_luffa.c	279;"	d	file:
SUB_CRUMBW	../server/algo/sph_luffa.c	237;"	d	file:
SUB_CRUMB_GEN	../server/algo/sph_luffa.c	215;"	d	file:
SUFFICIENT_FEETXS	../server/txfeerate.h	/^static const double SUFFICIENT_FEETXS = 1;$/;"	v
SUFFICIENT_PRITXS	../server/txfeerate.h	/^static const double SUFFICIENT_PRITXS = .2;$/;"	v
SUITE_ADD_TEST	../test/CuTest.h	142;"	d
SYNC_AUTH	../stratum/stratum.h	61;"	d
SYNC_IDENT	../stratum/stratum.h	62;"	d
SYNC_RESP_ALL	../stratum/stratum.h	73;"	d
SYNC_RESP_ELEVATE	../stratum/stratum.h	70;"	d
SYNC_RESP_IDENT	../stratum/stratum.h	71;"	d
SYNC_RESP_PING	../stratum/stratum.h	66;"	d
SYNC_RESP_USER_LIST	../stratum/stratum.h	67;"	d
SYNC_RESP_WALLET_ADDR	../stratum/stratum.h	68;"	d
SYNC_RESP_WALLET_SET	../stratum/stratum.h	69;"	d
SYNC_WALLET_ADDR	../stratum/stratum.h	64;"	d
SYNC_WALLET_EXTADDR	../stratum/stratum.h	65;"	d
SYNC_WALLET_SET	../stratum/stratum.h	63;"	d
SYS_CONFIG	../server/rpc/rpc_parse.cpp	/^const RPCOp SYS_CONFIG = {$/;"	v
SYS_ECHO	../server/rpc/rpc_parse.cpp	/^const RPCOp SYS_ECHO = {$/;"	v
SYS_HELP	../server/rpc/rpc_parse.cpp	/^const RPCOp SYS_HELP = {$/;"	v
SYS_INFO	../server/rpc/rpc_parse.cpp	/^const RPCOp SYS_INFO = {$/;"	v
SYS_SHUTDOWN	../server/rpc/rpc_parse.cpp	/^const RPCOp SYS_SHUTDOWN = {$/;"	v
SYS_URL	../server/rpc/rpc_parse.cpp	/^const RPCOp SYS_URL = {$/;"	v
SaveExternalBlockchainFile	../server/chain.cpp	/^bool SaveExternalBlockchainFile()$/;"	f
Sb	../server/algo/sph_jh.c	103;"	d	file:
ScanForWalletTransaction	../server/wallet.cpp	/^int CWallet::ScanForWalletTransaction(const uint256& hashTx)$/;"	f	class:CWallet
ScanForWalletTransactions	../server/color/color_wallet.cpp	/^int COLORWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)$/;"	f	class:COLORWallet
ScanForWalletTransactions	../server/emc2/emc2_wallet.cpp	/^int EMC2Wallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)$/;"	f	class:EMC2Wallet
ScanForWalletTransactions	../server/ltc/ltc_wallet.cpp	/^int LTCWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)$/;"	f	class:LTCWallet
ScanForWalletTransactions	../server/shc/shc_wallet.cpp	/^int SHCWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)$/;"	f	class:SHCWallet
ScanForWalletTransactions	../server/test/test_wallet.cpp	/^int TESTWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)$/;"	f	class:TESTWallet
ScanForWalletTransactions	../server/testnet/testnet_wallet.cpp	/^int TESTNETWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)$/;"	f	class:TESTNETWallet
ScanHash_CryptoPP	../server/main.cpp	/^unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)$/;"	f	file:
ScriptMap	../server/keystore.h	/^typedef std::map<CScriptID, CScript > ScriptMap;$/;"	t
ScriptPubKeyToJSON	../server/rpc/rpcrawtransaction.cpp	/^void ScriptPubKeyToJSON(int ifaceIndex, const CScript& scriptPubKey, Object& out)$/;"	f
ScriptSigArgsExpected	../server/script.cpp	/^int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions)$/;"	f
SecureString	../server/allocators.h	/^typedef std::basic_string<char, std::char_traits<char>, secure_allocator<char> > SecureString;$/;"	t
Select	../server/addrman.h	/^    CAddress Select(int nUnkBias = 50)$/;"	f	class:CAddrMan
SelectAccountCoins	../server/wallet.cpp	/^bool CWallet::SelectAccountCoins(string strAccount, int64 nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet, uint160 hColor) const$/;"	f	class:CWallet
SelectCoins	../server/wallet.cpp	/^bool CWallet::SelectCoins(int64 nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet)$/;"	f	class:CWallet
SelectCoinsMinConf	../server/wallet.cpp	/^bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, vector<COutput> vCoins, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const$/;"	f	class:CWallet
SelectCoins_Avg	../server/wallet.cpp	/^bool SelectCoins_Avg(int64 nTargetValue, vector<COutput>& vCoins, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet)$/;"	f
SelectTried	../server/addrman.cpp	/^int CAddrMan::SelectTried(int nKBucket)$/;"	f	class:CAddrMan
Select_	../server/addrman.cpp	/^CAddress CAddrMan::Select_(int nUnkBias)$/;"	f	class:CAddrMan
Semantic_actions	../server/json/json_spirit_reader_template.h	/^        Semantic_actions( Value_type& value )$/;"	f	class:json_spirit::Semantic_actions
Semantic_actions	../server/json/json_spirit_reader_template.h	/^    class Semantic_actions $/;"	c	namespace:json_spirit
Semantic_actions_t	../server/json/json_spirit_reader_template.h	/^        typedef Semantic_actions< Value_type, Iter_type > Semantic_actions_t;$/;"	t	class:json_spirit::Json_grammer
Send	../server/txcreator.cpp	/^bool CTxBatchCreator::Send()$/;"	f	class:CTxBatchCreator
Send	../server/txcreator.cpp	/^bool CTxCreator::Send()$/;"	f	class:CTxCreator
SendBufferSize	../server/net.h	/^inline unsigned int SendBufferSize() { return 1000*GetArg("-maxsendbuffer", 1*1000); }$/;"	f
SendMoney	../server/wallet.cpp	/^string CWallet::SendMoney(string strFromAccount, CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee)$/;"	f	class:CWallet
SendMoney	../server/wallet.cpp	/^string CWallet::SendMoney(string strFromAccount, const CTxDestination& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee)$/;"	f	class:CWallet
SendMoneyToDestination	../server/wallet.cpp	/^string CWallet::SendMoneyToDestination(string strAccount, const CTxDestination& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee)$/;"	f	class:CWallet
SendMoneyWithExtTx	../server/wallet.cpp	/^bool SendMoneyWithExtTx(CIface *iface, string strAccount, CWalletTx& wtxIn, CWalletTx& wtxNew, const CScript& scriptPubKey, vector<pair<CScript, int64> > vecSend, int64 txFee)$/;"	f
SendRemitMoneyTx	../server/wallet.cpp	/^bool SendRemitMoneyTx(CIface *iface, const CCoinAddr& addrFrom, CWalletTx *wtxIn, CWalletTx& wtxNew, vector<pair<CScript, int64> >& vecSend, CScript scriptPubKey)$/;"	f
SendTxEvent	../server/ext/exec.cpp	/^static int SendTxEvent(lua_State *L)$/;"	f	file:
SequenceLocks	../server/block.cpp	/^bool SequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)$/;"	f
SerReadWrite	../server/serialize.h	/^inline unsigned int SerReadWrite(Stream& s, T& obj, int nType, int nVersion, CSerActionUnserialize ser_action)$/;"	f
SerReadWrite	../server/serialize.h	/^inline unsigned int SerReadWrite(Stream& s, const T& obj, int nType, int nVersion, CSerActionGetSerializeSize ser_action)$/;"	f
SerReadWrite	../server/serialize.h	/^inline unsigned int SerReadWrite(Stream& s, const T& obj, int nType, int nVersion, CSerActionSerialize ser_action)$/;"	f
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	class:BlockTransactions
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	class:BlockTransactionsRequest
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	class:CBlockHeaderAndShortTxIDs
SerializationOp	../server/block_cmpct.h	/^			inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	struct:TransactionCompressor
SerializationOp	../server/block_cmpct.h	/^		inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	struct:PrefilledTransaction
Serialize	../server/bignum.h	/^    void Serialize(Stream& s, int nType=0, int nVersion=1\/*PROTOCOL_VERSION*\/) const$/;"	f	class:CBigNum
Serialize	../server/emc2/emc2_netmsg.cpp	/^    void Serialize(Stream& s, int, int=0) const$/;"	f	class:LimitedString
Serialize	../server/ltc/ltc_netmsg.cpp	/^    void Serialize(Stream& s, int, int=0) const$/;"	f	class:LimitedString
Serialize	../server/serialize.h	/^    void Serialize(Stream& s, int nType, int nVersion) const$/;"	f	class:CDataStream
Serialize	../server/serialize.h	/^    void Serialize(Stream& s, int, int=0) const$/;"	f	class:CFlatData
Serialize	../server/serialize.h	/^inline void Serialize(Stream& os, const T& a, long nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^inline void Serialize(Stream& os, const std::vector<T, A>& v, int nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, bool a, int, int=0)    { char f=a; WRITEDATA(s, f); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, char a,           int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, double a,         int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, float a,          int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, int64 a,          int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, signed char a,    int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, signed int a,     int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, signed long a,    int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, signed short a,   int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, uint64 a,         int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, unsigned char a,  int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, unsigned int a,   int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, unsigned long a,  int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, unsigned short a, int, int=0) { WRITEDATA(s, a); }$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const CScript& v, int nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const boost::tuple<T0, T1, T2, T3>& item, int nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const boost::tuple<T0, T1, T2>& item, int nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const std::basic_string<C>& str, int, int)$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const std::map<K, T, Pred, A>& m, int nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const std::pair<K, T>& item, int nType, int nVersion)$/;"	f
Serialize	../server/serialize.h	/^void Serialize(Stream& os, const std::set<K, Pred, A>& m, int nType, int nVersion)$/;"	f
Serialize	../server/shc/shc_netmsg.cpp	/^      void Serialize(Stream& s, int, int=0) const$/;"	f	class:LimitedString
Serialize	../server/testnet/testnet_netmsg.cpp	/^      void Serialize(Stream& s, int, int=0) const$/;"	f	class:LimitedString
Serialize	../server/uint256.h	/^    void Serialize(Stream& s, int nType, int nVersion) const$/;"	f	class:base_uint
SerializeHash	../server/util.h	/^uint256 SerializeHash(const T& obj, int nVersion = 1)$/;"	f
Serialize_impl	../server/serialize.h	/^void Serialize_impl(Stream& os, const std::vector<T, A>& v, int nType, int nVersion, const boost::false_type&)$/;"	f
Serialize_impl	../server/serialize.h	/^void Serialize_impl(Stream& os, const std::vector<T, A>& v, int nType, int nVersion, const boost::true_type&)$/;"	f
ServiceBlockEvent	../server/chain.cpp	/^bool ServiceBlockEvent(int ifaceIndex)$/;"	f
ServiceBlockEventUpdate	../server/chain.cpp	/^void ServiceBlockEventUpdate(int ifaceIndex)$/;"	f
ServiceBlockGetDataEvent	../server/chain.cpp	/^bool ServiceBlockGetDataEvent(CWallet *wallet, CBlockIndex* pindexBest, CNode *pfrom)$/;"	f
ServiceBlockHeadersEvent	../server/chain.cpp	/^bool ServiceBlockHeadersEvent(CWallet *wallet, CBlockIndex *pindexBest, CNode *pfrom)$/;"	f
ServiceEventState	../server/chain.cpp	/^void ServiceEventState(int ifaceIndex)$/;"	f
ServiceLegacyBlockEvent	../server/chain.cpp	/^bool ServiceLegacyBlockEvent(CIface *iface)$/;"	f
ServicePeerEvent	../server/chain.cpp	/^bool ServicePeerEvent(int ifaceIndex)$/;"	f
ServiceValidateEvent	../server/chain.cpp	/^static bool ServiceValidateEvent(int ifaceIndex)$/;"	f	file:
ServiceWalletEvent	../server/chain.cpp	/^static bool ServiceWalletEvent(int ifaceIndex)$/;"	f	file:
ServiceWalletEventUpdate	../server/chain.cpp	/^void ServiceWalletEventUpdate(CWallet *wallet, const CBlock *pblock)$/;"	f
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const CKeyID &id) $/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const CScriptID &id) $/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const CTxDestination &dest)$/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const WitnessUnknown& id)$/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const WitnessV0KeyHash& id)$/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const WitnessV0ScriptHash& id)$/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const WitnessV14KeyHash& id)$/;"	f	class:CCoinAddr
Set	../server/coinaddr.cpp	/^bool CCoinAddr::Set(const WitnessV14ScriptHash& id)$/;"	f	class:CCoinAddr
SetAccount	../server/txcreator.cpp	/^void CTxCreator::SetAccount(string strAccountIn)$/;"	f	class:CTxCreator
SetAddr	../server/account.cpp	/^void CAccountCache::SetAddr(int type, CCoinAddr addr)$/;"	f	class:CAccountCache
SetAddrDestinations	../server/account.cpp	/^void CAccountCache::SetAddrDestinations(const CKeyID& keyid)$/;"	f	class:CAccountCache
SetAddressBookName	../server/wallet.cpp	/^bool CWallet::SetAddressBookName(const CTxDestination& address, const string& strName)$/;"	f	class:CWallet
SetBestBlockIndex	../server/block.cpp	/^void SetBestBlockIndex(CIface *iface, CBlockIndex *pindex)$/;"	f
SetBestBlockIndex	../server/block.cpp	/^void SetBestBlockIndex(int ifaceIndex, CBlockIndex *pindex)$/;"	f
SetBestChain	../server/color/color_block.cpp	/^bool COLORBlock::SetBestChain(CBlockIndex* pindexNew)$/;"	f	class:COLORBlock
SetBestChain	../server/emc2/emc2_block.cpp	/^bool EMC2Block::SetBestChain(CBlockIndex* pindexNew)$/;"	f	class:EMC2Block
SetBestChain	../server/emc2/emc2_block.cpp	/^bool EMC2Block::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)$/;"	f	class:EMC2Block
SetBestChain	../server/ltc/ltc_block.cpp	/^bool LTCBlock::SetBestChain(CBlockIndex* pindexNew)$/;"	f	class:LTCBlock
SetBestChain	../server/ltc/ltc_block.cpp	/^bool LTCBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)$/;"	f	class:LTCBlock
SetBestChain	../server/shc/shc_block.cpp	/^bool SHCBlock::SetBestChain(CBlockIndex* pindexNew)$/;"	f	class:SHCBlock
SetBestChain	../server/test/test_block.cpp	/^bool TESTBlock::SetBestChain(CBlockIndex* pindexNew)$/;"	f	class:TESTBlock
SetBestChain	../server/test/test_block.cpp	/^bool TESTBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)$/;"	f	class:TESTBlock
SetBestChain	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::SetBestChain(CBlockIndex* pindexNew)$/;"	f	class:TESTNETBlock
SetBestChain	../server/wallet.cpp	/^void CWallet::SetBestChain(const CBlockLocator& loc)$/;"	f	class:CWallet
SetBloomFilter	../server/net.h	/^    void SetBloomFilter(CBloomFilter& filterIn)$/;"	f	class:CNode
SetCell	../server/matrix.h	/^    void SetCell(int row, int col, unsigned int val)$/;"	f	class:CTxMatrix
SetCellsNull	../server/matrix.h	/^    void SetCellsNull()$/;"	f	class:CTxMatrix
SetCertHash	../server/account.cpp	/^bool CAccountCache::SetCertHash(const uint160& hCert)$/;"	f	class:CAccountCache
SetChain	../server/hdkey.cpp	/^bool HDPrivKey::SetChain(cbuff vchChainIn)$/;"	f	class:HDPrivKey
SetChain	../server/hdkey.cpp	/^bool HDPrivKey::SetChain(string hexChain)$/;"	f	class:HDPrivKey
SetChainColorOpt	../server/color/color_block.cpp	/^void SetChainColorOpt(uint160 hColor, color_opt& opt)$/;"	f
SetChangeAddr	../server/txcreator.cpp	/^bool CTxCreator::SetChangeAddr(const CPubKey& scriptPubKey)$/;"	f	class:CTxCreator
SetChecksum	../server/ext/exec.h	/^		void SetChecksum(const uint256 hDataIn)$/;"	f	class:CExecCall
SetChecksum	../server/ext/exec.h	/^		void SetChecksum(const uint256 hDataIn)$/;"	f	class:CExecCheckpoint
SetChecksum	../server/ext/exec.h	/^		void SetChecksum(string text)$/;"	f	class:CExecCall
SetChecksum	../server/ext/exec.h	/^		void SetChecksum(string text)$/;"	f	class:CExecCheckpoint
SetCoinAddr	../server/ext/alias.cpp	/^void CAlias::SetCoinAddr(CCoinAddr& addr)$/;"	f	class:CAlias
SetColor	../server/txmempool.h	/^		void SetColor(const uint160& hColorIn)$/;"	f	class:CPoolTx
SetColor	../server/wallet.h	/^			 void SetColor(uint160 hColorIn)$/;"	f	class:CWalletTx
SetColorOpt	../server/color/color_block.cpp	/^void SetColorOpt(color_opt& opt, int mode, int val)$/;"	f
SetCommitHeight	../server/ext/exec.cpp	/^void CExecCall::SetCommitHeight(int ifaceIndex)$/;"	f	class:CExecCall
SetCommitHeight	../server/ext/exec.cpp	/^void CExecCheckpoint::SetCommitHeight(int ifaceIndex)$/;"	f	class:CExecCheckpoint
SetCommitHeight	../server/ext/exec.h	/^		void SetCommitHeight(int64 nHeightIn)$/;"	f	class:CExecCall
SetCommitHeight	../server/ext/exec.h	/^		void SetCommitHeight(int64 nHeightIn)$/;"	f	class:CExecCheckpoint
SetCompact	../server/bignum.h	/^    CBigNum& SetCompact(unsigned int nCompact)$/;"	f	class:CBigNum
SetCompactSignature	../server/dikey.cpp	/^bool DIKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:DIKey
SetCompactSignature	../server/eckey.cpp	/^bool ECKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:ECKey
SetCompactSignature	../server/hdkey.cpp	/^bool HDPrivKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:HDPrivKey
SetCompressedPubKey	../server/key.h	/^    void SetCompressedPubKey()$/;"	f	class:CKey
SetData	../server/base58.h	/^		void SetData(const cbuff& vchVersionIn, const unsigned char *pbegin, const unsigned char *pend)$/;"	f	class:CBase58Data
SetData	../server/base58.h	/^		void SetData(const cbuff& vchVersionIn, const void* pdata, size_t nSize)$/;"	f	class:CBase58Data
SetData	../server/base58.h	/^		void SetData(int nVersionIn, const unsigned char *pbegin, const unsigned char *pend)$/;"	f	class:CBase58Data
SetData	../server/base58.h	/^		void SetData(int nVersionIn, const void* pdata, size_t nSize)$/;"	f	class:CBase58Data
SetDefaultAddr	../server/account.cpp	/^void CAccountCache::SetDefaultAddr(const CPubKey& pubkey)$/;"	f	class:CAccountCache
SetDefaultKey	../server/wallet.cpp	/^bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)$/;"	f	class:CWallet
SetDestination	../server/script.cpp	/^void CScript::SetDestination(const CTxDestination& dest)$/;"	f	class:CScript
SetDetach	../server/txidx.h	/^    void SetDetach(bool fDetachDB_) { fDetachDB = fDetachDB_; }$/;"	f	class:CDBEnv
SetExecLabel	../server/ext/exec.cpp	/^static bool SetExecLabel(CExec *exec, sexe_mod_t *mod)$/;"	f	file:
SetExpireSpan	../server/ext/txext.h	/^    void SetExpireSpan(double sec)$/;"	f	class:CExtCore
SetExpireTime	../server/ext/txext.h	/^    void SetExpireTime()$/;"	f	class:CExtCore
SetExpireTime	../server/ext/txext.h	/^    void SetExpireTime(shtime_t tExpireIn)$/;"	f	class:CExtCore
SetFee	../server/ext/certificate.h	/^    void SetFee(int64 nFeeIn)$/;"	f	class:CCert
SetFlag	../server/block.h	/^		void SetFlag(unsigned int flag)$/;"	f	class:CTransactionCore
SetFlag	../server/txmempool.h	/^    void SetFlag(int flag)$/;"	f	class:CPoolTx
SetHash	../server/ext/channel.cpp	/^bool CChannel::SetHash()$/;"	f	class:CChannel
SetHex	../server/bignum.h	/^    void SetHex(const std::string& str)$/;"	f	class:CBigNum
SetHex	../server/uint256.h	/^    void SetHex(const char* psz)$/;"	f	class:base_uint
SetHex	../server/uint256.h	/^    void SetHex(const std::string& str)$/;"	f	class:base_uint
SetIP	../server/netbase.cpp	/^void CNetAddr::SetIP(const CNetAddr& ipIn)$/;"	f	class:CNetAddr
SetIssuer	../server/ext/certificate.h	/^    bool SetIssuer(CCert& issuer)$/;"	f	class:CCert
SetKey	../server/crypter.cpp	/^bool CCrypter::SetKey(const CKeyingMaterial& chNewKey, const std::vector<unsigned char>& chNewIV)$/;"	f	class:CCrypter
SetKey	../test/testcoin_bip32.cpp	/^		void SetKey(const K &key) {$/;"	f	class:CBitcoinExtKeyBase
SetKeyFromPassphrase	../server/crypter.cpp	/^bool CCrypter::SetKeyFromPassphrase(const SecureString& strKeyData, const std::vector<unsigned char>& chSalt, const unsigned int nRounds, const unsigned int nDerivationMethod)$/;"	f	class:CCrypter
SetLabel	../server/ext/txext.h	/^    void SetLabel(std::string labelIn)$/;"	f	class:CExtCore
SetLimits	../server/txcreator.cpp	/^void CTxBatchCreator::SetLimits()$/;"	f	class:CTxBatchCreator
SetLockHeight	../server/txcreator.cpp	/^bool CTxCreator::SetLockHeight(uint32_t nHeight)$/;"	f	class:CTxCreator
SetLockHeightSpan	../server/txcreator.cpp	/^bool CTxCreator::SetLockHeightSpan(int nIn, uint32_t nHeight)$/;"	f	class:CTxCreator
SetLockTime	../server/txcreator.cpp	/^bool CTxCreator::SetLockTime(time_t t)$/;"	f	class:CTxCreator
SetLockTimeSpan	../server/txcreator.cpp	/^bool CTxCreator::SetLockTimeSpan(int nIn, time_t t)$/;"	f	class:CTxCreator
SetMaster	../server/dikey.cpp	/^void DIExtKey::SetMaster(const unsigned char *seed, unsigned int nSeedLen) $/;"	f	class:DIExtKey
SetMaster	../server/eckey.cpp	/^void ECExtKey::SetMaster(const unsigned char *seed, unsigned int nSeedLen) $/;"	f	class:ECExtKey
SetMerkleBranch	../server/wallet.cpp	/^int CMerkleTx::SetMerkleBranch(const CBlock* pblock)$/;"	f	class:CMerkleTx
SetMerkleBranch	../server/wallet.cpp	/^int CMerkleTx::SetMerkleBranch(int ifaceIndex)$/;"	f	class:CMerkleTx
SetMethodName	../server/ext/exec.h	/^		void SetMethodName(string text)$/;"	f	class:CExecCall
SetMinFee	../server/txcreator.cpp	/^void CTxCreator::SetMinFee(int64 nMinFeeIn)$/;"	f	class:CTxCreator
SetMockTime	../server/util.cpp	/^void SetMockTime(int64 nMockTimeIn)$/;"	f
SetMultisig	../server/script.cpp	/^void CScript::SetMultisig(int nRequired, const std::vector<ECKey>& keys)$/;"	f	class:CScript
SetName	../server/ext/context.h	/^    void SetName(uint160 hName)$/;"	f	class:CContext
SetNameProxy	../server/netbase.cpp	/^bool SetNameProxy(CService addrProxy, int nSocksVersion) {$/;"	f
SetNoDestination	../server/script.cpp	/^void CScript::SetNoDestination()$/;"	f	class:CScript
SetNull	../server/account.h	/^		void SetNull() $/;"	f	class:CAccountCache
SetNull	../server/block.h	/^		void SetNull()$/;"	f	class:CBlockLocator
SetNull	../server/block.h	/^    void SetNull() { hash = 0; n = (unsigned int) -1; }$/;"	f	class:COutPoint
SetNull	../server/block.h	/^    void SetNull() { nFile = (unsigned int) -1; nBlockPos = 0; nTxPos = 0; }$/;"	f	class:CDiskTxPos
SetNull	../server/block.h	/^    void SetNull() { ptx = NULL; n = (unsigned int) -1; }$/;"	f	class:CInPoint
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CBlock
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CBlockHeader
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTransaction
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTransactionCore
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTxIndex
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTxOut
SetNull	../server/block.h	/^    void SetNull()$/;"	f	class:CTxWitness
SetNull	../server/coinaddr.h	/^		void SetNull()$/;"	f	class:CCoinAddr
SetNull	../server/color/color_block.h	/^    void SetNull()$/;"	f	class:COLORBlock
SetNull	../server/emc2/emc2_block.h	/^		void SetNull()$/;"	f	class:EMC2Block
SetNull	../server/ext/alias.h	/^    void SetNull()$/;"	f	class:CAlias
SetNull	../server/ext/altchain.h	/^			void SetNull()$/;"	f	class:CAltBlock
SetNull	../server/ext/altchain.h	/^		void SetNull()$/;"	f	class:CAltTx
SetNull	../server/ext/altchain.h	/^    void SetNull()$/;"	f	class:CAltChain
SetNull	../server/ext/asset.h	/^    void SetNull()$/;"	f	class:CAsset
SetNull	../server/ext/certificate.h	/^    void SetNull()$/;"	f	class:CCert
SetNull	../server/ext/certificate.h	/^    void SetNull()$/;"	f	class:CIdent
SetNull	../server/ext/certificate.h	/^    void SetNull()$/;"	f	class:CLicense
SetNull	../server/ext/channel.h	/^    void SetNull()$/;"	f	class:CChannel
SetNull	../server/ext/channel.h	/^    void SetNull()$/;"	f	class:CChannelKey
SetNull	../server/ext/context.h	/^    void SetNull()$/;"	f	class:CContext
SetNull	../server/ext/exec.h	/^    void SetNull()$/;"	f	class:CExec
SetNull	../server/ext/exec.h	/^    void SetNull()$/;"	f	class:CExecCall
SetNull	../server/ext/exec.h	/^    void SetNull()$/;"	f	class:CExecCheckpoint
SetNull	../server/ext/exec.h	/^    void SetNull()$/;"	f	class:CExecCore
SetNull	../server/ext/ext_param.h	/^    void SetNull()$/;"	f	class:CParam
SetNull	../server/ext/offer.h	/^    void SetNull()$/;"	f	class:COffer
SetNull	../server/ext/txext.h	/^    void SetNull()$/;"	f	class:CExtCore
SetNull	../server/ext/txext.h	/^    void SetNull()$/;"	f	class:CSign
SetNull	../server/hdkey.h	/^    void SetNull()$/;"	f	class:HDMasterPrivKey
SetNull	../server/hdkey.h	/^    void SetNull()$/;"	f	class:HDPrivKey
SetNull	../server/hdkey.h	/^    void SetNull()$/;"	f	class:HDPubKey
SetNull	../server/key.h	/^		void SetNull()$/;"	f	class:CKeyMetadata
SetNull	../server/key.h	/^		void SetNull()$/;"	f	class:CPubKey
SetNull	../server/key.h	/^    void SetNull()$/;"	f	class:CKey
SetNull	../server/ltc/ltc_block.h	/^    void SetNull()$/;"	f	class:LTCBlock
SetNull	../server/matrix.h	/^    void SetNull()$/;"	f	class:CTxMatrix
SetNull	../server/shc/shc_block.h	/^    void SetNull()$/;"	f	class:SHCBlock
SetNull	../server/shlib.h	/^    void SetNull()$/;"	f	class:SHPeer
SetNull	../server/shlib.h	/^    void SetNull()$/;"	f	class:SHSig
SetNull	../server/test/test_block.h	/^    void SetNull()$/;"	f	class:TESTBlock
SetNull	../server/testnet/testnet_block.h	/^		void SetNull()$/;"	f	class:TESTNETBlock
SetNull	../server/txcreator.h	/^    void SetNull()$/;"	f	class:CTxBatchCreator
SetNull	../server/txmempool.h	/^    void SetNull()$/;"	f	class:CPoolTx
SetNull	../server/uint256.h	/^    void SetNull()$/;"	f	class:base_uint
SetNull	../server/wallet.h	/^		void SetNull()$/;"	f	class:CAccount
SetNull	../server/wallet.h	/^		void SetNull()$/;"	f	class:CAccountingEntry
SetOriginValue	../server/ext/channel.h	/^    void SetOriginValue(int64 val)$/;"	f	class:CChannel
SetPayAddr	../server/ext/offer.cpp	/^void COffer::SetPayAddr(const CPubKey& payAddr)$/;"	f	class:COffer
SetPeerValue	../server/ext/channel.h	/^    void SetPeerValue(int64 val)$/;"	f	class:CChannel
SetPort	../server/netbase.cpp	/^void CService::SetPort(unsigned short portIn)$/;"	f	class:CService
SetPort	../server/netbase.h	38;"	d
SetPrivKey	../server/dikey.cpp	/^bool DIKey::SetPrivKey(const CPrivKey& vchPrivKey, bool fCompressed)$/;"	f	class:DIKey
SetPrivKey	../server/eckey.cpp	/^bool ECKey::SetPrivKey(const CPrivKey& vchPrivKey, bool fCompressed)$/;"	f	class:ECKey
SetProxy	../server/netbase.cpp	/^bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion) {$/;"	f
SetPubKey	../server/dikey.cpp	/^bool DIKey::SetPubKey(const CPubKey& vchPubKey)$/;"	f	class:DIKey
SetPubKey	../server/eckey.cpp	/^bool ECKey::SetPubKey(const CPubKey& vchPubKey)$/;"	f	class:ECKey
SetRaw	../server/uint256.h	/^    void SetRaw(unsigned int *val)$/;"	f	class:base_uint
SetResultHash	../server/ext/exec.h	/^		void SetResultHash(uint64 hResultIn)$/;"	f	class:CExecCall
SetScript	../server/coinaddr.cpp	/^bool CCoinAddr::SetScript(const CScript& script)$/;"	f	class:CCoinAddr
SetSecret	../server/base58.h	/^		void SetSecret(int ifaceIndex, const CSecret& vchSecret, bool fCompressed)$/;"	f	class:CCoinSecret
SetSecret	../server/dikey.cpp	/^bool DIKey::SetSecret(const CSecret& vchSecret)$/;"	f	class:DIKey
SetSecret	../server/dikey.h	/^    bool SetSecret(const CSecret& vchSecret, bool fCompressed)$/;"	f	class:DIKey
SetSecret	../server/eckey.cpp	/^bool ECKey::SetSecret(const CSecret& vchSecret, bool fCompressed)$/;"	f	class:ECKey
SetSeed	../server/hdkey.cpp	/^bool HDPrivKey::SetSeed(cbuff seed)$/;"	f	class:HDPrivKey
SetSeed	../server/hdkey.h	/^    bool SetSeed(CSecret seed)$/;"	f	class:HDPrivKey
SetSendTime	../server/ext/exec.cpp	/^void CExecCall::SetSendTime()$/;"	f	class:CExecCall
SetSendTime	../server/ext/exec.cpp	/^void CExecCheckpoint::SetSendTime()$/;"	f	class:CExecCheckpoint
SetSendValue	../server/ext/exec.h	/^    void SetSendValue(int64 nValueIn)$/;"	f	class:CExecCall
SetSenderAddr	../server/ext/exec.cpp	/^bool CExec::SetSenderAddr(CCoinAddr& addr)$/;"	f	class:CExec
SetSerialNumber	../server/ext/certificate.h	/^    void SetSerialNumber()$/;"	f	class:CCert
SetSerialNumber	../server/ext/certificate.h	/^    void SetSerialNumber(cbuff vSerialIn)$/;"	f	class:CCert
SetSockAddr	../server/netbase.cpp	/^bool CService::SetSockAddr(const struct sockaddr *paddr)$/;"	f	class:CService
SetSpecial	../server/netbase.cpp	/^bool CNetAddr::SetSpecial(const std::string &strName)$/;"	f	class:CNetAddr
SetSpentChannel	../server/ext/channel.cpp	/^void SetSpentChannel(int ifaceIndex, const uint160& hChan, const CTransaction& tx)$/;"	f
SetStack	../server/ext/exec.h	/^    bool SetStack(cbuff stack)$/;"	f	class:CExec
SetString	../server/base58.cpp	/^bool CBase58Data::SetString(const char *psz, size_t nVersionSize)$/;"	f	class:CBase58Data
SetString	../server/base58.cpp	/^bool CCoinSecret::SetString(const char* pszSecret)$/;"	f	class:CCoinSecret
SetString	../server/base58.cpp	/^bool CCoinSecret::SetString(const std::string& strSecret)$/;"	f	class:CCoinSecret
SetString	../server/base58.h	/^		bool SetString(const std::string& str, size_t nVersionSize = 1)$/;"	f	class:CBase58Data
SetString	../server/coinaddr.cpp	/^bool CCoinAddr::SetString(const std::string& str)$/;"	f	class:CCoinAddr
SetThreadPriority	../server/util.h	/^inline void SetThreadPriority(int nPriority)$/;"	f
SetType	../server/ext/certificate.h	/^    void SetType(int nTypeIn)$/;"	f	class:CIdent
SetType	../server/matrix.h	/^    void SetType(int nTypeIn)$/;"	f	class:CTxMatrix
SetType	../server/serialize.h	/^    void SetType(int n)          { nType = n; }$/;"	f	class:CAutoFile
SetType	../server/serialize.h	/^    void SetType(int n)          { nType = n; }$/;"	f	class:CDataStream
SetValue	../server/ext/channel.h	/^    void SetValue(int64 val)$/;"	f	class:CChannelKey
SetValue	../server/ext/context.cpp	/^bool CContext::SetValue(string name, cbuff value)$/;"	f	class:CContext
SetVersion	../server/block.h	/^		void SetVersion(int ver)$/;"	f	class:CTransactionCore
SetVersion	../server/ext/txext.h	/^    void SetVersion(int ver)$/;"	f	class:CExtCore
SetVersion	../server/serialize.h	/^    void SetVersion(int n)       { nVersion = n; }$/;"	f	class:CAutoFile
SetVersion	../server/serialize.h	/^    void SetVersion(int n)       { nVersion = n; }$/;"	f	class:CDataStream
SetWallet	../server/wallet.cpp	/^void SetWallet(CIface *iface, CWallet *wallet)$/;"	f
SetWallet	../server/wallet.cpp	/^void SetWallet(int iface_idx, CWallet *wallet)$/;"	f
SetXferAddr	../server/ext/offer.cpp	/^void COffer::SetXferAddr(const CPubKey& xferAddr)$/;"	f	class:COffer
ShrinkNew	../server/addrman.cpp	/^int CAddrMan::ShrinkNew(int nUBucket)$/;"	f	class:CAddrMan
Sigma0	../server/algo/sha512.cpp	/^uint64_t inline Sigma0(uint64_t x) { return (x >> 28 | x << 36) ^ (x >> 34 | x << 30) ^ (x >> 39 | x << 25); }$/;"	f	namespace:__anon18::sha512
Sigma0	../server/bolo/bolo_validation03.cpp	200;"	d	file:
Sigma0	../server/bolo/bolo_validation03.cpp	297;"	d	file:
Sigma1	../server/algo/sha512.cpp	/^uint64_t inline Sigma1(uint64_t x) { return (x >> 14 | x << 50) ^ (x >> 18 | x << 46) ^ (x >> 41 | x << 23); }$/;"	f	namespace:__anon18::sha512
Sigma1	../server/bolo/bolo_validation03.cpp	201;"	d	file:
Sigma1	../server/bolo/bolo_validation03.cpp	298;"	d	file:
Sign	../server/dikey.cpp	/^bool DIKey::Sign(uint256 hash, std::vector<unsigned char>& vchSig)$/;"	f	class:DIKey
Sign	../server/eckey.cpp	/^bool ECKey::Sign(uint256 hash, std::vector<unsigned char>& vchSig)$/;"	f	class:ECKey
Sign	../server/ext/asset.cpp	/^bool CAsset::Sign(CCert *cert)$/;"	f	class:CAsset
Sign	../server/ext/asset.cpp	/^bool CAsset::Sign(int ifaceIndex)$/;"	f	class:CAsset
Sign	../server/ext/certificate.cpp	/^bool CCert::Sign(int ifaceIndex, CCoinAddr& addr, cbuff vchContext, string hexSeed) $/;"	f	class:CCert
Sign	../server/ext/certificate.cpp	/^bool CLicense::Sign(CCert *cert)$/;"	f	class:CLicense
Sign	../server/ext/certificate.cpp	/^bool CLicense::Sign(int ifaceIndex)$/;"	f	class:CLicense
Sign	../server/ext/certificate.h	/^    bool Sign(int ifaceIndex, CCoinAddr& addr, CCert *cert, string hexSeed = string())$/;"	f	class:CCert
Sign	../server/ext/context.cpp	/^bool CContext::Sign(int ifaceIndex)$/;"	f	class:CContext
Sign	../server/ext/exec.cpp	/^bool CExec::Sign(int ifaceIndex, CCoinAddr& addr)$/;"	f	class:CExec
Sign	../server/ext/exec.cpp	/^bool CExecCall::Sign(int ifaceIndex, CCoinAddr& addr)$/;"	f	class:CExecCall
Sign	../server/ext/txext.cpp	/^bool CSign::Sign(int ifaceIndex, CCoinAddr& addr, cbuff& vchContext, string hexSeed)$/;"	f	class:CSign
Sign	../server/ext/txext.cpp	/^bool CSign::Sign(int ifaceIndex, CCoinAddr& addr, string hexContext, string hexSeed)$/;"	f	class:CSign
Sign	../server/hdkey.cpp	/^bool HDPrivKey::Sign(uint256 hash, std::vector<unsigned char>& vchSig)$/;"	f	class:HDPrivKey
Sign1	../server/script.cpp	/^bool Sign1(const CKeyID& address, const CKeyStore& keystore, uint256 hash, int nHashType, CScript& scriptSigRet)$/;"	f
Sign1	../server/txsignature.cpp	/^static bool Sign1(CSignature *sig, const CKeyID& address, const CScript& scriptCode, cstack_t& ret, int sigversion)$/;"	f	file:
SignAddress	../server/ext/txext.cpp	/^bool CSign::SignAddress(int ifaceIndex, CCoinAddr& addr, unsigned char *data, size_t data_len)$/;"	f	class:CSign
SignAddress	../server/txsignature.cpp	/^bool CSignature::SignAddress(const CScript& scriptPubKey, cstack_t& ret, txnouttype& whichTypeRet, int sigversion)$/;"	f	class:CSignature
SignCompact	../server/dikey.cpp	/^bool DIKey::SignCompact(uint256 hash, std::vector<unsigned char>& vchSig)$/;"	f	class:DIKey
SignCompact	../server/eckey.cpp	/^bool ECKey::SignCompact(uint256 hash, std::vector<unsigned char>& vchSig)$/;"	f	class:ECKey
SignCompact	../server/hdkey.cpp	/^bool HDPrivKey::SignCompact(uint256 hash, std::vector<unsigned char>& vchSig)$/;"	f	class:HDPrivKey
SignContext	../server/ext/txext.cpp	/^bool CSign::SignContext(cbuff& vchContext, string hexSeed)$/;"	f	class:CSign
SignContext	../server/ext/txext.h	/^    bool SignContext(string hexContext, string hexSeed = string())$/;"	f	class:CSign
SignContext	../server/ext/txext.h	/^    bool SignContext(uint160 hash, string hexSeed = string())$/;"	f	class:CSign
SignN	../server/script.cpp	/^bool SignN(const vector<valtype>& multisigdata, const CKeyStore& keystore, uint256 hash, int nHashType, CScript& scriptSigRet)$/;"	f
SignN	../server/txsignature.cpp	/^static bool SignN(CSignature *sig, const vector<valtype>& multisigdata, const CScript& scriptCode, std::vector<valtype>& ret, int sigversion)$/;"	f	file:
SignOrigin	../server/ext/txext.cpp	/^bool CSign::SignOrigin(int ifaceIndex, CCoinAddr& addr)$/;"	f	class:CSign
SignSignature	../server/txsignature.cpp	/^bool CSignature::SignSignature(const CScript& fromPubKey)$/;"	f	class:CSignature
SignSignature	../server/txsignature.cpp	/^bool CSignature::SignSignature(const CTransaction& txFrom)$/;"	f	class:CSignature
SignatureHash	../server/txsignature.cpp	/^bool CSignature::SignatureHash(CScript scriptCode, int sigver, uint256& hashRet)$/;"	f	class:CSignature
Socks4	../server/netbase.cpp	/^bool static Socks4(const CService &addrDest, unsigned int& hSocket)$/;"	f	file:
Socks5	../server/netbase.cpp	/^bool static Socks5(string strDest, int port, unsigned int& hSocket)$/;"	f	file:
SoftSetArg	../server/util.cpp	/^bool SoftSetArg(const std::string& strArg, const std::string& strValue)$/;"	f
SoftSetBoolArg	../server/util.cpp	/^bool SoftSetBoolArg(const std::string& strArg, bool fValue)$/;"	f
Solver	../server/script.cpp	/^bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsigned char> >& vSolutionsRet)$/;"	f
SolverCheckAltProof	../server/script.cpp	/^static bool SolverCheckAltProof(CScript& script, vector<vector<unsigned char> >& vSolutionsRet)$/;"	f	file:
SplitHostPort	../server/netbase.cpp	/^void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {$/;"	f
StackString	../server/script.h	/^inline std::string StackString(const std::vector<std::vector<unsigned char> >& vStack)$/;"	f
Stream_reader	../server/json/json_spirit_stream_reader.h	/^        Stream_reader( Istream_type& is )$/;"	f	class:json_spirit::Stream_reader
Stream_reader	../server/json/json_spirit_stream_reader.h	/^    class Stream_reader$/;"	c	namespace:json_spirit
Stream_reader_thrower	../server/json/json_spirit_stream_reader.h	/^        Stream_reader_thrower( Istream_type& is )$/;"	f	class:json_spirit::Stream_reader_thrower
Stream_reader_thrower	../server/json/json_spirit_stream_reader.h	/^    class Stream_reader_thrower$/;"	c	namespace:json_spirit
String_type	../server/json/json_spirit_reader_template.h	/^        typedef typename Config_type::String_type String_type;$/;"	t	class:json_spirit::Semantic_actions
String_type	../server/json/json_spirit_value.h	/^        typedef String String_type;$/;"	t	struct:json_spirit::Config_map
String_type	../server/json/json_spirit_value.h	/^        typedef String String_type;$/;"	t	struct:json_spirit::Config_vector
String_type	../server/json/json_spirit_value.h	/^        typedef typename Config::String_type String_type;$/;"	t	class:json_spirit::Value_impl
String_type	../server/json/json_spirit_value.h	/^        typedef typename Config::String_type String_type;$/;"	t	struct:json_spirit::Pair_impl
String_type	../server/json/json_spirit_writer_template.h	/^        typedef typename Config_type::String_type String_type;$/;"	t	class:json_spirit::Generator
StripExtAccountName	../server/ext/context.cpp	/^static string StripExtAccountName(string strAccount)$/;"	f	file:
StripExtAccountName	../server/ext/exec.cpp	/^static string StripExtAccountName(string strAccount)$/;"	f	file:
SubCell	../server/matrix.h	/^    void SubCell(int row, int col, unsigned int val)$/;"	f	class:CTxMatrix
SwapRandom	../server/addrman.cpp	/^void CAddrMan::SwapRandom(unsigned int nRndPos1, unsigned int nRndPos2)$/;"	f	class:CAddrMan
Sync	../server/leveldb.h	/^    bool Sync() throw(leveldb_error) {$/;"	f	class:CLevelDB
SyncWithWallets	../server/wallet.cpp	/^bool SyncWithWallets(CIface *iface, CTransaction& tx, CBlock *pblock)$/;"	f
T0	../server/algo/sph_blake.h	/^	sph_u32 T0, T1;$/;"	m	struct:__anon19
T0	../server/algo/sph_blake.h	/^	sph_u64 T0, T1;$/;"	m	struct:__anon20
T0	../server/algo/sph_groestl.c	/^static const sph_u64 T0[] = {$/;"	v	file:
T0dn	../server/algo/sph_groestl.c	/^static const sph_u32 T0dn[] = {$/;"	v	file:
T0up	../server/algo/sph_groestl.c	/^static const sph_u32 T0up[] = {$/;"	v	file:
T1	../server/algo/sph_blake.h	/^	sph_u32 T0, T1;$/;"	m	struct:__anon19
T1	../server/algo/sph_blake.h	/^	sph_u64 T0, T1;$/;"	m	struct:__anon20
T1	../server/algo/sph_groestl.c	/^static const sph_u64 T1[] = {$/;"	v	file:
T1dn	../server/algo/sph_groestl.c	/^static const sph_u32 T1dn[] = {$/;"	v	file:
T1up	../server/algo/sph_groestl.c	/^static const sph_u32 T1up[] = {$/;"	v	file:
T2	../server/algo/sph_groestl.c	/^static const sph_u64 T2[] = {$/;"	v	file:
T2dn	../server/algo/sph_groestl.c	/^static const sph_u32 T2dn[] = {$/;"	v	file:
T2up	../server/algo/sph_groestl.c	/^static const sph_u32 T2up[] = {$/;"	v	file:
T3	../server/algo/sph_groestl.c	/^static const sph_u64 T3[] = {$/;"	v	file:
T32	../server/algo/sph_cubehash.c	134;"	d	file:
T32	../server/algo/sph_echo.c	67;"	d	file:
T32	../server/algo/sph_simd.c	54;"	d	file:
T3dn	../server/algo/sph_groestl.c	/^static const sph_u32 T3dn[] = {$/;"	v	file:
T3up	../server/algo/sph_groestl.c	/^static const sph_u32 T3up[] = {$/;"	v	file:
T4	../server/algo/sph_groestl.c	/^static const sph_u64 T4[] = {$/;"	v	file:
T5	../server/algo/sph_groestl.c	/^static const sph_u64 T5[] = {$/;"	v	file:
T6	../server/algo/sph_groestl.c	/^static const sph_u64 T6[] = {$/;"	v	file:
T7	../server/algo/sph_groestl.c	/^static const sph_u64 T7[] = {$/;"	v	file:
TASKF_RESET	../stratum/stratum.h	47;"	d
TERM_SECP256K1	../server/eckey.cpp	/^void TERM_SECP256K1(void)$/;"	f
TESTBlock	../server/test/test_block.h	/^    TESTBlock()$/;"	f	class:TESTBlock
TESTBlock	../server/test/test_block.h	/^    TESTBlock(const CBlock &block)$/;"	f	class:TESTBlock
TESTBlock	../server/test/test_block.h	/^class TESTBlock : public CBlock$/;"	c
TESTNETBlock	../server/testnet/testnet_block.h	/^		TESTNETBlock()$/;"	f	class:TESTNETBlock
TESTNETBlock	../server/testnet/testnet_block.h	/^		TESTNETBlock(const CBlock &block)$/;"	f	class:TESTNETBlock
TESTNETBlock	../server/testnet/testnet_block.h	/^		TESTNETBlock(const CBlockHeader &block)$/;"	f	class:TESTNETBlock
TESTNETBlock	../server/testnet/testnet_block.h	/^class TESTNETBlock : public CBlock$/;"	c
TESTNETWallet	../server/testnet/testnet_wallet.h	/^		TESTNETWallet() : CWallet(TESTNET_COIN_IFACE, "testnet_wallet.dat") { };  $/;"	f	class:TESTNETWallet
TESTNETWallet	../server/testnet/testnet_wallet.h	/^class TESTNETWallet : public CWallet$/;"	c
TESTNET_COIN	../proto/testnet_proto.h	64;"	d
TESTNET_COINBASE_FLAGS	../server/testnet/testnet_wallet.cpp	/^CScript TESTNET_COINBASE_FLAGS;$/;"	v
TESTNET_COINBASE_MATURITY	../proto/testnet_proto.h	/^static const int TESTNET_COINBASE_MATURITY = 32;$/;"	v
TESTNET_COIN_DAEMON_PORT	../proto/testnet_proto.h	36;"	d
TESTNET_COIN_HEADER_SIZE	../server/testnet/testnet_netmsg.cpp	68;"	d	file:
TESTNET_COIN_IFACE	../proto/coin_proto.h	130;"	d
TESTNET_CTxMemPool	../server/testnet/testnet_pool.h	/^    TESTNET_CTxMemPool() : CPool(TESTNET_COIN_IFACE) { };$/;"	f	class:TESTNET_CTxMemPool
TESTNET_CTxMemPool	../server/testnet/testnet_pool.h	/^class TESTNET_CTxMemPool : public CPool$/;"	c
TESTNET_DEFAULT_BYTES_PER_SIGOP	../proto/testnet_proto.h	77;"	d
TESTNET_DIFFICULTY_EXPIRE_TIME	../server/testnet/testnet_block.cpp	59;"	d	file:
TESTNET_MAX_BLOCK_SIZE	../proto/testnet_proto.h	69;"	d
TESTNET_MAX_DRIFT_TIME	../proto/testnet_proto.h	54;"	d
TESTNET_MAX_FREE_TX_SIZE	../proto/testnet_proto.h	80;"	d
TESTNET_MAX_GETADDR	../proto/testnet_proto.h	39;"	d
TESTNET_MAX_MONEY	../proto/testnet_proto.h	/^static const int64 TESTNET_MAX_MONEY = 1000000000 * TESTNET_COIN; \/* 1bil max *\/$/;"	v
TESTNET_MAX_ORPHAN_TRANSACTIONS	../proto/testnet_proto.h	41;"	d
TESTNET_MAX_SCRIPT_ELEMENT_SIZE	../proto/testnet_proto.h	51;"	d
TESTNET_MAX_SCRIPT_SIZE	../proto/testnet_proto.h	49;"	d
TESTNET_MAX_SIGOPS	../proto/testnet_proto.h	47;"	d
TESTNET_MAX_STANDARD_TX_SIGOP_COST	../proto/testnet_proto.h	75;"	d
TESTNET_MAX_STANDARD_TX_WEIGHT	../proto/testnet_proto.h	73;"	d
TESTNET_MAX_TRANSACTION_WEIGHT	../proto/testnet_proto.h	71;"	d
TESTNET_MAX_TX_FEE	../proto/testnet_proto.h	/^static const int64 TESTNET_MAX_TX_FEE = 1000 * TESTNET_COIN;$/;"	v
TESTNET_MIN_INPUT	../proto/testnet_proto.h	/^static const int64 TESTNET_MIN_INPUT = 1;$/;"	v
TESTNET_MIN_RELAY_TX_FEE	../proto/testnet_proto.h	/^static const int64 TESTNET_MIN_RELAY_TX_FEE = 1000;$/;"	v
TESTNET_MIN_TX_FEE	../proto/testnet_proto.h	/^static const int64 TESTNET_MIN_TX_FEE = 10000;$/;"	v
TESTNET_PROTOCOL_VERSION	../proto/testnet_proto.h	/^static const int TESTNET_PROTOCOL_VERSION = 2000000;$/;"	v
TESTNET_SEED_LIST_SIZE	../unet/unet_seed.h	13;"	d
TESTNET_SetBestChain	../server/testnet/testnet_block.cpp	/^void static TESTNET_SetBestChain(const CBlockLocator& loc)$/;"	f	file:
TESTNET_VERSION_BUILD	../proto/testnet_proto.h	33;"	d
TESTNET_VERSION_MAJOR	../proto/testnet_proto.h	30;"	d
TESTNET_VERSION_MINOR	../proto/testnet_proto.h	31;"	d
TESTNET_VERSION_REVISION	../proto/testnet_proto.h	32;"	d
TESTNET_WITNESS_SCALE_FACTOR	../proto/testnet_proto.h	/^static const int TESTNET_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
TESTNET_mapOrphanBlocksByPrev	../server/testnet/testnet_block.cpp	/^static orphan_map TESTNET_mapOrphanBlocksByPrev;$/;"	v	file:
TESTTxDB	../server/test/test_txidx.h	/^    TESTTxDB(const char *fileMode = "r+") : CTxDB("test_tx.dat", TEST_COIN_IFACE, fileMode) { }$/;"	f	class:TESTTxDB
TESTTxDB	../server/test/test_txidx.h	/^class TESTTxDB : public CTxDB$/;"	c
TESTWallet	../server/test/test_wallet.h	/^    TESTWallet() : CWallet(TEST_COIN_IFACE, "test_wallet.dat") { };  $/;"	f	class:TESTWallet
TESTWallet	../server/test/test_wallet.h	/^class TESTWallet : public CWallet$/;"	c
TEST_COIN	../proto/test_proto.h	51;"	d
TEST_COINBASE_FLAGS	../server/test/test_wallet.cpp	/^CScript TEST_COINBASE_FLAGS;$/;"	v
TEST_COINBASE_MATURITY	../proto/test_proto.h	/^static const int TEST_COINBASE_MATURITY = 10;$/;"	v
TEST_COIN_DAEMON_PORT	../proto/test_proto.h	34;"	d
TEST_COIN_IFACE	../proto/coin_proto.h	118;"	d
TEST_CTxMemPool	../server/test/test_pool.h	/^    TEST_CTxMemPool() : CPool(TEST_COIN_IFACE) { };$/;"	f	class:TEST_CTxMemPool
TEST_CTxMemPool	../server/test/test_pool.h	/^class TEST_CTxMemPool : public CPool$/;"	c
TEST_DEFAULT_BYTES_PER_SIGOP	../proto/test_proto.h	61;"	d
TEST_MAJORITY_WINDOW	../server/test/test_block.cpp	71;"	d	file:
TEST_MAX_BLOCK_SIZE	../proto/test_proto.h	53;"	d
TEST_MAX_DRIFT_TIME	../proto/test_proto.h	47;"	d
TEST_MAX_FREE_TX_SIZE	../proto/test_proto.h	64;"	d
TEST_MAX_GETADDR	../proto/test_proto.h	36;"	d
TEST_MAX_MONEY	../proto/test_proto.h	/^static const int64 TEST_MAX_MONEY = 1600000000 * TEST_COIN;$/;"	v
TEST_MAX_ORPHAN_TRANSACTIONS	../proto/test_proto.h	38;"	d
TEST_MAX_SCRIPT_ELEMENT_SIZE	../proto/test_proto.h	44;"	d
TEST_MAX_SCRIPT_SIZE	../proto/test_proto.h	42;"	d
TEST_MAX_SIGOPS	../proto/test_proto.h	40;"	d
TEST_MAX_STANDARD_TX_SIGOP_COST	../proto/test_proto.h	59;"	d
TEST_MAX_STANDARD_TX_WEIGHT	../proto/test_proto.h	57;"	d
TEST_MAX_TRANSACTION_WEIGHT	../proto/test_proto.h	55;"	d
TEST_MAX_TX_FEE	../proto/test_proto.h	/^static const int64 TEST_MAX_TX_FEE = 1000 * SHC_COIN;$/;"	v
TEST_MIN_INPUT	../proto/test_proto.h	/^static const int64 TEST_MIN_INPUT = 1;$/;"	v
TEST_MIN_RELAY_TX_FEE	../proto/test_proto.h	/^static const int64 TEST_MIN_RELAY_TX_FEE = 1000;$/;"	v
TEST_MIN_TX_FEE	../proto/test_proto.h	/^static const int64 TEST_MIN_TX_FEE = 10000;$/;"	v
TEST_PROTOCOL_VERSION	../proto/test_proto.h	/^static const int TEST_PROTOCOL_VERSION = 1000000;$/;"	v
TEST_SetBestChain	../server/test/test_block.cpp	/^void static TEST_SetBestChain(const CBlockLocator& loc)$/;"	f	file:
TEST_VERSION_BUILD	../proto/test_proto.h	32;"	d
TEST_VERSION_MAJOR	../proto/test_proto.h	29;"	d
TEST_VERSION_MINOR	../proto/test_proto.h	30;"	d
TEST_VERSION_REVISION	../proto/test_proto.h	31;"	d
TEST_WITNESS_SCALE_FACTOR	../proto/test_proto.h	/^static const int TEST_WITNESS_SCALE_FACTOR = SCALE_FACTOR;$/;"	v
TEST_mapOrphanBlocksByPrev	../server/test/test_block.cpp	/^static orphan_map TEST_mapOrphanBlocksByPrev;$/;"	v	file:
TEST_sexe_compile	../test/testcoin_block.cpp	/^static int TEST_sexe_compile(char *path_out, char *path_fname, char *path_dir, int *exec_size)$/;"	f	file:
TFBIG_4e	../server/algo/sph_skein.c	486;"	d	file:
TFBIG_4e	../server/algo/sph_skein.c	504;"	d	file:
TFBIG_4o	../server/algo/sph_skein.c	494;"	d	file:
TFBIG_4o	../server/algo/sph_skein.c	512;"	d	file:
TFBIG_ADDKEY	../server/algo/sph_skein.c	411;"	d	file:
TFBIG_ADDKEY	../server/algo/sph_skein.c	424;"	d	file:
TFBIG_KINIT	../server/algo/sph_skein.c	393;"	d	file:
TFBIG_MIX	../server/algo/sph_skein.c	445;"	d	file:
TFBIG_MIX8	../server/algo/sph_skein.c	458;"	d	file:
THETA	../server/algo/sph_keccak.c	975;"	d	file:
THIRTY_SECONDS	../stratum/stratum_sync.c	29;"	d	file:
THREAD_ADDEDCONNECTIONS	../server/net.h	/^    THREAD_ADDEDCONNECTIONS,$/;"	e	enum:threadId
THREAD_DNSSEED	../server/net.h	/^    THREAD_DNSSEED,$/;"	e	enum:threadId
THREAD_DUMPADDRESS	../server/net.h	/^    THREAD_DUMPADDRESS,$/;"	e	enum:threadId
THREAD_MAX	../server/net.h	/^    THREAD_MAX$/;"	e	enum:threadId
THREAD_MESSAGEHANDLER	../server/net.h	/^    THREAD_MESSAGEHANDLER,$/;"	e	enum:threadId
THREAD_MINER	../server/net.h	/^    THREAD_MINER,$/;"	e	enum:threadId
THREAD_OPENCONNECTIONS	../server/net.h	/^    THREAD_OPENCONNECTIONS,$/;"	e	enum:threadId
THREAD_PRIORITY_ABOVE_NORMAL	../server/util.h	581;"	d
THREAD_PRIORITY_BELOW_NORMAL	../server/util.h	579;"	d
THREAD_PRIORITY_LOWEST	../server/util.h	578;"	d
THREAD_PRIORITY_NORMAL	../server/util.h	580;"	d
THREAD_RPCHANDLER	../server/net.h	/^    THREAD_RPCHANDLER,$/;"	e	enum:threadId
THREAD_RPCLISTENER	../server/net.h	/^    THREAD_RPCLISTENER,$/;"	e	enum:threadId
THREAD_SOCKETHANDLER	../server/net.h	/^    THREAD_SOCKETHANDLER,$/;"	e	enum:threadId
THREAD_UPNP	../server/net.h	/^    THREAD_UPNP,$/;"	e	enum:threadId
THRESHOLD_ACTIVE	../server/versionbits.h	/^    THRESHOLD_ACTIVE,$/;"	e	enum:ThresholdState
THRESHOLD_DEFINED	../server/versionbits.h	/^    THRESHOLD_DEFINED,$/;"	e	enum:ThresholdState
THRESHOLD_FAILED	../server/versionbits.h	/^    THRESHOLD_FAILED,$/;"	e	enum:ThresholdState
THRESHOLD_LOCKED_IN	../server/versionbits.h	/^    THRESHOLD_LOCKED_IN,$/;"	e	enum:ThresholdState
THRESHOLD_STARTED	../server/versionbits.h	/^    THRESHOLD_STARTED,$/;"	e	enum:ThresholdState
TH_ELT	../server/algo/sph_keccak.c	958;"	d	file:
TRY_LOCK	../server/sync.h	127;"	d
TWEAK3	../server/algo/sph_luffa.c	393;"	d	file:
TWEAK4	../server/algo/sph_luffa.c	608;"	d	file:
TWEAK5	../server/algo/sph_luffa.c	894;"	d	file:
TXF_ALIAS	../server/block.h	/^    static const int TXF_ALIAS = (1 << 6);$/;"	m	class:CTransactionCore
TXF_ALTCHAIN	../server/block.h	/^    static const int TXF_ALTCHAIN = (1 << 15);$/;"	m	class:CTransactionCore
TXF_ASSET	../server/block.h	/^    static const int TXF_ASSET = (1 << 9);$/;"	m	class:CTransactionCore
TXF_CERTIFICATE	../server/block.h	/^    static const int TXF_CERTIFICATE = (1 << 4);$/;"	m	class:CTransactionCore
TXF_CONTEXT	../server/block.h	/^    static const int TXF_CONTEXT = (1 << 14);$/;"	m	class:CTransactionCore
TXF_EXEC	../server/block.h	/^    static const int TXF_EXEC = (1 << 13);$/;"	m	class:CTransactionCore
TXF_IDENT	../server/block.h	/^    static const int TXF_IDENT = (1 << 10);$/;"	m	class:CTransactionCore
TXF_LICENSE	../server/block.h	/^    static const int TXF_LICENSE = (1 << 5);$/;"	m	class:CTransactionCore
TXF_MATRIX	../server/block.h	/^    static const int TXF_MATRIX = (1 << 11);$/;"	m	class:CTransactionCore
TXF_OFFER	../server/block.h	/^    static const int TXF_OFFER = (1 << 7);$/;"	m	class:CTransactionCore
TXF_PARAM	../server/block.h	/^    static const int TXF_PARAM = (1 << 8);$/;"	m	class:CTransactionCore
TXF_RESERVED_0	../server/block.h	/^    static const int TXF_RESERVED_0 = (1 << 2);$/;"	m	class:CTransactionCore
TXF_RESERVED_1	../server/block.h	/^    static const int TXF_RESERVED_1 = (1 << 3);$/;"	m	class:CTransactionCore
TXF_VERSION	../server/block.h	/^    static const int TXF_VERSION = (1 << 0);$/;"	m	class:CTransactionCore
TXF_VERSION_2	../server/block.h	/^    static const int TXF_VERSION_2 = (1 << 1);$/;"	m	class:CTransactionCore
TX_DECODE	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_DECODE = {$/;"	v
TX_GET	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_GET = {$/;"	v
TX_GETRAW	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_GETRAW = {$/;"	v
TX_LIST	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_LIST = {$/;"	v
TX_MULTISIG	../server/script.h	/^    TX_MULTISIG,$/;"	e	enum:txnouttype
TX_NONSTANDARD	../server/script.h	/^    TX_NONSTANDARD,$/;"	e	enum:txnouttype
TX_POOL	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_POOL = {$/;"	v
TX_PRUNE	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_PRUNE = {$/;"	v
TX_PUBKEY	../server/script.h	/^    TX_PUBKEY,$/;"	e	enum:txnouttype
TX_PUBKEYHASH	../server/script.h	/^    TX_PUBKEYHASH,$/;"	e	enum:txnouttype
TX_PURGE	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_PURGE = {$/;"	v
TX_RETURN	../server/script.h	/^    TX_RETURN,$/;"	e	enum:txnouttype
TX_SCRIPTHASH	../server/script.h	/^    TX_SCRIPTHASH,$/;"	e	enum:txnouttype
TX_SENDRAW	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_SENDRAW = {$/;"	v
TX_VALIDATE	../server/rpc/rpc_parse.cpp	/^const RPCOp TX_VALIDATE = {$/;"	v
TX_VERSION	../server/block.h	462;"	d
TX_VERSION_2	../server/block.h	463;"	d
TX_WITNESS_UNKNOWN	../server/script.h	/^    TX_WITNESS_UNKNOWN,$/;"	e	enum:txnouttype
TX_WITNESS_V0_KEYHASH	../server/script.h	/^    TX_WITNESS_V0_KEYHASH,$/;"	e	enum:txnouttype
TX_WITNESS_V0_SCRIPTHASH	../server/script.h	/^    TX_WITNESS_V0_SCRIPTHASH,$/;"	e	enum:txnouttype
TX_WITNESS_V14_KEYHASH	../server/script.h	/^    TX_WITNESS_V14_KEYHASH,$/;"	e	enum:txnouttype
TX_WITNESS_V14_SCRIPTHASH	../server/script.h	/^    TX_WITNESS_V14_SCRIPTHASH,$/;"	e	enum:txnouttype
TestAddr	../test/testcoin_coin.cpp	/^    TestAddr(int nVersionIn, unsigned char *raw) : CCoinAddr(0)$/;"	f	class:TestAddr
TestAddr	../test/testcoin_coin.cpp	/^class TestAddr : public CCoinAddr$/;"	c	file:
TestDerivation	../test/testcoin_bip32.cpp	/^struct TestDerivation {$/;"	s	file:
TestFunction	../test/CuTest.h	/^typedef void (*TestFunction)(CuTest *);$/;"	t
TestVector	../test/testcoin_bip32.cpp	/^    explicit TestVector(std::string strHexMasterIn) : strHexMaster(strHexMasterIn) {}$/;"	f	struct:TestVector
TestVector	../test/testcoin_bip32.cpp	/^struct TestVector {$/;"	s	file:
Testuint256AdHoc	../server/uint256.h	/^inline int Testuint256AdHoc(std::vector<std::string> vArg)$/;"	f
Threshold	../server/versionbits.cpp	/^      int Threshold(CIface * params) const { return params->nRuleChangeActivationThreshold; }$/;"	f	class:__anon15::VersionBitsConditionChecker
ThresholdConditionCache	../server/versionbits.h	/^typedef std::map<const CBlockIndex*, ThresholdState> ThresholdConditionCache;$/;"	t
ThresholdState	../server/versionbits.h	/^enum ThresholdState {$/;"	g
ToByteVector	../server/bolo/bolo_validation03.cpp	/^std::vector<unsigned char> ToByteVector(const T& in)$/;"	f
ToByteVector	../server/coinaddr.cpp	/^std::vector<unsigned char> ToByteVector(const T& in)$/;"	f
ToByteVector	../server/script.cpp	/^std::vector<unsigned char> ToByteVector(const T& in)$/;"	f
ToByteVector	../server/txsignature.cpp	/^std::vector<unsigned char> ToByteVector(const T& in)$/;"	f
ToByteVector	../server/wallet.cpp	/^std::vector<unsigned char> ToByteVector(const T& in)$/;"	f
ToString	../server/base58.cpp	/^std::string CBase58Data::ToString(int output_type) const$/;"	f	class:CBase58Data
ToString	../server/bignum.h	/^    std::string ToString(int nBase=10) const$/;"	f	class:CBigNum
ToString	../server/block.cpp	/^std::string CBlock::ToString(bool fVerbose)$/;"	f	class:CBlock
ToString	../server/block.cpp	/^std::string CBlockHeader::ToString()$/;"	f	class:CBlockHeader
ToString	../server/block.cpp	/^std::string CTransaction::ToString(int ifaceIndex)$/;"	f	class:CTransaction
ToString	../server/block.cpp	/^std::string CTransactionCore::ToString(int ifaceIndex)$/;"	f	class:CTransactionCore
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CBlockIndex
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CDiskBlockIndex
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CDiskTxPos
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:COutPoint
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CTxIn
ToString	../server/block.h	/^    std::string ToString() const$/;"	f	class:CTxOut
ToString	../server/bloom.cpp	/^std::string CBloomFilter::ToString()$/;"	f	class:CBloomFilter
ToString	../server/coinaddr.cpp	/^std::string CCoinAddr::ToString() const$/;"	f	class:CCoinAddr
ToString	../server/ext/alias.cpp	/^std::string CAlias::ToString(int ifaceIndex)$/;"	f	class:CAlias
ToString	../server/ext/altchain.cpp	/^std::string CAltBlock::ToString()$/;"	f	class:CAltBlock
ToString	../server/ext/altchain.cpp	/^std::string CAltChain::ToString()$/;"	f	class:CAltChain
ToString	../server/ext/altchain.cpp	/^std::string CAltTx::ToString()$/;"	f	class:CAltTx
ToString	../server/ext/asset.cpp	/^std::string CAsset::ToString()$/;"	f	class:CAsset
ToString	../server/ext/certificate.cpp	/^std::string CCert::ToString()$/;"	f	class:CCert
ToString	../server/ext/certificate.cpp	/^std::string CIdent::ToString()$/;"	f	class:CIdent
ToString	../server/ext/certificate.cpp	/^std::string CLicense::ToString()$/;"	f	class:CLicense
ToString	../server/ext/channel.cpp	/^std::string CChannel::ToString()$/;"	f	class:CChannel
ToString	../server/ext/channel.cpp	/^std::string CChannelKey::ToString()$/;"	f	class:CChannelKey
ToString	../server/ext/context.cpp	/^std::string CContext::ToString()$/;"	f	class:CContext
ToString	../server/ext/exec.cpp	/^std::string CExec::ToString(int ifaceIndex)$/;"	f	class:CExec
ToString	../server/ext/exec.cpp	/^std::string CExecCall::ToString(int ifaceIndex)$/;"	f	class:CExecCall
ToString	../server/ext/exec.cpp	/^std::string CExecCheckpoint::ToString(int ifaceIndex)$/;"	f	class:CExecCheckpoint
ToString	../server/ext/ext_param.cpp	/^std::string CParam::ToString()$/;"	f	class:CParam
ToString	../server/ext/offer.cpp	/^std::string COffer::ToString()$/;"	f	class:COffer
ToString	../server/ext/txext.cpp	/^std::string CExtCore::ToString()$/;"	f	class:CExtCore
ToString	../server/ext/txext.cpp	/^std::string CSign::ToString()$/;"	f	class:CSign
ToString	../server/hdkey.cpp	/^std::string HDPrivKey::ToString()$/;"	f	class:HDPrivKey
ToString	../server/hdkey.cpp	/^std::string HDPubKey::ToString()$/;"	f	class:HDPubKey
ToString	../server/matrix.cpp	/^std::string CTxMatrix::ToString()$/;"	f	class:CTxMatrix
ToString	../server/netbase.cpp	/^std::string CNetAddr::ToString() const$/;"	f	class:CNetAddr
ToString	../server/netbase.cpp	/^std::string CService::ToString() const$/;"	f	class:CService
ToString	../server/protocol.cpp	/^std::string CInv::ToString() const$/;"	f	class:CInv
ToString	../server/script.h	/^    std::string ToString() const$/;"	f	class:CScript
ToString	../server/sync.cpp	/^    std::string ToString() const$/;"	f	struct:CLockLocation
ToString	../server/txfeerate.cpp	/^std::string CFeeRate::ToString() const$/;"	f	class:CFeeRate
ToString	../server/uint256.h	/^    std::string ToString() const$/;"	f	class:base_uint
ToString	../server/wallet.h	/^		std::string ToString() const$/;"	f	class:COutput
ToStringIP	../server/netbase.cpp	/^std::string CNetAddr::ToStringIP() const$/;"	f	class:CNetAddr
ToStringIPPort	../server/netbase.cpp	/^std::string CService::ToStringIPPort() const$/;"	f	class:CService
ToStringPort	../server/netbase.cpp	/^std::string CService::ToStringPort() const$/;"	f	class:CService
ToValue	../server/block.cpp	/^Object CBlock::ToValue(bool fVerbose)$/;"	f	class:CBlock
ToValue	../server/block.cpp	/^Object CBlockHeader::ToValue()$/;"	f	class:CBlockHeader
ToValue	../server/block.cpp	/^Object CTransaction::ToValue(CBlock *pblock)$/;"	f	class:CTransaction
ToValue	../server/block.cpp	/^Object CTransaction::ToValue(int ifaceIndex)$/;"	f	class:CTransaction
ToValue	../server/block.cpp	/^Object CTransactionCore::ToValue(int ifaceIndex)$/;"	f	class:CTransactionCore
ToValue	../server/ext/alias.cpp	/^Object CAlias::ToValue(int ifaceIndex)$/;"	f	class:CAlias
ToValue	../server/ext/altchain.cpp	/^Object CAltBlock::ToValue()$/;"	f	class:CAltBlock
ToValue	../server/ext/altchain.cpp	/^Object CAltChain::ToValue()$/;"	f	class:CAltChain
ToValue	../server/ext/altchain.cpp	/^Object CAltTx::ToValue()$/;"	f	class:CAltTx
ToValue	../server/ext/asset.cpp	/^Object CAsset::ToValue()$/;"	f	class:CAsset
ToValue	../server/ext/certificate.cpp	/^Object CCert::ToValue()$/;"	f	class:CCert
ToValue	../server/ext/certificate.cpp	/^Object CIdent::ToValue()$/;"	f	class:CIdent
ToValue	../server/ext/certificate.cpp	/^Object CLicense::ToValue()$/;"	f	class:CLicense
ToValue	../server/ext/channel.cpp	/^Object CChannel::ToValue()$/;"	f	class:CChannel
ToValue	../server/ext/channel.cpp	/^Object CChannelKey::ToValue()$/;"	f	class:CChannelKey
ToValue	../server/ext/context.cpp	/^Object CContext::ToValue()$/;"	f	class:CContext
ToValue	../server/ext/exec.cpp	/^Object CExec::ToValue(int ifaceIndex)$/;"	f	class:CExec
ToValue	../server/ext/exec.cpp	/^Object CExecCall::ToValue(int ifaceIndex)$/;"	f	class:CExecCall
ToValue	../server/ext/exec.cpp	/^Object CExecCheckpoint::ToValue(int ifaceIndex)$/;"	f	class:CExecCheckpoint
ToValue	../server/ext/ext_param.cpp	/^Object CParam::ToValue()$/;"	f	class:CParam
ToValue	../server/ext/offer.cpp	/^Object COffer::ToValue()$/;"	f	class:COffer
ToValue	../server/ext/txext.cpp	/^Object CExtCore::ToValue()$/;"	f	class:CExtCore
ToValue	../server/ext/txext.cpp	/^Object CSign::ToValue()$/;"	f	class:CSign
ToValue	../server/hdkey.cpp	/^Object HDPrivKey::ToValue()$/;"	f	class:HDPrivKey
ToValue	../server/hdkey.cpp	/^Object HDPubKey::ToValue()$/;"	f	class:HDPubKey
ToValue	../server/matrix.cpp	/^Object CTxMatrix::ToValue()$/;"	f	class:CTxMatrix
ToValue_date_format	../server/block.cpp	/^string ToValue_date_format(time_t t)$/;"	f
ToValue_date_format	../server/ext/altchain.cpp	/^static inline string ToValue_date_format(time_t t)$/;"	f	file:
ToValue_date_format	../server/rpc/rpcexec_proto.cpp	/^static inline string ToValue_date_format(time_t t)$/;"	f	file:
TransactionCompressor	../server/block_cmpct.h	/^		explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}$/;"	f	struct:TransactionCompressor
TransactionCompressor	../server/block_cmpct.h	/^struct TransactionCompressor $/;"	s
TransferExec	../server/block.cpp	/^CExec *CTransaction::TransferExec(const CExec& execIn)$/;"	f	class:CTransaction
Transform	../server/algo/sha512.cpp	/^void Transform(uint64_t* s, const unsigned char* chunk)$/;"	f	namespace:__anon18::sha512
TraverseAndBuild	../server/bloom.cpp	/^void CPartialMerkleTree::TraverseAndBuild(int height, unsigned int pos, const std::vector<uint256> &vTxid, const std::vector<bool> &vMatch) $/;"	f	class:CPartialMerkleTree
TraverseAndExtract	../server/bloom.cpp	/^uint256 CPartialMerkleTree::TraverseAndExtract(int height, unsigned int pos, unsigned int &nBitsUsed, unsigned int &nHashUsed, std::vector<uint256> &vMatch) {$/;"	f	class:CPartialMerkleTree
Truncate	../server/color/color_block.cpp	/^bool COLORBlock::Truncate()$/;"	f	class:COLORBlock
Truncate	../server/emc2/emc2_block.cpp	/^bool EMC2Block::Truncate()$/;"	f	class:EMC2Block
Truncate	../server/ltc/ltc_block.cpp	/^bool LTCBlock::Truncate()$/;"	f	class:LTCBlock
Truncate	../server/shc/shc_block.cpp	/^bool SHCBlock::Truncate()$/;"	f	class:SHCBlock
Truncate	../server/test/test_block.cpp	/^bool TESTBlock::Truncate()$/;"	f	class:TESTBlock
Truncate	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::Truncate()$/;"	f	class:TESTNETBlock
TryAcquire	../server/sync.h	/^		bool TryAcquire() {$/;"	f	class:CSemaphoreGrant
TryEnter	../server/sync.h	/^		bool TryEnter(const char* pszName, const char* pszFile, int nLine)$/;"	f	class:CMutexLock
TxConfirmStats	../server/txfeerate.h	/^class TxConfirmStats$/;"	c
TxStatsInfo	../server/txfeerate.h	/^        TxStatsInfo() : stats(NULL), blockHeight(0), bucketIndex(0) {}$/;"	f	struct:CBlockPolicyEstimator::TxStatsInfo
TxStatsInfo	../server/txfeerate.h	/^    struct TxStatsInfo$/;"	s	class:CBlockPolicyEstimator
TxnAbort	../server/txidx.h	/^    bool TxnAbort()$/;"	f	class:CDB
TxnBegin	../server/txidx.h	/^    DbTxn *TxnBegin(int flags=DB_TXN_WRITE_NOSYNC)$/;"	f	class:CDBEnv
TxnBegin	../server/txidx.h	/^    bool TxnBegin()$/;"	f	class:CDB
TxnCommit	../server/txidx.h	/^    bool TxnCommit()$/;"	f	class:CDB
Type_to_type	../server/json/json_spirit_value.h	/^        struct Type_to_type$/;"	s	namespace:json_spirit::internal_
UBEGIN	../server/util.h	31;"	d
UBI_BIG	../server/algo/sph_skein.c	565;"	d	file:
UBI_BIG	../server/algo/sph_skein.c	616;"	d	file:
UCHAR	../fractal/fractal_bmp.h	78;"	d
UEND	../server/util.h	32;"	d
UEVENT_NONE	../unet/unet.h	96;"	d
UEVENT_PEER_CONN	../unet/unet.h	98;"	d
UEVENT_PEER_VERIFY	../unet/unet.h	97;"	d
UINT	../fractal/fractal_bmp.h	70;"	d
UNDEFINED_SOCKET	../unet/unet.h	81;"	d
UNDEFINED_TIME	../unet/unet.h	82;"	d
UNETF_INBOUND	../unet/unet.h	76;"	d
UNETF_LISTEN	../unet/unet.h	77;"	d
UNETF_PEER_SCAN	../unet/unet.h	75;"	d
UNETF_SHUTDOWN	../unet/unet.h	74;"	d
UNETF_SYNC	../unet/unet.h	78;"	d
UNET_COLOR	../unet/unet.h	40;"	d
UNET_CONNECT_TIMEOUT	../unet/unet_connect.c	28;"	d	file:
UNET_EMC2	../unet/unet.h	37;"	d
UNET_LTC	../unet/unet.h	38;"	d
UNET_MAX_EVENTS	../unet/unet.h	94;"	d
UNET_NONE	../unet/unet.h	34;"	d
UNET_RESERVED_1	../unet/unet.h	45;"	d
UNET_RESERVED_2	../unet/unet.h	44;"	d
UNET_RESERVED_3	../unet/unet.h	43;"	d
UNET_RESERVED_4	../unet/unet.h	42;"	d
UNET_RESERVED_5	../unet/unet.h	49;"	d
UNET_RESERVED_6	../unet/unet.h	50;"	d
UNET_RESERVED_7	../unet/unet.h	36;"	d
UNET_RPC	../unet/unet.h	59;"	d
UNET_SHC	../unet/unet.h	35;"	d
UNET_STRATUM	../unet/unet.h	53;"	d
UNET_STRATUM_BLAKE2S	../unet/unet.h	65;"	d
UNET_STRATUM_ESL	../unet/unet.h	56;"	d
UNET_STRATUM_GROESTL	../unet/unet.h	67;"	d
UNET_STRATUM_KECCAK	../unet/unet.h	63;"	d
UNET_STRATUM_QUBIT	../unet/unet.h	66;"	d
UNET_STRATUM_SHA256D	../unet/unet.h	62;"	d
UNET_STRATUM_SKEIN	../unet/unet.h	68;"	d
UNET_STRATUM_X11	../unet/unet.h	64;"	d
UNET_TESTNET	../unet/unet.h	39;"	d
UNINTERLEAVE	../server/algo/sph_keccak.c	443;"	d	file:
UNINTERLEAVE	../server/algo/sph_keccak.c	462;"	d	file:
UNLIKELY_PCT	../server/txfeerate.h	/^static const double UNLIKELY_PCT = .5;$/;"	v
USER_AUTH	../stratum/stratum.h	51;"	d
USER_CLIENT	../stratum/stratum.h	54;"	d
USER_ELEVATE	../stratum/stratum.h	57;"	d
USER_EXTRANONCE	../stratum/stratum.h	58;"	d
USER_REMOTE	../stratum/stratum.h	55;"	d
USER_RPC	../stratum/stratum.h	56;"	d
USER_SUBSCRIBE	../stratum/stratum.h	52;"	d
USER_SYNC	../stratum/stratum.h	53;"	d
USER_SYSTEM	../stratum/stratum.h	50;"	d
USE_LE	../server/algo/sph_groestl.c	72;"	d	file:
USE_LE	../server/algo/sph_groestl.c	74;"	d	file:
USE_LE	../server/algo/sph_groestl.c	76;"	d	file:
USE_LE	../server/algo/sph_groestl.c	78;"	d	file:
USHORT	../fractal/fractal_bmp.h	74;"	d
UTHREAD	../unet/unet.h	107;"	d
UTHREAD_IDLE	../unet/unet_thread.c	32;"	d	file:
UTHREAD_MAX_TIME	../unet/unet_thread.c	38;"	d	file:
UTHREAD_TIMER	../unet/unet_thread.c	35;"	d	file:
UnacceptWalletTransaction	../server/color/color_wallet.cpp	/^bool COLORWallet::UnacceptWalletTransaction(const CTransaction& tx)$/;"	f	class:COLORWallet
UnacceptWalletTransaction	../server/emc2/emc2_wallet.cpp	/^bool EMC2Wallet::UnacceptWalletTransaction(const CTransaction& tx)$/;"	f	class:EMC2Wallet
UnacceptWalletTransaction	../server/ltc/ltc_wallet.cpp	/^bool LTCWallet::UnacceptWalletTransaction(const CTransaction& tx)$/;"	f	class:LTCWallet
UnacceptWalletTransaction	../server/shc/shc_wallet.cpp	/^bool SHCWallet::UnacceptWalletTransaction(const CTransaction& tx)$/;"	f	class:SHCWallet
UnacceptWalletTransaction	../server/test/test_wallet.cpp	/^bool TESTWallet::UnacceptWalletTransaction(const CTransaction& tx)$/;"	f	class:TESTWallet
UnacceptWalletTransaction	../server/testnet/testnet_wallet.cpp	/^bool TESTNETWallet::UnacceptWalletTransaction(const CTransaction& tx)$/;"	f	class:TESTNETWallet
Unserialize	../server/bignum.h	/^    void Unserialize(Stream& s, int nType=0, int nVersion=1\/*PROTOCOL_VERSION*\/)$/;"	f	class:CBigNum
Unserialize	../server/emc2/emc2_netmsg.cpp	/^    void Unserialize(Stream& s, int, int=0)$/;"	f	class:LimitedString
Unserialize	../server/ltc/ltc_netmsg.cpp	/^    void Unserialize(Stream& s, int, int=0)$/;"	f	class:LimitedString
Unserialize	../server/serialize.h	/^    void Unserialize(Stream& s, int, int=0)$/;"	f	class:CFlatData
Unserialize	../server/serialize.h	/^inline void Unserialize(Stream& is, T& a, long nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^inline void Unserialize(Stream& is, std::vector<T, A>& v, int nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, bool& a, int, int=0) { char f; READDATA(s, f); a=f; }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, char& a,           int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, double& a,         int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, float& a,          int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, int64& a,          int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, signed char& a,    int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, signed int& a,     int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, signed long& a,    int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, signed short& a,   int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, uint64& a,         int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, unsigned char& a,  int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, unsigned int& a,   int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, unsigned long& a,  int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, unsigned short& a, int, int=0) { READDATA(s, a); }$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, CScript& v, int nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, boost::tuple<T0, T1, T2, T3>& item, int nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, boost::tuple<T0, T1, T2>& item, int nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, std::basic_string<C>& str, int, int)$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, std::map<K, T, Pred, A>& m, int nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, std::pair<K, T>& item, int nType, int nVersion)$/;"	f
Unserialize	../server/serialize.h	/^void Unserialize(Stream& is, std::set<K, Pred, A>& m, int nType, int nVersion)$/;"	f
Unserialize	../server/shc/shc_netmsg.cpp	/^      void Unserialize(Stream& s, int, int=0)$/;"	f	class:LimitedString
Unserialize	../server/testnet/testnet_netmsg.cpp	/^      void Unserialize(Stream& s, int, int=0)$/;"	f	class:LimitedString
Unserialize	../server/uint256.h	/^    void Unserialize(Stream& s, int nType, int nVersion)$/;"	f	class:base_uint
Unserialize_impl	../server/serialize.h	/^void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion, const boost::false_type&)$/;"	f
Unserialize_impl	../server/serialize.h	/^void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion, const boost::true_type&)$/;"	f
UnsetFlag	../server/txmempool.h	/^    void UnsetFlag(int flag)$/;"	f	class:CPoolTx
UpdateAccount	../server/account.cpp	/^void CAccountCache::UpdateAccount()$/;"	f	class:CAccountCache
UpdateAlias	../server/block.cpp	/^CAlias *CTransaction::UpdateAlias(std::string name, const uint160& hash)$/;"	f	class:CTransaction
UpdateAsset	../server/block.cpp	/^CAsset *CTransaction::UpdateAsset(const CAsset& assetIn, string strAssetName, string strAssetHash)$/;"	f	class:CTransaction
UpdateBlockAvailability	../server/chain.cpp	/^void UpdateBlockAvailability(int ifaceIndex, CNode *pfrom, const uint256& hash)$/;"	f
UpdateBlockCoins	../server/coin.cpp	/^bool UpdateBlockCoins(CBlock& block)$/;"	f
UpdateEmptyFull	../server/bloom.cpp	/^void CBloomFilter::UpdateEmptyFull()$/;"	f	class:CBloomFilter
UpdateExec	../server/block.cpp	/^CExecCheckpoint *CTransaction::UpdateExec(const CExec& execIn)$/;"	f	class:CTransaction
UpdateMovingAverages	../server/txfeerate.cpp	/^void TxConfirmStats::UpdateMovingAverages()$/;"	f	class:TxConfirmStats
UpdateParam	../server/block.cpp	/^CParam *CTransaction::UpdateParam(std::string strName, int64_t nValue)$/;"	f	class:CTransaction
UpdateServiceMinerEvent	../server/chain.cpp	/^bool UpdateServiceMinerEvent(int ifaceIndex)$/;"	f
UpdateSpent	../server/wallet.h	/^				 bool UpdateSpent(const std::vector<char>& vfNewSpent)$/;"	f	class:CWalletTx
UpdateTime	../server/block.cpp	/^void CBlock::UpdateTime(const CBlockIndex* pindexPrev)$/;"	f	class:CBlock
UpdateTxIndex	../server/txidx.cpp	/^bool CTxDB::UpdateTxIndex(uint256 hash, const CTxIndex& txindex)$/;"	f	class:CTxDB
UpdateValidateNotaryTx	../server/matrix.cpp	/^void UpdateValidateNotaryTx(CIface *iface, CTransaction& tx, const CScript& scriptPrev)$/;"	f
UpdatedTransaction	../server/wallet.cpp	/^void CWallet::UpdatedTransaction(const uint256 &hashTx)$/;"	f	class:CWallet
V	../server/algo/sph_luffa.h	/^	sph_u32 V[3][8];$/;"	m	struct:__anon37
V	../server/algo/sph_luffa.h	/^	sph_u32 V[4][8];$/;"	m	struct:__anon38
V	../server/algo/sph_luffa.h	/^	sph_u32 V[5][8];$/;"	m	struct:__anon39
VALIDATE_MATRIX_BMP	../stratum/stratum_http.c	523;"	d	file:
VALIDATE_NOTARY_DEPTH	../server/matrix.cpp	37;"	d	file:
VERSIONBITS_LAST_OLD_BLOCK_VERSION	../server/versionbits.h	/^static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;$/;"	v
VERSIONBITS_NUM_BITS	../server/versionbits.h	/^static const int32_t VERSIONBITS_NUM_BITS = 29;$/;"	v
VERSIONBITS_TOP_BITS	../server/versionbits.h	/^static const int32_t VERSIONBITS_TOP_BITS = 0x20000000UL;$/;"	v
VERSIONBITS_TOP_MASK	../server/versionbits.h	/^static const int32_t VERSIONBITS_TOP_MASK = 0xE0000000UL;$/;"	v
VERSION_MASK	../server/block.h	/^		static const int VERSION_MASK = 15;$/;"	m	class:CTransactionCore
VPixelsPerMeter	../fractal/fractal_bmp.c	/^	UINT		VPixelsPerMeter;	\/* Vertical resolution (pixels per meter) *\/$/;"	m	struct:_BMP_Header	file:
V_INIT	../server/algo/sph_luffa.c	/^static const sph_u32 V_INIT[5][8] = {$/;"	v	file:
ValidIndexSet	../server/block.h	/^typedef set<CBlockIndex*, CBlockIndexWorkComparator> ValidIndexSet;$/;"	t
Value	../server/json/json_spirit_value.h	/^    typedef Config::Value_type  Value;$/;"	t	namespace:json_spirit
ValueFromAmount	../server/block.cpp	/^json_spirit::Value ValueFromAmount(int64 amount)$/;"	f
ValueString	../server/script.h	/^inline std::string ValueString(const std::vector<unsigned char>& vch)$/;"	f
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( bool value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( boost::int64_t value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( boost::uint64_t value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( const Array& value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( const Const_str_ptr value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( const Object& value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( const String_type& value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( const Value_impl< Config >& other )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( double value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl( int value )$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    Value_impl< Config >::Value_impl()$/;"	f	class:json_spirit::Value_impl
Value_impl	../server/json/json_spirit_value.h	/^    class Value_impl$/;"	c	namespace:json_spirit
Value_type	../server/json/json_spirit_value.h	/^        typedef Value_impl< Config_map > Value_type;$/;"	t	struct:json_spirit::Config_map
Value_type	../server/json/json_spirit_value.h	/^        typedef Value_impl< Config_vector > Value_type;$/;"	t	struct:json_spirit::Config_vector
Value_type	../server/json/json_spirit_value.h	/^        typedef typename Config::Value_type Value_type;$/;"	t	struct:json_spirit::Pair_impl
Value_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	g	namespace:json_spirit
Value_type_name	../server/json/json_spirit_value.h	/^    static const char* Value_type_name[]={"obj", "array", "str", "bool", "int", "real", "null"};$/;"	m	namespace:json_spirit
Variant	../server/json/json_spirit_value.h	/^                                bool, boost::int64_t, double > Variant;$/;"	t	class:json_spirit::Value_impl
Vb	../server/algo/sph_echo.h	/^		sph_u64 Vb[4][2];$/;"	m	union:__anon24::__anon25
Vb	../server/algo/sph_echo.h	/^		sph_u64 Vb[8][2];$/;"	m	union:__anon26::__anon27
Verify	../server/dikey.cpp	/^bool DIKey::Verify(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:DIKey
Verify	../server/eckey.cpp	/^bool ECKey::Verify(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:ECKey
Verify	../server/ext/txext.cpp	/^bool CSign::Verify(CCoinAddr& addr, unsigned char *data, size_t data_len)$/;"	f	class:CSign
Verify	../server/hdkey.cpp	/^bool HDPubKey::Verify(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:HDPubKey
Verify	../server/hdkey.h	/^    bool Verify(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:HDPrivKey
Verify	../server/txcreator.cpp	/^bool CTxCreator::Verify()$/;"	f	class:CTxCreator
VerifyAccountName	../stratum/stratum_api.cpp	/^static bool VerifyAccountName(CWallet *wallet, string strAccount)$/;"	f	file:
VerifyAddress	../server/ext/txext.cpp	/^bool CSign::VerifyAddress(CCoinAddr& addr, unsigned char *data, size_t data_len)$/;"	f	class:CSign
VerifyAlias	../server/ext/alias.cpp	/^bool VerifyAlias(CTransaction& tx)$/;"	f
VerifyAliasChain	../server/ext/alias.cpp	/^bool VerifyAliasChain(CIface *iface, CTransaction& tx)$/;"	f
VerifyAltChain	../server/ext/altchain.cpp	/^bool VerifyAltChain(CTransaction& tx, int& mode)$/;"	f
VerifyAsset	../server/ext/asset.cpp	/^bool VerifyAsset(CTransaction& tx)$/;"	f
VerifyAssetAccount	../server/ext/asset.cpp	/^bool VerifyAssetAccount(CWallet *wallet, const CTxOut& outAsset, string strAccount)$/;"	f
VerifyAssetChainOrigin	../server/ext/asset.cpp	/^bool VerifyAssetChainOrigin(CIface *iface, const CTransaction& tx, uint160 hIssuer, uint256& hPrevAssetTx)$/;"	f
VerifyCert	../server/ext/certificate.cpp	/^bool VerifyCert(CIface *iface, CTransaction& tx, int nHeight)$/;"	f
VerifyCertChain	../server/ext/certificate.cpp	/^bool VerifyCertChain(CIface *iface, CTransaction& tx)$/;"	f
VerifyCertHash	../server/ext/certificate.cpp	/^bool VerifyCertHash(CIface *iface, const uint160& hash)$/;"	f
VerifyChannel	../server/ext/channel.cpp	/^bool VerifyChannel(CTransaction& tx)$/;"	f
VerifyChannelMasterKey	../server/ext/channel.cpp	/^bool CChannelKey::VerifyChannelMasterKey(CWallet *wallet)$/;"	f	class:CChannelKey
VerifyCheckpoint	../server/color/color_block.cpp	/^bool COLORBlock::VerifyCheckpoint(int nHeight)$/;"	f	class:COLORBlock
VerifyCheckpoint	../server/emc2/emc2_block.cpp	/^bool EMC2Block::VerifyCheckpoint(int nHeight)$/;"	f	class:EMC2Block
VerifyCheckpoint	../server/ltc/ltc_block.cpp	/^bool LTCBlock::VerifyCheckpoint(int nHeight)$/;"	f	class:LTCBlock
VerifyCheckpoint	../server/shc/shc_block.cpp	/^bool SHCBlock::VerifyCheckpoint(int nHeight)$/;"	f	class:SHCBlock
VerifyCheckpoint	../server/test/test_block.cpp	/^bool TESTBlock::VerifyCheckpoint(int nHeight)$/;"	f	class:TESTBlock
VerifyCheckpoint	../server/testnet/testnet_block.cpp	/^bool TESTNETBlock::VerifyCheckpoint(int nHeight)$/;"	f	class:TESTNETBlock
VerifyChecksum	../server/bech32.cpp	/^	bool VerifyChecksum(const std::string& hrp, const cbuff& values)$/;"	f	namespace:__anon2
VerifyChecksum	../server/ext/exec.cpp	/^bool CExecCheckpoint::VerifyChecksum(int ifaceIndex)$/;"	f	class:CExecCheckpoint
VerifyCoinStandards	../server/color/color_pool.cpp	/^bool COLOR_CTxMemPool::VerifyCoinStandards(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:COLOR_CTxMemPool
VerifyCoinStandards	../server/emc2/emc2_pool.cpp	/^bool EMC2_CTxMemPool::VerifyCoinStandards(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:EMC2_CTxMemPool
VerifyCoinStandards	../server/ltc/ltc_pool.cpp	/^bool LTC_CTxMemPool::VerifyCoinStandards(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:LTC_CTxMemPool
VerifyCoinStandards	../server/shc/shc_pool.cpp	/^bool SHC_CTxMemPool::VerifyCoinStandards(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:SHC_CTxMemPool
VerifyCoinStandards	../server/test/test_pool.cpp	/^bool TEST_CTxMemPool::VerifyCoinStandards(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:TEST_CTxMemPool
VerifyCoinStandards	../server/testnet/testnet_pool.cpp	/^bool TESTNET_CTxMemPool::VerifyCoinStandards(CTransaction& tx, tx_cache& mapInputs)$/;"	f	class:TESTNET_CTxMemPool
VerifyCompact	../server/dikey.cpp	/^bool DIKey::VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:DIKey
VerifyCompact	../server/eckey.cpp	/^bool ECKey::VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:ECKey
VerifyCompact	../server/hdkey.cpp	/^bool HDPrivKey::VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig)$/;"	f	class:HDPrivKey
VerifyContext	../server/ext/txext.cpp	/^bool CSign::VerifyContext(uint160 hash)$/;"	f	class:CSign
VerifyContext	../server/ext/txext.cpp	/^bool CSign::VerifyContext(unsigned char *data, size_t data_len)$/;"	f	class:CSign
VerifyContextTx	../server/ext/context.cpp	/^bool VerifyContextTx(CIface *iface, CTransaction& tx, int& mode)$/;"	f
VerifyExec	../server/ext/exec.cpp	/^bool VerifyExec(CTransaction& tx, int& mode)$/;"	f
VerifyExecCall	../server/ext/exec.cpp	/^bool VerifyExecCall(CExecCall *call)$/;"	f
VerifyIdent	../server/ext/certificate.cpp	/^bool VerifyIdent(CTransaction& tx, int& mode)$/;"	f
VerifyLicense	../server/ext/certificate.cpp	/^bool VerifyLicense(CTransaction& tx)$/;"	f
VerifyLicenseChain	../server/ext/certificate.cpp	/^bool VerifyLicenseChain(CIface *iface, CTransaction& tx)$/;"	f
VerifyLimits	../server/txmempool.cpp	/^bool CPool::VerifyLimits(CPoolTx& ptx)$/;"	f	class:CPool
VerifyMatrixTx	../server/wallet.cpp	/^bool VerifyMatrixTx(CTransaction& tx, int& mode)$/;"	f
VerifyOffer	../server/ext/offer.cpp	/^bool VerifyOffer(const CTransaction& tx, int& mode)$/;"	f
VerifyOrigin	../server/ext/txext.cpp	/^bool CSign::VerifyOrigin(CCoinAddr& addr)$/;"	f	class:CSign
VerifyParamTx	../server/ext/ext_param.cpp	/^bool VerifyParamTx(CTransaction& tx, int& mode)$/;"	f
VerifyPubKey	../server/ext/channel.cpp	/^bool CChannel::VerifyPubKey()$/;"	f	class:CChannel
VerifyScript	../server/script.cpp	/^bool VerifyScript(CSignature& sig, const CScript& scriptSig, cstack_t& witness, const CScript& scriptPubKey, int flags)$/;"	f
VerifySeed	../server/ext/txext.cpp	/^bool CSign::VerifySeed(string hexSeed)$/;"	f	class:CSign
VerifySignature	../server/ext/asset.cpp	/^bool CAsset::VerifySignature(CCert *cert)$/;"	f	class:CAsset
VerifySignature	../server/ext/asset.cpp	/^bool CAsset::VerifySignature(int ifaceIndex)$/;"	f	class:CAsset
VerifySignature	../server/ext/certificate.cpp	/^bool CCert::VerifySignature(int ifaceIndex)$/;"	f	class:CCert
VerifySignature	../server/ext/certificate.cpp	/^bool CCert::VerifySignature(int ifaceIndex, cbuff vchContext)$/;"	f	class:CCert
VerifySignature	../server/ext/certificate.cpp	/^bool CLicense::VerifySignature(int ifaceIndex)$/;"	f	class:CLicense
VerifySignature	../server/ext/certificate.cpp	/^bool CLicense::VerifySignature(int ifaceIndex, CCert *cert)$/;"	f	class:CLicense
VerifySignature	../server/ext/certificate.h	/^    bool VerifySignature(int ifaceIndex, CCert *cert)$/;"	f	class:CCert
VerifySignature	../server/ext/context.cpp	/^bool CContext::VerifySignature()$/;"	f	class:CContext
VerifySignature	../server/ext/exec.cpp	/^bool CExec::VerifySignature(int ifaceIndex)$/;"	f	class:CExec
VerifySignature	../server/ext/exec.cpp	/^bool CExecCall::VerifySignature(int ifaceIndex)$/;"	f	class:CExecCall
VerifySignature	../server/script.cpp	/^bool VerifySignature(int ifaceIndex, const CTransaction& txFrom, const CTransaction& txTo, unsigned int nIn, int nHashType, int flags)$/;"	f
VerifySignatureSeed	../server/ext/certificate.cpp	/^bool CCert::VerifySignatureSeed(string hexSeed)$/;"	f	class:CCert
VerifySoftLimits	../server/txmempool.cpp	/^bool CPool::VerifySoftLimits(CPoolTx& ptx)$/;"	f	class:CPool
VerifySpringMatrix	../server/matrix.cpp	/^bool CTransaction::VerifySpringMatrix(int ifaceIndex, const CTxMatrix& matrix, shnum_t *lat_p, shnum_t *lon_p)$/;"	f	class:CTransaction
VerifyStack	../server/ext/exec.cpp	/^bool CExec::VerifyStack(int ifaceIndex)$/;"	f	class:CExec
VerifyStandards	../server/txmempool.cpp	/^bool CPool::VerifyStandards(CPoolTx& ptx)$/;"	f	class:CPool
VerifyTx	../server/txmempool.cpp	/^bool CPool::VerifyTx(CTransaction& tx)$/;"	f	class:CPool
VerifyTxHash	../server/block.cpp	/^bool VerifyTxHash(CIface *iface, uint256 hashTx)$/;"	f
VerifyValidateMatrix	../server/block.cpp	/^bool CTransaction::VerifyValidateMatrix(int ifaceIndex, const CTxMatrix& matrix, CBlockIndex *pindex)$/;"	f	class:CTransaction
VerifyValidateMatrixScript	../server/matrix.cpp	/^bool VerifyValidateMatrixScript(CWallet *wallet, CTransaction& tx)$/;"	f
VerifyValidateMatrixScript	../server/matrix.cpp	/^bool VerifyValidateMatrixScript(CWallet *wallet, const uint256& hMatrixTx, const CScript& scriptIn)$/;"	f
VerifyWitnessProgram	../server/script.cpp	/^static bool VerifyWitnessProgram(CSignature& sig, cstack_t& witness, int witversion, const std::vector<unsigned char>& program, int flags)$/;"	f	file:
VersionBitsCache	../server/versionbits.h	/^struct VersionBitsCache$/;"	s
VersionBitsConditionChecker	../server/versionbits.cpp	/^      VersionBitsConditionChecker(DeploymentPos id_) : id(id_) {}$/;"	f	class:__anon15::VersionBitsConditionChecker
VersionBitsConditionChecker	../server/versionbits.cpp	/^  class VersionBitsConditionChecker : public AbstractThresholdConditionChecker {$/;"	c	namespace:__anon15	file:
VersionBitsDeploymentInfo	../server/versionbits.cpp	/^const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[MAX_VERSION_BITS_DEPLOYMENTS] = {$/;"	v	typeref:struct:BIP9DeploymentInfo
VersionBitsMask	../server/versionbits.cpp	/^uint32_t VersionBitsMask(CIface * params, DeploymentPos pos)$/;"	f
VersionBitsState	../server/versionbits.cpp	/^ThresholdState VersionBitsState(const CBlockIndex* pindexPrev, CIface * params, DeploymentPos pos)$/;"	f
Vs	../server/algo/sph_echo.h	/^		sph_u32 Vs[4][4];$/;"	m	union:__anon24::__anon25
Vs	../server/algo/sph_echo.h	/^		sph_u32 Vs[8][4];$/;"	m	union:__anon26::__anon27
W0	../server/algo/sph_jh.c	241;"	d	file:
W0	../server/algo/sph_jh.c	523;"	d	file:
W1	../server/algo/sph_jh.c	242;"	d	file:
W1	../server/algo/sph_jh.c	524;"	d	file:
W2	../server/algo/sph_jh.c	243;"	d	file:
W2	../server/algo/sph_jh.c	525;"	d	file:
W3	../server/algo/sph_jh.c	244;"	d	file:
W3	../server/algo/sph_jh.c	526;"	d	file:
W4	../server/algo/sph_jh.c	245;"	d	file:
W4	../server/algo/sph_jh.c	527;"	d	file:
W5	../server/algo/sph_jh.c	246;"	d	file:
W5	../server/algo/sph_jh.c	528;"	d	file:
W6	../server/algo/sph_jh.c	247;"	d	file:
W6	../server/algo/sph_jh.c	536;"	d	file:
WALLET_ADDR	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_ADDR = {$/;"	v
WALLET_BALANCE	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_BALANCE = {$/;"	v
WALLET_BSEND	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_BSEND = {$/;"	v
WALLET_CRYPTO_KEY_SIZE	../server/crypter.h	/^const unsigned int WALLET_CRYPTO_KEY_SIZE = 32;$/;"	v
WALLET_CRYPTO_SALT_SIZE	../server/crypter.h	/^const unsigned int WALLET_CRYPTO_SALT_SIZE = 8;$/;"	v
WALLET_CSCRIPT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_CSCRIPT = {$/;"	v
WALLET_CSEND	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_CSEND = {$/;"	v
WALLET_DERIVE	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_DERIVE = {$/;"	v
WALLET_DONATE	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_DONATE = {$/;"	v
WALLET_EXPORT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_EXPORT = {$/;"	v
WALLET_FEE	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_FEE = {$/;"	v
WALLET_GET	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_GET = {$/;"	v
WALLET_GETCERT	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_GETCERT = {$/;"	v
WALLET_IMPORT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_IMPORT = {$/;"	v
WALLET_INFO	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_INFO = {$/;"	v
WALLET_KEY	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_KEY = {$/;"	v
WALLET_KEYPHRASE	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_KEYPHRASE = {$/;"	v
WALLET_LIST	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_LIST = {$/;"	v
WALLET_LISTADDR	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_LISTADDR = {$/;"	v
WALLET_LISTBYACCOUNT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_LISTBYACCOUNT = {$/;"	v
WALLET_LISTBYADDR	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_LISTBYADDR = {$/;"	v
WALLET_LISTEXTADDR	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_LISTEXTADDR = {$/;"	v
WALLET_MULTISEND	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_MULTISEND = {$/;"	v
WALLET_NEW	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_NEW = {$/;"	v
WALLET_RECVBYACCOUNT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_RECVBYACCOUNT = {$/;"	v
WALLET_RECVBYADDR	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_RECVBYADDR = {$/;"	v
WALLET_SELECT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_SELECT = {$/;"	v
WALLET_SEND	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_SEND = {$/;"	v
WALLET_SETCERT	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_SETCERT = {$/;"	v
WALLET_SETKEY	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_SETKEY = {$/;"	v
WALLET_SETKEYPHRASE	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_SETKEYPHRASE = {$/;"	v
WALLET_SPENT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_SPENT = {$/;"	v
WALLET_STAMP	../server/shc/shc_rpc.cpp	/^const RPCOp WALLET_STAMP = {$/;"	v
WALLET_TSEND	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_TSEND = {$/;"	v
WALLET_TX	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_TX = {$/;"	v
WALLET_UNCONFIRM	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_UNCONFIRM = {$/;"	v
WALLET_UNSPENT	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_UNSPENT = {$/;"	v
WALLET_VALIDATE	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_VALIDATE = {$/;"	v
WALLET_VERIFY	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_VERIFY = {$/;"	v
WALLET_WITADDR	../server/rpc/rpc_parse.cpp	/^const RPCOp WALLET_WITADDR = {$/;"	v
WBREAD	../server/algo/sph_simd.c	1250;"	d	file:
WBREAD	../server/algo/sph_simd.c	1281;"	d	file:
WB_0_0	../server/algo/sph_simd.c	425;"	d	file:
WB_0_1	../server/algo/sph_simd.c	426;"	d	file:
WB_0_2	../server/algo/sph_simd.c	427;"	d	file:
WB_0_3	../server/algo/sph_simd.c	428;"	d	file:
WB_0_4	../server/algo/sph_simd.c	429;"	d	file:
WB_0_5	../server/algo/sph_simd.c	430;"	d	file:
WB_0_6	../server/algo/sph_simd.c	431;"	d	file:
WB_0_7	../server/algo/sph_simd.c	432;"	d	file:
WB_1_0	../server/algo/sph_simd.c	433;"	d	file:
WB_1_1	../server/algo/sph_simd.c	434;"	d	file:
WB_1_2	../server/algo/sph_simd.c	435;"	d	file:
WB_1_3	../server/algo/sph_simd.c	436;"	d	file:
WB_1_4	../server/algo/sph_simd.c	437;"	d	file:
WB_1_5	../server/algo/sph_simd.c	438;"	d	file:
WB_1_6	../server/algo/sph_simd.c	439;"	d	file:
WB_1_7	../server/algo/sph_simd.c	440;"	d	file:
WB_2_0	../server/algo/sph_simd.c	441;"	d	file:
WB_2_1	../server/algo/sph_simd.c	442;"	d	file:
WB_2_2	../server/algo/sph_simd.c	443;"	d	file:
WB_2_3	../server/algo/sph_simd.c	444;"	d	file:
WB_2_4	../server/algo/sph_simd.c	445;"	d	file:
WB_2_5	../server/algo/sph_simd.c	446;"	d	file:
WB_2_6	../server/algo/sph_simd.c	447;"	d	file:
WB_2_7	../server/algo/sph_simd.c	448;"	d	file:
WB_3_0	../server/algo/sph_simd.c	449;"	d	file:
WB_3_1	../server/algo/sph_simd.c	450;"	d	file:
WB_3_2	../server/algo/sph_simd.c	451;"	d	file:
WB_3_3	../server/algo/sph_simd.c	452;"	d	file:
WB_3_4	../server/algo/sph_simd.c	453;"	d	file:
WB_3_5	../server/algo/sph_simd.c	454;"	d	file:
WB_3_6	../server/algo/sph_simd.c	455;"	d	file:
WB_3_7	../server/algo/sph_simd.c	456;"	d	file:
WIDTH	../server/uint256.h	/^    enum { WIDTH=BITS\/32 };$/;"	e	enum:base_uint::__anon14
WIN32_LEAN_AND_MEAN	../server/compat.h	30;"	d
WIN32_LEAN_AND_MEAN	../server/util.cpp	53;"	d	file:
WORK_ROUND_OFFSET	../stratum/stratum_protocol.c	35;"	d	file:
WRITEDATA	../server/serialize.h	110;"	d
WRITE_STATE	../server/algo/sph_cubehash.c	141;"	d	file:
WRITE_STATE	../server/algo/sph_cubehash.c	219;"	d	file:
WRITE_STATE	../server/algo/sph_jh.c	277;"	d	file:
WRITE_STATE	../server/algo/sph_jh.c	587;"	d	file:
WRITE_STATE	../server/algo/sph_keccak.c	181;"	d	file:
WRITE_STATE	../server/algo/sph_keccak.c	232;"	d	file:
WRITE_STATE	../server/algo/sph_keccak.c	521;"	d	file:
WRITE_STATE	../server/algo/sph_keccak.c	602;"	d	file:
WRITE_STATE3	../server/algo/sph_luffa.c	342;"	d	file:
WRITE_STATE32	../server/algo/sph_blake.c	495;"	d	file:
WRITE_STATE4	../server/algo/sph_luffa.c	536;"	d	file:
WRITE_STATE5	../server/algo/sph_luffa.c	798;"	d	file:
WRITE_STATE64	../server/algo/sph_blake.c	658;"	d	file:
WRITE_STATE_BIG	../server/algo/sph_groestl.c	1383;"	d	file:
WRITE_STATE_BIG	../server/algo/sph_groestl.c	2359;"	d	file:
WRITE_STATE_BIG	../server/algo/sph_simd.c	544;"	d	file:
WRITE_STATE_BIG	../server/algo/sph_simd.c	630;"	d	file:
WRITE_STATE_BIG	../server/algo/sph_skein.c	709;"	d	file:
WRITE_STATE_BIG	../server/algo/sph_skein.c	739;"	d	file:
WRITE_STATE_SMALL	../server/algo/sph_groestl.c	1228;"	d	file:
WRITE_STATE_SMALL	../server/algo/sph_groestl.c	2212;"	d	file:
WRITE_STATE_SMALL	../server/algo/sph_simd.c	541;"	d	file:
WRITE_STATE_SMALL	../server/algo/sph_simd.c	570;"	d	file:
WROT	../server/algo/sph_shavite.c	857;"	d	file:
WROT	../server/algo/sph_shavite.c	874;"	d	file:
WSAGetLastError	../server/netbase.cpp	43;"	d	file:
WSREAD	../server/algo/sph_simd.c	920;"	d	file:
WSREAD	../server/algo/sph_simd.c	943;"	d	file:
WS_0_0	../server/algo/sph_simd.c	382;"	d	file:
WS_0_1	../server/algo/sph_simd.c	383;"	d	file:
WS_0_2	../server/algo/sph_simd.c	384;"	d	file:
WS_0_3	../server/algo/sph_simd.c	385;"	d	file:
WS_0_4	../server/algo/sph_simd.c	386;"	d	file:
WS_0_5	../server/algo/sph_simd.c	387;"	d	file:
WS_0_6	../server/algo/sph_simd.c	388;"	d	file:
WS_0_7	../server/algo/sph_simd.c	389;"	d	file:
WS_1_0	../server/algo/sph_simd.c	390;"	d	file:
WS_1_1	../server/algo/sph_simd.c	391;"	d	file:
WS_1_2	../server/algo/sph_simd.c	392;"	d	file:
WS_1_3	../server/algo/sph_simd.c	393;"	d	file:
WS_1_4	../server/algo/sph_simd.c	394;"	d	file:
WS_1_5	../server/algo/sph_simd.c	395;"	d	file:
WS_1_6	../server/algo/sph_simd.c	396;"	d	file:
WS_1_7	../server/algo/sph_simd.c	397;"	d	file:
WS_2_0	../server/algo/sph_simd.c	398;"	d	file:
WS_2_1	../server/algo/sph_simd.c	399;"	d	file:
WS_2_2	../server/algo/sph_simd.c	400;"	d	file:
WS_2_3	../server/algo/sph_simd.c	401;"	d	file:
WS_2_4	../server/algo/sph_simd.c	402;"	d	file:
WS_2_5	../server/algo/sph_simd.c	403;"	d	file:
WS_2_6	../server/algo/sph_simd.c	404;"	d	file:
WS_2_7	../server/algo/sph_simd.c	405;"	d	file:
WS_3_0	../server/algo/sph_simd.c	406;"	d	file:
WS_3_1	../server/algo/sph_simd.c	407;"	d	file:
WS_3_2	../server/algo/sph_simd.c	408;"	d	file:
WS_3_3	../server/algo/sph_simd.c	409;"	d	file:
WS_3_4	../server/algo/sph_simd.c	410;"	d	file:
WS_3_5	../server/algo/sph_simd.c	411;"	d	file:
WS_3_6	../server/algo/sph_simd.c	412;"	d	file:
WS_3_7	../server/algo/sph_simd.c	413;"	d	file:
W_BIG	../server/algo/sph_simd.c	415;"	d	file:
W_SMALL	../server/algo/sph_simd.c	376;"	d	file:
WalletFeature	../server/wallet.h	/^enum WalletFeature$/;"	g
WalletTxToJSON	../server/rpc/rpc_parse.cpp	/^void WalletTxToJSON(int ifaceIndex, const CWalletTx& wtx, Object& entry)$/;"	f
WalletUpdateSpent	../server/wallettx.cpp	/^void CWallet::WalletUpdateSpent(const CTransaction &tx)$/;"	f	class:CWallet
Wb0	../server/algo/sph_bmw.c	412;"	d	file:
Wb1	../server/algo/sph_bmw.c	413;"	d	file:
Wb10	../server/algo/sph_bmw.c	422;"	d	file:
Wb11	../server/algo/sph_bmw.c	423;"	d	file:
Wb12	../server/algo/sph_bmw.c	424;"	d	file:
Wb13	../server/algo/sph_bmw.c	425;"	d	file:
Wb14	../server/algo/sph_bmw.c	426;"	d	file:
Wb15	../server/algo/sph_bmw.c	427;"	d	file:
Wb2	../server/algo/sph_bmw.c	414;"	d	file:
Wb3	../server/algo/sph_bmw.c	415;"	d	file:
Wb4	../server/algo/sph_bmw.c	416;"	d	file:
Wb5	../server/algo/sph_bmw.c	417;"	d	file:
Wb6	../server/algo/sph_bmw.c	418;"	d	file:
Wb7	../server/algo/sph_bmw.c	419;"	d	file:
Wb8	../server/algo/sph_bmw.c	420;"	d	file:
Wb9	../server/algo/sph_bmw.c	421;"	d	file:
Width	../fractal/fractal_bmp.c	/^	UINT		Width;				\/* Bitmap's width *\/$/;"	m	struct:_BMP_Header	file:
WildcardMatch	../server/util.cpp	/^bool WildcardMatch(const char* psz, const char* mask)$/;"	f
WildcardMatch	../server/util.cpp	/^bool WildcardMatch(const string& str, const string& mask)$/;"	f
WitnessSigOps	../server/block.cpp	/^static size_t WitnessSigOps(int witversion, const std::vector<unsigned char>& witprogram, const CScriptWitness& witness, int flags)$/;"	f	file:
WitnessUnknown	../server/script.h	/^struct WitnessUnknown$/;"	s
WitnessV0KeyHash	../server/script.h	/^	WitnessV0KeyHash() : uint160() {} $/;"	f	struct:WitnessV0KeyHash
WitnessV0KeyHash	../server/script.h	/^	explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}$/;"	f	struct:WitnessV0KeyHash
WitnessV0KeyHash	../server/script.h	/^struct WitnessV0KeyHash : public uint160$/;"	s
WitnessV0ScriptHash	../server/script.h	/^	WitnessV0ScriptHash() : uint256() {}$/;"	f	struct:WitnessV0ScriptHash
WitnessV0ScriptHash	../server/script.h	/^	explicit WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}$/;"	f	struct:WitnessV0ScriptHash
WitnessV0ScriptHash	../server/script.h	/^struct WitnessV0ScriptHash : public uint256$/;"	s
WitnessV14KeyHash	../server/script.h	/^	WitnessV14KeyHash() : uint160() {} $/;"	f	struct:WitnessV14KeyHash
WitnessV14KeyHash	../server/script.h	/^	explicit WitnessV14KeyHash(const uint160& hash) : uint160(hash) {}$/;"	f	struct:WitnessV14KeyHash
WitnessV14KeyHash	../server/script.h	/^struct WitnessV14KeyHash : public uint160$/;"	s
WitnessV14ScriptHash	../server/script.h	/^	WitnessV14ScriptHash() : uint256() {}$/;"	f	struct:WitnessV14ScriptHash
WitnessV14ScriptHash	../server/script.h	/^	explicit WitnessV14ScriptHash(const uint256& hash) : uint256(hash) {}$/;"	f	struct:WitnessV14ScriptHash
WitnessV14ScriptHash	../server/script.h	/^struct WitnessV14ScriptHash : public uint256$/;"	s
Write	../server/addrman.cpp	/^bool CAddrDB::Write(const CAddrMan& addr)$/;"	f	class:CAddrDB
Write	../server/algo/hmac_sha512.h	/^    CHMAC_SHA512& Write(const unsigned char* data, size_t len)$/;"	f	class:CHMAC_SHA512
Write	../server/algo/sha512.cpp	/^CSHA512& CSHA512::Write(const unsigned char* data, size_t len)$/;"	f	class:CSHA512
Write	../server/leveldb.h	/^    template<typename K, typename V> bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error) {$/;"	f	class:CLevelDB
Write	../server/leveldb.h	/^    template<typename K, typename V> void Write(const K& key, const V& value) {$/;"	f	class:CLevelDBBatch
Write	../server/txidx.h	/^      bool Write(const K& key, const T& value, bool fOverwrite=true)$/;"	f	class:CDB
WriteAccount	../server/walletdb.cpp	/^bool CWalletDB::WriteAccount(const string& strAccount, const CAccount& account)$/;"	f	class:CWalletDB
WriteAccountingEntry	../server/walletdb.cpp	/^bool CWalletDB::WriteAccountingEntry(const CAccountingEntry& acentry)$/;"	f	class:CWalletDB
WriteArchBlock	../server/block.cpp	/^bool CBlock::WriteArchBlock()$/;"	f	class:CBlock
WriteArchTx	../server/wallettx.cpp	/^bool CWallet::WriteArchTx(const CWalletTx& wtx) const$/;"	f	class:CWallet
WriteBE64	../server/algo/sha512.cpp	/^void static inline WriteBE64(unsigned char* ptr, uint64_t x)$/;"	f	file:
WriteBatch	../server/leveldb.cpp	/^bool CLevelDB::WriteBatch(CLevelDBBatch &batch, bool fSync) throw(leveldb_error) {$/;"	f	class:CLevelDB
WriteBestBlock	../server/walletdb.h	/^    bool WriteBestBlock(const CBlockLocator& locator)$/;"	f	class:CWalletDB
WriteBestChain	../server/global.cpp	/^void WriteBestChain(CIface *iface, uint256 hash)$/;"	f
WriteBlock	../server/block.cpp	/^bool CBlock::WriteBlock(uint64_t nHeight)$/;"	f	class:CBlock
WriteCScript	../server/walletdb.h	/^    bool WriteCScript(const uint160& hash, const CScript& redeemScript)$/;"	f	class:CWalletDB
WriteCoins	../server/coin.cpp	/^bool CTransaction::WriteCoins(int ifaceIndex, const vector<uint256>& vOuts)$/;"	f	class:CTransaction
WriteCoins	../server/coin.cpp	/^bool CTransaction::WriteCoins(int ifaceIndex, int nOut, const uint256& hashTxOut)$/;"	f	class:CTransaction
WriteCompactSize	../server/serialize.h	/^void WriteCompactSize(Stream& os, uint64 nSize)$/;"	f
WriteCryptedKey	../server/walletdb.h	/^    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, bool fEraseUnencryptedKey = true)$/;"	f	class:CWalletDB
WriteDefaultKey	../server/walletdb.h	/^    bool WriteDefaultKey(const CPubKey& vchPubKey)$/;"	f	class:CWalletDB
WriteFlag	../server/emc2/emc2_txidx.cpp	/^bool EMC2TxDB::WriteFlag(const std::string &name, bool fValue) $/;"	f	class:EMC2TxDB
WriteFlag	../server/ltc/ltc_txidx.cpp	/^bool LTCTxDB::WriteFlag(const std::string &name, bool fValue) $/;"	f	class:LTCTxDB
WriteGlobalVar	../server/global.cpp	/^void WriteGlobalVar(char *tag, char *var, const char *value)$/;"	f
WriteHashBestChain	../server/coin.cpp	/^void WriteHashBestChain(CIface *iface, uint256 hash)$/;"	f
WriteHashBestChain	../server/txidx.cpp	/^bool CTxDB::WriteHashBestChain(uint256 hashBestChain)$/;"	f	class:CTxDB
WriteHeader	../fractal/fractal_bmp.c	/^int	WriteHeader( BMP* bmp, FILE* f )$/;"	f
WriteKey	../server/walletdb.h	/^    bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata& keyMeta)$/;"	f	class:CWalletDB
WriteKey	../server/walletdb.h	/^    bool WriteKey(const DIKey& key, const CPubKey& pubkey)$/;"	f	class:CWalletDB
WriteKey	../server/walletdb.h	/^    bool WriteKey(const ECKey& key, const CPubKey& pubkey)$/;"	f	class:CWalletDB
WriteMasterKey	../server/walletdb.h	/^    bool WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey)$/;"	f	class:CWalletDB
WriteMinVersion	../server/walletdb.h	/^    bool WriteMinVersion(int nVersion)$/;"	f	class:CWalletDB
WriteName	../server/walletdb.cpp	/^bool CWalletDB::WriteName(const string& strAddress, const string& strName)$/;"	f	class:CWalletDB
WriteSetting	../server/walletdb.h	/^    bool WriteSetting(const std::string& strKey, const T& value)$/;"	f	class:CWalletDB
WriteTx	../server/block.cpp	/^bool CTransaction::WriteTx(int ifaceIndex, uint64_t blockHeight)$/;"	f	class:CTransaction
WriteTx	../server/walletdb.h	/^    bool WriteTx(uint256 hash, const CWalletTx& wtx)$/;"	f	class:CWalletDB
WriteTxCoins	../server/coin.cpp	/^bool WriteTxCoins(uint256 hash, int ifaceIndex, const vector<uint256>& vOuts)$/;"	f
WriteUINT	../fractal/fractal_bmp.c	/^int	WriteUINT( UINT x, FILE* f )$/;"	f
WriteUSHORT	../fractal/fractal_bmp.c	/^int	WriteUSHORT( USHORT x, FILE* f )$/;"	f
WriteVersion	../server/global.cpp	/^void WriteVersion(CIface *iface, int nVersion)$/;"	f
WriteVersion	../server/serialize.h	/^    void WriteVersion()          { *this << nVersion; }$/;"	f	class:CAutoFile
WriteVersion	../server/serialize.h	/^    void WriteVersion()          { *this << nVersion; }$/;"	f	class:CDataStream
WriteVersion	../server/txidx.h	/^    bool WriteVersion(int nVersion)$/;"	f	class:CDB
WriteWalletTx	../server/wallettx.cpp	/^void CWallet::WriteWalletTx(const CWalletTx& wtx) const$/;"	f	class:CWallet
Ws0	../server/algo/sph_bmw.c	294;"	d	file:
Ws1	../server/algo/sph_bmw.c	295;"	d	file:
Ws10	../server/algo/sph_bmw.c	304;"	d	file:
Ws11	../server/algo/sph_bmw.c	305;"	d	file:
Ws12	../server/algo/sph_bmw.c	306;"	d	file:
Ws13	../server/algo/sph_bmw.c	307;"	d	file:
Ws14	../server/algo/sph_bmw.c	308;"	d	file:
Ws15	../server/algo/sph_bmw.c	309;"	d	file:
Ws2	../server/algo/sph_bmw.c	296;"	d	file:
Ws3	../server/algo/sph_bmw.c	297;"	d	file:
Ws4	../server/algo/sph_bmw.c	298;"	d	file:
Ws5	../server/algo/sph_bmw.c	299;"	d	file:
Ws6	../server/algo/sph_bmw.c	300;"	d	file:
Ws7	../server/algo/sph_bmw.c	301;"	d	file:
Ws8	../server/algo/sph_bmw.c	302;"	d	file:
Ws9	../server/algo/sph_bmw.c	303;"	d	file:
Wz	../server/algo/sph_jh.c	234;"	d	file:
Wz	../server/algo/sph_jh.c	512;"	d	file:
XCAT	../server/algo/sph_bmw.c	99;"	d	file:
XCAT	../server/algo/sph_groestl.c	2216;"	d	file:
XCAT	../server/algo/sph_simd.c	57;"	d	file:
XCAT	../server/algo/sph_skein.c	373;"	d	file:
XCAT_	../server/algo/sph_bmw.c	100;"	d	file:
XCAT_	../server/algo/sph_groestl.c	2217;"	d	file:
XCAT_	../server/algo/sph_simd.c	58;"	d	file:
XCAT_	../server/algo/sph_skein.c	374;"	d	file:
XOR	../server/algo/sph_luffa.c	202;"	d	file:
XOR64	../server/algo/sph_keccak.c	360;"	d	file:
XOR64	../server/algo/sph_keccak.c	764;"	d	file:
XOR64_IOTA	../server/algo/sph_keccak.c	365;"	d	file:
XOR64_IOTA	../server/algo/sph_keccak.c	953;"	d	file:
YES	../server/ui_interface.h	/^        YES                   = 0x00000002,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
YES_DEFAULT	../server/ui_interface.h	/^        YES_DEFAULT           = 0x00000000,$/;"	e	enum:CClientUIInterface::MessageBoxFlags
YES_NO	../server/ui_interface.h	/^        YES_NO                = (YES|NO),$/;"	e	enum:CClientUIInterface::MessageBoxFlags
Z00	../server/algo/sph_blake.c	126;"	d	file:
Z01	../server/algo/sph_blake.c	127;"	d	file:
Z02	../server/algo/sph_blake.c	128;"	d	file:
Z03	../server/algo/sph_blake.c	129;"	d	file:
Z04	../server/algo/sph_blake.c	130;"	d	file:
Z05	../server/algo/sph_blake.c	131;"	d	file:
Z06	../server/algo/sph_blake.c	132;"	d	file:
Z07	../server/algo/sph_blake.c	133;"	d	file:
Z08	../server/algo/sph_blake.c	134;"	d	file:
Z09	../server/algo/sph_blake.c	135;"	d	file:
Z0A	../server/algo/sph_blake.c	136;"	d	file:
Z0B	../server/algo/sph_blake.c	137;"	d	file:
Z0C	../server/algo/sph_blake.c	138;"	d	file:
Z0D	../server/algo/sph_blake.c	139;"	d	file:
Z0E	../server/algo/sph_blake.c	140;"	d	file:
Z0F	../server/algo/sph_blake.c	141;"	d	file:
Z10	../server/algo/sph_blake.c	143;"	d	file:
Z11	../server/algo/sph_blake.c	144;"	d	file:
Z12	../server/algo/sph_blake.c	145;"	d	file:
Z13	../server/algo/sph_blake.c	146;"	d	file:
Z14	../server/algo/sph_blake.c	147;"	d	file:
Z15	../server/algo/sph_blake.c	148;"	d	file:
Z16	../server/algo/sph_blake.c	149;"	d	file:
Z17	../server/algo/sph_blake.c	150;"	d	file:
Z18	../server/algo/sph_blake.c	151;"	d	file:
Z19	../server/algo/sph_blake.c	152;"	d	file:
Z1A	../server/algo/sph_blake.c	153;"	d	file:
Z1B	../server/algo/sph_blake.c	154;"	d	file:
Z1C	../server/algo/sph_blake.c	155;"	d	file:
Z1D	../server/algo/sph_blake.c	156;"	d	file:
Z1E	../server/algo/sph_blake.c	157;"	d	file:
Z1F	../server/algo/sph_blake.c	158;"	d	file:
Z20	../server/algo/sph_blake.c	160;"	d	file:
Z21	../server/algo/sph_blake.c	161;"	d	file:
Z22	../server/algo/sph_blake.c	162;"	d	file:
Z23	../server/algo/sph_blake.c	163;"	d	file:
Z24	../server/algo/sph_blake.c	164;"	d	file:
Z25	../server/algo/sph_blake.c	165;"	d	file:
Z26	../server/algo/sph_blake.c	166;"	d	file:
Z27	../server/algo/sph_blake.c	167;"	d	file:
Z28	../server/algo/sph_blake.c	168;"	d	file:
Z29	../server/algo/sph_blake.c	169;"	d	file:
Z2A	../server/algo/sph_blake.c	170;"	d	file:
Z2B	../server/algo/sph_blake.c	171;"	d	file:
Z2C	../server/algo/sph_blake.c	172;"	d	file:
Z2D	../server/algo/sph_blake.c	173;"	d	file:
Z2E	../server/algo/sph_blake.c	174;"	d	file:
Z2F	../server/algo/sph_blake.c	175;"	d	file:
Z30	../server/algo/sph_blake.c	177;"	d	file:
Z31	../server/algo/sph_blake.c	178;"	d	file:
Z32	../server/algo/sph_blake.c	179;"	d	file:
Z33	../server/algo/sph_blake.c	180;"	d	file:
Z34	../server/algo/sph_blake.c	181;"	d	file:
Z35	../server/algo/sph_blake.c	182;"	d	file:
Z36	../server/algo/sph_blake.c	183;"	d	file:
Z37	../server/algo/sph_blake.c	184;"	d	file:
Z38	../server/algo/sph_blake.c	185;"	d	file:
Z39	../server/algo/sph_blake.c	186;"	d	file:
Z3A	../server/algo/sph_blake.c	187;"	d	file:
Z3B	../server/algo/sph_blake.c	188;"	d	file:
Z3C	../server/algo/sph_blake.c	189;"	d	file:
Z3D	../server/algo/sph_blake.c	190;"	d	file:
Z3E	../server/algo/sph_blake.c	191;"	d	file:
Z3F	../server/algo/sph_blake.c	192;"	d	file:
Z40	../server/algo/sph_blake.c	194;"	d	file:
Z41	../server/algo/sph_blake.c	195;"	d	file:
Z42	../server/algo/sph_blake.c	196;"	d	file:
Z43	../server/algo/sph_blake.c	197;"	d	file:
Z44	../server/algo/sph_blake.c	198;"	d	file:
Z45	../server/algo/sph_blake.c	199;"	d	file:
Z46	../server/algo/sph_blake.c	200;"	d	file:
Z47	../server/algo/sph_blake.c	201;"	d	file:
Z48	../server/algo/sph_blake.c	202;"	d	file:
Z49	../server/algo/sph_blake.c	203;"	d	file:
Z4A	../server/algo/sph_blake.c	204;"	d	file:
Z4B	../server/algo/sph_blake.c	205;"	d	file:
Z4C	../server/algo/sph_blake.c	206;"	d	file:
Z4D	../server/algo/sph_blake.c	207;"	d	file:
Z4E	../server/algo/sph_blake.c	208;"	d	file:
Z4F	../server/algo/sph_blake.c	209;"	d	file:
Z50	../server/algo/sph_blake.c	211;"	d	file:
Z51	../server/algo/sph_blake.c	212;"	d	file:
Z52	../server/algo/sph_blake.c	213;"	d	file:
Z53	../server/algo/sph_blake.c	214;"	d	file:
Z54	../server/algo/sph_blake.c	215;"	d	file:
Z55	../server/algo/sph_blake.c	216;"	d	file:
Z56	../server/algo/sph_blake.c	217;"	d	file:
Z57	../server/algo/sph_blake.c	218;"	d	file:
Z58	../server/algo/sph_blake.c	219;"	d	file:
Z59	../server/algo/sph_blake.c	220;"	d	file:
Z5A	../server/algo/sph_blake.c	221;"	d	file:
Z5B	../server/algo/sph_blake.c	222;"	d	file:
Z5C	../server/algo/sph_blake.c	223;"	d	file:
Z5D	../server/algo/sph_blake.c	224;"	d	file:
Z5E	../server/algo/sph_blake.c	225;"	d	file:
Z5F	../server/algo/sph_blake.c	226;"	d	file:
Z60	../server/algo/sph_blake.c	228;"	d	file:
Z61	../server/algo/sph_blake.c	229;"	d	file:
Z62	../server/algo/sph_blake.c	230;"	d	file:
Z63	../server/algo/sph_blake.c	231;"	d	file:
Z64	../server/algo/sph_blake.c	232;"	d	file:
Z65	../server/algo/sph_blake.c	233;"	d	file:
Z66	../server/algo/sph_blake.c	234;"	d	file:
Z67	../server/algo/sph_blake.c	235;"	d	file:
Z68	../server/algo/sph_blake.c	236;"	d	file:
Z69	../server/algo/sph_blake.c	237;"	d	file:
Z6A	../server/algo/sph_blake.c	238;"	d	file:
Z6B	../server/algo/sph_blake.c	239;"	d	file:
Z6C	../server/algo/sph_blake.c	240;"	d	file:
Z6D	../server/algo/sph_blake.c	241;"	d	file:
Z6E	../server/algo/sph_blake.c	242;"	d	file:
Z6F	../server/algo/sph_blake.c	243;"	d	file:
Z70	../server/algo/sph_blake.c	245;"	d	file:
Z71	../server/algo/sph_blake.c	246;"	d	file:
Z72	../server/algo/sph_blake.c	247;"	d	file:
Z73	../server/algo/sph_blake.c	248;"	d	file:
Z74	../server/algo/sph_blake.c	249;"	d	file:
Z75	../server/algo/sph_blake.c	250;"	d	file:
Z76	../server/algo/sph_blake.c	251;"	d	file:
Z77	../server/algo/sph_blake.c	252;"	d	file:
Z78	../server/algo/sph_blake.c	253;"	d	file:
Z79	../server/algo/sph_blake.c	254;"	d	file:
Z7A	../server/algo/sph_blake.c	255;"	d	file:
Z7B	../server/algo/sph_blake.c	256;"	d	file:
Z7C	../server/algo/sph_blake.c	257;"	d	file:
Z7D	../server/algo/sph_blake.c	258;"	d	file:
Z7E	../server/algo/sph_blake.c	259;"	d	file:
Z7F	../server/algo/sph_blake.c	260;"	d	file:
Z80	../server/algo/sph_blake.c	262;"	d	file:
Z81	../server/algo/sph_blake.c	263;"	d	file:
Z82	../server/algo/sph_blake.c	264;"	d	file:
Z83	../server/algo/sph_blake.c	265;"	d	file:
Z84	../server/algo/sph_blake.c	266;"	d	file:
Z85	../server/algo/sph_blake.c	267;"	d	file:
Z86	../server/algo/sph_blake.c	268;"	d	file:
Z87	../server/algo/sph_blake.c	269;"	d	file:
Z88	../server/algo/sph_blake.c	270;"	d	file:
Z89	../server/algo/sph_blake.c	271;"	d	file:
Z8A	../server/algo/sph_blake.c	272;"	d	file:
Z8B	../server/algo/sph_blake.c	273;"	d	file:
Z8C	../server/algo/sph_blake.c	274;"	d	file:
Z8D	../server/algo/sph_blake.c	275;"	d	file:
Z8E	../server/algo/sph_blake.c	276;"	d	file:
Z8F	../server/algo/sph_blake.c	277;"	d	file:
Z90	../server/algo/sph_blake.c	279;"	d	file:
Z91	../server/algo/sph_blake.c	280;"	d	file:
Z92	../server/algo/sph_blake.c	281;"	d	file:
Z93	../server/algo/sph_blake.c	282;"	d	file:
Z94	../server/algo/sph_blake.c	283;"	d	file:
Z95	../server/algo/sph_blake.c	284;"	d	file:
Z96	../server/algo/sph_blake.c	285;"	d	file:
Z97	../server/algo/sph_blake.c	286;"	d	file:
Z98	../server/algo/sph_blake.c	287;"	d	file:
Z99	../server/algo/sph_blake.c	288;"	d	file:
Z9A	../server/algo/sph_blake.c	289;"	d	file:
Z9B	../server/algo/sph_blake.c	290;"	d	file:
Z9C	../server/algo/sph_blake.c	291;"	d	file:
Z9D	../server/algo/sph_blake.c	292;"	d	file:
Z9E	../server/algo/sph_blake.c	293;"	d	file:
Z9F	../server/algo/sph_blake.c	294;"	d	file:
_	../server/ui_interface.h	/^inline std::string _(const char* psz)$/;"	f
_BITCOIN_ADDRMAN	../server/addrman.h	31;"	d
_BMP	../fractal/fractal_bmp.c	/^struct _BMP$/;"	s	file:
_BMP_Header	../fractal/fractal_bmp.c	/^typedef struct _BMP_Header$/;"	s	file:
_BN_bn2mpi	../server/bignum.h	/^static int _BN_bn2mpi(const BIGNUM *a, unsigned char *d)$/;"	f
_BN_bn2mpi	../server/bignum.h	72;"	d
_CallFunc	../server/ext/exec.cpp	/^static int _CallFunc(sexe_t *S, const char *func, shjson_t *call)$/;"	f	file:
_CheckLowS	../server/script.cpp	/^bool static _CheckLowS(const std::vector<unsigned char>& vchSig)$/;"	f	file:
_CheckLowS	../test/testcoin_key.cpp	/^bool static _CheckLowS(const std::vector<unsigned char>& vchSig) $/;"	f	file:
_CloseStack	../server/ext/exec.cpp	/^static void _CloseStack(sexe_t *S)$/;"	f	file:
_END_TEST	../test/test_shcoind.h	10;"	d
_FALSE	../test/test_shcoind.h	14;"	d
_FeeEstimator	../server/txfeerate.cpp	/^static CBlockPolicyEstimator *_FeeEstimator[MAX_COIN_IFACE];$/;"	v	file:
_IsLowDERSignature	../test/testcoin_key.cpp	/^bool static _IsLowDERSignature(const cbuff& vchSig)$/;"	f	file:
_IsValidSignatureEncoding	../test/testcoin_key.cpp	/^bool static _IsValidSignatureEncoding(const std::vector<unsigned char> &sig) $/;"	f	file:
_OpenStack	../server/ext/exec.cpp	/^static int _OpenStack(int ifaceIndex, CExec *exec, CCoinAddr sendAddr, int64_t sendValue, sexe_t **s_p)$/;"	f	file:
_TEST	../test/test_shcoind.h	9;"	d
_TEST	../test/testcoin_account.cpp	/^_TEST(account_cache)$/;"	f
_TEST	../test/testcoin_algo.cpp	/^_TEST(algo_sha256d)$/;"	f
_TEST	../test/testcoin_bignum.cpp	/^_TEST(bignum)$/;"	f
_TEST	../test/testcoin_bip32.cpp	/^_TEST(bip32_hdkey)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(bech32)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(blockchain)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(bolo)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(chainwork)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(cointx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(exectx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(identtx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(matrix)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(matrixtx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(offertx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(orphan_block)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(reorganize)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(respend)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(scriptid)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(segwit)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(segwit_serializetx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(seqlocktx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(serializetx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(signtx)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(txmempool_conflict)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(txmempool_depend)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(txmempool_inval)$/;"	f
_TEST	../test/testcoin_block.cpp	/^_TEST(txmempool_pending)$/;"	f
_TEST	../test/testcoin_bloom.cpp	/^_TEST(bloom_create_insert_key)$/;"	f
_TEST	../test/testcoin_bloom.cpp	/^_TEST(bloom_match)$/;"	f
_TEST	../test/testcoin_coin.cpp	/^_TEST(coin_spendall)$/;"	f
_TEST	../test/testcoin_coin.cpp	/^_TEST(coin_spendall_segwit)$/;"	f
_TEST	../test/testcoin_coin.cpp	/^_TEST(coinaddr)$/;"	f
_TEST	../test/testcoin_coin.cpp	/^_TEST(wallet)$/;"	f
_TEST	../test/testcoin_hash.cpp	/^_TEST(sha256transform)$/;"	f
_TEST	../test/testcoin_json.cpp	/^_TEST(jsonencap)$/;"	f
_TEST	../test/testcoin_key.cpp	/^_TEST(coin_key)$/;"	f
_TEST	../test/testcoin_key.cpp	/^_TEST(coin_key_phrase)$/;"	f
_TEST	../test/testcoin_sip10.cpp	/^_TEST(sip10_ctxtx)$/;"	f
_TEST	../test/testcoin_sip10.cpp	/^_TEST(sip10_di_ctxtx)$/;"	f
_TEST	../test/testcoin_sip12.cpp	/^_TEST(sip12_consensus)$/;"	f
_TEST	../test/testcoin_sip25.cpp	/^_TEST(sip25_assettx)$/;"	f
_TEST	../test/testcoin_sip25.cpp	/^_TEST(sip25_di_assettx)$/;"	f
_TEST	../test/testcoin_sip33.cpp	/^_TEST(sip33_hdkey)$/;"	f
_TEST	../test/testcoin_sip33.cpp	/^_TEST(sip33_tx)$/;"	f
_TEST	../test/testcoin_sip5.cpp	/^_TEST(sip5_certtx)$/;"	f
_TEST	../test/testcoin_sip5.cpp	/^_TEST(sip5_di_certtx)$/;"	f
_TEST	../test/testcoin_sip6.cpp	/^_TEST(sip6_aliastx)$/;"	f
_TEST	../test/testcoin_sip6.cpp	/^_TEST(sip6_di_aliastx)$/;"	f
_TRUE	../test/test_shcoind.h	12;"	d
_TRUEPTR	../test/test_shcoind.h	26;"	d
_TRUE_EQUAL	../test/test_shcoind.h	17;"	d
_TRUE_GT	../test/test_shcoind.h	21;"	d
_TRUE_NE	../test/test_shcoind.h	19;"	d
_UINT256_H	../server/uint256.h	2;"	d
_WIN32_IE	../server/util.cpp	50;"	d	file:
_WIN32_IE	../server/util.cpp	52;"	d	file:
_WIN32_WINNT	../server/util.cpp	46;"	d	file:
_WIN32_WINNT	../server/util.cpp	48;"	d	file:
__ALGO__BLAKE2_H__	../server/algo/blake2.h	27;"	d
__ALGO__GROESTL_H__	../server/algo/groestl.h	27;"	d
__ALGO__KECCAK_H__	../server/algo/keccak.h	27;"	d
__ALGO__QUBIT_H__	../server/algo/qubit.h	27;"	d
__ALGO__SKEIN_H__	../server/algo/skein.h	27;"	d
__ALGO__X11_H__	../server/algo/x11.h	27;"	d
__ALIAS_H__	../server/ext/alias.h	27;"	d
__ALLOCATORS_H	../server/allocators.h	27;"	d
__ALTCHAIN_COLOR_H__	../server/ext/altchain_color.h	28;"	d
__ALTCHAIN_H__	../server/ext/altchain.h	27;"	d
__ASSET_H__	../server/ext/asset.h	27;"	d
__BLAKE2_H__	../server/algo/blake2s.h	15;"	d
__BLOCKCHAIN__BC_ARCH_H__	../blockchain/bc_arch.h	27;"	d
__BLOCKCHAIN__BC_BLOCK_H__	../blockchain/bc_block.h	28;"	d
__BLOCKCHAIN__BC_FMAP_H__	../blockchain/bc_fmap.h	27;"	d
__BLOCKCHAIN__BC_H__	../blockchain/bc.h	27;"	d
__BLOCKCHAIN__BC_INDEX_H__	../blockchain/bc_index.h	27;"	d
__BLOCKCHAIN__BC_MUTEX_H__	../blockchain/bc_mutex.h	28;"	d
__BLOCKCHAIN__BC_TABLE_H__	../blockchain/bc_table.h	28;"	d
__BLOCK_CMPCT_H__	../server/block_cmpct.h	27;"	d
__BOLO_VALIDATION03_H__	../server/bolo/bolo_validation03.h	27;"	d
__CHANNEL_H__	../server/ext/channel.h	27;"	d
__COIN_PROTO_H__	../proto/coin_proto.h	27;"	d
__COLOR_BLOCK_H__	../server/color/color_block.h	27;"	d
__COLOR_POOL_H__	../server/color/color_pool.h	27;"	d
__COLOR_PROTO_H__	../proto/color_proto.h	27;"	d
__COLOR_TXIDX_H__	../server/color/color_txidx.h	27;"	d
__COLOR_WALLET_H__	../server/color/color_wallet.h	27;"	d
__COMPAT_H	../server/compat.h	27;"	d
__CONTEXT_H__	../server/ext/context.h	27;"	d
__CRYPTER_H__	../server/crypter.h	27;"	d
__EMC2_BLOCK_H__	../server/emc2/emc2_block.h	27;"	d
__EMC2_NETMGSG_H__	../server/emc2/emc2_netmsg.h	27;"	d
__EMC2_POOL_H__	../server/emc2/emc2_pool.h	27;"	d
__EMC2_PROTO_H__	../proto/emc2_proto.h	27;"	d
__EMC2_WALLET_H__	../server/emc2/emc2_wallet.h	29;"	d
__EMC2__EMC2_TXIDX_H__	../server/emc2/emc2_txidx.h	27;"	d
__EXEC_H__	../server/ext/exec.h	27;"	d
__FRACTAL__FRACTAL_BMP_H__	../fractal/fractal_bmp.h	63;"	d
__FRACTAL__FRACTAL_H__	../fractal/fractal.h	27;"	d
__HTTP__HTTP_H__	../stratum/http/http.h	27;"	d
__LTC_BLOCK_H__	../server/ltc/ltc_block.h	27;"	d
__LTC_NETMGSG_H__	../server/ltc/ltc_netmsg.h	27;"	d
__LTC_POOL_H__	../server/ltc/ltc_pool.h	27;"	d
__LTC_PROTO_H__	../proto/ltc_proto.h	27;"	d
__LTC_WALLET_H__	../server/ltc/ltc_wallet.h	29;"	d
__LTC__LTC_TXIDX_H__	../server/ltc/ltc_txidx.h	27;"	d
__MATRIX_H__	../server/matrix.h	28;"	d
__MRUSET_H	../server/mruset.h	27;"	d
__OFFER_H__	../server/ext/offer.h	27;"	d
__PARAM_H__	../server/ext/ext_param.h	27;"	d
__PROTO__CONVERSION_H__	../proto/conversion.h	26;"	d
__PROTO__NETWORK_H__	../proto/network.h	27;"	d
__PROTO__PROTOCOL_C__	../stratum/stratum_api.cpp	26;"	d	file:
__PROTO__PROTOCOL_C__	../stratum/stratum_command.c	26;"	d	file:
__PROTO__PROTOCOL_C__	../stratum/stratum_protocol.c	26;"	d	file:
__PROTO__TYPES_H__	../proto/types.h	27;"	d
__RESERVED_2	../server/script.h	/^		__RESERVED_2$/;"	e	enum:txnouttype
__RPC__RPC_PROTO_H__	../server/rpc/rpc_proto.h	27;"	d
__SERVER__ACCOUNT_H__	../server/account.h	27;"	d
__SERVER__ALGOBITS_H__	../server/algobits.h	27;"	d
__SERVER__BASE58_H__	../server/base58.h	27;"	d
__SERVER__BLOCK_H__	../server/block.h	27;"	d
__SERVER__BLOOM_H__	../server/bloom.h	27;"	d
__SERVER__CERTIFICATE_H__	../server/ext/certificate.h	27;"	d
__SERVER__CHAIN_H__	../server/chain.h	27;"	d
__SERVER__CHECKPOINTS_H__	../server/checkpoints.h	27;"	d
__SERVER__COINADDR_H__	../server/coinaddr.h	27;"	d
__SERVER__COIN_H__	../server/coin.h	27;"	d
__SERVER__DIKEY_H__	../server/dikey.h	27;"	d
__SERVER__ECKEY_H__	../server/eckey.h	27;"	d
__SERVER__GLOBAL_H__	../server/global.h	27;"	d
__SERVER__HDKEY_H__	../server/hdkey.h	27;"	d
__SERVER__KEYSTORE_H__	../server/keystore.h	27;"	d
__SERVER__KEY_H__	../server/key.h	27;"	d
__SERVER__MNEMONIC_H__	../server/mnemonic.h	27;"	d
__SERVER__NETBASE_H__	../server/netbase.h	27;"	d
__SERVER__NET_H__	../server/net.h	27;"	d
__SERVER__PROTOCOL_H__	../server/protocol.h	31;"	d
__SERVER__RPCALIAS_PROTO_H__	../server/rpc/rpcalias_proto.h	27;"	d
__SERVER__RPCCERT_PROTO_H__	../server/rpc/rpccert_proto.h	27;"	d
__SERVER__RPCCOLOR_PROTO_H__	../server/rpc/rpccolor_proto.h	27;"	d
__SERVER__RPCCOMMAND_PROTO_H__	../server/rpc/rpc_command.h	27;"	d
__SERVER__RPCCONTEXT_PROTO_H__	../server/rpc/rpccontext_proto.h	27;"	d
__SERVER__RPCEXEC_PROTO_H__	../server/rpc/rpcexec_proto.h	27;"	d
__SERVER__RPCOFFER_PROTO_H__	../server/rpc/rpcoffer_proto.h	27;"	d
__SERVER__RPCPARAM_PROTO_H__	../server/rpc/rpcparam_proto.h	27;"	d
__SERVER__SCRIPT_H__	../server/script.h	27;"	d
__SERVER__SERIALIZE_H__	../server/serialize.h	27;"	d
__SERVER__SERVER_H__	../server/server.h	27;"	d
__SERVER__SHA256D_MERKLE_H__	../server/sha256d_merkle.h	27;"	d
__SERVER__SPRING_H__	../server/spring.h	27;"	d
__SERVER__SYNC_H__	../server/sync.h	27;"	d
__SERVER__TXCREATOR_H__	../server/txcreator.h	27;"	d
__SERVER__TXEXT_H__	../server/ext/txext.h	27;"	d
__SERVER__TXFEERATE_H__	../server/txfeerate.h	4;"	d
__SERVER__TXMEMPOOL_H__	../server/txmempool.h	27;"	d
__SERVER__TXSIGNATURE_H__	../server/txsignature.h	27;"	d
__SERVER__VALIDATION_H__	../server/validation.h	27;"	d
__SERVER__WALLET_H__	../server/wallet.h	27;"	d
__SHC_BLOCK_H__	../server/shc/shc_block.h	27;"	d
__SHC_NETMGSG_H__	../server/shc/shc_netmsg.h	27;"	d
__SHC_POOL_H__	../server/shc/shc_pool.h	27;"	d
__SHC_PROTO_H__	../proto/shc_proto.h	27;"	d
__SHC_TXIDX_H__	../server/shc/shc_txidx.h	27;"	d
__SHC_WALLET_H__	../server/shc/shc_wallet.h	27;"	d
__SHLIB_H__	../server/shlib.h	27;"	d
__STRATUM__API_H__	../stratum/stratum_api.h	27;"	d
__STRATUM__MINER_H__	../stratum/stratum_miner.h	27;"	d
__STRATUM__PROTOCOL_H__	../stratum/stratum_protocol.h	27;"	d
__STRATUM__STRATUM_HTTP_H__	../stratum/stratum_http.h	27;"	d
__STRATUM__STRATUM_H__	../stratum/stratum.h	27;"	d
__STRATUM__STRATUM_SYNC_H__	../stratum/stratum_sync.h	27;"	d
__STRATUM__TASK_C__	../stratum/stratum_task.c	26;"	d	file:
__STRATUM__TASK_H__	../stratum/stratum_task.h	27;"	d
__STRATUM__USER_H__	../stratum/stratum_user.h	27;"	d
__TESTNET_BLOCK_H__	../server/testnet/testnet_block.h	27;"	d
__TESTNET_NETMGSG_H__	../server/testnet/testnet_netmsg.h	27;"	d
__TESTNET_POOL_H__	../server/testnet/testnet_pool.h	27;"	d
__TESTNET_PROTO_H__	../proto/testnet_proto.h	27;"	d
__TESTNET_TXIDX_H__	../server/testnet/testnet_txidx.h	27;"	d
__TESTNET_WALLET_H__	../server/testnet/testnet_wallet.h	28;"	d
__TEST_POOL_H__	../server/test/test_pool.h	27;"	d
__TEST_PROTO_H__	../proto/test_proto.h	27;"	d
__TEST_TXIDX_H__	../server/test/test_txidx.h	27;"	d
__TEST_WALLET_H__	../server/test/test_wallet.h	29;"	d
__TEST__SHTEST_H__	../test/test_shcoind.h	3;"	d
__TEST__TEST_BLOCK_H__	../server/test/test_block.h	27;"	d
__TXIDX_H__	../server/txidx.h	28;"	d
__UNET_SEED_H__	../unet/unet_seed.h	4;"	d
__UNET__UNET_H__	../unet/unet.h	27;"	d
__WALLETDB_H__	../server/walletdb.h	28;"	d
__WIT_MERKLE_H__	../server/wit_merkle.h	3;"	d
__blake2s_param	../server/algo/blake2s.h	/^typedef struct __blake2s_param$/;"	s
__blake2s_state	../server/algo/blake2s.h	/^ALIGN( 64 ) typedef struct __blake2s_state$/;"	s
__reserved_0__	../blockchain/bc.h	/^  uint64_t __reserved_0__;$/;"	m	struct:bc_idx_t
__reserved_1__	../blockchain/bc.h	/^  uint64_t __reserved_1__;$/;"	m	struct:bc_idx_t
_account_address_flags	../server/account.cpp	/^static int _account_address_flags[MAX_ACCADDR] = {$/;"	v	file:
_bc_append	../blockchain/bc_block.c	/^static int _bc_append(bc_t *bc, bc_hash_t hash, void *data, size_t data_len)$/;"	f	file:
_bc_arch	../blockchain/bc_block.c	/^static int _bc_arch(bc_t *bc, bcsize_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f	file:
_bc_arch_close	../blockchain/bc_arch.c	/^static void _bc_arch_close(bc_t *bc)$/;"	f	file:
_bc_arch_get	../blockchain/bc_arch.c	/^static int _bc_arch_get(bc_t *bc, bcpos_t pos, bc_idx_t *ret_arch)$/;"	f	file:
_bc_arch_open	../blockchain/bc_arch.c	/^static int _bc_arch_open(bc_t *bc)$/;"	f	file:
_bc_arch_set	../blockchain/bc_arch.c	/^static int _bc_arch_set(bc_t *bc, bcpos_t pos, bc_idx_t *arch)$/;"	f	file:
_bc_arch_write	../blockchain/bc_block.c	/^static int _bc_arch_write(bc_t *bc, bc_hash_t hash, void *raw_data, bcsize_t data_len)$/;"	f	file:
_bc_chain_idle	../blockchain/bc_block.c	/^static void _bc_chain_idle(void)$/;"	f	file:
_bc_close	../blockchain/bc_block.c	/^static void _bc_close(bc_t *bc)$/;"	f	file:
_bc_get	../blockchain/bc_block.c	/^static int _bc_get(bc_t *bc, bcpos_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f	file:
_bc_idx_clear	../blockchain/bc_index.c	/^static int _bc_idx_clear(bc_t *bc, bcsize_t pos)$/;"	f	file:
_bc_idx_close	../blockchain/bc_index.c	/^static void _bc_idx_close(bc_t *bc)$/;"	f	file:
_bc_idx_find	../blockchain/bc_index.c	/^static int _bc_idx_find(bc_t *bc, bc_hash_t hash, bc_idx_t *ret_idx, int *ret_pos)$/;"	f	file:
_bc_idx_get	../blockchain/bc_index.c	/^static int _bc_idx_get(bc_t *bc, bcsize_t pos, bc_idx_t *ret_idx)$/;"	f	file:
_bc_idx_open	../blockchain/bc_index.c	/^static int _bc_idx_open(bc_t *bc)$/;"	f	file:
_bc_idx_reset	../blockchain/bc_index.c	/^static int _bc_idx_reset(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f	file:
_bc_idx_set	../blockchain/bc_index.c	/^static int _bc_idx_set(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f	file:
_bc_map_alloc	../blockchain/bc_fmap.c	/^static int _bc_map_alloc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f	file:
_bc_map_append	../blockchain/bc_fmap.c	/^static int _bc_map_append(bc_t *bc, bc_map_t *map, void *raw_data, bcsize_t data_len)$/;"	f	file:
_bc_map_close	../blockchain/bc_fmap.c	/^static void _bc_map_close(bc_map_t *map)$/;"	f	file:
_bc_map_open	../blockchain/bc_fmap.c	/^static int _bc_map_open(bc_t *bc, bc_map_t *map)$/;"	f	file:
_bc_map_read	../blockchain/bc_fmap.c	/^static int _bc_map_read(bc_t *bc, bc_map_t *map, unsigned char *data, bcsize_t data_of, bcsize_t data_len)$/;"	f	file:
_bc_map_trunc	../blockchain/bc_fmap.c	/^static int _bc_map_trunc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f	file:
_bc_map_write	../blockchain/bc_fmap.c	/^static int _bc_map_write(bc_t *bc, bc_map_t *map, bcsize_t of, void *raw_data, bcsize_t data_len)$/;"	f	file:
_bc_open	../blockchain/bc_block.c	/^static int _bc_open(char *name, bc_t **bc_p)$/;"	f	file:
_bc_purge	../blockchain/bc_block.c	/^static int _bc_purge(bc_t *bc, bcsize_t pos)$/;"	f	file:
_bc_read	../blockchain/bc_block.c	/^static int _bc_read(bc_t *bc, bcsize_t pos, void *data, bcsize_t data_len)$/;"	f	file:
_bc_rewrite	../blockchain/bc_block.c	/^static int _bc_rewrite(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f	file:
_bc_table_clear	../blockchain/bc_table.c	/^static int _bc_table_clear(bc_t *bc)$/;"	f	file:
_bc_table_close	../blockchain/bc_table.c	/^static void _bc_table_close(bc_t *bc)$/;"	f	file:
_bc_table_get	../blockchain/bc_table.c	/^static int _bc_table_get(bc_t *bc, bc_hash_t hash, bcpos_t *ret_pos)$/;"	f	file:
_bc_table_open	../blockchain/bc_table.c	/^static int _bc_table_open(bc_t *bc)$/;"	f	file:
_bc_table_reset	../blockchain/bc_table.c	/^static int _bc_table_reset(bc_t *bc, bc_hash_t hash)$/;"	f	file:
_bc_table_set	../blockchain/bc_table.c	/^static int _bc_table_set(bc_t *bc, bc_hash_t hash, bcpos_t pos)$/;"	f	file:
_bc_table_unset	../blockchain/bc_table.c	/^static int _bc_table_unset(bc_t *bc, bc_hash_t hash)$/;"	f	file:
_bc_write	../blockchain/bc_block.c	/^static int _bc_write(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f	file:
_bits256	../server/bolo/bolo_validation03.cpp	/^union _bits256 { uint8_t bytes[32]; uint16_t ushorts[16]; uint32_t uints[8]; uint64_t ulongs[4]; uint64_t txid; };$/;"	u	file:
_blank_hash	../server/coin.cpp	/^static const uint256 _blank_hash = 0;$/;"	v	file:
_cutest_ptr	../test/test_shcoind.h	/^static void *_cutest_ptr;$/;"	v
_iface_table	../proto/coin_proto.c	/^static coin_iface_t *_iface_table[MAX_COIN_IFACE] = {$/;"	v	file:
_keyxor	../server/eckey.cpp	/^static void _keyxor(unsigned char *buf, unsigned char *alt, size_t size)$/;"	f	file:
_memxor	../server/dikey.cpp	/^static void _memxor(unsigned char *buf, unsigned char *alt, size_t size)$/;"	f	file:
_pub_addr_list	../stratum/stratum_sync.c	/^static char **_pub_addr_list(int ifaceIndex, char *acc_name_in)$/;"	f	file:
_pubkey_tag_table	../server/account.cpp	/^static const char *_pubkey_tag_table[MAX_ACCADDR] = {$/;"	v	file:
_reserved0_	../server/account.h	/^		uint256 _reserved0_;$/;"	m	class:CAccountCache
_rgb_table	../server/ext/altchain_color.c	/^static rgb_t _rgb_table[RGB_TABLE_MAX] =$/;"	v	file:
_rpc_arg_label	../server/rpc/rpc_parse.cpp	/^const char *_rpc_arg_label[MAX_RPC_ARG_TYPES] = {$/;"	v
_split_token	../server/rpc/rpccolor_proto.cpp	/^static void _split_token(string tok, string& mode_str, int& val)$/;"	f	file:
_spring_matrix	../server/spring.c	/^uint64_t _spring_matrix[256][256] = {$/;"	v
_str_abrev	../server/ext/altchain_color.c	/^static const char *_str_abrev(const char *str)$/;"	f	file:
_str_span	../server/ext/altchain_color.c	/^static int _str_span(const char *str1, const char *str2)$/;"	f	file:
_str_ucword	../server/ext/altchain_color.c	/^static const char *_str_ucword(const char *str)$/;"	f	file:
_stratum_user_html_template	../stratum/stratum_http.c	/^static const char *_stratum_user_html_template = $/;"	v	file:
_sync_req_idx	../stratum/stratum_sync.c	/^static unsigned int _sync_req_idx;$/;"	v	file:
_task_stat	../stratum/stratum_task.c	/^task_stat_t _task_stat[MAX_COIN_IFACE];$/;"	v
_unet_bind	../unet/unet_bind.c	/^static unet_bind_t _unet_bind[MAX_UNET_MODES];$/;"	v	file:
_unet_label	../unet/unet.c	/^static const char *_unet_label[MAX_UNET_MODES] = $/;"	v	file:
_verify_rpc_auth	../server/rpc/rpc_parse.cpp	/^static bool _verify_rpc_auth(const uint256& auth_key, unsigned int auth_pin)$/;"	f	file:
_version_bits_cache	../server/versionbits.cpp	/^static VersionBitsCache _version_bits_cache[MAX_COIN_IFACE];$/;"	v	file:
a00	../server/algo/sph_keccak.c	153;"	d	file:
a00h	../server/algo/sph_keccak.c	469;"	d	file:
a00l	../server/algo/sph_keccak.c	468;"	d	file:
a01	../server/algo/sph_keccak.c	158;"	d	file:
a01h	../server/algo/sph_keccak.c	479;"	d	file:
a01l	../server/algo/sph_keccak.c	478;"	d	file:
a02	../server/algo/sph_keccak.c	163;"	d	file:
a02h	../server/algo/sph_keccak.c	489;"	d	file:
a02l	../server/algo/sph_keccak.c	488;"	d	file:
a03	../server/algo/sph_keccak.c	168;"	d	file:
a03h	../server/algo/sph_keccak.c	499;"	d	file:
a03l	../server/algo/sph_keccak.c	498;"	d	file:
a04	../server/algo/sph_keccak.c	173;"	d	file:
a04h	../server/algo/sph_keccak.c	509;"	d	file:
a04l	../server/algo/sph_keccak.c	508;"	d	file:
a10	../server/algo/sph_keccak.c	154;"	d	file:
a10h	../server/algo/sph_keccak.c	471;"	d	file:
a10l	../server/algo/sph_keccak.c	470;"	d	file:
a11	../server/algo/sph_keccak.c	159;"	d	file:
a11h	../server/algo/sph_keccak.c	481;"	d	file:
a11l	../server/algo/sph_keccak.c	480;"	d	file:
a12	../server/algo/sph_keccak.c	164;"	d	file:
a12h	../server/algo/sph_keccak.c	491;"	d	file:
a12l	../server/algo/sph_keccak.c	490;"	d	file:
a13	../server/algo/sph_keccak.c	169;"	d	file:
a13h	../server/algo/sph_keccak.c	501;"	d	file:
a13l	../server/algo/sph_keccak.c	500;"	d	file:
a14	../server/algo/sph_keccak.c	174;"	d	file:
a14h	../server/algo/sph_keccak.c	511;"	d	file:
a14l	../server/algo/sph_keccak.c	510;"	d	file:
a20	../server/algo/sph_keccak.c	155;"	d	file:
a20h	../server/algo/sph_keccak.c	473;"	d	file:
a20l	../server/algo/sph_keccak.c	472;"	d	file:
a21	../server/algo/sph_keccak.c	160;"	d	file:
a21h	../server/algo/sph_keccak.c	483;"	d	file:
a21l	../server/algo/sph_keccak.c	482;"	d	file:
a22	../server/algo/sph_keccak.c	165;"	d	file:
a22h	../server/algo/sph_keccak.c	493;"	d	file:
a22l	../server/algo/sph_keccak.c	492;"	d	file:
a23	../server/algo/sph_keccak.c	170;"	d	file:
a23h	../server/algo/sph_keccak.c	503;"	d	file:
a23l	../server/algo/sph_keccak.c	502;"	d	file:
a24	../server/algo/sph_keccak.c	175;"	d	file:
a24h	../server/algo/sph_keccak.c	513;"	d	file:
a24l	../server/algo/sph_keccak.c	512;"	d	file:
a30	../server/algo/sph_keccak.c	156;"	d	file:
a30h	../server/algo/sph_keccak.c	475;"	d	file:
a30l	../server/algo/sph_keccak.c	474;"	d	file:
a31	../server/algo/sph_keccak.c	161;"	d	file:
a31h	../server/algo/sph_keccak.c	485;"	d	file:
a31l	../server/algo/sph_keccak.c	484;"	d	file:
a32	../server/algo/sph_keccak.c	166;"	d	file:
a32h	../server/algo/sph_keccak.c	495;"	d	file:
a32l	../server/algo/sph_keccak.c	494;"	d	file:
a33	../server/algo/sph_keccak.c	171;"	d	file:
a33h	../server/algo/sph_keccak.c	505;"	d	file:
a33l	../server/algo/sph_keccak.c	504;"	d	file:
a34	../server/algo/sph_keccak.c	176;"	d	file:
a34h	../server/algo/sph_keccak.c	515;"	d	file:
a34l	../server/algo/sph_keccak.c	514;"	d	file:
a40	../server/algo/sph_keccak.c	157;"	d	file:
a40h	../server/algo/sph_keccak.c	477;"	d	file:
a40l	../server/algo/sph_keccak.c	476;"	d	file:
a41	../server/algo/sph_keccak.c	162;"	d	file:
a41h	../server/algo/sph_keccak.c	487;"	d	file:
a41l	../server/algo/sph_keccak.c	486;"	d	file:
a42	../server/algo/sph_keccak.c	167;"	d	file:
a42h	../server/algo/sph_keccak.c	497;"	d	file:
a42l	../server/algo/sph_keccak.c	496;"	d	file:
a43	../server/algo/sph_keccak.c	172;"	d	file:
a43h	../server/algo/sph_keccak.c	507;"	d	file:
a43l	../server/algo/sph_keccak.c	506;"	d	file:
a44	../server/algo/sph_keccak.c	177;"	d	file:
a44h	../server/algo/sph_keccak.c	517;"	d	file:
a44l	../server/algo/sph_keccak.c	516;"	d	file:
abs64	../server/util.h	/^inline int64 abs64(int64 n)$/;"	f
accept	../server/txmempool.h	/^    bool accept(CTransaction &tx, CNode *pfrom = NULL)$/;"	f	class:CTxMemPool
accept_offer_tx	../server/ext/offer.cpp	/^int accept_offer_tx(CIface *iface, std::string strAccount, uint160 hashOffer, int64 nValue, CWalletTx& wtx)$/;"	f
account	../server/account.h	/^		CAccount account;$/;"	m	class:CAccountCache
actions_	../server/json/json_spirit_reader_template.h	/^        Semantic_actions_t& actions_;$/;"	m	class:json_spirit::Json_grammer
activate_channel_tx	../server/ext/channel.cpp	/^int activate_channel_tx(CIface *iface, CTransaction *txIn, int64 nValue, CWalletTx& wtx)$/;"	f
active	../server/txmempool.h	/^    pool_map active;$/;"	m	class:CPool
activeTxn	../server/txidx.h	/^    DbTxn *activeTxn;$/;"	m	class:CDB
actor	../server/rpc/rpc_proto.h	/^  rpcfn_type actor;$/;"	m	class:RPCOp
add	../server/json/json_spirit_value.h	/^        static Value_type& add( Object_type& obj, const String_type& name, const Value_type& value )$/;"	f	struct:json_spirit::Config_map
add	../server/json/json_spirit_value.h	/^        static Value_type& add( Object_type& obj, const String_type& name, const Value_type& value )$/;"	f	struct:json_spirit::Config_vector
add_coin	../test/testcoin_coin.cpp	/^static void add_coin(int64 nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0)$/;"	f	file:
add_elt_b	../server/algo/sph_bmw.c	224;"	d	file:
add_elt_b	../server/algo/sph_bmw.c	252;"	d	file:
add_elt_s	../server/algo/sph_bmw.c	158;"	d	file:
add_esc_char	../server/json/json_spirit_writer_template.h	/^    bool add_esc_char( Char_type c, String_type& s )$/;"	f	namespace:json_spirit
add_esc_chars	../server/json/json_spirit_writer_template.h	/^    String_type add_esc_chars( const String_type& s )$/;"	f	namespace:json_spirit
add_first	../server/json/json_spirit_reader_template.h	/^        Value_type* add_first( const Value_type& value )$/;"	f	class:json_spirit::Semantic_actions
add_posn_iter_and_read_range_or_throw	../server/json/json_spirit_reader_template.h	/^    void add_posn_iter_and_read_range_or_throw( Iter_type begin, Iter_type end, Value_type& value )$/;"	f	namespace:json_spirit
add_stratum_miner_block	../stratum/stratum_miner.cpp	/^void add_stratum_miner_block(int ifaceIndex, char *block_hash)$/;"	f
add_sys_config_opt_bool	../server/rpc/rpc_command.cpp	/^static void add_sys_config_opt_bool(Object& obj, const char *opt_name)$/;"	f	file:
add_sys_config_opt_num	../server/rpc/rpc_command.cpp	/^static void add_sys_config_opt_num(Object& obj, const char *opt_name)$/;"	f	file:
add_sys_config_opt_str	../server/rpc/rpc_command.cpp	/^static void add_sys_config_opt_str(Object& obj, const char *opt_name)$/;"	f	file:
add_to_current	../server/json/json_spirit_reader_template.h	/^        Value_type* add_to_current( const Value_type& value )$/;"	f	class:json_spirit::Semantic_actions
addr	../server/coinaddr.h	/^    CCoinAddr *addr;$/;"	m	class:CCoinAddrVisitor
addr	../server/ext/channel.h	/^    uint160 addr;$/;"	m	class:CChannelKey
addr	../server/net.h	/^    CAddress addr;$/;"	m	class:CNode
addrLocal	../server/net.h	/^    CService addrLocal;$/;"	m	class:CNode
addrName	../server/net.h	/^    std::string addrName;$/;"	m	class:CNode
addrName	../server/net.h	/^    std::string addrName;$/;"	m	class:CNodeStats
aes_2rounds_all	../server/algo/sph_echo.c	/^aes_2rounds_all(sph_u32 W[16][4],$/;"	f	file:
aes_2rounds_all	../server/algo/sph_echo.c	/^aes_2rounds_all(sph_u64 W[16][2],$/;"	f	file:
alg	../stratum/stratum.h	/^	int alg;$/;"	m	struct:task_attr_t
alg	../stratum/stratum.h	/^	int alg;$/;"	m	struct:user_t
algobits_label	../server/algobits.cpp	/^static const char *algobits_label[MAX_ALGOBITS] = {$/;"	v	file:
alias	../server/block.h	/^    CAlias alias;$/;"	m	class:CTransaction
aliasFromOp	../server/ext/alias.cpp	/^string aliasFromOp(int op) {$/;"	f
alias_list	../server/ext/txext.h	/^typedef std::map<std::string, uint256> alias_list;$/;"	t
alignup	../server/util.h	/^T* alignup(T* p)$/;"	f
allocate	../server/allocators.h	/^    T* allocate(std::size_t n, const void *hint = 0)$/;"	f	struct:secure_allocator
allocator_type	../server/serialize.h	/^    typedef vector_type::allocator_type   allocator_type;$/;"	t	class:CDataStream
alpha_tab	../server/algo/sph_simd.c	/^static const s32 alpha_tab[] = {$/;"	v	file:
altchain	../server/block.h	/^		CAltChain altchain;$/;"	m	class:CTransaction
altchainFromOp	../server/ext/altchain.cpp	/^string altchainFromOp(int op) {$/;"	f
altchain_list	../server/ext/txext.h	/^typedef std::map<uint160, uint256> altchain_list;$/;"	t
altstacktop	../server/script.cpp	102;"	d	file:
append_esc_char_and_incr_iter	../server/json/json_spirit_reader_template.h	/^    void append_esc_char_and_incr_iter( String_type& s, $/;"	f	namespace:json_spirit
arch_map	../blockchain/bc.h	/^  bc_map_t arch_map;$/;"	m	struct:bc_t
arg	../server/rpc/rpc_proto.h	/^  rpcfn_arg arg;$/;"	m	class:RPCOp
args	../stratum/stratum_http.h	/^	shjson_t *args;$/;"	m	struct:httpreq_t
array_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
array_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
arrcasecmp	../server/ext/txext.h	/^inline bool arrcasecmp(cbuff v1, cbuff v2)$/;"	f
assetFromOp	../server/ext/asset.cpp	/^string assetFromOp(int op) {$/;"	f
asset_list	../server/ext/txext.h	/^typedef std::map<uint160, uint256> asset_list;$/;"	t
atoi	../server/util.h	/^inline int atoi(const std::string& str)$/;"	f
atoi64	../server/util.h	/^inline int64 atoi64(const char* psz)$/;"	f
atoi64	../server/util.h	/^inline int64 atoi64(const std::string& str)$/;"	f
avg	../server/txfeerate.h	/^    std::vector<double> avg;$/;"	m	class:TxConfirmStats
avg_diff	../stratum/stratum.h	/^  double avg_diff[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
b	../server/ext/altchain_color.c	/^	uint32_t b;$/;"	m	struct:rgb_t	file:
balance	../stratum/stratum.h	/^  double balance[MAX_COIN_IFACE];$/;"	m	struct:user_t
balance_avg	../stratum/stratum.h	/^  double balance_avg[MAX_COIN_IFACE];$/;"	m	struct:user_t
base	../server/allocators.h	/^    typedef std::allocator<T> base;$/;"	t	struct:secure_allocator
base	../server/allocators.h	/^    typedef std::allocator<T> base;$/;"	t	struct:zero_after_free_allocator
base58Prefixes	../test/testcoin_bip32.cpp	/^static std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];$/;"	v	file:
base58Prefixes	../test/testcoin_sip33.cpp	/^static std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];$/;"	v	file:
base58_ext_public_key	../proto/coin_proto.h	/^	unsigned char base58_ext_public_key[4];$/;"	m	struct:coin_iface_t
base58_ext_secret_key	../proto/coin_proto.h	/^	unsigned char base58_ext_secret_key[4];$/;"	m	struct:coin_iface_t
base58_pubkey_address	../proto/coin_proto.h	/^	unsigned char base58_pubkey_address;$/;"	m	struct:coin_iface_t
base58_script_address	../proto/coin_proto.h	/^	unsigned char base58_script_address;$/;"	m	struct:coin_iface_t
base58_script_address2	../proto/coin_proto.h	/^	unsigned char base58_script_address2;$/;"	m	struct:coin_iface_t
base58_secret_key	../proto/coin_proto.h	/^	unsigned char base58_secret_key;$/;"	m	struct:coin_iface_t
base_SignatureHash	../server/txsignature.cpp	/^uint256 base_SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType)$/;"	f
base_uint	../server/uint256.h	/^class base_uint$/;"	c
base_uint160	../server/uint256.h	/^typedef base_uint<160> base_uint160;$/;"	t
base_uint256	../server/uint256.h	/^typedef base_uint<256> base_uint256;$/;"	t
basetype	../server/uint256.h	/^    typedef base_uint160 basetype;$/;"	t	class:uint160
basetype	../server/uint256.h	/^    typedef base_uint256 basetype;$/;"	t	class:uint256
batch	../server/leveldb.h	/^    leveldb::WriteBatch batch;$/;"	m	class:CLevelDBBatch
bc_alloc	../blockchain/bc_block.c	/^int bc_alloc(bc_t *bc, unsigned int jrnl)$/;"	f
bc_append	../blockchain/bc_block.c	/^int bc_append(bc_t *bc, bc_hash_t hash, void *data, size_t data_len)$/;"	f
bc_arch	../blockchain/bc_block.c	/^int bc_arch(bc_t *bc, bcsize_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f
bc_arch_add	../blockchain/bc_arch.c	/^int bc_arch_add(bc_t *bc, bc_idx_t *arch)$/;"	f
bc_arch_close	../blockchain/bc_arch.c	/^void bc_arch_close(bc_t *bc)$/;"	f
bc_arch_crc	../blockchain/bc_arch.c	/^uint32_t bc_arch_crc(bc_hash_t hash)$/;"	f
bc_arch_find	../blockchain/bc_arch.c	/^int bc_arch_find(bc_t *bc, bc_hash_t hash, bc_idx_t *ret_arch, bcsize_t *ret_pos)$/;"	f
bc_arch_get	../blockchain/bc_arch.c	/^int bc_arch_get(bc_t *bc, bcpos_t pos, bc_idx_t *ret_arch)$/;"	f
bc_arch_next	../blockchain/bc_arch.c	/^int bc_arch_next(bc_t *bc, bcpos_t *pos_p)$/;"	f
bc_arch_open	../blockchain/bc_arch.c	/^int bc_arch_open(bc_t *bc)$/;"	f
bc_arch_set	../blockchain/bc_arch.c	/^int bc_arch_set(bc_t *bc, bcpos_t pos, bc_idx_t *arch)$/;"	f
bc_arch_write	../blockchain/bc_block.c	/^int bc_arch_write(bc_t *bc, bc_hash_t hash, void *raw_data, bcsize_t data_len)$/;"	f
bc_block	../proto/coin_proto.h	/^  bc_t *bc_block;$/;"	m	struct:coin_iface_t
bc_chain_idle	../blockchain/bc_block.c	/^void bc_chain_idle(void)$/;"	f
bc_clear	../blockchain/bc_block.c	/^int bc_clear(bc_t *bc, bcsize_t pos)$/;"	f
bc_close	../blockchain/bc_block.c	/^void bc_close(bc_t *bc)$/;"	f
bc_coin	../proto/coin_proto.h	/^  bc_t *bc_coin;$/;"	m	struct:coin_iface_t
bc_find	../blockchain/bc_block.c	/^int bc_find(bc_t *bc, bc_hash_t hash, bcpos_t *pos_p)$/;"	f
bc_fmap_total	../blockchain/bc_fmap.c	/^unsigned int bc_fmap_total(bc_t *bc)$/;"	f
bc_get	../blockchain/bc_block.c	/^int bc_get(bc_t *bc, bcpos_t pos, unsigned char **data_p, size_t *data_len_p)$/;"	f
bc_get_hash	../blockchain/bc_block.c	/^int bc_get_hash(bc_t *bc, bcpos_t pos, bc_hash_t ret_hash)$/;"	f
bc_hash_cmp	../blockchain/bc_block.c	/^int bc_hash_cmp(bc_hash_t a_hash, bc_hash_t b_hash)$/;"	f
bc_hash_t	../blockchain/bc.h	/^typedef uint32_t bc_hash_t[8];$/;"	t
bc_hdr_t	../blockchain/bc.h	/^typedef struct bc_hdr_t$/;"	s
bc_hdr_t	../blockchain/bc.h	/^} bc_hdr_t; \/* 16b *\/$/;"	t	typeref:struct:bc_hdr_t
bc_idle	../blockchain/bc_block.c	/^void bc_idle(bc_t *bc)$/;"	f
bc_idx_clear	../blockchain/bc_index.c	/^int bc_idx_clear(bc_t *bc, bcsize_t pos)$/;"	f
bc_idx_close	../blockchain/bc_index.c	/^void bc_idx_close(bc_t *bc)$/;"	f
bc_idx_crc	../blockchain/bc_index.c	/^uint32_t bc_idx_crc(bc_hash_t hash)$/;"	f
bc_idx_find	../blockchain/bc_index.c	/^int bc_idx_find(bc_t *bc, bc_hash_t hash, bc_idx_t *ret_idx, int *ret_pos)$/;"	f
bc_idx_get	../blockchain/bc_index.c	/^int bc_idx_get(bc_t *bc, bcsize_t pos, bc_idx_t *ret_idx)$/;"	f
bc_idx_next	../blockchain/bc_index.c	/^int bc_idx_next(bc_t *bc, bcpos_t *pos_p)$/;"	f
bc_idx_open	../blockchain/bc_index.c	/^int bc_idx_open(bc_t *bc)$/;"	f
bc_idx_reset	../blockchain/bc_index.c	/^int bc_idx_reset(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f
bc_idx_set	../blockchain/bc_index.c	/^int bc_idx_set(bc_t *bc, bcsize_t pos, bc_idx_t *idx)$/;"	f
bc_idx_t	../blockchain/bc.h	/^typedef struct bc_idx_t$/;"	s
bc_idx_t	../blockchain/bc.h	/^} bc_idx_t; \/* 16b *\/$/;"	t	typeref:struct:bc_idx_t
bc_iface_index	../blockchain/bc_fmap.c	/^static int bc_iface_index(char *name)$/;"	f	file:
bc_journal	../blockchain/bc_block.c	/^uint32_t bc_journal(int pos)$/;"	f
bc_lock	../blockchain/bc_mutex.c	/^int bc_lock(bc_t *bc)$/;"	f
bc_map_alloc	../blockchain/bc_fmap.c	/^int bc_map_alloc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f
bc_map_append	../blockchain/bc_fmap.c	/^int bc_map_append(bc_t *bc, bc_map_t *map, void *raw_data, bcsize_t data_len)$/;"	f
bc_map_close	../blockchain/bc_fmap.c	/^void bc_map_close(bc_map_t *map)$/;"	f
bc_map_free	../blockchain/bc_fmap.c	/^void bc_map_free(bc_map_t *map)$/;"	f
bc_map_open	../blockchain/bc_fmap.c	/^int bc_map_open(bc_t *bc, bc_map_t *map)$/;"	f
bc_map_read	../blockchain/bc_fmap.c	/^int bc_map_read(bc_t *bc, bc_map_t *map, unsigned char *data, bcsize_t data_of, bcsize_t data_len)$/;"	f
bc_map_t	../blockchain/bc.h	/^typedef struct bc_map_t$/;"	s
bc_map_t	../blockchain/bc.h	/^} bc_map_t;$/;"	t	typeref:struct:bc_map_t
bc_map_trunc	../blockchain/bc_fmap.c	/^int bc_map_trunc(bc_t *bc, bc_map_t *map, bcsize_t len)$/;"	f
bc_map_write	../blockchain/bc_fmap.c	/^int bc_map_write(bc_t *bc, bc_map_t *map, bcsize_t of, void *raw_data, bcsize_t data_len)$/;"	f
bc_mutex_init	../blockchain/bc_mutex.c	/^void bc_mutex_init(bc_t *bc)$/;"	f
bc_mutex_term	../blockchain/bc_mutex.c	/^void bc_mutex_term(bc_t *bc)$/;"	f
bc_name	../blockchain/bc_block.c	/^char *bc_name(bc_t *bc)$/;"	f
bc_open	../blockchain/bc_block.c	/^int bc_open(char *name, bc_t **bc_p)$/;"	f
bc_path_base	../blockchain/bc_block.c	/^const char *bc_path_base(void)$/;"	f
bc_purge	../blockchain/bc_block.c	/^int bc_purge(bc_t *bc, bcsize_t pos)$/;"	f
bc_read	../blockchain/bc_block.c	/^int bc_read(bc_t *bc, bcsize_t pos, void *data, bcsize_t data_len)$/;"	f
bc_rewrite	../blockchain/bc_block.c	/^int bc_rewrite(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f
bc_t	../blockchain/bc.h	/^typedef struct bc_t$/;"	s
bc_t	../blockchain/bc.h	/^} bc_t;$/;"	t	typeref:struct:bc_t
bc_table_clear	../blockchain/bc_table.c	/^int bc_table_clear(bc_t *bc)$/;"	f
bc_table_close	../blockchain/bc_table.c	/^void bc_table_close(bc_t *bc)$/;"	f
bc_table_get	../blockchain/bc_table.c	/^int bc_table_get(bc_t *bc, bc_hash_t hash, bcpos_t *ret_pos)$/;"	f
bc_table_hash	../blockchain/bc_table.c	/^int bc_table_hash(bc_hash_t hash)$/;"	f
bc_table_open	../blockchain/bc_table.c	/^int bc_table_open(bc_t *bc)$/;"	f
bc_table_pos	../blockchain/bc_table.c	/^bcpos_t *bc_table_pos(bc_t *bc, bc_hash_t hash)$/;"	f
bc_table_reset	../blockchain/bc_table.c	/^int bc_table_reset(bc_t *bc, bc_hash_t hash)$/;"	f
bc_table_set	../blockchain/bc_table.c	/^int bc_table_set(bc_t *bc, bc_hash_t hash, bcpos_t pos)$/;"	f
bc_table_unset	../blockchain/bc_table.c	/^int bc_table_unset(bc_t *bc, bc_hash_t hash)$/;"	f
bc_trylock	../blockchain/bc_mutex.c	/^int bc_trylock(bc_t *bc)$/;"	f
bc_tx	../proto/coin_proto.h	/^  bc_t *bc_tx;$/;"	m	struct:coin_iface_t
bc_unlock	../blockchain/bc_mutex.c	/^void bc_unlock(bc_t *bc)$/;"	f
bc_write	../blockchain/bc_block.c	/^int bc_write(bc_t *bc, bcsize_t pos, bc_hash_t hash, void *raw_data, int data_len)$/;"	f
bc_wtx	../proto/coin_proto.h	/^  bc_t *bc_wtx;$/;"	m	struct:coin_iface_t
bclock_t	../blockchain/bc.h	/^typedef int bclock_t;$/;"	t
bclock_t	../blockchain/bc.h	/^typedef pthread_mutex_t bclock_t;$/;"	t
bcount	../server/algo/sph_skein.h	/^	sph_u64 bcount;$/;"	m	struct:__anon44
bcpos_t	../blockchain/bc.h	/^typedef uint32_t bcpos_t;$/;"	t
bcsize_t	../blockchain/bc.h	/^typedef uint32_t bcsize_t;$/;"	t
be32dec	../server/algo/scrypt.c	/^static inline uint32_t be32dec(const void *pp)$/;"	f	file:
be32dec	../test/testcoin_algo.cpp	/^static inline uint32_t be32dec(const void *pp)$/;"	f	file:
be32enc	../server/algo/scrypt.c	/^static inline void be32enc(void *pp, uint32_t x)$/;"	f	file:
be32enc	../test/testcoin_algo.cpp	/^static inline void be32enc(void *pp, uint32_t x)$/;"	f	file:
bech32	../server/bech32.cpp	/^namespace bech32$/;"	n	file:
bech32	../server/bech32.h	/^namespace bech32$/;"	n
begin	../server/key.h	/^		const unsigned char* begin() const { return vch.data(); }$/;"	f	class:CKey
begin	../server/key.h	/^		const unsigned char* begin() const { return vchPubKey.data(); }$/;"	f	class:CPubKey
begin	../server/mruset.h	/^		iterator begin() const { return set.begin(); }$/;"	f	class:mruset
begin	../server/serialize.h	/^    char* begin() { return pbegin; }$/;"	f	class:CFlatData
begin	../server/serialize.h	/^    const char* begin() const { return pbegin; }$/;"	f	class:CFlatData
begin	../server/serialize.h	/^    const_iterator begin() const                     { return vch.begin() + nReadPos; }$/;"	f	class:CDataStream
begin	../server/serialize.h	/^    iterator begin()                                 { return vch.begin() + nReadPos; }$/;"	f	class:CDataStream
begin	../server/uint256.h	/^    const unsigned char* begin() const$/;"	f	class:base_uint
begin	../server/uint256.h	/^    unsigned char* begin()$/;"	f	class:base_uint
begin_	../server/json/json_spirit_reader_template.h	/^        Mp_iter begin_;$/;"	m	struct:json_spirit::Multi_pass_iters
begin_array	../server/json/json_spirit_reader_template.h	/^        void begin_array( Char_type c )$/;"	f	class:json_spirit::Semantic_actions
begin_compound	../server/json/json_spirit_reader_template.h	/^        void begin_compound()$/;"	f	class:json_spirit::Semantic_actions
begin_obj	../server/json/json_spirit_reader_template.h	/^        void begin_obj( Char_type c )$/;"	f	class:json_spirit::Semantic_actions
bignum_error	../server/bignum.h	/^    explicit bignum_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:bignum_error
bignum_error	../server/bignum.h	/^class bignum_error : public std::runtime_error$/;"	c
birth	../stratum/stratum_task.c	/^  time_t birth;$/;"	m	struct:task_stat_t	file:
birth	../unet/unet_peerdb.c	/^  uint32_t birth;$/;"	m	struct:peerdb_t	file:
bit	../proto/coin_proto.h	/^  int bit;$/;"	m	struct:BIP9Deployment
bit_count	../server/algo/sph_bmw.h	/^	sph_u64 bit_count;$/;"	m	struct:__anon21
bit_count	../server/algo/sph_bmw.h	/^	sph_u64 bit_count;$/;"	m	struct:__anon22
bit_count_high	../server/algo/sph_bmw.h	/^	sph_u32 bit_count_high, bit_count_low;$/;"	m	struct:__anon21
bit_count_low	../server/algo/sph_bmw.h	/^	sph_u32 bit_count_high, bit_count_low;$/;"	m	struct:__anon21
bit_mask	../server/bloom.cpp	/^static const unsigned char bit_mask[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};$/;"	v	file:
bitdb	../server/txidx.cpp	/^CDBEnv bitdb;$/;"	v
bits	../server/bignum.h	/^		int bits()$/;"	f	class:CBigNum
bits256	../server/bolo/bolo_validation03.cpp	/^typedef union _bits256 bits256;$/;"	t	typeref:union:_bits256	file:
bits256_doublesha256	../server/bolo/bolo_validation03.cpp	/^bits256 bits256_doublesha256(char *deprecated,uint8_t *data,int32_t datalen)$/;"	f
blake2s	../server/algo/blake2s.c	/^int blake2s( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen )$/;"	f
blake2s_IV	../server/algo/blake2s.c	/^static const uint32_t blake2s_IV[8] =$/;"	v	file:
blake2s_clear_lastblock	../server/algo/blake2s.c	/^static inline int blake2s_clear_lastblock( blake2s_state *S )$/;"	f	file:
blake2s_clear_lastnode	../server/algo/blake2s.c	/^static inline int blake2s_clear_lastnode( blake2s_state *S )$/;"	f	file:
blake2s_compress	../server/algo/blake2s.c	/^int blake2s_compress( blake2s_state *S, const uint8_t block[BLAKE2S_BLOCKBYTES] )$/;"	f
blake2s_constant	../server/algo/blake2s.h	/^enum blake2s_constant$/;"	g
blake2s_final	../server/algo/blake2s.c	/^int blake2s_final( blake2s_state *S, uint8_t *out, uint8_t outlen )$/;"	f
blake2s_hash	../server/algo/blake2.c	/^void blake2s_hash(void *output, const void *input)$/;"	f
blake2s_increment_counter	../server/algo/blake2s.c	/^static inline int blake2s_increment_counter( blake2s_state *S, const uint32_t inc )$/;"	f	file:
blake2s_init	../server/algo/blake2s.c	/^int blake2s_init( blake2s_state *S, const uint8_t outlen )$/;"	f
blake2s_init0	../server/algo/blake2s.c	/^static inline int blake2s_init0( blake2s_state *S )$/;"	f	file:
blake2s_init_key	../server/algo/blake2s.c	/^int blake2s_init_key( blake2s_state *S, const uint8_t outlen, const void *key, const uint8_t keylen )$/;"	f
blake2s_init_param	../server/algo/blake2s.c	/^int blake2s_init_param( blake2s_state *S, const blake2s_param *P )$/;"	f
blake2s_param	../server/algo/blake2s.h	/^} blake2s_param;$/;"	t	typeref:struct:__blake2s_param
blake2s_param_set_digest_length	../server/algo/blake2s.c	/^static inline int blake2s_param_set_digest_length( blake2s_param *P, const uint8_t digest_length )$/;"	f	file:
blake2s_param_set_fanout	../server/algo/blake2s.c	/^static inline int blake2s_param_set_fanout( blake2s_param *P, const uint8_t fanout )$/;"	f	file:
blake2s_param_set_inner_length	../server/algo/blake2s.c	/^static inline int blake2s_param_set_inner_length( blake2s_param *P, const uint8_t inner_length )$/;"	f	file:
blake2s_param_set_leaf_length	../server/algo/blake2s.c	/^static inline int blake2s_param_set_leaf_length( blake2s_param *P, const uint32_t leaf_length )$/;"	f	file:
blake2s_param_set_max_depth	../server/algo/blake2s.c	/^static inline int blake2s_param_set_max_depth( blake2s_param *P, const uint8_t depth )$/;"	f	file:
blake2s_param_set_node_depth	../server/algo/blake2s.c	/^static inline int blake2s_param_set_node_depth( blake2s_param *P, const uint8_t node_depth )$/;"	f	file:
blake2s_param_set_node_offset	../server/algo/blake2s.c	/^static inline int blake2s_param_set_node_offset( blake2s_param *P, const uint64_t node_offset )$/;"	f	file:
blake2s_param_set_personal	../server/algo/blake2s.c	/^static inline int blake2s_param_set_personal( blake2s_param *P, const uint8_t personal[BLAKE2S_PERSONALBYTES] )$/;"	f	file:
blake2s_param_set_salt	../server/algo/blake2s.c	/^static inline int blake2s_param_set_salt( blake2s_param *P, const uint8_t salt[BLAKE2S_SALTBYTES] )$/;"	f	file:
blake2s_salt32	../server/algo/blake2s.h	147;"	d
blake2s_set_lastblock	../server/algo/blake2s.c	/^static inline int blake2s_set_lastblock( blake2s_state *S )$/;"	f	file:
blake2s_set_lastnode	../server/algo/blake2s.c	/^static inline int blake2s_set_lastnode( blake2s_state *S )$/;"	f	file:
blake2s_sigma	../server/algo/blake2s.c	/^static const uint8_t blake2s_sigma[10][16] =$/;"	v	file:
blake2s_simple	../server/algo/blake2s.h	148;"	d
blake2s_state	../server/algo/blake2s.h	/^} blake2s_state;$/;"	t	typeref:struct:__blake2s_state
blake2s_update	../server/algo/blake2s.c	/^int blake2s_update( blake2s_state *S, const uint8_t *in, uint64_t inlen )$/;"	f
blake32	../server/algo/sph_blake.c	/^blake32(sph_blake_small_context *sc, const void *data, size_t len)$/;"	f	file:
blake32_close	../server/algo/sph_blake.c	/^blake32_close(sph_blake_small_context *sc,$/;"	f	file:
blake32_init	../server/algo/sph_blake.c	/^blake32_init(sph_blake_small_context *sc,$/;"	f	file:
blake64	../server/algo/sph_blake.c	/^blake64(sph_blake_big_context *sc, const void *data, size_t len)$/;"	f	file:
blake64_close	../server/algo/sph_blake.c	/^blake64_close(sph_blake_big_context *sc,$/;"	f	file:
blake64_init	../server/algo/sph_blake.c	/^blake64_init(sph_blake_big_context *sc,$/;"	f	file:
blk_diff	../proto/coin_proto.h	/^  double blk_diff; \/* next block difficulty *\/$/;"	m	struct:coin_iface_t
blk_stamp	../stratum/stratum.h	/^  time_t blk_stamp[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
blkidx_t	../server/block.h	/^typedef std::map<uint256, CBlockIndex*> blkidx_t;$/;"	t
block	../server/ext/altchain.h	/^		CAltBlock block;$/;"	m	class:CAltChain
blockHeight	../server/txfeerate.h	/^        unsigned int blockHeight;$/;"	m	struct:CBlockPolicyEstimator::TxStatsInfo
blockSinceLastRollingFeeBump	../server/txfeerate.h	/^    mutable bool blockSinceLastRollingFeeBump;$/;"	m	class:CBlockPolicyEstimator
block_acc	../stratum/stratum.h	/^  int block_acc;$/;"	m	struct:user_t
block_avg	../stratum/stratum.h	/^  double block_avg[MAX_ROUNDS_PER_HOUR];$/;"	m	struct:user_t
block_besthash	../proto/coin_proto.h	/^  bc_hash_t block_besthash; \/* best block hash *\/$/;"	m	struct:coin_iface_t
block_cnt	../stratum/stratum.h	/^  size_t block_cnt;$/;"	m	struct:user_t
block_count	../server/algo/sph_jh.h	/^	sph_u64 block_count;$/;"	m	struct:__anon32
block_count_high	../server/algo/sph_jh.h	/^	sph_u32 block_count_high, block_count_low;$/;"	m	struct:__anon32
block_count_low	../server/algo/sph_jh.h	/^	sph_u32 block_count_high, block_count_low;$/;"	m	struct:__anon32
block_freq	../stratum/stratum.h	/^  double block_freq;$/;"	m	struct:user_t
block_hash	../stratum/stratum.h	/^  char block_hash[256];$/;"	m	struct:user_t
block_height	../stratum/stratum.h	/^  uint64_t block_height;$/;"	m	struct:user_t
block_tm	../stratum/stratum.h	/^  double block_tm;$/;"	m	struct:user_t
block_tot	../stratum/stratum.h	/^  double block_tot;$/;"	m	struct:user_t
block_ver	../proto/coin_proto.h	/^  int block_ver;$/;"	m	struct:coin_iface_t
blockhash	../server/block_cmpct.h	/^		uint256 blockhash;$/;"	m	class:BlockTransactions
blockhash	../server/block_cmpct.h	/^		uint256 blockhash;$/;"	m	class:BlockTransactionsRequest
blockscan_max	../proto/coin_proto.h	/^  uint32_t blockscan_max;$/;"	m	struct:coin_iface_t
bloomflags	../server/net.h	/^enum bloomflags$/;"	g
bmw32	../server/algo/sph_bmw.c	/^bmw32(sph_bmw_small_context *sc, const void *data, size_t len)$/;"	f	file:
bmw32_close	../server/algo/sph_bmw.c	/^bmw32_close(sph_bmw_small_context *sc, unsigned ub, unsigned n,$/;"	f	file:
bmw32_init	../server/algo/sph_bmw.c	/^bmw32_init(sph_bmw_small_context *sc, const sph_u32 *iv)$/;"	f	file:
bmw64	../server/algo/sph_bmw.c	/^bmw64(sph_bmw_big_context *sc, const void *data, size_t len)$/;"	f	file:
bmw64_close	../server/algo/sph_bmw.c	/^bmw64_close(sph_bmw_big_context *sc, unsigned ub, unsigned n,$/;"	f	file:
bmw64_init	../server/algo/sph_bmw.c	/^bmw64_init(sph_bmw_big_context *sc, const sph_u64 *iv)$/;"	f	file:
bnBestChainWork	../server/wallet.h	/^		CBigNum bnBestChainWork;$/;"	m	class:CWallet
bnChainWork	../server/block.h	/^    CBigNum bnChainWork;$/;"	m	class:CBlockIndex
bolo_ApplyNotarySignature	../server/bolo/bolo_validation03.cpp	/^bool bolo_ApplyNotarySignature(CWallet *wallet, CTransaction& tx, int nIn)$/;"	f
bolo_CHECKPOINT_HASH	../server/bolo/bolo_validation03.cpp	/^uint256 bolo_CHECKPOINT_HASH;$/;"	v
bolo_CHECKPOINT_HEIGHT	../server/bolo/bolo_validation03.cpp	/^int64 bolo_CHECKPOINT_HEIGHT;$/;"	v
bolo_CHECKPOINT_TXID	../server/bolo/bolo_validation03.cpp	/^uint256 bolo_CHECKPOINT_TXID;$/;"	v
bolo_CreateMasterNotaryTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_CreateMasterNotaryTx(CTransaction& tx)$/;"	f
bolo_GetMasterFinalTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_GetMasterFinalTx(const CTxOut& out, int& nHeight)$/;"	f
bolo_GetMasterProposeTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_GetMasterProposeTx(const CTransaction& tx, CTxIn& inOut, CScript& scriptOut)$/;"	f
bolo_GetSlaveMerkle	../server/bolo/bolo_validation03.cpp	/^uint256 bolo_GetSlaveMerkle(int32_t height,int32_t MoMdepth)$/;"	f
bolo_GetSlaveNotaryTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_GetSlaveNotaryTx(const CTxOut& out)$/;"	f
bolo_HWM_HEIGHT	../server/bolo/bolo_validation03.cpp	/^int bolo_HWM_HEIGHT;$/;"	v
bolo_IsNotaryTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_IsNotaryTx(const CTransaction& tx)$/;"	f
bolo_IsSlaveIface	../server/bolo/bolo_validation03.cpp	/^bool bolo_IsSlaveIface(CIface *iface)$/;"	f
bolo_MasterRedeemScript	../server/bolo/bolo_validation03.cpp	/^CScript bolo_MasterRedeemScript()$/;"	f
bolo_PROPOSED_BLOCK	../server/bolo/bolo_validation03.cpp	/^uint256 bolo_PROPOSED_BLOCK;$/;"	v
bolo_PROPOSED_HEIGHT	../server/bolo/bolo_validation03.cpp	/^int bolo_PROPOSED_HEIGHT;$/;"	v
bolo_PROPOSED_LOCKTIME	../server/bolo/bolo_validation03.cpp	/^int64 bolo_PROPOSED_LOCKTIME;$/;"	v
bolo_PROPOSED_NOTARY	../server/bolo/bolo_validation03.cpp	/^bool bolo_PROPOSED_NOTARY;$/;"	v
bolo_PROPOSED_TXID	../server/bolo/bolo_validation03.cpp	/^uint256 bolo_PROPOSED_TXID;$/;"	v
bolo_ProposeMasterTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_ProposeMasterTx(const uint256& hBlock, int nHeight, CCoinAddr *addr)$/;"	f
bolo_ResetMasterTx	../server/bolo/bolo_validation03.cpp	/^void bolo_ResetMasterTx()$/;"	f
bolo_SaveNotarySignature	../server/bolo/bolo_validation03.cpp	/^void bolo_SaveNotarySignature(CTransaction& tx, int nIn)$/;"	f
bolo_SignMasterNotarySignature	../server/bolo/bolo_validation03.cpp	/^bool bolo_SignMasterNotarySignature(CTransaction& tx, int nIn)$/;"	f
bolo_UpdateMasterNotaryTx	../server/bolo/bolo_validation03.cpp	/^bool bolo_UpdateMasterNotaryTx(CTransaction& tx)$/;"	f
bolo_VerifyMasterNotarySignature	../server/bolo/bolo_validation03.cpp	/^bool bolo_VerifyMasterNotarySignature(CTransaction& tx, int nIn)$/;"	f
bolo_checkpoint_create	../server/bolo/bolo_validation03.cpp	/^static bool bolo_checkpoint_create(int nHeight)$/;"	f	file:
bolo_connectblock_master	../server/bolo/bolo_validation03.cpp	/^void bolo_connectblock_master(CBlockIndex *pindex, CBlock& block)$/;"	f
bolo_connectblock_slave	../server/bolo/bolo_validation03.cpp	/^void bolo_connectblock_slave(CBlockIndex *pindex, CBlock& block)$/;"	f
bolo_disconnectblock_master	../server/bolo/bolo_validation03.cpp	/^void bolo_disconnectblock_master(CBlockIndex *pindex, CBlock *block)$/;"	f
bolo_disconnectblock_slave	../server/bolo/bolo_validation03.cpp	/^void bolo_disconnectblock_slave(CBlockIndex *pindex, CBlock *block)$/;"	f
bolo_init	../server/bolo/bolo_validation03.cpp	/^int32_t bolo_init(int slaveIface, int masterIface)$/;"	f
bolo_mapNotary	../server/bolo/bolo_validation03.cpp	/^vector<CTxIn> bolo_mapNotary;$/;"	v
bolo_mapNotaryScript	../server/bolo/bolo_validation03.cpp	/^vector<CScript> bolo_mapNotaryScript;$/;"	v
bolo_master_iface	../server/bolo/bolo_validation03.cpp	/^static CIface *bolo_master_iface;$/;"	v	file:
bolo_slave_iface	../server/bolo/bolo_validation03.cpp	/^static CIface *bolo_slave_iface;$/;"	v	file:
bolo_updatetx_master	../server/bolo/bolo_validation03.cpp	/^bool bolo_updatetx_master(CTransaction& tx)$/;"	f
bool_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
bucketIndex	../server/txfeerate.h	/^        unsigned int bucketIndex;$/;"	m	struct:CBlockPolicyEstimator::TxStatsInfo
bucketMap	../server/txfeerate.h	/^    std::map<double, unsigned int> bucketMap; \/\/ Map of bucket upper-bound to index into all vectors by bucket$/;"	m	class:TxConfirmStats
buckets	../server/txfeerate.h	/^    std::vector<double> buckets;              \/\/ The upper-bound of the range for the bucket (inclusive)$/;"	m	class:TxConfirmStats
buf	../server/algo/blake2s.h	/^	uint8_t  buf[2 * BLAKE2S_BLOCKBYTES];$/;"	m	struct:__blake2s_state
buf	../server/algo/sha512.h	/^    unsigned char buf[128];$/;"	m	class:CSHA512
buf	../server/algo/sph_blake.h	/^	unsigned char buf[128];    \/* first field, for alignment *\/$/;"	m	struct:__anon20
buf	../server/algo/sph_blake.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon19
buf	../server/algo/sph_bmw.h	/^	unsigned char buf[128];    \/* first field, for alignment *\/$/;"	m	struct:__anon22
buf	../server/algo/sph_bmw.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon21
buf	../server/algo/sph_cubehash.h	/^	unsigned char buf[32];    \/* first field, for alignment *\/$/;"	m	struct:__anon23
buf	../server/algo/sph_echo.h	/^	unsigned char buf[128];    \/* first field, for alignment *\/$/;"	m	struct:__anon26
buf	../server/algo/sph_echo.h	/^	unsigned char buf[192];    \/* first field, for alignment *\/$/;"	m	struct:__anon24
buf	../server/algo/sph_groestl.h	/^	unsigned char buf[128];    \/* first field, for alignment *\/$/;"	m	struct:__anon30
buf	../server/algo/sph_groestl.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon28
buf	../server/algo/sph_jh.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon32
buf	../server/algo/sph_keccak.h	/^	unsigned char buf[144];    \/* first field, for alignment *\/$/;"	m	struct:__anon35
buf	../server/algo/sph_luffa.h	/^	unsigned char buf[32];    \/* first field, for alignment *\/$/;"	m	struct:__anon37
buf	../server/algo/sph_luffa.h	/^	unsigned char buf[32];    \/* first field, for alignment *\/$/;"	m	struct:__anon38
buf	../server/algo/sph_luffa.h	/^	unsigned char buf[32];    \/* first field, for alignment *\/$/;"	m	struct:__anon39
buf	../server/algo/sph_shavite.h	/^	unsigned char buf[128];    \/* first field, for alignment *\/$/;"	m	struct:__anon41
buf	../server/algo/sph_shavite.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon40
buf	../server/algo/sph_simd.h	/^	unsigned char buf[128];    \/* first field, for alignment *\/$/;"	m	struct:__anon43
buf	../server/algo/sph_simd.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon42
buf	../server/algo/sph_skein.h	/^	unsigned char buf[64];    \/* first field, for alignment *\/$/;"	m	struct:__anon44
buf	../server/bolo/bolo_validation03.cpp	/^struct rmd160_vstate { uint64_t length; uint8_t buf[64]; uint32_t curlen, state[5]; };$/;"	m	struct:rmd160_vstate	file:
buf	../server/bolo/bolo_validation03.cpp	/^struct sha256_vstate { uint64_t length; uint32_t state[8],curlen; uint8_t buf[64]; };$/;"	m	struct:sha256_vstate	file:
buff	../stratum/stratum_http.h	/^	shbuf_t *buff;$/;"	m	struct:httpreq_t
buffer	../test/CuTest.h	/^	char* buffer;$/;"	m	struct:__anon16
buflen	../server/algo/blake2s.h	/^	size_t   buflen;$/;"	m	struct:__blake2s_state
bytes	../server/algo/sha512.h	/^    uint64_t bytes;$/;"	m	class:CSHA512
bytes	../server/bolo/bolo_validation03.cpp	/^union _bits256 { uint8_t bytes[32]; uint16_t ushorts[16]; uint32_t uints[8]; uint64_t ulongs[4]; uint64_t txid; };$/;"	m	union:_bits256	file:
c256	../server/algo/sph_shavite.c	/^c256(sph_shavite_small_context *sc, const void *msg)$/;"	f	file:
c512	../server/algo/sph_shavite.c	/^c512(sph_shavite_big_context *sc, const void *msg)$/;"	f	file:
c_processblock	../stratum/stratum_miner.cpp	/^int c_processblock(CBlock* pblock)$/;"	f
caches	../server/versionbits.h	/^    ThresholdConditionCache caches[MAX_VERSION_BITS_DEPLOYMENTS];$/;"	m	struct:VersionBitsCache
cancel_offer_tx	../server/ext/offer.cpp	/^int cancel_offer_tx(CIface *iface, string strAccount, uint160 hashOffer, CWalletTx& wtx)$/;"	f
cb1	../stratum/stratum.h	/^  char cb1[1024];$/;"	m	struct:task_t
cb2	../stratum/stratum.h	/^  char cb2[1024];$/;"	m	struct:task_t
certFromOp	../server/ext/certificate.cpp	/^string certFromOp(int op) {$/;"	f
cert_list	../server/ext/txext.h	/^typedef std::map<uint160, uint256> cert_list;$/;"	t
certificate	../server/block.h	/^    CCert certificate;$/;"	m	class:CTransaction
chIV	../server/crypter.h	/^    unsigned char chIV[WALLET_CRYPTO_KEY_SIZE];$/;"	m	class:CCrypter
chKey	../server/crypter.h	/^    unsigned char chKey[WALLET_CRYPTO_KEY_SIZE];$/;"	m	class:CCrypter
chain_GetNextNode	../server/chain.cpp	/^static CNode *chain_GetNextNode(int ifaceIndex)$/;"	f	file:
chain_IsNodeBusy	../server/chain.cpp	/^static bool chain_IsNodeBusy(CNode *pnode)$/;"	f	file:
chain_UpdateWalletCoins	../server/chain.cpp	/^static void chain_UpdateWalletCoins(int ifaceIndex, const CTransaction& tx)$/;"	f	file:
chaincode	../server/dikey.h	/^	ChainCode chaincode;$/;"	m	struct:DIExtKey
chaincode	../server/dikey.h	/^	ChainCode chaincode;$/;"	m	struct:DIExtPubKey
chaincode	../server/eckey.h	/^	ChainCode chaincode;$/;"	m	struct:ECExtKey
chaincode	../server/eckey.h	/^	ChainCode chaincode;$/;"	m	struct:ECExtPubKey
changePubKey	../server/txcreator.h	/^    CPubKey changePubKey;$/;"	m	class:CTxCreator
channelFromOp	../server/ext/channel.cpp	/^string channelFromOp(int op) {$/;"	f
channel_list	../server/ext/txext.h	/^typedef std::map<uint160, CTransaction> channel_list;$/;"	t
check_payout	../stratum/stratum_task.c	/^static void check_payout(int ifaceIndex)$/;"	f	file:
check_type	../server/json/json_spirit_value.h	/^    void Value_impl< Config >::check_type( const Value_type vtype ) const$/;"	f	class:json_spirit::Value_impl
checkpoints	../server/wallet.h	/^		CCheckpoints *checkpoints;$/;"	m	class:CWallet
ckey_MergeKey	../server/eckey.cpp	/^static cbuff ckey_MergeKey(cbuff secret, cbuff tag)$/;"	f	file:
clear	../server/serialize.h	/^    void clear()                                     { vch.clear(); nReadPos = 0; }$/;"	f	class:CDataStream
clear	../server/serialize.h	/^    void clear(short n = 0)      { state = n; }$/;"	f	class:CAutoFile
clear	../server/serialize.h	/^    void clear(short n)          { state = n; }  \/\/ name conflict with vector clear()$/;"	f	class:CDataStream
cli_id	../stratum/stratum.h	/^  char cli_id[256];$/;"	m	struct:user_t
cli_ver	../stratum/stratum.h	/^  char cli_ver[128];$/;"	m	struct:user_t
client_list	../test/test_shcoind.c	/^user_t *client_list;$/;"	v
client_ver	../proto/coin_proto.h	/^  int client_ver;$/;"	m	struct:coin_iface_t
closesocket	../server/compat.h	45;"	d
clropt_default_table	../server/color/color_block.cpp	/^static int clropt_default_table[MAX_CLROPT] = $/;"	v	file:
cmd	../proto/coin_proto.h	/^  char cmd[12];$/;"	m	struct:coinhdr_t
coin_f	../proto/coin_proto.h	/^typedef int (*coin_f)(struct coin_iface_t * \/*iface*\/, void * \/* arg *\/);$/;"	t
coin_iface_t	../proto/coin_proto.h	/^typedef struct coin_iface_t$/;"	s
coin_iface_t	../proto/coin_proto.h	/^} coin_iface_t;$/;"	t	typeref:struct:coin_iface_t
coin_set	../server/txcreator.h	/^typedef set<pair<CWalletTx *,unsigned int> > coin_set;$/;"	t
coin_stat_t	../proto/coin_proto.h	/^  struct coin_stat_t {$/;"	s	struct:coin_iface_t
coinbase_maturity	../proto/coin_proto.h	/^  uint64_t coinbase_maturity;$/;"	m	struct:coin_iface_t
coinhdr_t	../proto/coin_proto.h	/^typedef struct coinhdr_t$/;"	s
coinhdr_t	../proto/coin_proto.h	/^} coinhdr_t;$/;"	t	typeref:struct:coinhdr_t
color_AddOrphanBlock	../server/color/color_block.cpp	/^void color_AddOrphanBlock(CBlock *block)$/;"	f
color_CalculateFee	../server/color/color_pool.cpp	/^static int64 color_CalculateFee(const CTransaction& tx)$/;"	f	file:
color_CalculatePoolFeePriority	../server/color/color_block.cpp	/^double color_CalculatePoolFeePriority(CPool *pool, CPoolTx *ptx, double dFeePrio)$/;"	f
color_CalculateSoftFee	../server/color/color_pool.cpp	/^static int64 color_CalculateSoftFee(CTransaction& tx)$/;"	f	file:
color_CheckProofOfWork	../server/color/color_block.cpp	/^bool color_CheckProofOfWork(uint256 hash, unsigned int nBits)$/;"	f
color_CreateGenesisBlock	../server/color/color_block.cpp	/^COLORBlock *color_CreateGenesisBlock(uint160 hColor, const color_opt& opt)$/;"	f
color_CreateNewBlock	../server/color/color_block.cpp	/^COLORBlock* color_CreateNewBlock(uint160 hColor, CBlockIndex *pindexPrev, const CPubKey& rkey)$/;"	f
color_EraseFromWallets	../server/color/color_block.cpp	/^static void color_EraseFromWallets(uint256 hash)$/;"	f	file:
color_FillBlockIndex	../server/color/color_txidx.cpp	/^static bool color_FillBlockIndex()$/;"	f	file:
color_GenerateNewBlock	../server/color/color_block.cpp	/^CBlock *color_GenerateNewBlock(CIface *iface, const CPubKey& rkey, uint160 hColor, vector<CTransaction> vTx, const color_opt& opt)$/;"	f
color_GenerateNewBlockNonce	../server/color/color_block.cpp	/^void color_GenerateNewBlockNonce(CIface *iface, CBlock *block)$/;"	f
color_GetAlgoFlags	../server/color/color_wallet.cpp	/^int color_GetAlgoFlags(color_opt& opt)$/;"	f
color_GetAlgoFlags	../server/color/color_wallet.cpp	/^int color_GetAlgoFlags(uint160 hColor)$/;"	f
color_GetBlockColor	../server/color/color_block.cpp	/^bool color_GetBlockColor(CIface *iface, CBlockIndex *pindex, uint160& hColor)$/;"	f
color_GetBlockTarget	../server/color/color_block.cpp	/^int64 color_GetBlockTarget(color_opt& opt)$/;"	f
color_GetBlockTarget	../server/color/color_block.cpp	/^int64 color_GetBlockTarget(uint160 hColor)$/;"	f
color_GetBlockValue	../server/color/color_block.cpp	/^int64 color_GetBlockValue(uint160 hColor, int nHeight, int64 nFees)$/;"	f
color_GetBlockValueBase	../server/color/color_block.cpp	/^int64 color_GetBlockValueBase(color_opt& opt)$/;"	f
color_GetBlockValueBase	../server/color/color_block.cpp	/^int64 color_GetBlockValueBase(uint160 hColor)$/;"	f
color_GetBlockValueRate	../server/color/color_block.cpp	/^int64 color_GetBlockValueRate(color_opt& opt)$/;"	f
color_GetBlockValueRate	../server/color/color_block.cpp	/^int64 color_GetBlockValueRate(uint160 hColor)$/;"	f
color_GetCoinbaseMaturity	../server/color/color_block.cpp	/^int64 color_GetCoinbaseMaturity(color_opt& opt)$/;"	f
color_GetCoinbaseMaturity	../server/color/color_block.cpp	/^int64 color_GetCoinbaseMaturity(uint160 hColor)$/;"	f
color_GetMainAccountPubKey	../proto/color_proto.cpp	/^static CPubKey color_GetMainAccountPubKey(CWallet *wallet)$/;"	f	file:
color_GetMinDifficulty	../server/color/color_block.cpp	/^CBigNum color_GetMinDifficulty(color_opt& opt)$/;"	f
color_GetMinDifficulty	../server/color/color_block.cpp	/^CBigNum color_GetMinDifficulty(uint160 hColor)$/;"	f
color_GetMinTxFee	../server/color/color_block.cpp	/^int64 color_GetMinTxFee(color_opt& opt)$/;"	f
color_GetMinTxFee	../server/color/color_block.cpp	/^int64 color_GetMinTxFee(uint160 hColor)$/;"	f
color_GetOrphanBlock	../server/color/color_block.cpp	/^CBlock *color_GetOrphanBlock(const uint256& hash)$/;"	f
color_GetOrphanNextHash	../server/color/color_block.cpp	/^bool color_GetOrphanNextHash(const uint256& hash, uint256& retNextHash)$/;"	f
color_GetOrphanPrevHash	../server/color/color_block.cpp	/^bool color_GetOrphanPrevHash(const uint256& hash, uint256& retPrevHash)$/;"	f
color_GetOrphanRoot	../server/color/color_block.cpp	/^uint256 color_GetOrphanRoot(uint256 hash)$/;"	f
color_GetTotalBlocks	../server/color/color_block.cpp	/^unsigned int color_GetTotalBlocks()$/;"	f
color_GetTxWeight	../server/color/color_block.cpp	/^static int64_t color_GetTxWeight(const CTransaction& tx)$/;"	f	file:
color_InitBlockIndex	../server/color/color_txidx.cpp	/^bool color_InitBlockIndex()$/;"	f
color_IsFromMe	../server/color/color_block.cpp	/^static bool color_IsFromMe(CTransaction& tx)$/;"	f	file:
color_IsOrphanBlock	../server/color/color_block.cpp	/^bool color_IsOrphanBlock(const uint256& hash)$/;"	f
color_IsSupported	../server/color/color_block.cpp	/^bool color_IsSupported(uint160 hColor)$/;"	f
color_KimotoGravityWell	../server/color/color_block.cpp	/^static unsigned int color_KimotoGravityWell(const CBlockIndex* pindexLast, const CBlock *pblock, uint160 hColor, int nAlg)$/;"	f	file:
color_KimotoGravityWell	../server/color/color_block.cpp	/^static unsigned int color_KimotoGravityWell(const CBlockIndex* pindexLast, const CBlock *pblock, uint64 TargetBlocksSpacingSeconds, uint64 PastBlocksMin, uint64 PastBlocksMax, CBigNum bnProofOfWorkLimit, int nAlg)$/;"	f	file:
color_LoadBlockIndex	../server/color/color_txidx.cpp	/^static bool color_LoadBlockIndex()$/;"	f	file:
color_LoadWallet	../server/color/color_wallet.cpp	/^bool color_LoadWallet(void)$/;"	f
color_ProcessBlock	../server/color/color_block.cpp	/^bool color_ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
color_RegisterRPCOp	../server/color/color_rpc.cpp	/^void color_RegisterRPCOp(int ifaceIndex)$/;"	f
color_RemoveOrphanBlock	../server/color/color_block.cpp	/^void color_RemoveOrphanBlock(const uint256& hash)$/;"	f
color_UpdatedTransaction	../server/color/color_block.cpp	/^static void color_UpdatedTransaction(const uint256& hashTx)$/;"	f	file:
color_VerifyGenesisBlock	../server/color/color_block.cpp	/^bool color_VerifyGenesisBlock(const CBlock& block)$/;"	f
color_bind	../proto/color_proto.cpp	/^static int color_bind(CIface *iface, void *_unused_)$/;"	f	file:
color_block_new	../proto/color_proto.cpp	/^static int color_block_new(CIface *iface, CBlock **block_p)$/;"	f	file:
color_block_process	../proto/color_proto.cpp	/^static int color_block_process(CIface *iface, CBlock *block)$/;"	f	file:
color_block_templ	../proto/color_proto.cpp	/^static int color_block_templ(CIface *iface, CBlock **block_p)$/;"	f	file:
color_coin_iface	../proto/color_proto.cpp	/^coin_iface_t color_coin_iface = {$/;"	v
color_gen	../server/ext/altchain_color.c	/^void color_gen(char *name, uint32_t *red_p, uint32_t *green_p, uint32_t *blue_p, uint32_t *alpha_p, char *ret_label, char *ret_abrev)$/;"	f
color_init	../proto/color_proto.cpp	/^static int color_init(CIface *iface, void *_unused_)$/;"	f	file:
color_msg_recv	../proto/color_proto.cpp	/^static int color_msg_recv(CIface *iface, CNode *pnode)$/;"	f	file:
color_msg_send	../proto/color_proto.cpp	/^static int color_msg_send(CIface *iface, CNode *pnode)$/;"	f	file:
color_nBytesPerSigOp	../server/color/color_wallet.cpp	/^static unsigned int color_nBytesPerSigOp = COLOR_DEFAULT_BYTES_PER_SIGOP;$/;"	v	file:
color_opt	../server/ext/altchain.h	/^typedef map<int, int> color_opt;$/;"	t
color_opt	../server/wallet.h	/^typedef map<int, int> color_opt;$/;"	t
color_peer_add	../proto/color_proto.cpp	/^static int color_peer_add(CIface *iface, void *arg)$/;"	f	file:
color_peer_recv	../proto/color_proto.cpp	/^static int color_peer_recv(CIface *iface, void *arg)$/;"	f	file:
color_term	../proto/color_proto.cpp	/^static int color_term(CIface *iface, void *_unused_)$/;"	f	file:
color_tx_new	../proto/color_proto.cpp	/^static int color_tx_new(CIface *iface, void *arg)$/;"	f	file:
color_tx_pool	../proto/color_proto.cpp	/^static int color_tx_pool(CIface *iface, CTxMemPool **pool_p)$/;"	f	file:
column_	../server/json/json_spirit_error_position.h	/^        unsigned int column_;$/;"	m	struct:json_spirit::Error_position
commit_payout	../stratum/stratum_task.c	/^static void commit_payout(int ifaceIndex, int block_height)$/;"	f	file:
commit_stamp	../stratum/stratum.h	/^  time_t commit_stamp[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
common_words	../server/mnemonic.cpp	/^string common_words[1626] = { $/;"	v
compress_big	../server/algo/sph_bmw.c	/^compress_big(const unsigned char *data, const sph_u64 h[16], sph_u64 dh[16])$/;"	f	file:
compress_big	../server/algo/sph_simd.c	/^compress_big(sph_simd_big_context *sc, int last)$/;"	f	file:
compress_small	../server/algo/sph_bmw.c	/^compress_small(const unsigned char *data, const sph_u32 h[16], sph_u32 dh[16])$/;"	f	file:
compress_small	../server/algo/sph_simd.c	/^compress_small(sph_simd_small_context *sc, int last)$/;"	f	file:
condition	../server/sync.h	/^		boost::condition_variable condition;$/;"	m	class:CSemaphore
confAvg	../server/txfeerate.h	/^    std::vector<std::vector<double> > confAvg; \/\/ confAvg[Y][X]$/;"	m	class:TxConfirmStats
const_iterator	../server/mruset.h	/^		typedef typename std::set<T>::const_iterator const_iterator;$/;"	t	class:mruset
const_iterator	../server/serialize.h	/^    typedef vector_type::const_iterator   const_iterator;$/;"	t	class:CDataStream
const_pointer	../server/allocators.h	/^    typedef typename base::const_pointer const_pointer;$/;"	t	struct:secure_allocator
const_pointer	../server/allocators.h	/^    typedef typename base::const_pointer const_pointer;$/;"	t	struct:zero_after_free_allocator
const_reference	../server/allocators.h	/^    typedef typename base::const_reference const_reference;$/;"	t	struct:secure_allocator
const_reference	../server/allocators.h	/^    typedef typename base::const_reference const_reference;$/;"	t	struct:zero_after_free_allocator
const_reference	../server/serialize.h	/^    typedef vector_type::const_reference  const_reference;$/;"	t	class:CDataStream
contains	../server/bloom.cpp	/^bool CBloomFilter::contains(const COutPoint& outpoint) const$/;"	f	class:CBloomFilter
contains	../server/bloom.cpp	/^bool CBloomFilter::contains(const uint160& hash) const$/;"	f	class:CBloomFilter
contains	../server/bloom.cpp	/^bool CBloomFilter::contains(const uint256& hash) const$/;"	f	class:CBloomFilter
contains	../server/bloom.cpp	/^bool CBloomFilter::contains(const vector<unsigned char>& vKey) const$/;"	f	class:CBloomFilter
core_AcceptBlock	../server/validation.cpp	/^bool core_AcceptBlock(CBlock *pblock, CBlockIndex *pindexPrev)$/;"	f
core_AcceptBlockHeader	../server/validation.cpp	/^bool core_AcceptBlockHeader(CIface *iface, CBlockHeader& block, CBlockIndex **pindex_p)$/;"	f
core_CScript_IsPushOnly	../server/script.cpp	/^static bool core_CScript_IsPushOnly(const CScript& script, int of = 0)$/;"	f	file:
core_CheckBlockWitness	../server/block.cpp	/^bool core_CheckBlockWitness(CIface *iface, CBlock *pblock, CBlockIndex *pindexPrev)$/;"	f
core_CommitBlock	../server/block.cpp	/^bool core_CommitBlock(CBlock *pblock, CBlockIndex *pindexNew)$/;"	f
core_ComputeBlockVersion	../server/block.cpp	/^int core_ComputeBlockVersion(CIface *params, CBlockIndex *pindexPrev)$/;"	f
core_ConnectBlock	../server/coin.cpp	/^bool core_ConnectBlock(CBlock *block, CBlockIndex* pindex)$/;"	f
core_ConnectCoinInputs	../server/coin.cpp	/^bool core_ConnectCoinInputs(int ifaceIndex, CTransaction *tx, const CBlockIndex* pindexBlock, tx_map& mapOutput, map<uint256, CTransaction>& mapTx, int& nSigOps, int64& nFees, bool fVerifySig, bool fVerifyInputs, bool fRequireInputs, CBlock *pBlock)$/;"	f
core_ConnectExtTx	../server/coin.cpp	/^void core_ConnectExtTx(CIface *iface, CBlock *pblock, int nHeight)$/;"	f
core_DisconnectBlock	../server/block.cpp	/^bool core_DisconnectBlock(CBlockIndex* pindex, CBlock *pblock)$/;"	f
core_DisconnectCoinInputs	../server/coin.cpp	/^static bool core_DisconnectCoinInputs(CWallet *wallet, CTransaction& prevTx, const COutPoint& prevout)$/;"	f	file:
core_DisconnectInputs	../server/coin.cpp	/^bool core_DisconnectInputs(int ifaceIndex, CTransaction *tx)$/;"	f
core_DisconnectWalletInputs	../server/coin.cpp	/^static bool core_DisconnectWalletInputs(CWallet *wallet, const COutPoint& prevout)$/;"	f	file:
core_GenerateCoinbaseCommitment	../server/block.cpp	/^bool core_GenerateCoinbaseCommitment(CIface *iface, CBlock *block, CBlockIndex *pindexPrev)$/;"	f
core_IncrementExtraNonce	../server/block.cpp	/^void core_IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev)$/;"	f
core_ReacceptWalletTransactions	../server/wallet.cpp	/^void core_ReacceptWalletTransactions(CWallet *wallet)$/;"	f
core_SetExtraNonce	../server/block.cpp	/^void core_SetExtraNonce(CBlock* pblock, const char *xn_hex)$/;"	f
core_Truncate	../server/coin.cpp	/^bool core_Truncate(CIface *iface, uint256 hash)$/;"	f
core_UnacceptWalletTransaction	../server/wallet.cpp	/^bool core_UnacceptWalletTransaction(CIface *iface, const CTransaction& tx)$/;"	f
core_UpdateUncommittedBlockStructures	../server/block.cpp	/^void core_UpdateUncommittedBlockStructures(CIface *iface, CBlock *block, const CBlockIndex* pindexPrev)$/;"	f
core_VerifyCoinInputs	../server/coin.cpp	/^bool core_VerifyCoinInputs(int ifaceIndex, CTransaction& tx, unsigned int nIn, CTxOut& prev)$/;"	f
core_netmsg	../server/netmsg.cpp	/^void core_netmsg(CNode *pfrom, string method, cbuff vRecv)$/;"	f
core_netmsg_ping	../server/netmsg.cpp	/^void core_netmsg_ping(CNode *pfrom, cbuff vRecv)$/;"	f
count	../server/algo/sph_groestl.h	/^	sph_u64 count;$/;"	m	struct:__anon28
count	../server/algo/sph_groestl.h	/^	sph_u64 count;$/;"	m	struct:__anon30
count	../server/mruset.h	/^		size_type count(const key_type& k) const { return set.count(k); }$/;"	f	class:mruset
count	../test/CuTest.h	/^	int count;$/;"	m	struct:__anon17
count0	../server/algo/sph_shavite.h	/^	sph_u32 count0, count1, count2, count3;$/;"	m	struct:__anon41
count0	../server/algo/sph_shavite.h	/^	sph_u32 count0, count1;$/;"	m	struct:__anon40
count1	../server/algo/sph_shavite.h	/^	sph_u32 count0, count1, count2, count3;$/;"	m	struct:__anon41
count1	../server/algo/sph_shavite.h	/^	sph_u32 count0, count1;$/;"	m	struct:__anon40
count2	../server/algo/sph_shavite.h	/^	sph_u32 count0, count1, count2, count3;$/;"	m	struct:__anon41
count3	../server/algo/sph_shavite.h	/^	sph_u32 count0, count1, count2, count3;$/;"	m	struct:__anon41
count_high	../server/algo/sph_groestl.h	/^	sph_u32 count_high, count_low;$/;"	m	struct:__anon28
count_high	../server/algo/sph_groestl.h	/^	sph_u32 count_high, count_low;$/;"	m	struct:__anon30
count_high	../server/algo/sph_simd.h	/^	sph_u32 count_low, count_high;$/;"	m	struct:__anon42
count_high	../server/algo/sph_simd.h	/^	sph_u32 count_low, count_high;$/;"	m	struct:__anon43
count_low	../server/algo/sph_groestl.h	/^	sph_u32 count_high, count_low;$/;"	m	struct:__anon28
count_low	../server/algo/sph_groestl.h	/^	sph_u32 count_high, count_low;$/;"	m	struct:__anon30
count_low	../server/algo/sph_simd.h	/^	sph_u32 count_low, count_high;$/;"	m	struct:__anon42
count_low	../server/algo/sph_simd.h	/^	sph_u32 count_low, count_high;$/;"	m	struct:__anon43
cpool_RemoveTxWithInput	../server/txmempool.cpp	/^static void cpool_RemoveTxWithInput(CPool *pool, const CTxIn& txin)$/;"	f	file:
cpp_validate_render_fractal	../server/matrix.cpp	/^int cpp_validate_render_fractal(int ifaceIndex, char *img_path, double zoom, double span, double x_of, double y_of)$/;"	f
crc	../blockchain/bc.h	/^  uint32_t crc;$/;"	m	struct:bc_idx_t
crc	../proto/coin_proto.h	/^  uint32_t crc;$/;"	m	struct:coinhdr_t
create_uevent_connect_peer	../unet/unet_event.c	/^uevent_t *create_uevent_connect_peer(int umode, shpeer_t *peer)$/;"	f
create_uevent_verify_peer	../unet/unet_event.c	/^uevent_t *create_uevent_verify_peer(int umode, shpeer_t *peer)$/;"	f
cs	../server/addrman.h	/^    mutable CCriticalSection cs;$/;"	m	class:CAddrMan
cs	../server/txmempool.h	/^    mutable CCriticalSection cs;$/;"	m	class:CPool
cs_KeyStore	../server/keystore.h	/^    mutable CCriticalSection cs_KeyStore;$/;"	m	class:CKeyStore
cs_THREAD_RPCHANDLER	../server/rpc/rpc_parse.cpp	/^static CCriticalSection cs_THREAD_RPCHANDLER;$/;"	v	file:
cs_chain	../server/coin.cpp	/^static CCriticalSection cs_chain;$/;"	v	file:
cs_db	../server/txidx.h	/^    mutable CCriticalSection cs_db;$/;"	m	class:CDBEnv
cs_filter	../server/net.h	/^    CCriticalSection cs_filter;$/;"	m	class:CNode
cs_inventory	../server/net.h	/^    CCriticalSection cs_inventory;$/;"	m	class:CNode
cs_mapRequests	../server/net.h	/^    CCriticalSection cs_mapRequests;$/;"	m	class:CNode
cs_mapWork	../stratum/stratum_miner.cpp	/^static CCriticalSection cs_mapWork;$/;"	v	file:
cs_nWalletUnlockTime	../server/rpc/rpc_parse.cpp	/^static CCriticalSection cs_nWalletUnlockTime;$/;"	v	file:
cs_setBanned	../server/net.h	/^    static CCriticalSection cs_setBanned;$/;"	m	class:CNode
cs_vRecv	../server/net.h	/^    CCriticalSection cs_vRecv;$/;"	m	class:CNode
cs_vSend	../server/net.h	/^    CCriticalSection cs_vSend;$/;"	m	class:CNode
cs_vcache	../server/versionbits.cpp	/^static CCriticalSection cs_vcache;$/;"	v	file:
cs_wallet	../server/wallet.h	/^		mutable CCriticalSection cs_wallet;$/;"	m	class:CWallet
ctx	../server/util.h	/^    SHA256_CTX ctx;$/;"	m	class:CHashWriter
ctxFromOp	../server/ext/context.cpp	/^string ctxFromOp(int op) {$/;"	f
ctx_context_verify	../server/ext/context.cpp	/^int ctx_context_verify(cbuff vchValue)$/;"	f
ctx_list	../server/ext/txext.h	/^typedef std::map<uint160, uint256> ctx_list;$/;"	t
ctype_digit	../stratum/stratum_http.c	/^static int ctype_digit(const char *str)$/;"	f	file:
cubehash_close	../server/algo/sph_cubehash.c	/^cubehash_close(sph_cubehash_context *sc, unsigned ub, unsigned n,$/;"	f	file:
cubehash_core	../server/algo/sph_cubehash.c	/^cubehash_core(sph_cubehash_context *sc, const void *data, size_t len)$/;"	f	file:
cubehash_init	../server/algo/sph_cubehash.c	/^cubehash_init(sph_cubehash_context *sc, const sph_u32 *iv)$/;"	f	file:
curBlockConf	../server/txfeerate.h	/^    std::vector<std::vector<int> > curBlockConf; \/\/ curBlockConf[Y][X]$/;"	m	class:TxConfirmStats
curBlockTxCt	../server/txfeerate.h	/^    std::vector<int> curBlockTxCt;$/;"	m	class:TxConfirmStats
curBlockVal	../server/txfeerate.h	/^    std::vector<double> curBlockVal;$/;"	m	class:TxConfirmStats
cur_id	../stratum/stratum.h	/^  char cur_id[256];$/;"	m	struct:user_t
curlen	../server/bolo/bolo_validation03.cpp	/^struct rmd160_vstate { uint64_t length; uint8_t buf[64]; uint32_t curlen, state[5]; };$/;"	m	struct:rmd160_vstate	file:
curlen	../server/bolo/bolo_validation03.cpp	/^struct sha256_vstate { uint64_t length; uint32_t state[8],curlen; uint8_t buf[64]; };$/;"	m	struct:sha256_vstate	file:
current_p_	../server/json/json_spirit_reader_template.h	/^        Value_type* current_p_;         \/\/ the child object or array that is currently being constructed$/;"	m	class:json_spirit::Semantic_actions
curtime	../stratum/stratum.h	/^  time_t curtime;$/;"	m	struct:task_t
dFeePriority	../server/txmempool.h	/^    double dFeePriority;$/;"	m	class:CPoolTx
dH	../server/algo/sph_bmw.c	595;"	d	file:
dH	../server/algo/sph_bmw.c	601;"	d	file:
dH	../server/algo/sph_bmw.c	743;"	d	file:
dH	../server/algo/sph_bmw.c	749;"	d	file:
dPriority	../server/txmempool.h	/^    double dPriority;$/;"	m	class:CPoolTx
data	../unet/unet.h	/^  void *data;$/;"	m	struct:uevent_t
dataTypeString	../server/txfeerate.h	/^    std::string dataTypeString;$/;"	m	class:TxConfirmStats
data_key	../blockchain/bc.h	/^  shkey_t data_key;$/;"	m	struct:bc_t
data_map	../blockchain/bc.h	/^  bc_map_t *data_map;$/;"	m	struct:bc_t
data_map_len	../blockchain/bc.h	/^  size_t data_map_len;$/;"	m	struct:bc_t
dbenv	../server/txidx.h	/^    DbEnv dbenv;$/;"	m	class:CDBEnv
dd_mutex	../server/sync.cpp	/^static boost::mutex dd_mutex;$/;"	v	file:
deallocate	../server/allocators.h	/^    void deallocate(T* p, std::size_t n)$/;"	f	struct:secure_allocator
deallocate	../server/allocators.h	/^    void deallocate(T* p, std::size_t n)$/;"	f	struct:zero_after_free_allocator
dec32e_aligned	../server/algo/sph_groestl.c	129;"	d	file:
dec32e_aligned	../server/algo/sph_groestl.c	87;"	d	file:
dec32e_aligned	../server/algo/sph_jh.c	74;"	d	file:
dec32e_aligned	../server/algo/sph_jh.c	93;"	d	file:
dec64e_aligned	../server/algo/sph_groestl.c	111;"	d	file:
dec64e_aligned	../server/algo/sph_groestl.c	146;"	d	file:
dec64e_aligned	../server/algo/sph_jh.c	86;"	d	file:
dec64e_aligned	../server/algo/sph_jh.c	97;"	d	file:
decay	../server/txfeerate.h	/^    double decay;$/;"	m	class:TxConfirmStats
def_max_block_size	../proto/coin_proto.h	/^  uint64_t def_max_block_size;$/;"	m	struct:coin_iface_t
def_min_relay_fee	../proto/coin_proto.h	/^  uint64_t def_min_relay_fee;$/;"	m	struct:coin_iface_t
definition	../server/json/json_spirit_reader_template.h	/^            definition( const Json_grammer& self )$/;"	f	class:json_spirit::Json_grammer::definition
definition	../server/json/json_spirit_reader_template.h	/^        class definition$/;"	c	class:json_spirit::Json_grammer
depth	../server/algo/blake2s.h	/^	uint8_t  depth;         \/\/ 4$/;"	m	struct:__blake2s_param
depth	../server/hdkey.h	/^    unsigned int depth;$/;"	m	class:HDPrivKey
depth	../server/hdkey.h	/^    unsigned int depth;$/;"	m	class:HDPubKey
derive	../server/hdkey.cpp	/^bool HDPrivKey::derive(HDPrivKey& privkey, cbuff pubkey, uint32_t i)$/;"	f	class:HDPrivKey
derive	../server/hdkey.cpp	/^bool HDPubKey::derive(HDPubKey& pubkey, unsigned int i)$/;"	f	class:HDPubKey
derive_cert_tx	../server/ext/certificate.cpp	/^int derive_cert_tx(CIface *iface, CWalletTx& wtx, const uint160& hChainCert, string strAccount, string strTitle, string hexSeed, int64 nLicenseFee)$/;"	f
difference_type	../server/allocators.h	/^    typedef typename base::difference_type  difference_type;$/;"	t	struct:secure_allocator
difference_type	../server/allocators.h	/^    typedef typename base::difference_type  difference_type;$/;"	t	struct:zero_after_free_allocator
difference_type	../server/serialize.h	/^    typedef vector_type::difference_type  difference_type;$/;"	t	class:CDataStream
digest_length	../server/algo/blake2s.h	/^	uint8_t  digest_length; \/\/ 1$/;"	m	struct:__blake2s_param
dikey_MergeKey	../server/dikey.cpp	/^static cbuff dikey_MergeKey(cbuff secret, cbuff tag)$/;"	f	file:
echo_big_close	../server/algo/sph_echo.c	/^echo_big_close(sph_echo_big_context *sc, unsigned ub, unsigned n,$/;"	f	file:
echo_big_compress	../server/algo/sph_echo.c	/^echo_big_compress(sph_echo_big_context *sc)$/;"	f	file:
echo_big_core	../server/algo/sph_echo.c	/^echo_big_core(sph_echo_big_context *sc,$/;"	f	file:
echo_big_init	../server/algo/sph_echo.c	/^echo_big_init(sph_echo_big_context *sc, unsigned out_len)$/;"	f	file:
echo_small_close	../server/algo/sph_echo.c	/^echo_small_close(sph_echo_small_context *sc, unsigned ub, unsigned n,$/;"	f	file:
echo_small_compress	../server/algo/sph_echo.c	/^echo_small_compress(sph_echo_small_context *sc)$/;"	f	file:
echo_small_core	../server/algo/sph_echo.c	/^echo_small_core(sph_echo_small_context *sc,$/;"	f	file:
echo_small_init	../server/algo/sph_echo.c	/^echo_small_init(sph_echo_small_context *sc, unsigned out_len)$/;"	f	file:
elements_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
emc2_AddOrphanBlock	../server/emc2/emc2_block.cpp	/^void emc2_AddOrphanBlock(CBlock *block)$/;"	f
emc2_CheckProofOfWork	../server/emc2/emc2_block.cpp	/^bool emc2_CheckProofOfWork(uint256 hash, unsigned int nBits)$/;"	f
emc2_ConnectInputs	../server/emc2/emc2_block.cpp	/^bool emc2_ConnectInputs(CTransaction *tx, MapPrevTx inputs, map<uint256, CTxIndex>& mapTestPool, const CDiskTxPos& posThisTx, const CBlockIndex* pindexBlock, bool fBlock, bool fMiner, bool fStrictPayToScriptHash=true)$/;"	f
emc2_CreateGenesisBlock	../server/emc2/emc2_block.cpp	/^bool emc2_CreateGenesisBlock()$/;"	f
emc2_CreateNewBlock	../server/emc2/emc2_block.cpp	/^CBlock* emc2_CreateNewBlock(const CPubKey& rkey)$/;"	f
emc2_DigiShield	../server/emc2/emc2_block.cpp	/^static unsigned int emc2_DigiShield(const CBlockIndex* pindexLast, const CBlockHeader *pblock)$/;"	f	file:
emc2_EraseFromWallets	../server/emc2/emc2_block.cpp	/^static void emc2_EraseFromWallets(uint256 hash)$/;"	f	file:
emc2_FillBlockIndex	../server/emc2/emc2_txidx.cpp	/^bool emc2_FillBlockIndex()$/;"	f
emc2_GetBlockValue	../server/emc2/emc2_block.cpp	/^int64 emc2_GetBlockValue(int nHeight, int64 nFees)$/;"	f
emc2_GetLastCheckpoint	../server/emc2/emc2_netmsg.cpp	/^CBlockIndex *emc2_GetLastCheckpoint()$/;"	f
emc2_GetMainAccountPubKey	../proto/emc2_proto.cpp	/^static CPubKey emc2_GetMainAccountPubKey(CWallet *wallet)$/;"	f	file:
emc2_GetOrphanBlock	../server/emc2/emc2_block.cpp	/^CBlock *emc2_GetOrphanBlock(const uint256& hash)$/;"	f
emc2_GetOrphanNextHash	../server/emc2/emc2_block.cpp	/^bool emc2_GetOrphanNextHash(const uint256& hash, uint256& retNextHash)$/;"	f
emc2_GetOrphanPrevHash	../server/emc2/emc2_block.cpp	/^bool emc2_GetOrphanPrevHash(const uint256& hash, uint256& retPrevHash)$/;"	f
emc2_GetOrphanRoot	../server/emc2/emc2_block.cpp	/^uint256 emc2_GetOrphanRoot(uint256 hash)$/;"	f
emc2_GetTxWeight	../server/emc2/emc2_block.cpp	/^static int64_t emc2_GetTxWeight(const CTransaction& tx)$/;"	f	file:
emc2_InitBlockIndex	../server/emc2/emc2_txidx.cpp	/^bool emc2_InitBlockIndex()$/;"	f
emc2_IsFromMe	../server/emc2/emc2_block.cpp	/^static bool emc2_IsFromMe(CTransaction& tx)$/;"	f	file:
emc2_IsOrphanBlock	../server/emc2/emc2_block.cpp	/^bool emc2_IsOrphanBlock(const uint256& hash)$/;"	f
emc2_IsSuperMajority	../server/emc2/emc2_block.cpp	/^static bool emc2_IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired)$/;"	f	file:
emc2_KimotoGravityWell	../server/emc2/emc2_block.cpp	/^static unsigned int emc2_KimotoGravityWell(const CBlockIndex* pindexLast, const CBlockHeader *pblock, uint64 TargetBlocksSpacingSeconds, uint64 PastBlocksMin, uint64 PastBlocksMax)$/;"	f	file:
emc2_LoadWallet	../server/emc2/emc2_wallet.cpp	/^bool emc2_LoadWallet(void)$/;"	f
emc2_ProcessBlock	../server/emc2/emc2_block.cpp	/^bool emc2_ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
emc2_ProcessGetHeaders	../server/emc2/emc2_netmsg.cpp	/^static void emc2_ProcessGetHeaders(CIface *iface, CNode *pfrom, CBlockLocator *locator, uint256 hashStop)$/;"	f	file:
emc2_ProcessMessage	../server/emc2/emc2_netmsg.cpp	/^bool emc2_ProcessMessage(CIface *iface, CNode* pfrom, string strCommand, CDataStream& vRecv)$/;"	f
emc2_ProcessMessages	../server/emc2/emc2_netmsg.cpp	/^bool emc2_ProcessMessages(CIface *iface, CNode* pfrom)$/;"	f
emc2_RemoveOrphanBlock	../server/emc2/emc2_block.cpp	/^void emc2_RemoveOrphanBlock(const uint256& hash)$/;"	f
emc2_RestoreBlockIndex	../server/emc2/emc2_txidx.cpp	/^bool emc2_RestoreBlockIndex()$/;"	f
emc2_SendMessages	../server/emc2/emc2_netmsg.cpp	/^bool emc2_SendMessages(CIface *iface, CNode* pto, bool fSendTrickle)$/;"	f
emc2_SetBestChainInner	../server/emc2/emc2_block.cpp	/^bool emc2_SetBestChainInner(CBlock *block, CTxDB& txdb, CBlockIndex *pindexNew)$/;"	f
emc2_Truncate	../server/emc2/emc2_block.cpp	/^bool emc2_Truncate(uint256 hash)$/;"	f
emc2_UpdatedTransaction	../server/emc2/emc2_block.cpp	/^static void emc2_UpdatedTransaction(const uint256& hashTx)$/;"	f	file:
emc2_bind	../proto/emc2_proto.cpp	/^static int emc2_bind(CIface *iface, void *_unused_)$/;"	f	file:
emc2_block_new	../proto/emc2_proto.cpp	/^static int emc2_block_new(CIface *iface, CBlock **block_p)$/;"	f	file:
emc2_block_process	../proto/emc2_proto.cpp	/^static int emc2_block_process(CIface *iface, CBlock *block)$/;"	f	file:
emc2_block_templ	../proto/emc2_proto.cpp	/^static int emc2_block_templ(CIface *iface, CBlock **block_p)$/;"	f	file:
emc2_coin_iface	../proto/emc2_proto.cpp	/^coin_iface_t emc2_coin_iface = {$/;"	v
emc2_generateMTRandom	../server/emc2/emc2_block.cpp	/^static int emc2_generateMTRandom(unsigned int s, int range)$/;"	f	file:
emc2_init	../proto/emc2_proto.cpp	/^static int emc2_init(CIface *iface, void *_unused_)$/;"	f	file:
emc2_msg_recv	../proto/emc2_proto.cpp	/^static int emc2_msg_recv(CIface *iface, CNode *pnode)$/;"	f	file:
emc2_msg_send	../proto/emc2_proto.cpp	/^static int emc2_msg_send(CIface *iface, CNode *pnode)$/;"	f	file:
emc2_nDiffChangeTarget	../server/emc2/emc2_block.cpp	/^static const int64 emc2_nDiffChangeTarget = 56000; \/\/ Patch effective @ block 56000$/;"	v	file:
emc2_nInterval	../server/emc2/emc2_block.cpp	/^static const int64 emc2_nInterval = emc2_nTargetTimespan \/ emc2_nTargetSpacing;$/;"	v	file:
emc2_nTargetSpacing	../server/emc2/emc2_block.cpp	/^static const int64 emc2_nTargetSpacing = 60; \/\/ Einsteinium: one minute$/;"	v	file:
emc2_nTargetTimespan	../server/emc2/emc2_block.cpp	/^static const int64 emc2_nTargetTimespan = 3.5 * 24 * 60 * 60; \/\/ Einsteinium: 3.5 days$/;"	v	file:
emc2_nTargetTimespanNEW	../server/emc2/emc2_block.cpp	/^static const int64 emc2_nTargetTimespanNEW = 60;$/;"	v	file:
emc2_peer_add	../proto/emc2_proto.cpp	/^static int emc2_peer_add(CIface *iface, void *arg)$/;"	f	file:
emc2_peer_recv	../proto/emc2_proto.cpp	/^static int emc2_peer_recv(CIface *iface, void *arg)$/;"	f	file:
emc2_seed_list	../unet/unet_seed.h	/^static char *emc2_seed_list[EMC2_SEED_LIST_SIZE] = {$/;"	v
emc2_term	../proto/emc2_proto.cpp	/^static int emc2_term(CIface *iface, void *_unused_)$/;"	f	file:
emc2_tx_new	../proto/emc2_proto.cpp	/^static int emc2_tx_new(CIface *iface, void *arg)$/;"	f	file:
emc2_tx_pool	../proto/emc2_proto.cpp	/^static int emc2_tx_pool(CIface *iface, CTxMemPool **pool_p)$/;"	f	file:
empty	../server/mruset.h	/^		bool empty() const { return set.empty(); }$/;"	f	class:mruset
empty	../server/serialize.h	/^    bool empty() const                               { return vch.size() == nReadPos; }$/;"	f	class:CDataStream
empty_wallet	../test/testcoin_coin.cpp	/^static void empty_wallet(void)$/;"	f	file:
emptyobj	../server/rpc/rpc_parse.cpp	/^const Object emptyobj;$/;"	v
enabled	../proto/coin_proto.h	/^  int enabled;$/;"	m	struct:coin_iface_t
enc32e	../server/algo/sph_groestl.c	130;"	d	file:
enc32e	../server/algo/sph_groestl.c	88;"	d	file:
enc32e	../server/algo/sph_jh.c	75;"	d	file:
enc32e	../server/algo/sph_jh.c	94;"	d	file:
enc64e	../server/algo/sph_groestl.c	112;"	d	file:
enc64e	../server/algo/sph_groestl.c	147;"	d	file:
enc64e	../server/algo/sph_jh.c	87;"	d	file:
enc64e	../server/algo/sph_jh.c	98;"	d	file:
encode_count_big	../server/algo/sph_simd.c	/^encode_count_big(unsigned char *dst,$/;"	f	file:
encode_count_small	../server/algo/sph_simd.c	/^encode_count_small(unsigned char *dst,$/;"	f	file:
end	../server/key.h	/^		const unsigned char* end() const { return vch.data() + size(); }$/;"	f	class:CKey
end	../server/key.h	/^		const unsigned char* end() const { return vchPubKey.data() + size(); }$/;"	f	class:CPubKey
end	../server/mruset.h	/^		iterator end() const { return set.end(); }$/;"	f	class:mruset
end	../server/serialize.h	/^    char* end() { return pend; }$/;"	f	class:CFlatData
end	../server/serialize.h	/^    const char* end() const { return pend; }$/;"	f	class:CFlatData
end	../server/serialize.h	/^    const_iterator end() const                       { return vch.end(); }$/;"	f	class:CDataStream
end	../server/serialize.h	/^    iterator end()                                   { return vch.end(); }$/;"	f	class:CDataStream
end	../server/uint256.h	/^    const unsigned char* end() const$/;"	f	class:base_uint
end	../server/uint256.h	/^    unsigned char* end()$/;"	f	class:base_uint
end_	../server/json/json_spirit_reader_template.h	/^        Mp_iter end_;$/;"	m	struct:json_spirit::Multi_pass_iters
end_array	../server/json/json_spirit_reader_template.h	/^        void end_array( Char_type c )$/;"	f	class:json_spirit::Semantic_actions
end_compound	../server/json/json_spirit_reader_template.h	/^        void end_compound()$/;"	f	class:json_spirit::Semantic_actions
end_obj	../server/json/json_spirit_reader_template.h	/^        void end_obj( Char_type c )$/;"	f	class:json_spirit::Semantic_actions
eof	../server/serialize.h	/^    bool eof() const             { return size() == 0; }$/;"	f	class:CDataStream
equal_sets	../test/testcoin_coin.cpp	/^static bool equal_sets(CoinSet a, CoinSet b)$/;"	f	file:
erase	../server/serialize.h	/^    iterator erase(iterator first, iterator last)$/;"	f	class:CDataStream
erase	../server/serialize.h	/^    iterator erase(iterator it)$/;"	f	class:CDataStream
errbuf	../stratum/stratum_sync.c	/^static char errbuf[1024];$/;"	v	file:
error	../server/util.cpp	/^bool error(int err_code, const char *pszFormat, ...)$/;"	f
estimateFee	../server/txfeerate.cpp	/^CFeeRate CBlockPolicyEstimator::estimateFee(int confTarget)$/;"	f	class:CBlockPolicyEstimator
estimatePriority	../server/txfeerate.cpp	/^double CBlockPolicyEstimator::estimatePriority(int confTarget)$/;"	f	class:CBlockPolicyEstimator
estimateSmartFee	../server/txfeerate.cpp	/^CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoundAtTarget)$/;"	f	class:CBlockPolicyEstimator
estimateSmartPriority	../server/txfeerate.cpp	/^double CBlockPolicyEstimator::estimateSmartPriority(int confTarget, int *answerFoundAtTarget)$/;"	f	class:CBlockPolicyEstimator
event_cycle_chain	../server/chain.cpp	/^void event_cycle_chain(int ifaceIndex)$/;"	f
event_table	../unet/unet_event.c	/^static uevent_t event_table[UNET_MAX_EVENTS];$/;"	v	file:
exceptions	../server/serialize.h	/^    short exceptions()           { return exceptmask; }$/;"	f	class:CAutoFile
exceptions	../server/serialize.h	/^    short exceptions()           { return exceptmask; }$/;"	f	class:CDataStream
exceptions	../server/serialize.h	/^    short exceptions(short mask) { short prev = exceptmask; exceptmask = mask; setstate(0, "CAutoFile"); return prev; }$/;"	f	class:CAutoFile
exceptions	../server/serialize.h	/^    short exceptions(short mask) { short prev = exceptmask; exceptmask = mask; setstate(0, "CDataStream"); return prev; }$/;"	f	class:CDataStream
exceptmask	../server/serialize.h	/^    short exceptmask;$/;"	m	class:CAutoFile
exceptmask	../server/serialize.h	/^    short exceptmask;$/;"	m	class:CDataStream
exec	../server/block.h	/^		CExecCore exec;$/;"	m	class:CTransaction
execFromOp	../server/ext/exec.cpp	/^string execFromOp(int op) {$/;"	f
exec_call_list	../server/ext/txext.h	/^typedef std::map< uint160, vector<uint160> > exec_call_list;$/;"	t
exec_call_param	../server/ext/exec.cpp	/^static shjson_t *exec_call_param(CIface *iface, CExec *exec, CExecCall *call)$/;"	f	file:
exec_label_list	../server/ext/txext.h	/^typedef std::map<std::string, uint160> exec_label_list;$/;"	t
exec_list	../server/ext/txext.h	/^typedef std::map<uint160, uint256> exec_list;$/;"	t
exec_write_base_object	../server/ext/exec.cpp	/^void exec_write_base_object(char *path)$/;"	f
exists	../server/txmempool.h	/^    bool exists(uint256 hash)$/;"	f	class:CTxMemPool
expand1b	../server/algo/sph_bmw.c	228;"	d	file:
expand1b	../server/algo/sph_bmw.c	266;"	d	file:
expand1b_	../server/algo/sph_bmw.c	268;"	d	file:
expand1b_inner	../server/algo/sph_bmw.c	256;"	d	file:
expand1s	../server/algo/sph_bmw.c	172;"	d	file:
expand1s_	../server/algo/sph_bmw.c	174;"	d	file:
expand1s_inner	../server/algo/sph_bmw.c	162;"	d	file:
expand2b	../server/algo/sph_bmw.c	239;"	d	file:
expand2b	../server/algo/sph_bmw.c	281;"	d	file:
expand2b_	../server/algo/sph_bmw.c	283;"	d	file:
expand2b_inner	../server/algo/sph_bmw.c	271;"	d	file:
expand2s	../server/algo/sph_bmw.c	187;"	d	file:
expand2s_	../server/algo/sph_bmw.c	189;"	d	file:
expand2s_inner	../server/algo/sph_bmw.c	177;"	d	file:
ext	../blockchain/bc.h	/^  char ext[64];$/;"	m	struct:bc_map_t
external_local_discover_html	../unet/unet_local.c	/^static int external_local_discover_html(char *serv_hostname, struct in_addr *net_addr)$/;"	f	file:
external_local_discover_raw	../unet/unet_local.c	/^static int external_local_discover_raw(char *serv_hostname, struct in_addr *net_addr)$/;"	f	file:
extra_count	../server/block_cmpct.h	/^		size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;$/;"	m	class:PartiallyDownloadedBlock
f	../server/algo/blake2s.h	/^	uint32_t f[2];$/;"	m	struct:__blake2s_state
fAccount	../server/txcreator.h	/^    bool fAccount;$/;"	m	class:CTxCreator
fAutoLock	../server/txcreator.h	/^		bool fAutoLock;$/;"	m	class:CTxCreator
fAutoParam	../server/txcreator.h	/^		bool fAutoParam;$/;"	m	class:CTxCreator
fAvailableCreditCached	../server/wallet.h	/^		mutable bool fAvailableCreditCached;$/;"	m	class:CWalletTx
fBad	../server/bloom.h	/^    bool fBad;$/;"	m	class:CPartialMerkleTree
fChangeCached	../server/wallet.h	/^		mutable bool fChangeCached;$/;"	m	class:CWalletTx
fClient	../server/net.h	/^    bool fClient;$/;"	m	class:CNode
fCommandLine	../server/util.cpp	/^bool fCommandLine = false;$/;"	v
fCommit	../server/wallet.h	/^		char fCommit; \/* committed to a block *\/$/;"	m	class:CWalletTx
fCompressedPubKey	../server/key.h	/^    bool fCompressedPubKey;$/;"	m	class:CKey
fCreditCached	../server/wallet.h	/^		mutable bool fCreditCached;$/;"	m	class:CWalletTx
fDaemon	../server/util.cpp	/^bool fDaemon = false;$/;"	v
fDbEnvInit	../server/txidx.h	/^    bool fDbEnvInit;$/;"	m	class:CDBEnv
fDebitCached	../server/wallet.h	/^		mutable bool fDebitCached;$/;"	m	class:CWalletTx
fDebug	../server/util.cpp	/^bool fDebug = false;$/;"	v
fDebugNet	../server/util.cpp	/^bool fDebugNet = false;$/;"	v
fDetachDB	../server/txidx.h	/^    bool fDetachDB;$/;"	m	class:CDBEnv
fDisconnect	../server/net.h	/^    bool fDisconnect;$/;"	m	class:CNode
fFromMe	../server/wallet.h	/^		char fFromMe;$/;"	m	class:CWalletTx
fGenerate	../server/txcreator.h	/^    bool fGenerate;$/;"	m	class:CTxCreator
fGetAddr	../server/net.h	/^    bool fGetAddr;$/;"	m	class:CNode
fHaveGrant	../server/sync.h	/^		bool fHaveGrant;$/;"	m	class:CSemaphoreGrant
fHaveUPnP	../server/main.h	/^static const int fHaveUPnP = false;$/;"	v
fHaveUPnP	../server/main.h	/^static const int fHaveUPnP = true;$/;"	v
fHaveWitness	../server/net.h	/^    bool fHaveWitness;$/;"	m	class:CNode
fHelp	../server/rpc/rpc_command.cpp	/^static bool fHelp = false;$/;"	v	file:
fHelp	../server/rpc/rpc_parse.cpp	/^static bool fHelp = false;$/;"	v	file:
fHelp	../server/rpc/rpcalias_proto.cpp	/^static bool fHelp = false;$/;"	v	file:
fHelp	../server/rpc/rpccert_proto.cpp	/^static bool fHelp = false;$/;"	v	file:
fHelp	../server/rpc/rpcdump.cpp	/^static bool fHelp = false;$/;"	v	file:
fHelp	../server/rpc/rpcexec_proto.cpp	/^static bool fHelp = false;$/;"	v	file:
fHelp	../server/rpc/rpcrawtransaction.cpp	/^static bool fHelp = false;$/;"	v	file:
fInTried	../server/addrman.h	/^    bool fInTried;$/;"	m	class:CAddrInfo
fInbound	../server/net.h	/^    bool fInbound;$/;"	m	class:CNode
fInbound	../server/net.h	/^    bool fInbound;$/;"	m	class:CNodeStats
fKeySet	../server/crypter.h	/^    bool fKeySet;$/;"	m	class:CCrypter
fLocal	../server/txmempool.h	/^    bool fLocal;$/;"	m	class:CPoolTx
fLogTimestamps	../server/util.cpp	/^bool fLogTimestamps = false;$/;"	v
fMerkleVerified	../server/main.h	/^    mutable bool fMerkleVerified;$/;"	m	class:CMerkleTx
fNameLookup	../server/netbase.cpp	/^bool fNameLookup = false;$/;"	v
fNetworkNode	../server/net.h	/^    bool fNetworkNode;$/;"	m	class:CNode
fNoListen	../server/util.cpp	/^bool fNoListen = false;$/;"	v
fPreferHeaders	../server/net.h	/^    bool fPreferHeaders;$/;"	m	class:CNode
fPubSet	../server/key.h	/^    bool fPubSet;$/;"	m	class:CKey
fReadOnly	../server/txidx.h	/^    bool fReadOnly;$/;"	m	class:CDB
fRelayTxes	../server/net.h	/^    bool fRelayTxes;$/;"	m	class:CNode
fReopenDebugLog	../server/util.cpp	/^bool fReopenDebugLog = false;$/;"	v
fRequestShutdown	../server/util.cpp	/^bool fRequestShutdown = false;$/;"	v
fServer	../server/util.cpp	/^bool fServer = false;$/;"	v
fShutdown	../server/util.cpp	/^bool fShutdown = false;$/;"	v
fSpent	../server/rpc/rpcdump.cpp	/^    bool fSpent;$/;"	m	class:CTxDump	file:
fSuccessfullyConnected	../server/net.h	/^    bool fSuccessfullyConnected;$/;"	m	class:CNode
fTestNet	../server/util.cpp	/^bool fTestNet = false;$/;"	v
fTimeReceivedIsTxTime	../server/wallet.h	/^		unsigned int fTimeReceivedIsTxTime;$/;"	m	class:CWalletTx
fWitness	../server/txcreator.h	/^    bool fWitness;$/;"	m	class:CTxCreator
f_blurb	../stratum/stratum_http.h	/^	http_f f_blurb;$/;"	m	struct:http_t
f_content	../stratum/stratum_http.h	/^	http_f f_content;$/;"	m	struct:http_t
fail	../server/serialize.h	/^    bool fail() const            { return state & (std::ios::badbit | std::ios::failbit); }$/;"	f	class:CAutoFile
fail	../server/serialize.h	/^    bool fail() const            { return state & (std::ios::badbit | std::ios::failbit); }$/;"	f	class:CDataStream
failCount	../test/CuTest.h	/^	int failCount;$/;"	m	struct:__anon17
failed	../test/CuTest.h	/^	int failed;$/;"	m	struct:CuTest
fanout	../server/algo/blake2s.h	/^	uint8_t  fanout;        \/\/ 3$/;"	m	struct:__blake2s_param
fclose	../server/serialize.h	/^    void fclose()$/;"	f	class:CAutoFile
fcntl	../server/color/color_block.cpp	48;"	d	file:
fcntl	../server/color/color_pool.cpp	46;"	d	file:
fcntl	../server/color/color_wallet.cpp	43;"	d	file:
fcntl	../server/emc2/emc2_block.cpp	46;"	d	file:
fcntl	../server/emc2/emc2_netmsg.cpp	45;"	d	file:
fcntl	../server/emc2/emc2_pool.cpp	48;"	d	file:
fcntl	../server/emc2/emc2_wallet.cpp	40;"	d	file:
fcntl	../server/ltc/ltc_block.cpp	47;"	d	file:
fcntl	../server/ltc/ltc_netmsg.cpp	45;"	d	file:
fcntl	../server/ltc/ltc_pool.cpp	49;"	d	file:
fcntl	../server/ltc/ltc_wallet.cpp	40;"	d	file:
fcntl	../server/netbase.cpp	36;"	d	file:
fcntl	../server/shc/shc_block.cpp	48;"	d	file:
fcntl	../server/shc/shc_netmsg.cpp	45;"	d	file:
fcntl	../server/shc/shc_pool.cpp	46;"	d	file:
fcntl	../server/shc/shc_wallet.cpp	45;"	d	file:
fcntl	../server/test/test_block.cpp	49;"	d	file:
fcntl	../server/test/test_pool.cpp	47;"	d	file:
fcntl	../server/test/test_wallet.cpp	40;"	d	file:
fcntl	../server/testnet/testnet_block.cpp	52;"	d	file:
fcntl	../server/testnet/testnet_netmsg.cpp	45;"	d	file:
fcntl	../server/testnet/testnet_pool.cpp	46;"	d	file:
fcntl	../server/testnet/testnet_wallet.cpp	44;"	d	file:
fcntl	../server/txfeerate.cpp	46;"	d	file:
fd	../blockchain/bc.h	/^  volatile int fd;$/;"	m	struct:bc_map_t
fd	../stratum/stratum.h	/^  int fd;$/;"	m	struct:user_t
fd	../unet/unet.h	/^  int fd;$/;"	m	struct:uevent_t
fd	../unet/unet.h	/^  int fd;$/;"	m	struct:unet_bind_t
feeLikely	../server/txfeerate.h	/^    CFeeRate feeLikely, feeUnlikely;$/;"	m	class:CBlockPolicyEstimator
feeStats	../server/txfeerate.h	/^    TxConfirmStats feeStats, priStats;$/;"	m	class:CBlockPolicyEstimator
feeUnlikely	../server/txfeerate.h	/^    CFeeRate feeLikely, feeUnlikely;$/;"	m	class:CBlockPolicyEstimator
feeset	../server/txfeerate.h	/^    std::set<double> feeset;$/;"	m	class:FeeFilterRounder
fft32	../server/algo/sph_simd.c	/^fft32(unsigned char *x, size_t xs, s32 *q)$/;"	f	file:
fft64	../server/algo/sph_simd.c	/^fft64(unsigned char *x, size_t xs, s32 *q)$/;"	f	file:
file	../server/serialize.h	/^    FILE* file;$/;"	m	class:CAutoFile
final_b	../server/algo/sph_bmw.c	/^static const sph_u64 final_b[16] = {$/;"	v	file:
final_s	../server/algo/sph_bmw.c	/^static const sph_u32 final_s[16] = {$/;"	v	file:
finalize_big	../server/algo/sph_simd.c	/^finalize_big(void *cc, unsigned ub, unsigned n, void *dst, size_t dst_len)$/;"	f	file:
finalize_small	../server/algo/sph_simd.c	/^finalize_small(void *cc, unsigned ub, unsigned n, void *dst, size_t dst_len)$/;"	f	file:
find	../server/mruset.h	/^		iterator find(const key_type& k) const { return set.find(k); }$/;"	f	class:mruset
find_value	../server/json/json_spirit_utils.h	/^    const typename Object_type::value_type::Value_type& find_value( const Object_type& obj, const String_type& name )$/;"	f	namespace:json_spirit
fl_timer	../unet/unet.h	/^	int fl_timer;$/;"	m	struct:unet_bind_t
flag	../stratum/stratum_http.h	/^	int flag;$/;"	m	struct:http_t
flag	../stratum/stratum_http.h	/^	int flag;$/;"	m	struct:httpreq_t
flag	../unet/unet.h	/^  int flag;$/;"	m	struct:uevent_t
flag	../unet/unet.h	/^  int flag;$/;"	m	struct:unet_bind_t
flags	../proto/coin_proto.h	/^  int flags;$/;"	m	struct:coin_iface_t
flags	../server/txmempool.h	/^    int flags;$/;"	m	class:CPoolTx
flags	../stratum/stratum.h	/^  int flags;$/;"	m	struct:task_attr_t
flags	../stratum/stratum.h	/^  int flags;$/;"	m	struct:user_t
fn	../server/net.h	/^    void (*fn)(void*, CDataStream&);$/;"	m	class:CRequestTracker
fractal_render	../fractal/fractal.c	/^int fractal_render(char *img_path, double in_seed, double zoom, double span, double x_of, double y_of)$/;"	f
fulltest	../test/testcoin_algo.cpp	/^static bool fulltest(const uint32_t *hash, const uint32_t *target)$/;"	f	file:
func	../stratum/stratum_command.c	/^	stratum_command_f func;$/;"	m	struct:stratum_command_t	file:
function	../test/CuTest.h	/^	TestFunction function;$/;"	m	struct:CuTest
g	../server/ext/altchain_color.c	/^	uint32_t g;$/;"	m	struct:rgb_t	file:
gbt_force	../server/versionbits.h	/^    bool gbt_force;$/;"	m	struct:BIP9DeploymentInfo
generate_channel_tx	../server/ext/channel.cpp	/^int generate_channel_tx(CIface *iface, uint160 hChan, CWalletTx& wtx)$/;"	f
generate_exec_tx	../server/ext/exec.cpp	/^int generate_exec_tx(CIface *iface, string strAccount, string strClass, int64 nFee, string strFunc, char **args, Value& resp, CWalletTx& wtx)$/;"	f
generate_offer_tx	../server/ext/offer.cpp	/^int generate_offer_tx(CIface *iface, string strAccount, uint160 hashOffer, CWalletTx& wtx)$/;"	f
geo	../server/ext/certificate.h	/^    shgeo_t geo;$/;"	m	class:CIdent
getInputCount	../server/txcreator.h	/^		int getInputCount()$/;"	f	class:CTxCreator
get_array	../server/json/json_spirit_value.h	/^    const typename Value_impl< Config >::Array& Value_impl< Config >::get_array() const$/;"	f	class:json_spirit::Value_impl
get_array	../server/json/json_spirit_value.h	/^    typename Value_impl< Config >::Array& Value_impl< Config >::get_array()$/;"	f	class:json_spirit::Value_impl
get_avg_balance	../stratum/stratum_http.c	/^static double get_avg_balance(int ifaceIndex)$/;"	f	file:
get_bool	../server/json/json_spirit_value.h	/^    bool Value_impl< Config >::get_bool() const$/;"	f	class:json_spirit::Value_impl
get_emc2_bind_port	../proto/emc2_proto.cpp	/^int get_emc2_bind_port(void)$/;"	f
get_exec_path	../server/rpc/rpcexec_proto.cpp	/^static const char *get_exec_path(CIface *iface, char *fname)$/;"	f	file:
get_int	../server/json/json_spirit_value.h	/^    int Value_impl< Config >::get_int() const$/;"	f	class:json_spirit::Value_impl
get_int64	../server/json/json_spirit_value.h	/^    boost::int64_t Value_impl< Config >::get_int64() const$/;"	f	class:json_spirit::Value_impl
get_name	../server/json/json_spirit_value.h	/^        static String_type get_name( const Pair_type& pair )$/;"	f	struct:json_spirit::Config_map
get_name	../server/json/json_spirit_value.h	/^        static String_type get_name( const Pair_type& pair )$/;"	f	struct:json_spirit::Config_vector
get_obj	../server/json/json_spirit_value.h	/^    const typename Value_impl< Config >::Object& Value_impl< Config >::get_obj() const$/;"	f	class:json_spirit::Value_impl
get_obj	../server/json/json_spirit_value.h	/^    typename Value_impl< Config >::Object& Value_impl< Config >::get_obj()$/;"	f	class:json_spirit::Value_impl
get_private_key_hash	../stratum/stratum_api.cpp	/^static uint256 get_private_key_hash(CWallet *wallet, CKeyID keyId)$/;"	f	file:
get_real	../server/json/json_spirit_value.h	/^    double Value_impl< Config >::get_real() const$/;"	f	class:json_spirit::Value_impl
get_str	../server/json/json_spirit_reader_template.h	/^    String_type get_str( Iter_type begin, Iter_type end )$/;"	f	namespace:json_spirit
get_str	../server/json/json_spirit_reader_template.h	/^    inline std::string get_str( std::string::const_iterator begin, std::string::const_iterator end )$/;"	f	namespace:json_spirit
get_str	../server/json/json_spirit_reader_template.h	/^    inline std::wstring get_str( std::wstring::const_iterator begin, std::wstring::const_iterator end )$/;"	f	namespace:json_spirit
get_str	../server/json/json_spirit_value.h	/^    const typename Config::String_type& Value_impl< Config >::get_str() const$/;"	f	class:json_spirit::Value_impl
get_str_	../server/json/json_spirit_reader_template.h	/^    String_type get_str_( typename String_type::const_iterator begin, $/;"	f	namespace:json_spirit
get_stratum_miner_block	../stratum/stratum_miner.cpp	/^CBlockIndex *get_stratum_miner_block(int ifaceIndex, uint256 hBlock)$/;"	f
get_stratum_miner_blocks	../stratum/stratum_miner.cpp	/^vector<CBlockIndex *> get_stratum_miner_blocks(int ifaceIndex)$/;"	f
get_stratum_port	../stratum/stratum.c	/^int get_stratum_port(int alg)$/;"	f
get_uint64	../server/json/json_spirit_value.h	/^    boost::uint64_t Value_impl< Config >::get_uint64() const$/;"	f	class:json_spirit::Value_impl
get_unet_table	../unet/unet_accept.c	/^unet_table_t *get_unet_table(unsigned int sk)$/;"	f
get_user_flag_label	../stratum/stratum_user.c	/^const char *get_user_flag_label(int flag)$/;"	f
get_value	../server/json/json_spirit_value.h	/^        bool get_value( const Value& value, Type_to_type< bool > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        boost::int64_t get_value( const Value& value, Type_to_type< boost::int64_t > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        boost::uint64_t get_value( const Value& value, Type_to_type< boost::uint64_t > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        double get_value( const Value& value, Type_to_type< double > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        int get_value( const Value& value, Type_to_type< int > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        static Value_type get_value( const Pair_type& pair )$/;"	f	struct:json_spirit::Config_map
get_value	../server/json/json_spirit_value.h	/^        static Value_type get_value( const Pair_type& pair )$/;"	f	struct:json_spirit::Config_vector
get_value	../server/json/json_spirit_value.h	/^        typename Value::Array get_value( const Value& value, Type_to_type< typename Value::Array > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        typename Value::Object get_value( const Value& value, Type_to_type< typename Value::Object > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^        typename Value::String_type get_value( const Value& value, Type_to_type< typename Value::String_type > )$/;"	f	namespace:json_spirit::internal_
get_value	../server/json/json_spirit_value.h	/^    T Value_impl< Config >::get_value() const$/;"	f	class:json_spirit::Value_impl
getint	../server/bignum.h	/^    int getint() const$/;"	f	class:CBigNum
getint	../server/script.h	/^    int getint() const$/;"	f	class:CScriptNum
getminingroundsinfo	../stratum/stratum_protocol.c	/^shjson_t *getminingroundsinfo(void)$/;"	f
getpagesize	../blockchain/bc.h	43;"	d
getuint	../server/bignum.h	/^    unsigned int getuint() const$/;"	f	class:CBigNum
getuint256	../server/bignum.h	/^    uint256 getuint256()$/;"	f	class:CBigNum
getulong	../server/bignum.h	/^    unsigned long getulong() const$/;"	f	class:CBigNum
getvch	../server/bignum.h	/^    std::vector<unsigned char> getvch() const$/;"	f	class:CBigNum
getvch	../server/script.h	/^    std::vector<unsigned char> getvch() const$/;"	f	class:CScriptNum
good	../server/serialize.h	/^    bool good() const            { return !eof() && (state == 0); }$/;"	f	class:CDataStream
good	../server/serialize.h	/^    bool good() const            { return state == 0; }$/;"	f	class:CAutoFile
grantOutbound	../server/net.h	/^    CSemaphoreGrant grantOutbound;$/;"	m	class:CNode
groestl_big_close	../server/algo/sph_groestl.c	/^groestl_big_close(sph_groestl_big_context *sc,$/;"	f	file:
groestl_big_core	../server/algo/sph_groestl.c	/^groestl_big_core(sph_groestl_big_context *sc, const void *data, size_t len)$/;"	f	file:
groestl_big_init	../server/algo/sph_groestl.c	/^groestl_big_init(sph_groestl_big_context *sc, unsigned out_size)$/;"	f	file:
groestl_small_close	../server/algo/sph_groestl.c	/^groestl_small_close(sph_groestl_small_context *sc,$/;"	f	file:
groestl_small_core	../server/algo/sph_groestl.c	/^groestl_small_core(sph_groestl_small_context *sc, const void *data, size_t len)$/;"	f	file:
groestl_small_init	../server/algo/sph_groestl.c	/^groestl_small_init(sph_groestl_small_context *sc, unsigned out_size)$/;"	f	file:
groestlhash	../server/algo/groestl.c	/^void groestlhash(void *output, const void *input)$/;"	f
h	../server/algo/blake2s.h	/^	uint32_t h[8];$/;"	m	struct:__blake2s_state
h	../server/algo/sph_shavite.h	/^	sph_u32 h[16];$/;"	m	struct:__anon41
h	../server/algo/sph_shavite.h	/^	sph_u32 h[8];$/;"	m	struct:__anon40
h	../stratum/stratum_http.h	/^	http_t *h;$/;"	m	struct:httpreq_t
h0	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h1	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h2	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h3	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h4	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h5	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h6	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
h7	../server/algo/sph_skein.h	/^	sph_u64 h0, h1, h2, h3, h4, h5, h6, h7;$/;"	m	struct:__anon44
hCert	../server/wallet.h	/^		uint160 hCert;$/;"	m	class:CAccount
hChain	../server/ext/offer.h	/^    uint256 hChain;$/;"	m	class:COffer
hColor	../server/block.h	/^		uint160 hColor;$/;"	m	class:CBlock
hColor	../server/ext/altchain.h	/^		uint160 hColor;$/;"	m	class:CAltChain
hColor	../server/txmempool.h	/^		uint160 hColor;$/;"	m	class:CPoolTx
hColor	../server/wallet.h	/^		uint160 hColor; \/* COLOR_COIN_IFACE *\/$/;"	m	class:CWalletTx
hData	../server/ext/exec.h	/^		uint256 hData;$/;"	m	class:CExecCore
hExec	../server/ext/exec.h	/^		uint160 hExec;$/;"	m	class:CExecCore
hNotaryBlock	../server/checkpoints.h	/^		uint256 hNotaryBlock;$/;"	m	class:CCheckpoints
hNotaryHeight	../server/checkpoints.h	/^		uint32_t hNotaryHeight;$/;"	m	class:CCheckpoints
hPayTx	../server/ext/offer.h	/^		uint256 hPayTx;$/;"	m	class:COffer
hPrev	../server/ext/exec.h	/^		uint160 hPrev;$/;"	m	class:CExecCore
hRedeem	../server/ext/channel.h	/^    uint160 hRedeem;$/;"	m	class:CChannel
hRef	../server/matrix.h	/^    uint160 hRef;$/;"	m	class:CTxMatrix
hResult	../server/ext/exec.h	/^		uint64 hResult; $/;"	m	class:CExecCore
hSinkOut	../server/ext/offer.h	/^		unsigned int hSinkOut;$/;"	m	class:COffer
hSinkTx	../server/ext/offer.h	/^		uint256 hSinkTx;$/;"	m	class:COffer
hSocket	../server/net.h	/^    unsigned int hSocket;$/;"	m	class:CNode
hXferTx	../server/ext/offer.h	/^		uint256 hXferTx;$/;"	m	class:COffer
hasGenesisRoot	../server/color/color_txidx.cpp	/^static bool hasGenesisRoot(CBlockIndex *pindexBest)$/;"	f	file:
hasGenesisRoot	../server/emc2/emc2_txidx.cpp	/^static bool hasGenesisRoot(CBlockIndex *pindexBest)$/;"	f	file:
hasGenesisRoot	../server/ltc/ltc_txidx.cpp	/^static bool hasGenesisRoot(CBlockIndex *pindexBest)$/;"	f	file:
hasGenesisRoot	../server/shc/shc_txidx.cpp	/^static bool hasGenesisRoot(CBlockIndex *pindexBest)$/;"	f	file:
hasGenesisRoot	../server/testnet/testnet_txidx.cpp	/^static bool hasGenesisRoot(CBlockIndex *pindexBest)$/;"	f	file:
hash	../blockchain/bc.h	/^  bc_hash_t hash;$/;"	m	struct:bc_idx_t
hash	../server/block.h	/^    uint256 hash;$/;"	m	class:COutPoint
hash	../server/net.h	/^		uint256 hash;$/;"	m	class:CValidateState
hash	../server/protocol.h	/^		uint256 hash;$/;"	m	class:CInv
hash	../server/txmempool.h	/^    uint256 hash;$/;"	m	class:CPoolTx
hashBlock	../server/block.h	/^    mutable uint256 hashBlock;$/;"	m	class:CDiskTxPos
hashBlock	../server/main.h	/^    uint256 hashBlock;$/;"	m	class:CMerkleTx
hashColor	../server/ext/offer.h	/^		uint160 hashColor;$/;"	m	class:COffer
hashContinue	../server/net.h	/^    uint256 hashContinue;$/;"	m	class:CNode
hashIssuer	../server/ext/certificate.h	/^    uint160 hashIssuer;$/;"	m	class:CCert
hashLastGetBlocksEnd	../server/net.h	/^    uint256 hashLastGetBlocksEnd;$/;"	m	class:CNode
hashLastUnknownBlock	../server/net.h	/^		uint256 hashLastUnknownBlock;$/;"	m	class:CNode
hashMerkleRoot	../server/block.h	/^    uint256 hashMerkleRoot;$/;"	m	class:CBlockHeader
hashMerkleRoot	../server/block.h	/^    uint256 hashMerkleRoot;$/;"	m	class:CBlockIndex
hashMerkleRoot	../server/ext/altchain.h	/^		uint256 hashMerkleRoot;$/;"	m	class:CAltBlock
hashNext	../server/block.h	/^    uint256 hashNext;$/;"	m	class:CDiskBlockIndex
hashOffer	../server/ext/offer.h	/^    uint160 hashOffer;$/;"	m	class:COffer
hashPrev	../server/block.h	/^    uint256 hashPrev;$/;"	m	class:CDiskBlockIndex
hashPrevBlock	../server/block.h	/^    uint256 hashPrevBlock;$/;"	m	class:CBlockHeader
hashPrevBlock	../server/ext/altchain.h	/^		uint256 hashPrevBlock;$/;"	m	class:CAltBlock
hashTx	../server/block.h	/^    mutable uint256 hashTx;$/;"	m	class:CDiskTxPos
hdKeypath	../server/key.h	/^		std::string hdKeypath; \/\/optional HD\/bip32 keypath$/;"	m	class:CKeyMetadata
hdMasterKeyID	../server/key.h	/^		CKeyID hdMasterKeyID; \/\/id of the HD masterkey used to derive this key$/;"	m	class:CKeyMetadata
hdpubkey	../server/ext/channel.h	/^    cbuff hdpubkey;$/;"	m	class:CChannelKey
hdr	../blockchain/bc.h	/^  bc_hdr_t *hdr;$/;"	m	struct:bc_map_t
hdr_magic	../proto/coin_proto.h	/^  unsigned char hdr_magic[4];$/;"	m	struct:coin_iface_t
header	../server/block_cmpct.h	/^		CBlockHeader header;$/;"	m	class:CBlockHeaderAndShortTxIDs
header	../server/block_cmpct.h	/^		CBlockHeader header;$/;"	m	class:PartiallyDownloadedBlock
header	../server/bloom.h	/^    CBlockHeader header;$/;"	m	class:CMerkleBlock
height	../stratum/stratum.h	/^  int height;$/;"	m	struct:user_t
height	../stratum/stratum.h	/^  long height;$/;"	m	struct:task_t
hex_str_to_char	../server/json/json_spirit_reader_template.h	/^    Char_type hex_str_to_char( Iter_type& begin )$/;"	f	namespace:json_spirit
hex_to_num	../server/json/json_spirit_reader_template.h	/^    Char_type hex_to_num( const Char_type c )$/;"	f	namespace:json_spirit
high	../server/algo/sph_keccak.c	/^	sph_u32 high, low;$/;"	m	struct:__anon34	file:
http_alias_blurb	../stratum/http/http_alias.c	/^void http_alias_blurb(httpreq_t *req)$/;"	f
http_alias_content	../stratum/http/http_alias.c	/^void http_alias_content(httpreq_t *req)$/;"	f
http_alias_list	../stratum/http/http_alias.c	/^void http_alias_list(httpreq_t *req)$/;"	f
http_coin_blurb	../stratum/http/http_coin.c	/^void http_coin_blurb(httpreq_t *req)$/;"	f
http_coin_content	../stratum/http/http_coin.c	/^void http_coin_content(httpreq_t *req)$/;"	f
http_coin_iface_blurb	../stratum/http/http_coin.c	/^void http_coin_iface_blurb(httpreq_t *req, int ifaceIndex)$/;"	f
http_context_blurb	../stratum/http/http_context.c	/^void http_context_blurb(httpreq_t *req)$/;"	f
http_context_content	../stratum/http/http_context.c	/^void http_context_content(httpreq_t *req)$/;"	f
http_context_list	../stratum/http/http_context.c	/^void http_context_list(httpreq_t *req)$/;"	f
http_f	../stratum/stratum_http.h	/^typedef void (*http_f)(struct httpreq_t *);$/;"	t
http_fractal_cb	../stratum/http/http_fractal.c	/^void http_fractal_cb(httpreq_t *req)$/;"	f
http_fractal_spring_cb	../stratum/http/http_fractal.c	/^void http_fractal_spring_cb(httpreq_t *req)$/;"	f
http_fractal_validate_cb	../stratum/http/http_fractal.c	/^void http_fractal_validate_cb(httpreq_t *req)$/;"	f
http_matrix_blurb	../stratum/http/http_matrix.c	/^void http_matrix_blurb(httpreq_t *req, const char *tag)$/;"	f
http_matrix_content	../stratum/http/http_matrix.c	/^void http_matrix_content(httpreq_t *req, const char *tag)$/;"	f
http_matrix_spring_blurb	../stratum/http/http_matrix.c	/^void http_matrix_spring_blurb(httpreq_t *req)$/;"	f
http_matrix_spring_content	../stratum/http/http_matrix.c	/^void http_matrix_spring_content(httpreq_t *req)$/;"	f
http_matrix_validate_blurb	../stratum/http/http_matrix.c	/^void http_matrix_validate_blurb(httpreq_t *req)$/;"	f
http_matrix_validate_content	../stratum/http/http_matrix.c	/^void http_matrix_validate_content(httpreq_t *req)$/;"	f
http_pool_blurb	../stratum/http/http_pool.c	/^void http_pool_blurb(httpreq_t *req)$/;"	f
http_pool_content	../stratum/http/http_pool.c	/^void http_pool_content(httpreq_t *req)$/;"	f
http_print_values	../stratum/http/http.c	/^void http_print_values(shjson_t *obj, shbuf_t *buff)$/;"	f
http_t	../stratum/stratum_http.h	/^typedef struct http_t {$/;"	s
http_t	../stratum/stratum_http.h	/^} http_t;$/;"	t	typeref:struct:http_t
http_table	../stratum/stratum_http.c	/^http_t http_table[] = {$/;"	v
httpreq_t	../stratum/stratum_http.h	/^typedef struct httpreq_t {$/;"	s
httpreq_t	../stratum/stratum_http.h	/^} httpreq_t;$/;"	t	typeref:struct:httpreq_t
i	../server/wallet.h	/^		int i;$/;"	m	class:COutput
i64tostr	../server/util.h	/^inline std::string i64tostr(int64 n)$/;"	f
ictx	../server/algo/scrypt.c	/^	SHA256_CTX ictx;$/;"	m	struct:HMAC_SHA256Context	file:
id	../server/rpc/rpc_parse.cpp	/^    Value id;$/;"	m	class:JSONRequest	file:
id	../server/versionbits.cpp	/^      const DeploymentPos id;$/;"	m	class:__anon15::VersionBitsConditionChecker	file:
idx_map	../blockchain/bc.h	/^  bc_map_t idx_map;$/;"	m	struct:bc_t
iface	../server/rpc/rpc_parse.cpp	/^    CIface *iface;$/;"	m	class:JSONRequest	file:
ifaceIndex	../server/block.h	/^    mutable int ifaceIndex;$/;"	m	class:CBlockHeader
ifaceIndex	../server/chain.h	/^  int ifaceIndex;$/;"	m	struct:ChainOp
ifaceIndex	../server/checkpoints.h	/^		int ifaceIndex;$/;"	m	class:CCheckpoints
ifaceIndex	../server/coinaddr.h	/^    int ifaceIndex;$/;"	m	class:CCoinAddr
ifaceIndex	../server/net.h	/^		int ifaceIndex;$/;"	m	class:CValidateState
ifaceIndex	../server/net.h	/^    int ifaceIndex;$/;"	m	class:CBloomFilter
ifaceIndex	../server/net.h	/^    mutable int ifaceIndex;$/;"	m	class:CNode
ifaceIndex	../server/protocol.h	/^		mutable int ifaceIndex;$/;"	m	class:CInv
ifaceIndex	../server/protocol.h	/^		mutable int ifaceIndex;$/;"	m	class:CMessageHeader
ifaceIndex	../server/txfeerate.h	/^    int ifaceIndex;$/;"	m	class:CBlockPolicyEstimator
ifaceIndex	../server/txidx.h	/^    mutable int ifaceIndex;$/;"	m	class:CTxDB
ifaceIndex	../server/txmempool.h	/^    int ifaceIndex;$/;"	m	class:CPool
ifaceIndex	../server/txsignature.h	/^    int ifaceIndex;$/;"	m	class:CSignature
ifaceIndex	../server/wallet.h	/^		int ifaceIndex;$/;"	m	class:CWallet
ifaceIndex	../stratum/stratum.h	/^  int ifaceIndex;$/;"	m	struct:task_attr_t
ifaceIndex	../stratum/stratum.h	/^  int ifaceIndex;$/;"	m	struct:task_t
ifaceIndex	../stratum/stratum.h	/^  int ifaceIndex;$/;"	m	struct:user_t
ignore	../server/serialize.h	/^    CDataStream& ignore(int nSize)$/;"	f	class:CDataStream
iguana_merkle	../server/bolo/bolo_validation03.cpp	/^static bits256 iguana_merkle(bits256 *tree,int32_t txn_count)$/;"	f	file:
iguana_rwbignum	../server/bolo/bolo_validation03.cpp	/^int32_t iguana_rwbignum(int32_t rwflag,uint8_t *serialized,int32_t len,uint8_t *endianedp)$/;"	f
iguana_rwnum	../server/bolo/bolo_validation03.cpp	/^int32_t iguana_rwnum(int32_t rwflag,uint8_t *serialized,int32_t len,void *endianedp)$/;"	f
in_avail	../server/serialize.h	/^    int in_avail()               { return size(); }$/;"	f	class:CDataStream
indent	../server/json/json_spirit_writer_template.h	/^        void indent()$/;"	f	class:json_spirit::Generator
indentation_level_	../server/json/json_spirit_writer_template.h	/^        int indentation_level_;$/;"	m	class:json_spirit::Generator
index	../server/block_cmpct.h	/^	uint16_t index;$/;"	m	struct:PrefilledTransaction
index	../server/hdkey.h	/^    unsigned int index;$/;"	m	class:HDPrivKey
index	../server/hdkey.h	/^    unsigned int index;$/;"	m	class:HDPubKey
index_of	../server/mnemonic.cpp	/^size_t index_of(const string& word)$/;"	f
indexes	../server/block_cmpct.h	/^		std::vector<uint16_t> indexes;$/;"	m	class:BlockTransactionsRequest
init_alias_addr_tx	../server/ext/alias.cpp	/^int init_alias_addr_tx(CIface *iface, const char *title, CCoinAddr& addr, CWalletTx& wtx)$/;"	f
init_altchain_tx	../server/ext/altchain.cpp	/^int init_altchain_tx(CIface *iface, string strAccount, uint160 hColor, color_opt& opt, CWalletTx& wtx)$/;"	f
init_asset_tx	../server/ext/asset.cpp	/^int init_asset_tx(CIface *iface, string strAccount, uint160 hashCert, string strTitle, string strHash, CWalletTx& wtx)$/;"	f
init_big	../server/algo/sph_simd.c	/^init_big(void *cc, const u32 *iv)$/;"	f	file:
init_cert_tx	../server/ext/certificate.cpp	/^int init_cert_tx(CIface *iface, CWalletTx& wtx, string strAccount, string strTitle, string hexSeed, int64 nLicenseFee)$/;"	f
init_channel_tx	../server/ext/channel.cpp	/^int init_channel_tx(CIface *iface, string strAccount, int64 nValue, CCoinAddr& rem_addr, CWalletTx& wtx)$/;"	f
init_ctx_tx	../server/ext/context.cpp	/^int init_ctx_tx(CIface *iface, CWalletTx& wtx, string strAccount, string strName, cbuff vchValue, shgeo_t *loc, bool fAddr)$/;"	f
init_exec_tx	../server/ext/exec.cpp	/^int init_exec_tx(CIface *iface, string strAccount, string strPath, CWalletTx& wtx)$/;"	f
init_ident_certcoin_tx	../server/ext/certificate.cpp	/^int init_ident_certcoin_tx(CIface *iface, string strAccount, uint64_t nValue, uint160 hashCert, CCoinAddr addrDest, CWalletTx& wtx)$/;"	f
init_ident_donate_tx	../server/ext/certificate.cpp	/^int init_ident_donate_tx(CIface *iface, string strAccount, uint64_t nValue, uint160 hashCert, CWalletTx& wtx)$/;"	f
init_ident_stamp_tx	../server/ext/certificate.cpp	/^int init_ident_stamp_tx(CIface *iface, std::string strAccount, std::string strComment, CWalletTx& wtx)$/;"	f
init_license_tx	../server/ext/certificate.cpp	/^int init_license_tx(CIface *iface, string strAccount, uint160 hashCert, CWalletTx& wtx)$/;"	f
init_offer_tx	../server/ext/offer.cpp	/^int init_offer_tx(CIface *iface, std::string strAccount, int altIndex, int64 nMinValue, int64 nMaxValue, double dRate, CWalletTx& wtx, uint160 hColor)$/;"	f
init_small	../server/algo/sph_simd.c	/^init_small(void *cc, const u32 *iv)$/;"	f	file:
inline	../server/algo/blake2s.h	22;"	d
inner	../server/algo/hmac_sha512.h	/^    CSHA512 inner;$/;"	m	class:CHMAC_SHA512
inner_length	../server/algo/blake2s.h	/^	uint8_t  inner_length;  \/\/ 16$/;"	m	struct:__blake2s_param
input	../server/util.h	/^    void input(T value)$/;"	f	class:CMedianFilter
insert	../server/bloom.cpp	/^void CBloomFilter::insert(const COutPoint& outpoint)$/;"	f	class:CBloomFilter
insert	../server/bloom.cpp	/^void CBloomFilter::insert(const uint160& hash)$/;"	f	class:CBloomFilter
insert	../server/bloom.cpp	/^void CBloomFilter::insert(const uint256& hash)$/;"	f	class:CBloomFilter
insert	../server/bloom.cpp	/^void CBloomFilter::insert(const vector<unsigned char>& vKey)$/;"	f	class:CBloomFilter
insert	../server/mruset.h	/^		std::pair<iterator, bool> insert(const key_type& x)$/;"	f	class:mruset
insert	../server/serialize.h	/^    iterator insert(iterator it, const char& x=char()) { return vch.insert(it, x); }$/;"	f	class:CDataStream
insert	../server/serialize.h	/^    void insert(iterator it, const char* first, const char* last)$/;"	f	class:CDataStream
insert	../server/serialize.h	/^    void insert(iterator it, const_iterator first, const_iterator last)$/;"	f	class:CDataStream
insert	../server/serialize.h	/^    void insert(iterator it, size_type n, const char& x) { vch.insert(it, n, x); }$/;"	f	class:CDataStream
insert	../server/serialize.h	/^    void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)$/;"	f	class:CDataStream
instance_of_cinit	../server/util.cpp	/^instance_of_cinit;$/;"	v	typeref:class:CInit
int64	../proto/types.h	/^typedef long long  int64;$/;"	t
int64	../server/uint256.h	/^typedef long long  int64;$/;"	t
int64_p	../server/json/json_spirit_reader_template.h	/^    const spirit_namespace::int_parser < boost::int64_t >  int64_p  = spirit_namespace::int_parser < boost::int64_t  >();$/;"	m	namespace:json_spirit
int_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
internal_	../server/json/json_spirit_value.h	/^    namespace internal_$/;"	n	namespace:json_spirit
inval	../server/txmempool.h	/^    set<uint256> inval;$/;"	m	class:CPool
ip	../server/netbase.h	/^    unsigned char ip[16]; \/\/ in network byte order$/;"	m	class:CNetAddr
ipaddr_index	../unet/unet_local.c	/^static int ipaddr_index;$/;"	v	file:
ipaddr_table	../unet/unet_local.c	/^static char *ipaddr_table[MAX_IPADDR_TABLE_SIZE];$/;"	v	file:
isAutoLock	../server/txcreator.h	/^		bool isAutoLock()$/;"	f	class:CTxCreator
isAutoParam	../server/txcreator.h	/^		bool isAutoParam()$/;"	f	class:CTxCreator
isEmpty	../server/net.h	/^    bool isEmpty;$/;"	m	class:CBloomFilter
isExtOp	../server/script.cpp	/^bool isExtOp(opcodetype opcode)$/;"	f
isFeeDataPoint	../server/txfeerate.cpp	/^bool CBlockPolicyEstimator::isFeeDataPoint(const CFeeRate &fee, double pri)$/;"	f	class:CBlockPolicyEstimator
isFlag	../server/block.h	/^    bool isFlag(unsigned int flag) const$/;"	f	class:CTransactionCore
isFull	../server/net.h	/^    bool isFull;$/;"	m	class:CBloomFilter
isLocal	../server/txmempool.h	/^    bool isLocal()$/;"	f	class:CPoolTx
isPriDataPoint	../server/txfeerate.cpp	/^bool CBlockPolicyEstimator::isPriDataPoint(const CFeeRate &fee, double pri)$/;"	f	class:CBlockPolicyEstimator
is_eq	../server/json/json_spirit_reader_template.h	/^    bool is_eq( Iter_type first, Iter_type last, const char* c_str )$/;"	f	namespace:json_spirit
is_null	../server/json/json_spirit_value.h	/^    bool Value_impl< Config >::is_null() const$/;"	f	class:json_spirit::Value_impl
is_numeric	../server/rpc/rpccontext_proto.cpp	/^static bool is_numeric(const std::string& s)$/;"	f	file:
is_spring_loc	../server/spring.c	/^int is_spring_loc(double lat, double lon)$/;"	f
is_stratum_blake2s_task_pending	../stratum/stratum_blake2s.c	/^static int is_stratum_blake2s_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_groestl_task_pending	../stratum/stratum_groestl.c	/^static int is_stratum_groestl_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_keccak_task_pending	../stratum/stratum_keccak.c	/^static int is_stratum_keccak_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_miner_algo	../stratum/stratum_miner.cpp	/^int is_stratum_miner_algo(int ifaceIndex, int nAlg)$/;"	f
is_stratum_qubit_task_pending	../stratum/stratum_qubit.c	/^static int is_stratum_qubit_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_sha256d_task_pending	../stratum/stratum_sha256d.c	/^static int is_stratum_sha256d_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_skein_task_pending	../stratum/stratum_skein.c	/^static int is_stratum_skein_task_pending(int *ret_iface)$/;"	f	file:
is_stratum_task_pending	../stratum/stratum_task.c	/^int is_stratum_task_pending(int *ret_iface)$/;"	f
is_stratum_x11_task_pending	../stratum/stratum_x11.c	/^static int is_stratum_x11_task_pending(int *ret_iface)$/;"	f	file:
is_uint64	../server/json/json_spirit_value.h	/^    bool Value_impl< Config >::is_uint64() const$/;"	f	class:json_spirit::Value_impl
is_uint64_	../server/json/json_spirit_value.h	/^        bool is_uint64_;$/;"	m	class:json_spirit::Value_impl
istream_iter	../server/json/json_spirit_reader_template.h	/^        typedef std::istream_iterator< Char_type, Char_type > istream_iter;$/;"	t	struct:json_spirit::Multi_pass_iters
iterator	../server/mruset.h	/^		typedef typename std::set<T>::iterator iterator;$/;"	t	class:mruset
iterator	../server/serialize.h	/^    typedef vector_type::iterator         iterator;$/;"	t	class:CDataStream
iteroptions	../server/leveldb.h	/^    leveldb::ReadOptions iteroptions;$/;"	m	class:CLevelDB
iters_	../server/json/json_spirit_stream_reader.h	/^        Mp_iters iters_;$/;"	m	class:json_spirit::Stream_reader
iters_	../server/json/json_spirit_stream_reader.h	/^        Mp_iters iters_;$/;"	m	class:json_spirit::Stream_reader_thrower
itostr	../server/util.h	/^inline std::string itostr(int n)$/;"	f
jh_close	../server/algo/sph_jh.c	/^jh_close(sph_jh_context *sc, unsigned ub, unsigned n,$/;"	f	file:
jh_core	../server/algo/sph_jh.c	/^jh_core(sph_jh_context *sc, const void *data, size_t len)$/;"	f	file:
jh_init	../server/algo/sph_jh.c	/^jh_init(sph_jh_context *sc, const void *iv)$/;"	f	file:
join	../server/util.cpp	/^string join(const vector<string>& vec, const char* delim)$/;"	f
jrnl	../blockchain/bc.h	/^  uint32_t jrnl;$/;"	m	struct:bc_idx_t
json2value	../server/ext/exec.cpp	/^static Value json2value(shjson_t *obj, char *var_name)$/;"	f	file:
json2vector	../server/ext/exec.cpp	/^static vector<string> json2vector(shjson_t *obj, char *var_name)$/;"	f	file:
json_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
json_spirit	../server/json/json_spirit_error_position.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_reader.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_reader_template.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_stream_reader.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_utils.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_value.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_writer.h	/^namespace json_spirit$/;"	n
json_spirit	../server/json/json_spirit_writer_template.h	/^namespace json_spirit$/;"	n
json_stratum_key_str	../server/rpc/rpc_command.cpp	/^static string json_stratum_key_str;$/;"	v	file:
jsonstr2value	../server/ext/exec.cpp	/^static string jsonstr2value(shjson_t *obj, char *var_name)$/;"	f	file:
jumpBuf	../test/CuTest.h	/^	jmp_buf *jumpBuf;$/;"	m	struct:CuTest
kSender	../server/ext/exec.h	/^		uint160 kSender;$/;"	m	class:CExecCore
keccak_core	../server/algo/sph_keccak.c	/^keccak_core(sph_keccak_context *kc, const void *data, size_t len, size_t lim)$/;"	f	file:
keccak_init	../server/algo/sph_keccak.c	/^keccak_init(sph_keccak_context *kc, unsigned out_size)$/;"	f	file:
keccakhash	../server/algo/keccak.c	/^void keccakhash(void *state, const void *input)$/;"	f
key	../server/dikey.h	/^	DIKey key;$/;"	m	struct:DIExtKey
key	../server/eckey.h	/^	ECKey key;$/;"	m	struct:ECExtKey
key_error	../server/key.h	/^    explicit key_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:key_error
key_error	../server/key.h	/^class key_error : public std::runtime_error$/;"	c
key_length	../server/algo/blake2s.h	/^	uint8_t  key_length;    \/\/ 2$/;"	m	struct:__blake2s_param
key_type	../server/mruset.h	/^		typedef T key_type;$/;"	t	class:mruset
keystore	../server/script.cpp	/^    const CKeyStore *keystore;$/;"	m	class:CKeyStoreIsMineVisitor	file:
label	../server/ext/altchain_color.c	/^	const char *label;$/;"	m	struct:rgb_t	file:
lastRollingFeeUpdate	../server/txfeerate.h	/^    mutable int64_t lastRollingFeeUpdate;$/;"	m	class:CBlockPolicyEstimator
last_block_height	../stratum/stratum_task.c	/^static uint64_t last_block_height[MAX_COIN_IFACE];$/;"	v	file:
last_node	../server/algo/blake2s.h	/^	uint8_t  last_node;$/;"	m	struct:__blake2s_state
last_payout_hash	../stratum/stratum_task.c	/^static char last_payout_hash[MAX_COIN_IFACE][256];$/;"	v	file:
lat	../server/spring.c	/^  shnum_t lat;$/;"	m	struct:spring_bits	file:
lat1	../server/spring.c	/^  unsigned int lat1, lat2;$/;"	m	struct:spring_bits	file:
lat2	../server/spring.c	/^  unsigned int lat1, lat2;$/;"	m	struct:spring_bits	file:
le32dec	../server/algo/scrypt.c	/^static inline uint32_t le32dec(const void *pp)$/;"	f	file:
le32enc	../server/algo/scrypt.c	/^static inline void le32enc(void *pp, uint32_t x)$/;"	f	file:
leaf_length	../server/algo/blake2s.h	/^	uint32_t leaf_length;   \/\/ 8$/;"	m	struct:__blake2s_param
legacy_AcceptBlock	../server/validation.cpp	/^bool legacy_AcceptBlock(CBlock *pblock, CBlockIndex *pindexPrev)$/;"	f
length	../server/bolo/bolo_validation03.cpp	/^struct rmd160_vstate { uint64_t length; uint8_t buf[64]; uint32_t curlen, state[5]; };$/;"	m	struct:rmd160_vstate	file:
length	../server/bolo/bolo_validation03.cpp	/^struct sha256_vstate { uint64_t length; uint32_t state[8],curlen; uint8_t buf[64]; };$/;"	m	struct:sha256_vstate	file:
length	../server/script.h	/^	unsigned int length;$/;"	m	struct:WitnessUnknown
length	../test/CuTest.h	/^	int length;$/;"	m	struct:__anon16
less_than_key	../server/bolo/bolo_validation03.cpp	/^struct less_than_key$/;"	s	file:
leveldb_error	../server/leveldb.h	/^    leveldb_error(const std::string &msg) : std::runtime_error(msg) {}$/;"	f	class:leveldb_error
leveldb_error	../server/leveldb.h	/^class leveldb_error : public std::runtime_error$/;"	c
levenshtein	../server/ext/altchain_color.c	/^static int levenshtein(const char *s1, const char *s2) $/;"	f	file:
lim	../server/algo/sph_keccak.h	/^	size_t ptr, lim;$/;"	m	struct:__anon35
line_	../server/json/json_spirit_error_position.h	/^        unsigned int line_;$/;"	m	struct:json_spirit::Error_position
list	../test/CuTest.h	/^	CuTest* list[MAX_TEST_CASES];$/;"	m	struct:__anon17
lk	../blockchain/bc.h	/^	bclock_t lk;$/;"	m	struct:bc_t
load32	../server/algo/blake2s.h	/^static inline uint32_t load32(const void *src)$/;"	f
load48	../server/algo/blake2s.h	/^static inline uint64_t load48(const void *src)$/;"	f
lock	../server/sync.h	/^		boost::unique_lock<Mutex> lock;$/;"	m	class:CMutexLock
locking_callback	../server/util.cpp	/^void locking_callback(int mode, int i, const char* file, int line)$/;"	f
lockorders	../server/sync.cpp	/^static std::map<std::pair<void*, void*>, LockStack> lockorders;$/;"	v	file:
lockstack	../server/sync.cpp	/^static boost::thread_specific_ptr<LockStack> lockstack;$/;"	v	file:
lon	../server/spring.c	/^  shnum_t lon;$/;"	m	struct:spring_bits	file:
lon1	../server/spring.c	/^  unsigned int lon1, lon2;$/;"	m	struct:spring_bits	file:
lon2	../server/spring.c	/^  unsigned int lon1, lon2;$/;"	m	struct:spring_bits	file:
lookup	../server/txmempool.h	/^    CTransaction& lookup(uint256 hash)$/;"	f	class:CTxMemPool
loop	../server/util.h	28;"	d
low	../server/algo/sph_keccak.c	/^	sph_u32 high, low;$/;"	m	struct:__anon34	file:
ltc_AddOrphanBlock	../server/ltc/ltc_block.cpp	/^void ltc_AddOrphanBlock(CBlock *block)$/;"	f
ltc_CalculateNextWorkRequired	../server/ltc/ltc_block.cpp	/^static unsigned int ltc_CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime)$/;"	f	file:
ltc_CheckProofOfWork	../server/ltc/ltc_block.cpp	/^bool ltc_CheckProofOfWork(uint256 hash, unsigned int nBits)$/;"	f
ltc_ConnectInputs	../server/ltc/ltc_block.cpp	/^bool ltc_ConnectInputs(CTransaction *tx, MapPrevTx inputs, map<uint256, CTxIndex>& mapTestPool, const CDiskTxPos& posThisTx, const CBlockIndex* pindexBlock, bool fBlock, bool fMiner, bool fStrictPayToScriptHash=true)$/;"	f
ltc_CreateGenesisBlock	../server/ltc/ltc_block.cpp	/^bool ltc_CreateGenesisBlock()$/;"	f
ltc_CreateNewBlock	../server/ltc/ltc_block.cpp	/^CBlock* ltc_CreateNewBlock(const CPubKey& rkey)$/;"	f
ltc_EraseFromWallets	../server/ltc/ltc_block.cpp	/^static void ltc_EraseFromWallets(uint256 hash)$/;"	f	file:
ltc_FillBlockIndex	../server/ltc/ltc_txidx.cpp	/^bool ltc_FillBlockIndex()$/;"	f
ltc_GetBlockValue	../server/ltc/ltc_block.cpp	/^int64 ltc_GetBlockValue(int nHeight, int64 nFees)$/;"	f
ltc_GetLastCheckpoint	../server/ltc/ltc_block.cpp	/^CBlockIndex *ltc_GetLastCheckpoint()$/;"	f
ltc_GetMainAccountPubKey	../proto/ltc_proto.cpp	/^static CPubKey ltc_GetMainAccountPubKey(CWallet *wallet)$/;"	f	file:
ltc_GetOrphanBlock	../server/ltc/ltc_block.cpp	/^CBlock *ltc_GetOrphanBlock(const uint256& hash)$/;"	f
ltc_GetOrphanNextHash	../server/ltc/ltc_block.cpp	/^bool ltc_GetOrphanNextHash(const uint256& hash, uint256& retNextHash)$/;"	f
ltc_GetOrphanPrevHash	../server/ltc/ltc_block.cpp	/^bool ltc_GetOrphanPrevHash(const uint256& hash, uint256& retPrevHash)$/;"	f
ltc_GetOrphanRoot	../server/ltc/ltc_block.cpp	/^uint256 ltc_GetOrphanRoot(uint256 hash)$/;"	f
ltc_GetTxWeight	../server/ltc/ltc_block.cpp	/^static int64_t ltc_GetTxWeight(const CTransaction& tx)$/;"	f	file:
ltc_InitBlockIndex	../server/ltc/ltc_txidx.cpp	/^bool ltc_InitBlockIndex()$/;"	f
ltc_IsFromMe	../server/ltc/ltc_block.cpp	/^static bool ltc_IsFromMe(CTransaction& tx)$/;"	f	file:
ltc_IsOrphanBlock	../server/ltc/ltc_block.cpp	/^bool ltc_IsOrphanBlock(const uint256& hash)$/;"	f
ltc_LoadWallet	../server/ltc/ltc_wallet.cpp	/^bool ltc_LoadWallet(void)$/;"	f
ltc_ProcessBlock	../server/ltc/ltc_block.cpp	/^bool ltc_ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
ltc_ProcessGetHeaders	../server/ltc/ltc_netmsg.cpp	/^static void ltc_ProcessGetHeaders(CIface *iface, CNode *pfrom, CBlockLocator *locator, uint256 hashStop)$/;"	f	file:
ltc_ProcessMessage	../server/ltc/ltc_netmsg.cpp	/^bool ltc_ProcessMessage(CIface *iface, CNode* pfrom, string strCommand, CDataStream& vRecv)$/;"	f
ltc_ProcessMessages	../server/ltc/ltc_netmsg.cpp	/^bool ltc_ProcessMessages(CIface *iface, CNode* pfrom)$/;"	f
ltc_RemoveOrphanBlock	../server/ltc/ltc_block.cpp	/^void ltc_RemoveOrphanBlock(const uint256& hash)$/;"	f
ltc_RestoreBlockIndex	../server/ltc/ltc_txidx.cpp	/^bool ltc_RestoreBlockIndex()$/;"	f
ltc_SendMessages	../server/ltc/ltc_netmsg.cpp	/^bool ltc_SendMessages(CIface *iface, CNode* pto, bool fSendTrickle)$/;"	f
ltc_SetBestChainInner	../server/ltc/ltc_block.cpp	/^bool ltc_SetBestChainInner(CBlock *block, CTxDB& txdb, CBlockIndex *pindexNew)$/;"	f
ltc_Truncate	../server/ltc/ltc_block.cpp	/^bool ltc_Truncate(uint256 hash)$/;"	f
ltc_UpdatedTransaction	../server/ltc/ltc_block.cpp	/^static void ltc_UpdatedTransaction(const uint256& hashTx)$/;"	f	file:
ltc_bind	../proto/ltc_proto.cpp	/^static int ltc_bind(CIface *iface, void *_unused_)$/;"	f	file:
ltc_block_new	../proto/ltc_proto.cpp	/^static int ltc_block_new(CIface *iface, CBlock **block_p)$/;"	f	file:
ltc_block_process	../proto/ltc_proto.cpp	/^static int ltc_block_process(CIface *iface, CBlock *block)$/;"	f	file:
ltc_block_templ	../proto/ltc_proto.cpp	/^static int ltc_block_templ(CIface *iface, CBlock **block_p)$/;"	f	file:
ltc_coin_iface	../proto/ltc_proto.cpp	/^coin_iface_t ltc_coin_iface = {$/;"	v
ltc_generateMTRandom	../server/ltc/ltc_block.cpp	/^static int ltc_generateMTRandom(unsigned int s, int range)$/;"	f	file:
ltc_init	../proto/ltc_proto.cpp	/^static int ltc_init(CIface *iface, void *_unused_)$/;"	f	file:
ltc_msg_recv	../proto/ltc_proto.cpp	/^static int ltc_msg_recv(CIface *iface, CNode *pnode)$/;"	f	file:
ltc_msg_send	../proto/ltc_proto.cpp	/^static int ltc_msg_send(CIface *iface, CNode *pnode)$/;"	f	file:
ltc_nBytesPerSigOp	../server/ltc/ltc_wallet.cpp	/^static unsigned int ltc_nBytesPerSigOp = LTC_DEFAULT_BYTES_PER_SIGOP;$/;"	v	file:
ltc_nDiffChangeTarget	../server/ltc/ltc_block.cpp	/^static const int64 ltc_nDiffChangeTarget = 56000; \/\/ Patch effective @ block 56000$/;"	v	file:
ltc_nInterval	../server/ltc/ltc_block.cpp	/^static const int64 ltc_nInterval = ltc_nTargetTimespan \/ ltc_nTargetSpacing;$/;"	v	file:
ltc_nTargetSpacing	../server/ltc/ltc_block.cpp	/^static const int64 ltc_nTargetSpacing = 2.5 * 60; $/;"	v	file:
ltc_nTargetTimespan	../server/ltc/ltc_block.cpp	/^static const int64 ltc_nTargetTimespan = 3.5 * 24 * 60 * 60; \/\/ Einsteinium: 3.5 days$/;"	v	file:
ltc_nTargetTimespanNEW	../server/ltc/ltc_block.cpp	/^static const int64 ltc_nTargetTimespanNEW = 60;$/;"	v	file:
ltc_peer_add	../proto/ltc_proto.cpp	/^static int ltc_peer_add(CIface *iface, void *arg)$/;"	f	file:
ltc_peer_recv	../proto/ltc_proto.cpp	/^static int ltc_peer_recv(CIface *iface, void *arg)$/;"	f	file:
ltc_term	../proto/ltc_proto.cpp	/^static int ltc_term(CIface *iface, void *_unused_)$/;"	f	file:
ltc_tx_new	../proto/ltc_proto.cpp	/^static int ltc_tx_new(CIface *iface, void *arg)$/;"	f	file:
ltc_tx_pool	../proto/ltc_proto.cpp	/^static int ltc_tx_pool(CIface *iface, CTxMemPool **pool_p)$/;"	f	file:
luffa3	../server/algo/sph_luffa.c	/^luffa3(sph_luffa224_context *sc, const void *data, size_t len)$/;"	f	file:
luffa3_close	../server/algo/sph_luffa.c	/^luffa3_close(sph_luffa224_context *sc, unsigned ub, unsigned n,$/;"	f	file:
luffa4	../server/algo/sph_luffa.c	/^luffa4(sph_luffa384_context *sc, const void *data, size_t len)$/;"	f	file:
luffa4_close	../server/algo/sph_luffa.c	/^luffa4_close(sph_luffa384_context *sc, unsigned ub, unsigned n, void *dst)$/;"	f	file:
luffa5	../server/algo/sph_luffa.c	/^luffa5(sph_luffa512_context *sc, const void *data, size_t len)$/;"	f	file:
luffa5_close	../server/algo/sph_luffa.c	/^luffa5_close(sph_luffa512_context *sc, unsigned ub, unsigned n, void *dst)$/;"	f	file:
mArray	../server/json/json_spirit_value.h	/^    typedef mConfig::Array_type  mArray;$/;"	t	namespace:json_spirit
mConfig	../server/json/json_spirit_value.h	/^    typedef Config_map< std::string > mConfig;$/;"	t	namespace:json_spirit
mObject	../server/json/json_spirit_value.h	/^    typedef mConfig::Object_type mObject;$/;"	t	namespace:json_spirit
mValue	../server/json/json_spirit_value.h	/^    typedef mConfig::Value_type  mValue;$/;"	t	namespace:json_spirit
m_value	../server/script.h	/^    int64_t m_value;$/;"	m	class:CScriptNum
magic	../blockchain/bc.h	/^  uint32_t magic;$/;"	m	struct:bc_hdr_t
magic	../proto/coin_proto.h	/^  unsigned char magic[4];$/;"	m	struct:coinhdr_t
main	../server/algo/blake2s.c	/^int main( int argc, char **argv )$/;"	f
main	../server/serialize.h	/^int main(int argc, char *argv[])$/;"	f
main	../test/test_shcoind.c	/^int main(int argc, char *argv[])$/;"	f
mapAddr	../server/addrman.h	/^    std::map<CNetAddr, int> mapAddr;$/;"	m	class:CAddrMan
mapAddrCache	../server/wallet.h	/^		map<string, CAccountCache *> mapAddrCache;$/;"	m	class:CWallet
mapAddressBook	../server/wallet.h	/^		std::map<CTxDestination, std::string> mapAddressBook;$/;"	m	class:CWallet
mapAlias	../server/wallet.h	/^		mutable std::map<std::string, uint256> mapAlias;$/;"	m	class:CWallet
mapAliasArch	../server/wallet.h	/^		mutable std::map<uint256, std::string> mapAliasArch;$/;"	m	class:CWallet
mapAskFor	../server/net.h	/^    std::multimap<int64, CInv> mapAskFor;$/;"	m	class:CNode
mapAsset	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapAsset;$/;"	m	class:CWallet
mapCert	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapCert;$/;"	m	class:CWallet
mapCertArch	../server/wallet.h	/^		mutable std::map<uint256, uint160> mapCertArch;$/;"	m	class:CWallet
mapCertLabel	../server/wallet.h	/^		mutable std::map<std::string, uint160> mapCertLabel;$/;"	m	class:CWallet
mapChannel	../server/wallet.h	/^		mutable std::map<uint160, CTransaction> mapChannel;$/;"	m	class:CWallet
mapChannelRedeem	../server/wallet.h	/^		mutable std::map<uint160, CTransaction> mapChannelRedeem;$/;"	m	class:CWallet
mapChannelSpent	../server/wallet.h	/^		mutable std::map<uint160, CTransaction> mapChannelSpent;$/;"	m	class:CWallet
mapCheckpoints	../server/checkpoints.h	/^		MapCheckpoints mapCheckpoints;$/;"	m	class:CCheckpoints
mapCoinHash	../server/coin.cpp	/^static vector<uint160> mapCoinHash;$/;"	v	file:
mapColor	../server/wallet.h	/^		std::map<uint160, uint256> mapColor;$/;"	m	class:CWallet
mapColorHead	../server/wallet.h	/^		std::map<uint256, uint160> mapColorHead;$/;"	m	class:CWallet
mapColorOpt	../server/color/color_block.cpp	/^static std::map<uint160, color_opt> mapColorOpt;$/;"	v	file:
mapColorPool	../server/wallet.h	/^		std::map<uint160, uint256> mapColorPool;$/;"	m	class:CWallet
mapContext	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapContext;$/;"	m	class:CWallet
mapContextArch	../server/wallet.h	/^		mutable std::map<uint256, uint160> mapContextArch;$/;"	m	class:CWallet
mapDIKeys	../server/keystore.h	/^    DIKeyMap mapDIKeys;$/;"	m	class:CBasicKeyStore
mapDb	../server/txidx.h	/^    std::map<std::string, Db*> mapDb;$/;"	m	class:CDBEnv
mapECKeys	../server/keystore.h	/^    ECKeyMap mapECKeys;$/;"	m	class:CBasicKeyStore
mapExec	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapExec;$/;"	m	class:CWallet
mapExecCall	../server/wallet.h	/^		mutable std::map< uint160, vector<uint160> > mapExecCall;$/;"	m	class:CWallet
mapExecCallPending	../server/wallet.h	/^		mutable std::map< uint160, vector<uint160> > mapExecCallPending;$/;"	m	class:CWallet
mapExecCheckpoint	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapExecCheckpoint; $/;"	m	class:CWallet
mapExecLabel	../server/wallet.h	/^		mutable std::map<string, uint160> mapExecLabel;$/;"	m	class:CWallet
mapFileUseCount	../server/txidx.h	/^    std::map<std::string, int> mapFileUseCount;$/;"	m	class:CDBEnv
mapIdent	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapIdent;$/;"	m	class:CWallet
mapInfo	../server/addrman.h	/^    std::map<int, CAddrInfo> mapInfo;$/;"	m	class:CAddrMan
mapInputs	../server/txmempool.h	/^    tx_cache mapInputs;$/;"	m	class:CPoolTx
mapInputs	../server/txsignature.h	/^    tx_cache mapInputs;$/;"	m	class:CSignature
mapLicense	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapLicense;$/;"	m	class:CWallet
mapMemPoolTxs	../server/txfeerate.h	/^    std::map<uint256, TxStatsInfo> mapMemPoolTxs;$/;"	m	class:CBlockPolicyEstimator
mapMultiArgs	../server/util.cpp	/^map<string, vector<string> > mapMultiArgs;$/;"	v
mapNextTx	../server/txmempool.h	/^    std::map<COutPoint, CInPoint> mapNextTx;$/;"	m	class:CPoolTx
mapOffer	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOffer;$/;"	m	class:CWallet
mapOfferAccept	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferAccept;$/;"	m	class:CWallet
mapOfferAcceptArch	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferAcceptArch;$/;"	m	class:CWallet
mapOfferArch	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferArch;$/;"	m	class:CWallet
mapOfferGenerate	../server/wallet.h	/^		mutable std::map<uint160, uint256> mapOfferGenerate;$/;"	m	class:CWallet
mapParam	../server/wallet.h	/^		mutable std::vector<CParam> mapParam;$/;"	m	class:CWallet
mapParamArch	../server/wallet.h	/^		mutable std::vector<uint256> mapParamArch;$/;"	m	class:CWallet
mapRequestCount	../server/wallet.h	/^		std::map<uint256, int> mapRequestCount;$/;"	m	class:CWallet
mapRequests	../server/net.h	/^    std::map<uint256, CRequestTracker> mapRequests;$/;"	m	class:CNode
mapScripts	../server/keystore.h	/^    ScriptMap mapScripts;$/;"	m	class:CBasicKeyStore
mapValidateNotary	../server/wallet.h	/^		map<uint256, CPubKey> mapValidateNotary;$/;"	m	class:CWallet
mapValidateTx	../server/wallet.h	/^		vector<uint256> mapValidateTx;$/;"	m	class:CWallet
mapValue	../server/wallet.h	/^		std::map<std::string, std::string> mapValue;$/;"	m	class:CWalletTx
mapWallet	../server/wallet.h	/^		std::map<uint256, CWalletTx> mapWallet;$/;"	m	class:CWallet
mapWalletArch	../server/wallet.h	/^		std::map<uint256, CWalletTx> mapWalletArch;$/;"	m	class:CWallet
mapWork	../stratum/stratum_miner.cpp	/^static work_map mapWork;$/;"	v	file:
map_table	../server/netmsg.cpp	/^netmsg_map map_table[MAX_COIN_IFACE];$/;"	v
map_to_obj	../server/json/json_spirit_utils.h	/^    void map_to_obj( const Map_t& mp_obj, Obj_t& obj )$/;"	f	namespace:json_spirit
mapval_t	../server/wallet.h	/^typedef std::map<std::string, std::string> mapval_t;$/;"	t
masterKeyID	../server/wallet.h	/^		CKeyID masterKeyID; \/\/!< master key hash160$/;"	m	class:CAccount
matrix	../server/block.h	/^    CTxMatrix matrix;$/;"	m	class:CTransaction
matrixValidate	../server/wallet.h	/^		CTxMatrix matrixValidate;$/;"	m	class:CWallet
matrix_GetMinConsensus	../server/matrix.cpp	/^static unsigned int matrix_GetMinConsensus(int ifaceIndex)$/;"	f	file:
matrix_GetNotaryLockTime	../server/matrix.cpp	/^static uint32_t matrix_GetNotaryLockTime(CIface *iface)$/;"	f	file:
max	../server/chain.h	/^  unsigned int max;$/;"	m	struct:ChainOp
max_block_size	../proto/coin_proto.h	/^  uint64_t max_block_size;$/;"	m	struct:coin_iface_t
max_free_tx_size	../proto/coin_proto.h	/^  uint64_t max_free_tx_size;$/;"	m	struct:coin_iface_t
max_money	../proto/coin_proto.h	/^  uint64_t max_money;$/;"	m	struct:coin_iface_t
max_orphan_tx	../proto/coin_proto.h	/^  uint64_t max_orphan_tx;$/;"	m	struct:coin_iface_t
max_script_element_size	../proto/coin_proto.h	/^	uint64_t max_script_element_size;$/;"	m	struct:coin_iface_t
max_script_size	../proto/coin_proto.h	/^	uint64_t max_script_size;$/;"	m	struct:coin_iface_t
max_sigops	../proto/coin_proto.h	/^  uint64_t max_sigops;$/;"	m	struct:coin_iface_t
max_size	../server/mruset.h	/^		size_type max_size() const { return nMaxSize; }$/;"	f	class:mruset
max_size	../server/mruset.h	/^		size_type max_size(size_type s)$/;"	f	class:mruset
max_tx_fee	../proto/coin_proto.h	/^  uint64_t max_tx_fee;$/;"	m	struct:coin_iface_t
max_tx_weight	../proto/coin_proto.h	/^  uint64_t max_tx_weight;$/;"	m	struct:coin_iface_t
mchain	../server/ext/channel.h	/^    cbuff mchain;$/;"	m	class:CChannelKey
median	../server/util.h	/^    T median() const$/;"	f	class:CMedianFilter
members_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
mempool	../proto/color_proto.cpp	/^COLOR_CTxMemPool COLORBlock::mempool;$/;"	m	class:COLORBlock	file:
mempool	../proto/emc2_proto.cpp	/^EMC2_CTxMemPool EMC2Block::mempool;$/;"	m	class:EMC2Block	file:
mempool	../proto/ltc_proto.cpp	/^LTC_CTxMemPool LTCBlock::mempool;$/;"	m	class:LTCBlock	file:
mempool	../proto/shc_proto.cpp	/^SHC_CTxMemPool SHCBlock::mempool;$/;"	m	class:SHCBlock	file:
mempool	../proto/test_proto.cpp	/^TEST_CTxMemPool TESTBlock::mempool;$/;"	m	class:TESTBlock	file:
mempool	../proto/testnet_proto.cpp	/^TESTNET_CTxMemPool TESTNETBlock::mempool;$/;"	m	class:TESTNETBlock	file:
mempool	../server/color/color_block.h	/^    static COLOR_CTxMemPool mempool; $/;"	m	class:COLORBlock
mempool	../server/emc2/emc2_block.h	/^		static EMC2_CTxMemPool mempool; $/;"	m	class:EMC2Block
mempool	../server/ltc/ltc_block.h	/^    static LTC_CTxMemPool mempool; $/;"	m	class:LTCBlock
mempool	../server/shc/shc_block.h	/^    static SHC_CTxMemPool mempool; $/;"	m	class:SHCBlock
mempool	../server/test/test_block.h	/^    static TEST_CTxMemPool mempool; $/;"	m	class:TESTBlock
mempool	../server/testnet/testnet_block.h	/^		static TESTNET_CTxMemPool mempool; $/;"	m	class:TESTNETBlock
mempool_count	../server/block_cmpct.h	/^		size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;$/;"	m	class:PartiallyDownloadedBlock
merge_idle_worker	../stratum/stratum_user.c	/^void merge_idle_worker(user_t *user)$/;"	f
merkle	../stratum/stratum.h	/^  char **merkle;$/;"	m	struct:task_t
merkle_len	../stratum/stratum.h	/^  size_t merkle_len;$/;"	m	struct:task_t
message	../test/CuTest.h	/^	const char* message;$/;"	m	struct:CuTest
method	../stratum/stratum_command.c	/^	const char *method;$/;"	m	struct:stratum_command_t	file:
mime	../stratum/stratum_http.h	/^	char *mime;$/;"	m	struct:http_t
minReasonableRelayFee	../server/txfeerate.h	/^    CFeeRate minReasonableRelayFee;$/;"	m	class:CBlockPolicyEstimator
minTrackedFee	../server/txfeerate.h	/^    CFeeRate minTrackedFee;    \/\/!< Passed to constructor to avoid dependency on main$/;"	m	class:CBlockPolicyEstimator
minTrackedPriority	../server/txfeerate.h	/^    double minTrackedPriority; \/\/!< Set to AllowFreeThreshold$/;"	m	class:CBlockPolicyEstimator
min_arg	../server/rpc/rpc_proto.h	/^  int min_arg;$/;"	m	class:RPCOp
min_input	../proto/coin_proto.h	/^  uint64_t min_input;$/;"	m	struct:coin_iface_t
min_relay_fee	../proto/coin_proto.h	/^  uint64_t min_relay_fee;$/;"	m	struct:coin_iface_t
min_tx_fee	../proto/coin_proto.h	/^  uint64_t min_tx_fee;$/;"	m	struct:coin_iface_t
mine_stamp	../stratum/stratum.h	/^  time_t mine_stamp[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
mix_column	../server/algo/sph_echo.c	/^mix_column(sph_u32 W[16][4], int ia, int ib, int ic, int id)$/;"	f	file:
mix_column	../server/algo/sph_echo.c	/^mix_column(sph_u64 W[16][2], int ia, int ib, int ic, int id)$/;"	f	file:
mlock	../server/allocators.h	38;"	d
mlock	../server/allocators.h	48;"	d
mode	../server/chain.h	/^  int mode;$/;"	m	struct:ChainOp
mode	../unet/unet.h	/^  int mode;$/;"	m	struct:uevent_t
mpubkey	../server/ext/channel.h	/^    cbuff mpubkey;$/;"	m	class:CChannelKey
mruset	../server/mruset.h	/^		mruset(size_type nMaxSizeIn = 0) { nMaxSize = nMaxSizeIn; }$/;"	f	class:mruset
mruset	../server/mruset.h	/^template <typename T> class mruset$/;"	c
munlock	../server/allocators.h	39;"	d
munlock	../server/allocators.h	51;"	d
mutex	../server/sync.h	/^		boost::mutex mutex;$/;"	m	class:CSemaphore
mutexName	../server/sync.cpp	/^    std::string mutexName;$/;"	m	struct:CLockLocation	file:
mysetint64	../test/testcoin_bignum.cpp	/^static void mysetint64(CBigNum& num, int64 n)$/;"	f	file:
n	../server/block.h	/^    unsigned int n;$/;"	m	class:CInPoint
n	../server/block.h	/^    unsigned int n;$/;"	m	class:COutPoint
nAccessTime	../server/coinaddr.h	/^		int64_t nAccessTime; $/;"	m	class:CCoinAddr
nAccountingEntryNumber	../server/walletdb.cpp	/^static uint64 nAccountingEntryNumber = 0;$/;"	v	file:
nAlg	../server/ext/txext.h	/^    unsigned int nAlg;$/;"	m	class:CSign
nAmount	../server/rpc/rpc_wallet_addr.cpp	/^    int64 nAmount;$/;"	m	struct:tallyitem	file:
nAttempts	../server/addrman.h	/^    int nAttempts;$/;"	m	class:CAddrInfo
nAvailableCreditCached	../server/wallet.h	/^		mutable int64 nAvailableCreditCached;$/;"	m	class:CWalletTx
nBatchValue	../server/txcreator.h	/^    int64 nBatchValue;$/;"	m	class:CTxBatchCreator
nBestSeenHeight	../server/txfeerate.h	/^    unsigned int nBestSeenHeight;$/;"	m	class:CBlockPolicyEstimator
nBits	../server/block.h	/^    unsigned int nBits;$/;"	m	class:CBlockHeader
nBits	../server/block.h	/^    unsigned int nBits;$/;"	m	class:CBlockIndex
nBits	../server/ext/altchain.h	/^		unsigned int nBits;$/;"	m	class:CAltBlock
nBlockPos	../server/block.h	/^    unsigned int nBlockPos;$/;"	m	class:CDiskTxPos
nChainInputValue	../server/txmempool.h	/^    int64 nChainInputValue;$/;"	m	class:CPoolTx
nChainTx	../server/block.h	/^		unsigned int nChainTx; \/\/ change to 64-bit type when necessary; won't happen before 2030$/;"	m	class:CBlockIndex
nChangeCached	../server/wallet.h	/^		mutable int64 nChangeCached;$/;"	m	class:CWalletTx
nChecksum	../server/protocol.h	/^			unsigned int nChecksum;$/;"	m	class:CMessageHeader
nChild	../server/dikey.h	/^	uint32_t nChild;$/;"	m	struct:DIExtKey
nChild	../server/dikey.h	/^	uint32_t nChild;$/;"	m	struct:DIExtPubKey
nChild	../server/eckey.h	/^	uint32_t nChild;$/;"	m	struct:ECExtKey
nChild	../server/eckey.h	/^	uint32_t nChild;$/;"	m	struct:ECExtPubKey
nChild	../test/testcoin_bip32.cpp	/^    unsigned int nChild;$/;"	m	struct:TestDerivation	file:
nChild	../test/testcoin_sip33.cpp	/^    unsigned int nChild;$/;"	m	struct:sip33_TestDerivation	file:
nCoinPerK	../server/txfeerate.h	/^    CAmount nCoinPerK; \/\/ unit is satoshis-per-1,000-bytes$/;"	m	class:CFeeRate
nConf	../server/rpc/rpc_wallet_addr.cpp	/^    int nConf;$/;"	m	struct:tallyitem	file:
nConnectTimeout	../server/netbase.cpp	/^int nConnectTimeout = 5000;$/;"	v
nCreateTime	../server/coinaddr.h	/^		int64_t nCreateTime; $/;"	m	class:CCoinAddr
nCreateTime	../server/key.h	/^		int64_t nCreateTime; \/\/ 0 means unknown$/;"	m	class:CKeyMetadata
nCredit	../server/txcreator.h	/^    int64 nCredit; $/;"	m	class:CTxCreator
nCreditCached	../server/wallet.h	/^		mutable int64 nCreditCached;$/;"	m	class:CWalletTx
nCreditDebit	../server/wallet.h	/^		int64 nCreditDebit;$/;"	m	class:CAccountingEntry
nCurrentBlockFile	../server/main.cpp	/^static unsigned int nCurrentBlockFile = 1;$/;"	v	file:
nDebit	../server/txcreator.h	/^    int64 nDebit;$/;"	m	class:CTxCreator
nDebitCached	../server/wallet.h	/^		mutable int64 nDebitCached;$/;"	m	class:CWalletTx
nDefaultMaxNumSize	../server/script.h	/^    static const size_t nDefaultMaxNumSize = 4;$/;"	m	class:CScriptNum
nDepth	../server/dikey.h	/^	uint8_t nDepth;$/;"	m	struct:DIExtKey
nDepth	../server/dikey.h	/^	uint8_t nDepth;$/;"	m	struct:DIExtPubKey
nDepth	../server/eckey.h	/^	uint8_t nDepth;$/;"	m	struct:ECExtKey
nDepth	../server/eckey.h	/^	uint8_t nDepth;$/;"	m	struct:ECExtPubKey
nDepth	../server/txcreator.h	/^    unsigned int nDepth;$/;"	m	class:CTxCreator
nDepth	../server/wallet.h	/^		int nDepth;$/;"	m	class:COutput
nDerivationMethod	../server/crypter.h	/^    unsigned int nDerivationMethod;$/;"	m	class:CMasterKey
nDeriveIterations	../server/crypter.h	/^    unsigned int nDeriveIterations;$/;"	m	class:CMasterKey
nDifficultyAdjustmentInterval	../server/ltc/ltc_block.cpp	184;"	d	file:
nError	../server/net.h	/^		unsigned int nError;$/;"	m	class:CValidateState
nExternalDIChainCounter	../server/wallet.h	/^		uint32_t nExternalDIChainCounter;$/;"	m	class:CAccount
nExternalECChainCounter	../server/wallet.h	/^		uint32_t nExternalECChainCounter;$/;"	m	class:CAccount
nFee	../server/ext/certificate.h	/^    int64 nFee;$/;"	m	class:CCert
nFee	../server/txmempool.h	/^    int64 nFee;$/;"	m	class:CPoolTx
nFeeDepth	../server/txcreator.h	/^		int nFeeDepth;$/;"	m	class:CTxCreator
nFile	../server/block.h	/^    unsigned int nFile;$/;"	m	class:CDiskTxPos
nFlag	../server/block.h	/^    int nFlag;$/;"	m	class:CTransactionCore
nFlag	../server/ext/altchain.h	/^		uint32_t nFlag;$/;"	m	class:CAltChain
nFlag	../server/ext/altchain.h	/^		unsigned int nFlag;$/;"	m	class:CAltBlock
nFlag	../server/ext/altchain.h	/^		unsigned int nFlag;$/;"	m	class:CAltTx
nFlag	../server/ext/certificate.h	/^    int nFlag;$/;"	m	class:CCert
nFlag	../server/key.h	/^		unsigned int nFlag;$/;"	m	class:CKeyMetadata
nFlags	../server/net.h	/^    unsigned char nFlags;$/;"	m	class:CBloomFilter
nHashFuncs	../server/net.h	/^    unsigned int nHashFuncs;$/;"	m	class:CBloomFilter
nHashType	../server/txsignature.h	/^    int nHashType; $/;"	m	class:CSignature
nHeaderStart	../server/net.h	/^    int nHeaderStart;$/;"	m	class:CNode
nHeight	../server/block.h	/^    int nHeight;$/;"	m	class:CBlockIndex
nHeight	../server/ext/exec.h	/^		int64 nHeight;$/;"	m	class:CExecCore
nHeight	../server/matrix.h	/^    unsigned int nHeight; $/;"	m	class:CTxMatrix
nHeight	../server/txmempool.h	/^    unsigned int nHeight;$/;"	m	class:CPoolTx
nIdCount	../server/addrman.h	/^    int nIdCount;$/;"	m	class:CAddrMan
nIndex	../server/main.h	/^    int nIndex;$/;"	m	class:CMerkleTx
nInternalDIChainCounter	../server/wallet.h	/^		uint32_t nInternalDIChainCounter;$/;"	m	class:CAccount
nInternalECChainCounter	../server/wallet.h	/^		uint32_t nInternalECChainCounter;$/;"	m	class:CAccount
nKey	../server/addrman.h	/^    std::vector<unsigned char> nKey;$/;"	m	class:CAddrMan
nLastBlockSize	../server/main.cpp	/^uint64 nLastBlockSize = 0;$/;"	v
nLastBlockTx	../server/main.cpp	/^uint64 nLastBlockTx = 0;$/;"	v
nLastRecv	../server/net.h	/^    int64 nLastRecv;$/;"	m	class:CNode
nLastRecv	../server/net.h	/^    int64 nLastRecv;$/;"	m	class:CNodeStats
nLastSend	../server/net.h	/^    int64 nLastSend;$/;"	m	class:CNode
nLastSend	../server/net.h	/^    int64 nLastSend;$/;"	m	class:CNodeStats
nLastSendEmpty	../server/net.h	/^    int64 nLastSendEmpty;$/;"	m	class:CNode
nLastSuccess	../server/addrman.h	/^    int64 nLastSuccess;$/;"	m	class:CAddrInfo
nLastTry	../server/protocol.h	/^		mutable int64 nLastTry;$/;"	m	class:CAddress
nLockTime	../server/block.h	/^    unsigned int nLockTime;$/;"	m	class:CTransactionCore
nLockTime	../server/ext/altchain.h	/^		unsigned int nLockTime;$/;"	m	class:CAltTx
nMaxFee	../server/txcreator.h	/^    int64 nMaxFee;$/;"	m	class:CTxBatchCreator
nMaxNumSize	../server/script.cpp	/^static const size_t nMaxNumSize = 4;$/;"	v	file:
nMaxSigOp	../server/txcreator.h	/^    int64 nMaxSigOp;$/;"	m	class:CTxBatchCreator
nMaxSize	../server/mruset.h	/^		size_type nMaxSize;$/;"	m	class:mruset
nMaxTxSize	../server/txcreator.h	/^    int64 nMaxTxSize;$/;"	m	class:CTxBatchCreator
nMaxValue	../server/ext/offer.h	/^		int64 nMaxValue;$/;"	m	class:COffer
nMedianTimeSpan	../server/block.h	/^    enum { nMedianTimeSpan=11 };$/;"	e	enum:CBlockIndex::__anon3
nMessageSize	../server/protocol.h	/^			unsigned int nMessageSize;$/;"	m	class:CMessageHeader
nMessageStart	../server/net.h	/^    unsigned int nMessageStart;$/;"	m	class:CNode
nMinDiskSpace	../server/main.h	/^static const uint64 nMinDiskSpace = 52428800;$/;"	v
nMinFee	../server/net.h	/^    int64 nMinFee;$/;"	m	class:CNode
nMinFee	../server/txcreator.h	/^    int64 nMinFee;$/;"	m	class:CTxCreator
nMinFee	../server/txmempool.h	/^    int64 nMinFee;$/;"	m	class:CPoolTx
nMinValue	../server/ext/offer.h	/^		int64 nMinValue;$/;"	m	class:COffer
nMinerConfirmationWindow	../proto/coin_proto.h	/^  uint32_t nMinerConfirmationWindow;$/;"	m	struct:coin_iface_t
nMisbehavior	../server/net.h	/^    int nMisbehavior;$/;"	m	class:CNode
nMisbehavior	../server/net.h	/^    int nMisbehavior;$/;"	m	class:CNodeStats
nMockTime	../server/util.cpp	/^static int64 nMockTime = 0;  \/\/ For unit testing$/;"	v	file:
nNew	../server/addrman.h	/^    int nNew;$/;"	m	class:CAddrMan
nNonce	../server/block.h	/^    unsigned int nNonce;$/;"	m	class:CBlockHeader
nNonce	../server/block.h	/^    unsigned int nNonce;$/;"	m	class:CBlockIndex
nNonce	../server/ext/altchain.h	/^		unsigned int nNonce;$/;"	m	class:CAltBlock
nNonceCount	../server/chain.cpp	/^static uint64_t nNonceCount;$/;"	v	file:
nOut	../server/rpc/rpcdump.cpp	/^    int nOut;$/;"	m	class:CTxDump	file:
nOutValue	../server/txcreator.h	/^    int64 nOutValue;$/;"	m	class:CTxBatchCreator
nPowTargetSpacing	../server/ltc/ltc_block.cpp	182;"	d	file:
nPowTargetTimespan	../server/ltc/ltc_block.cpp	183;"	d	file:
nRandomPos	../server/addrman.h	/^    int nRandomPos;$/;"	m	class:CAddrInfo
nRate	../server/ext/offer.h	/^		int64 nRate;$/;"	m	class:COffer
nReadPos	../server/serialize.h	/^    unsigned int nReadPos;$/;"	m	class:CDataStream
nRefCount	../server/addrman.h	/^    int nRefCount;$/;"	m	class:CAddrInfo
nRefCount	../server/net.h	/^    int nRefCount;$/;"	m	class:CNode
nReleaseTime	../server/net.h	/^    int64 nReleaseTime;$/;"	m	class:CNode
nReleaseTime	../server/net.h	/^    int64 nReleaseTime;$/;"	m	class:CNodeStats
nReserveIndex	../server/txcreator.h	/^    int64 nReserveIndex;$/;"	m	class:CTxCreator
nRuleChangeActivationThreshold	../proto/coin_proto.h	/^  uint32_t nRuleChangeActivationThreshold;$/;"	m	struct:coin_iface_t
nScanHeight	../server/wallet.h	/^		unsigned int nScanHeight;$/;"	m	class:CWallet
nSeq	../server/ext/channel.h	/^    unsigned int nSeq;$/;"	m	class:CChannel
nSequence	../server/block.h	/^    unsigned int nSequence;$/;"	m	class:CTxIn
nServices	../server/net.h	/^    uint64 nServices;$/;"	m	class:CNode
nServices	../server/net.h	/^    uint64 nServices;$/;"	m	class:CNodeStats
nServices	../server/protocol.h	/^		uint64 nServices;$/;"	m	class:CAddress
nSigOpCost	../server/txmempool.h	/^    int64 nSigOpCost;$/;"	m	class:CPoolTx
nSize	../server/util.h	/^    unsigned int nSize;$/;"	m	class:CMedianFilter
nStartTime	../proto/coin_proto.h	/^  int64_t nStartTime;$/;"	m	struct:BIP9Deployment
nStartingHeight	../server/net.h	/^    int nStartingHeight;$/;"	m	class:CNode
nStartingHeight	../server/net.h	/^    int nStartingHeight;$/;"	m	class:CNodeStats
nStatus	../server/block.h	/^    int nStatus;$/;"	m	class:CBlockIndex
nTargetSpacing	../proto/test_proto.cpp	/^int64 TESTBlock::nTargetSpacing = 60; \/* one minute *\/$/;"	m	class:TESTBlock	file:
nTargetSpacing	../server/test/test_block.h	/^    static int64 nTargetSpacing;$/;"	m	class:TESTBlock
nTargetTimespan	../proto/test_proto.cpp	/^int64 TESTBlock::nTargetTimespan = 7200; \/* two hours *\/$/;"	m	class:TESTBlock	file:
nTargetTimespan	../server/test/test_block.h	/^    static int64 nTargetTimespan;$/;"	m	class:TESTBlock
nTime	../server/block.h	/^    unsigned int nTime;$/;"	m	class:CBlockHeader
nTime	../server/block.h	/^    unsigned int nTime;$/;"	m	class:CBlockIndex
nTime	../server/ext/altchain.h	/^		unsigned int nTime;$/;"	m	class:CAltBlock
nTime	../server/ext/exec.h	/^		int64 nTime;$/;"	m	class:CExecCore
nTime	../server/protocol.h	/^		unsigned int nTime;$/;"	m	class:CAddress
nTime	../server/wallet.h	/^		int64 nTime;$/;"	m	class:CAccountingEntry
nTimeBestReceived	../proto/color_proto.cpp	/^int64 COLORBlock::nTimeBestReceived;$/;"	m	class:COLORBlock	file:
nTimeBestReceived	../proto/emc2_proto.cpp	/^int64 EMC2Block::nTimeBestReceived;$/;"	m	class:EMC2Block	file:
nTimeBestReceived	../proto/ltc_proto.cpp	/^int64 LTCBlock::nTimeBestReceived;$/;"	m	class:LTCBlock	file:
nTimeBestReceived	../proto/shc_proto.cpp	/^int64 SHCBlock::nTimeBestReceived;$/;"	m	class:SHCBlock	file:
nTimeBestReceived	../proto/test_proto.cpp	/^int64 TESTBlock::nTimeBestReceived;$/;"	m	class:TESTBlock	file:
nTimeBestReceived	../proto/testnet_proto.cpp	/^int64 TESTNETBlock::nTimeBestReceived;$/;"	m	class:TESTNETBlock	file:
nTimeBestReceived	../server/color/color_block.h	/^    static int64 nTimeBestReceived;$/;"	m	class:COLORBlock
nTimeBestReceived	../server/emc2/emc2_block.h	/^		static int64 nTimeBestReceived;$/;"	m	class:EMC2Block
nTimeBestReceived	../server/ltc/ltc_block.h	/^    static int64 nTimeBestReceived;$/;"	m	class:LTCBlock
nTimeBestReceived	../server/shc/shc_block.h	/^    static int64 nTimeBestReceived;$/;"	m	class:SHCBlock
nTimeBestReceived	../server/test/test_block.h	/^    static int64 nTimeBestReceived ;\/\/= 0;$/;"	m	class:TESTBlock
nTimeBestReceived	../server/testnet/testnet_block.h	/^		static int64 nTimeBestReceived;$/;"	m	class:TESTNETBlock
nTimeConnected	../server/net.h	/^    int64 nTimeConnected;$/;"	m	class:CNode
nTimeConnected	../server/net.h	/^    int64 nTimeConnected;$/;"	m	class:CNodeStats
nTimeCreated	../server/wallet.h	/^		int64 nTimeCreated;$/;"	m	class:CWalletKey
nTimeExpires	../server/wallet.h	/^		int64 nTimeExpires;$/;"	m	class:CWalletKey
nTimeOffset	../server/util.cpp	/^static int64 nTimeOffset = 0;$/;"	v	file:
nTimeReceived	../server/wallet.h	/^		unsigned int nTimeReceived;  \/\/ time received by this node$/;"	m	class:CWalletTx
nTimeout	../proto/coin_proto.h	/^  int64_t nTimeout;$/;"	m	struct:BIP9Deployment
nTransactionFee	../server/main.cpp	/^int64 nTransactionFee = 0;$/;"	v
nTransactions	../server/bloom.h	/^    unsigned int nTransactions;$/;"	m	class:CPartialMerkleTree
nTried	../server/addrman.h	/^    int nTried;$/;"	m	class:CAddrMan
nTrust	../server/net.h	/^		int nTrust;$/;"	m	class:CValidateState
nTweak	../server/net.h	/^    unsigned int nTweak;$/;"	m	class:CBloomFilter
nTxIn	../server/txsignature.h	/^    int nTxIn;$/;"	m	class:CSignature
nTxModSize	../server/txmempool.h	/^    int64 nTxModSize;$/;"	m	class:CPoolTx
nTxPos	../server/block.h	/^    unsigned int nTxPos;$/;"	m	class:CDiskTxPos
nTxSize	../server/txmempool.h	/^    int64 nTxSize;$/;"	m	class:CPoolTx
nType	../server/coinaddr.h	/^		int nType; \/* ADDR_BASE58 | ADDR_BECH32 *\/$/;"	m	class:CCoinAddr
nType	../server/ext/certificate.h	/^    unsigned int nType;$/;"	m	class:CIdent
nType	../server/ext/offer.h	/^    unsigned int nType;$/;"	m	class:COffer
nType	../server/matrix.h	/^    unsigned int nType;$/;"	m	class:CTxMatrix
nType	../server/serialize.h	/^    int nType;$/;"	m	class:CAutoFile
nType	../server/serialize.h	/^    int nType;$/;"	m	class:CDataStream
nType	../server/serialize.h	/^    int nType;$/;"	m	struct:ser_streamplaceholder
nType	../server/util.h	/^    int nType;$/;"	m	class:CHashWriter
nValidateHeight	../server/wallet.h	/^		unsigned int nValidateHeight;$/;"	m	class:CWallet
nValue	../server/block.h	/^    int64 nValue;$/;"	m	class:CTxOut
nValue	../server/ext/channel.h	/^    int64 nValue;$/;"	m	class:CChannelKey
nValue	../server/ext/exec.h	/^		int64 nValue;$/;"	m	class:CExecCore
nValue	../server/ext/ext_param.h	/^		int64_t nValue;$/;"	m	class:CParam
nValue	../server/ext/offer.h	/^		int64 nValue;$/;"	m	class:COffer
nValue	../server/rpc/rpcdump.cpp	/^    int64 nValue;$/;"	m	class:CTxDump	file:
nValueRet	../test/testcoin_coin.cpp	/^static int64 nValueRet;$/;"	v	file:
nVersion	../server/block.h	/^        nVersion = this->nVersion;$/;"	m	class:CBlockHeader
nVersion	../server/block.h	/^    int nVersion;$/;"	m	class:CBlockHeader
nVersion	../server/block.h	/^    int nVersion;$/;"	m	class:CBlockIndex
nVersion	../server/ext/txext.h	/^    unsigned int nVersion;$/;"	m	class:CExtCore
nVersion	../server/net.h	/^    int nVersion;$/;"	m	class:CNode
nVersion	../server/net.h	/^    int nVersion;$/;"	m	class:CNodeStats
nVersion	../server/serialize.h	/^    int nVersion;$/;"	m	class:CAutoFile
nVersion	../server/serialize.h	/^    int nVersion;$/;"	m	class:CDataStream
nVersion	../server/serialize.h	/^    int nVersion;$/;"	m	struct:ser_streamplaceholder
nVersion	../server/util.h	/^    int nVersion;$/;"	m	class:CHashWriter
nWalletDBUpdated	../server/txidx.cpp	/^unsigned int nWalletDBUpdated;$/;"	v
nWalletUnlockTime	../server/rpc/rpc_parse.cpp	/^static int64 nWalletUnlockTime;$/;"	v	file:
nWeight	../server/txmempool.h	/^    int64 nWeight;$/;"	m	class:CPoolTx
name	../blockchain/bc.h	/^  char name[BC_MAX_NAME_LENGTH];$/;"	m	struct:bc_t
name	../proto/coin_proto.h	/^  char name[MAX_SHARE_NAME_LENGTH];$/;"	m	struct:coin_iface_t
name	../server/versionbits.h	/^    const char *name;$/;"	m	struct:BIP9DeploymentInfo
name	../test/CuTest.h	/^	char* name;$/;"	m	struct:CuTest
name_	../server/json/json_spirit_reader_template.h	/^        String_type name_;              \/\/ of current name\/value pair$/;"	m	class:json_spirit::Semantic_actions
name_	../server/json/json_spirit_value.h	/^        String_type name_;$/;"	m	struct:json_spirit::Pair_impl
nameproxyInfo	../server/netbase.cpp	/^static proxyType nameproxyInfo;$/;"	v	file:
narrow	../server/algo/sph_groestl.h	/^		sph_u32 narrow[16];$/;"	m	union:__anon28::__anon29
narrow	../server/algo/sph_groestl.h	/^		sph_u32 narrow[32];$/;"	m	union:__anon30::__anon31
narrow	../server/algo/sph_jh.h	/^		sph_u32 narrow[32];$/;"	m	union:__anon32::__anon33
narrow	../server/algo/sph_keccak.h	/^		sph_u32 narrow[50];$/;"	m	union:__anon35::__anon36
nbits	../stratum/stratum.h	/^  char nbits[32];$/;"	m	struct:task_t
net_invalid	../proto/coin_proto.h	/^  time_t net_invalid;$/;"	m	struct:coin_iface_t
net_valid	../proto/coin_proto.h	/^  time_t net_valid;$/;"	m	struct:coin_iface_t
netid	../stratum/stratum.h	/^  shkey_t netid;$/;"	m	struct:user_t
netmsg_f	../server/netmsg.cpp	/^typedef void (*netmsg_f)(CNode *, cbuff);$/;"	t	file:
netmsg_map	../server/netmsg.cpp	/^typedef std::map<std:;string, netmsg_f> netmsg_map;$/;"	t	file:
new_false	../server/json/json_spirit_reader_template.h	/^        void new_false( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Semantic_actions
new_int	../server/json/json_spirit_reader_template.h	/^        void new_int( boost::int64_t i )$/;"	f	class:json_spirit::Semantic_actions
new_line	../server/json/json_spirit_writer_template.h	/^        void new_line()$/;"	f	class:json_spirit::Generator
new_name	../server/json/json_spirit_reader_template.h	/^        void new_name( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Semantic_actions
new_null	../server/json/json_spirit_reader_template.h	/^        void new_null( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Semantic_actions
new_real	../server/json/json_spirit_reader_template.h	/^        void new_real( double d )$/;"	f	class:json_spirit::Semantic_actions
new_str	../server/json/json_spirit_reader_template.h	/^        void new_str( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Semantic_actions
new_true	../server/json/json_spirit_reader_template.h	/^        void new_true( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Semantic_actions
new_uint64	../server/json/json_spirit_reader_template.h	/^        void new_uint64( boost::uint64_t ui )$/;"	f	class:json_spirit::Semantic_actions
next	../stratum/stratum.h	/^  struct task_t *next;$/;"	m	struct:task_t	typeref:struct:task_t::task_t
next	../stratum/stratum.h	/^  struct user_t *next;$/;"	m	struct:user_t	typeref:struct:user_t::user_t
node_depth	../server/algo/blake2s.h	/^	uint8_t  node_depth;    \/\/ 15$/;"	m	struct:__blake2s_param
node_offset	../server/algo/blake2s.h	/^	uint8_t  node_offset[6];\/\/ 14$/;"	m	struct:__blake2s_param
non_printable_to_string	../server/json/json_spirit_writer_template.h	/^    String_type non_printable_to_string( unsigned int c )$/;"	f	namespace:json_spirit
nonce	../server/block_cmpct.h	/^		uint64_t nonce;$/;"	m	class:CBlockHeaderAndShortTxIDs
null	../server/json/json_spirit_value.h	/^        static const Value_impl null;$/;"	m	class:json_spirit::Value_impl
null	../server/json/json_spirit_value.h	/^    const Value_impl< Config > Value_impl< Config >::null;$/;"	m	class:json_spirit::Value_impl
null_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
number_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
obj2json	../server/ext/exec.cpp	/^static void obj2json(shjson_t *obj, Object valObject)$/;"	f	file:
obj_to_map	../server/json/json_spirit_utils.h	/^    void obj_to_map( const Obj_t& obj, Map_t& mp_obj )$/;"	f	namespace:json_spirit
obj_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
object_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
octx	../server/algo/scrypt.c	/^	SHA256_CTX octx;$/;"	m	struct:HMAC_SHA256Context	file:
of	../blockchain/bc.h	/^  bcsize_t of; $/;"	m	struct:bc_hdr_t
of	../blockchain/bc.h	/^  bcsize_t of;$/;"	m	struct:bc_idx_t
offer	../server/block.h	/^    COffer offer;$/;"	m	class:CTransaction
offerFromOp	../server/ext/offer.cpp	/^string offerFromOp(int op) {$/;"	f
offer_CheckAltProofScript	../server/ext/offer.cpp	/^CScript offer_CheckAltProofScript(CIface *iface, COffer *offer, const CPubKey& retAddr)$/;"	f
offer_IsCompatibleIface	../server/ext/offer.cpp	/^static bool offer_IsCompatibleIface(CIface *iface)$/;"	f	file:
offer_SetBestLockTime	../server/ext/offer.cpp	/^static void offer_SetBestLockTime(CIface *iface, CWalletTx *wtx)$/;"	f	file:
offer_VerifyGenerateHier	../server/ext/offer.cpp	/^static bool offer_VerifyGenerateHier(CIface *iface, const CTransaction& tx, const uint160& hOffer)$/;"	f	file:
offer_VerifyGenerateOffer	../server/ext/offer.cpp	/^static int offer_VerifyGenerateOffer(CIface *iface, COffer *gen)$/;"	f	file:
offer_list	../server/ext/txext.h	/^typedef std::map<uint160, uint256> offer_list;$/;"	t
oldUnconfTxs	../server/txfeerate.h	/^    std::vector<int> oldUnconfTxs;$/;"	m	class:TxConfirmStats
one_round_big	../server/algo/sph_simd.c	/^one_round_big(u32 *state, u32 *w, int isp, int p0, int p1, int p2, int p3)$/;"	f	file:
one_round_small	../server/algo/sph_simd.c	/^one_round_small(u32 *state, u32 *w, int isp, int p0, int p1, int p2, int p3)$/;"	f	file:
op_accept	../unet/unet.h	/^  unet_addr_op op_accept;$/;"	m	struct:unet_bind_t
op_bind	../proto/coin_proto.h	/^  coin_f op_bind;$/;"	m	struct:coin_iface_t
op_block_new	../proto/coin_proto.h	/^  coin_f op_block_new;$/;"	m	struct:coin_iface_t
op_block_process	../proto/coin_proto.h	/^  coin_f op_block_process;$/;"	m	struct:coin_iface_t
op_block_templ	../proto/coin_proto.h	/^  coin_f op_block_templ;$/;"	m	struct:coin_iface_t
op_close	../unet/unet.h	/^  unet_addr_op op_close;$/;"	m	struct:unet_bind_t
op_init	../proto/coin_proto.h	/^  coin_f op_init;$/;"	m	struct:coin_iface_t
op_msg_recv	../proto/coin_proto.h	/^  coin_f op_msg_recv;$/;"	m	struct:coin_iface_t
op_msg_send	../proto/coin_proto.h	/^  coin_f op_msg_send;$/;"	m	struct:coin_iface_t
op_peer_add	../proto/coin_proto.h	/^  coin_f op_peer_add;$/;"	m	struct:coin_iface_t
op_peer_recv	../proto/coin_proto.h	/^  coin_f op_peer_recv;$/;"	m	struct:coin_iface_t
op_term	../proto/coin_proto.h	/^  coin_f op_term;$/;"	m	struct:coin_iface_t
op_timer	../unet/unet.h	/^  unet_op op_timer;$/;"	m	struct:unet_bind_t
op_tx_new	../proto/coin_proto.h	/^  coin_f op_tx_new;$/;"	m	struct:coin_iface_t
op_tx_pool	../proto/coin_proto.h	/^  coin_f op_tx_pool;$/;"	m	struct:coin_iface_t
opcodetype	../server/script.h	/^enum opcodetype$/;"	g
operator !	../server/bignum.h	/^    bool operator!() const$/;"	f	class:CBigNum
operator !	../server/bignum.h	/^    bool operator!() { return (pctx == NULL); }$/;"	f	class:CAutoBN_CTX
operator !	../server/serialize.h	/^    bool operator!()            { return (file == NULL); }$/;"	f	class:CAutoFile
operator !	../server/uint256.h	/^    bool operator!() const$/;"	f	class:base_uint
operator !=	../server/bignum.h	/^inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }$/;"	f
operator !=	../server/block.h	/^    friend bool operator!=(const CDiskTxPos& a, const CDiskTxPos& b)$/;"	f	class:CDiskTxPos
operator !=	../server/block.h	/^    friend bool operator!=(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator !=	../server/block.h	/^    friend bool operator!=(const CTransaction& a, const CTransaction& b)$/;"	f	class:CTransaction
operator !=	../server/block.h	/^    friend bool operator!=(const CTxIn& a, const CTxIn& b)$/;"	f	class:CTxIn
operator !=	../server/block.h	/^    friend bool operator!=(const CTxIndex& a, const CTxIndex& b)$/;"	f	class:CTxIndex
operator !=	../server/block.h	/^    friend bool operator!=(const CTxOut& a, const CTxOut& b)$/;"	f	class:CTxOut
operator !=	../server/ext/certificate.h	/^    friend bool operator!=(const CCert &a, const CCert &b) {$/;"	f	class:CCert
operator !=	../server/ext/certificate.h	/^    friend bool operator!=(const CLicense &a, const CLicense &b) {$/;"	f	class:CLicense
operator !=	../server/ext/offer.h	/^    friend bool operator!=(const COffer &a, const COffer &b) {$/;"	f	class:COffer
operator !=	../server/hdkey.h	/^    friend bool operator!=(const HDMasterPrivKey &a, const HDMasterPrivKey &b) {$/;"	f	class:HDMasterPrivKey
operator !=	../server/hdkey.h	/^    friend bool operator!=(const HDPrivKey &a, const HDPrivKey &b) {$/;"	f	class:HDPrivKey
operator !=	../server/hdkey.h	/^    friend bool operator!=(const HDPubKey &a, const HDPubKey &b) {$/;"	f	class:HDPubKey
operator !=	../server/key.h	/^		friend bool operator!=(const CPubKey &a, const CPubKey &b) { return a.vchPubKey != b.vchPubKey; }$/;"	f	class:CPubKey
operator !=	../server/matrix.h	/^    friend bool operator!=(const CTxMatrix& a, const CTxMatrix& b)$/;"	f	class:CTxMatrix
operator !=	../server/netbase.cpp	/^bool operator!=(const CNetAddr& a, const CNetAddr& b)$/;"	f
operator !=	../server/netbase.cpp	/^bool operator!=(const CService& a, const CService& b)$/;"	f
operator !=	../server/script.h	/^    inline bool operator!=(const CScriptNum& rhs) const { return operator!=(rhs.m_value); }$/;"	f	class:CScriptNum
operator !=	../server/script.h	/^    inline bool operator!=(const int64_t& rhs) const    { return m_value != rhs; }$/;"	f	class:CScriptNum
operator !=	../server/uint256.h	/^    friend inline bool operator!=(const base_uint& a, const base_uint& b)$/;"	f	class:base_uint
operator !=	../server/uint256.h	/^    friend inline bool operator!=(const base_uint& a, uint64 b)$/;"	f	class:base_uint
operator !=	../server/uint256.h	/^inline bool operator!=(const base_uint160& a, const uint160& b)         { return (base_uint160)a != (base_uint160)b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const base_uint256& a, const uint256& b)         { return (base_uint256)a != (base_uint256)b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const uint160& a, const base_uint160& b)         { return (base_uint160)a != (base_uint160)b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const uint160& a, const uint160& b)              { return (base_uint160)a != (base_uint160)b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const uint160& a, uint64 b)                           { return (base_uint160)a != b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const uint256& a, const base_uint256& b)         { return (base_uint256)a != (base_uint256)b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const uint256& a, const uint256& b)              { return (base_uint256)a != (base_uint256)b; }$/;"	f
operator !=	../server/uint256.h	/^inline bool operator!=(const uint256& a, uint64 b)                           { return (base_uint256)a != b; }$/;"	f
operator %	../server/bignum.h	/^inline const CBigNum operator%(const CBigNum& a, const CBigNum& b)$/;"	f
operator %=	../server/bignum.h	/^    CBigNum& operator%=(const CBigNum& b)$/;"	f	class:CBigNum
operator &	../server/bignum.h	/^    BN_CTX** operator&() { return &pctx; }$/;"	f	class:CAutoBN_CTX
operator &	../server/script.h	/^    inline CScriptNum operator&(   const CScriptNum& rhs) const { return operator&(rhs.m_value);   }$/;"	f	class:CScriptNum
operator &	../server/script.h	/^    inline CScriptNum operator&(   const int64_t& rhs)    const { return CScriptNum(m_value & rhs);}$/;"	f	class:CScriptNum
operator &	../server/serialize.h	/^    FILE** operator&()          { return &file; }$/;"	f	class:CAutoFile
operator &	../server/uint256.h	/^inline const uint160 operator&(const base_uint160& a, const base_uint160& b) { return uint160(a) &= b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint160 operator&(const base_uint160& a, const uint160& b) { return (base_uint160)a &  (base_uint160)b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint160 operator&(const uint160& a, const base_uint160& b) { return (base_uint160)a &  (base_uint160)b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint160 operator&(const uint160& a, const uint160& b)      { return (base_uint160)a &  (base_uint160)b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint256 operator&(const base_uint256& a, const base_uint256& b) { return uint256(a) &= b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint256 operator&(const base_uint256& a, const uint256& b) { return (base_uint256)a &  (base_uint256)b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint256 operator&(const uint256& a, const base_uint256& b) { return (base_uint256)a &  (base_uint256)b; }$/;"	f
operator &	../server/uint256.h	/^inline const uint256 operator&(const uint256& a, const uint256& b)      { return (base_uint256)a &  (base_uint256)b; }$/;"	f
operator &=	../server/script.h	/^    inline CScriptNum& operator&=( const CScriptNum& rhs)       { return operator&=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator &=	../server/script.h	/^    inline CScriptNum& operator&=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator &=	../server/uint256.h	/^    base_uint& operator&=(const base_uint& b)$/;"	f	class:base_uint
operator ()	../server/block.h	/^    bool operator()(CBlockIndex *pa, CBlockIndex *pb) {$/;"	f	struct:CBlockIndexWorkComparator
operator ()	../server/bolo/bolo_validation03.cpp	/^	inline bool operator() (const CTxIn& struct1, const CTxIn& struct2)$/;"	f	struct:less_than_key
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const CKeyID &id) const         { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const CNoDestination &id) const { return false; }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const CScriptID &id) const      { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessUnknown &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV0KeyHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV0ScriptHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV14KeyHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/coinaddr.h	/^bool inline CCoinAddrVisitor::operator()(const WitnessV14ScriptHash &id) const { return addr->Set(id); }$/;"	f	class:CCoinAddrVisitor
operator ()	../server/script.cpp	/^    bool operator()(const CKeyID &keyID) const { return keystore->HaveKey(keyID); }$/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const CKeyID& keyID) const $/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const CNoDestination &dest) const { return false; }$/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const CNoDestination& dest) const $/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const CScriptID &scriptID) const { return keystore->HaveCScript(scriptID); }$/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const CScriptID& scriptID) const $/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessUnknown& id) const { return false; }$/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessUnknown& id) const {$/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV0KeyHash& id) const $/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV0KeyHash& keyId) const $/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV0ScriptHash& id) const {$/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV0ScriptHash& scriptID) const $/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV14KeyHash& id) const $/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV14KeyHash& keyId) const $/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV14ScriptHash& id) const {$/;"	f	class:CScriptVisitor
operator ()	../server/script.cpp	/^    bool operator()(const WitnessV14ScriptHash& scriptID) const $/;"	f	class:CKeyStoreIsMineVisitor
operator ()	../server/wallet.cpp	/^	bool operator()(const pair<int64, pair<const CWalletTx*, unsigned int> >& t1,$/;"	f	struct:CompareValueOnly
operator ()	../test/testcoin_bip32.cpp	/^    TestVector& operator()(std::string pub, std::string prv, unsigned int nChild) {$/;"	f	struct:TestVector
operator ()	../test/testcoin_sip33.cpp	/^    sip33_TestVector& operator()(std::string pubkey, unsigned int nChild) {$/;"	f	struct:sip33_TestVector
operator *	../server/bignum.h	/^    BN_CTX& operator*() { return *pctx; }$/;"	f	class:CAutoBN_CTX
operator *	../server/bignum.h	/^inline const CBigNum operator*(const CBigNum& a, const CBigNum& b)$/;"	f
operator *	../server/serialize.h	/^    FILE& operator*()           { return *file; }$/;"	f	class:CAutoFile
operator *=	../server/bignum.h	/^    CBigNum& operator*=(const CBigNum& b)$/;"	f	class:CBigNum
operator +	../server/bignum.h	/^inline const CBigNum operator+(const CBigNum& a, const CBigNum& b)$/;"	f
operator +	../server/script.h	/^    friend CScript operator+(const CScript& a, const CScript& b)$/;"	f	class:CScript
operator +	../server/script.h	/^    inline CScriptNum operator+(   const CScriptNum& rhs) const { return operator+(rhs.m_value);   }$/;"	f	class:CScriptNum
operator +	../server/script.h	/^    inline CScriptNum operator+(   const int64_t& rhs)    const { return CScriptNum(m_value + rhs);}$/;"	f	class:CScriptNum
operator +	../server/serialize.h	/^    friend CDataStream operator+(const CDataStream& a, const CDataStream& b)$/;"	f	class:CDataStream
operator +	../server/uint256.h	/^inline const uint160 operator+(const base_uint160& a, const base_uint160& b) { return uint160(a) += b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint160 operator+(const base_uint160& a, const uint160& b) { return (base_uint160)a +  (base_uint160)b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint160 operator+(const uint160& a, const base_uint160& b) { return (base_uint160)a +  (base_uint160)b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint160 operator+(const uint160& a, const uint160& b)      { return (base_uint160)a +  (base_uint160)b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint256 operator+(const base_uint256& a, const base_uint256& b) { return uint256(a) += b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint256 operator+(const base_uint256& a, const uint256& b) { return (base_uint256)a +  (base_uint256)b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint256 operator+(const uint256& a, const base_uint256& b) { return (base_uint256)a +  (base_uint256)b; }$/;"	f
operator +	../server/uint256.h	/^inline const uint256 operator+(const uint256& a, const uint256& b)      { return (base_uint256)a +  (base_uint256)b; }$/;"	f
operator ++	../server/bignum.h	/^    CBigNum& operator++()$/;"	f	class:CBigNum
operator ++	../server/bignum.h	/^    const CBigNum operator++(int)$/;"	f	class:CBigNum
operator ++	../server/uint256.h	/^    base_uint& operator++()$/;"	f	class:base_uint
operator ++	../server/uint256.h	/^    const base_uint operator++(int)$/;"	f	class:base_uint
operator +=	../server/bignum.h	/^    CBigNum& operator+=(const CBigNum& b)$/;"	f	class:CBigNum
operator +=	../server/script.h	/^    CScript& operator+=(const CScript& b)$/;"	f	class:CScript
operator +=	../server/script.h	/^    inline CScriptNum& operator+=( const CScriptNum& rhs)       { return operator+=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator +=	../server/script.h	/^    inline CScriptNum& operator+=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator +=	../server/serialize.h	/^    CDataStream& operator+=(const CDataStream& b)$/;"	f	class:CDataStream
operator +=	../server/txfeerate.h	/^    CFeeRate& operator+=(const CFeeRate& a) { nCoinPerK += a.nCoinPerK; return *this; }$/;"	f	class:CFeeRate
operator +=	../server/uint256.h	/^    base_uint& operator+=(const base_uint& b)$/;"	f	class:base_uint
operator +=	../server/uint256.h	/^    base_uint& operator+=(uint64 b64)$/;"	f	class:base_uint
operator -	../server/bignum.h	/^inline const CBigNum operator-(const CBigNum& a)$/;"	f
operator -	../server/bignum.h	/^inline const CBigNum operator-(const CBigNum& a, const CBigNum& b)$/;"	f
operator -	../server/script.h	/^    inline CScriptNum operator-(   const CScriptNum& rhs) const { return operator-(rhs.m_value);   }$/;"	f	class:CScriptNum
operator -	../server/script.h	/^    inline CScriptNum operator-(   const int64_t& rhs)    const { return CScriptNum(m_value - rhs);}$/;"	f	class:CScriptNum
operator -	../server/script.h	/^    inline CScriptNum operator-()                         const$/;"	f	class:CScriptNum
operator -	../server/uint256.h	/^    const base_uint operator-() const$/;"	f	class:base_uint
operator -	../server/uint256.h	/^inline const uint160 operator-(const base_uint160& a, const base_uint160& b) { return uint160(a) -= b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint160 operator-(const base_uint160& a, const uint160& b) { return (base_uint160)a -  (base_uint160)b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint160 operator-(const uint160& a, const base_uint160& b) { return (base_uint160)a -  (base_uint160)b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint160 operator-(const uint160& a, const uint160& b)      { return (base_uint160)a -  (base_uint160)b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint256 operator-(const base_uint256& a, const base_uint256& b) { return uint256(a) -= b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint256 operator-(const base_uint256& a, const uint256& b) { return (base_uint256)a -  (base_uint256)b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint256 operator-(const uint256& a, const base_uint256& b) { return (base_uint256)a -  (base_uint256)b; }$/;"	f
operator -	../server/uint256.h	/^inline const uint256 operator-(const uint256& a, const uint256& b)      { return (base_uint256)a -  (base_uint256)b; }$/;"	f
operator --	../server/bignum.h	/^    CBigNum& operator--()$/;"	f	class:CBigNum
operator --	../server/bignum.h	/^    const CBigNum operator--(int)$/;"	f	class:CBigNum
operator --	../server/uint256.h	/^    base_uint& operator--()$/;"	f	class:base_uint
operator --	../server/uint256.h	/^    const base_uint operator--(int)$/;"	f	class:base_uint
operator -=	../server/bignum.h	/^    CBigNum& operator-=(const CBigNum& b)$/;"	f	class:CBigNum
operator -=	../server/script.h	/^    inline CScriptNum& operator-=( const CScriptNum& rhs)       { return operator-=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator -=	../server/script.h	/^    inline CScriptNum& operator-=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator -=	../server/uint256.h	/^    base_uint& operator-=(const base_uint& b)$/;"	f	class:base_uint
operator -=	../server/uint256.h	/^    base_uint& operator-=(uint64 b64)$/;"	f	class:base_uint
operator ->	../server/serialize.h	/^    FILE* operator->()          { return file; }$/;"	f	class:CAutoFile
operator /	../server/bignum.h	/^inline const CBigNum operator\/(const CBigNum& a, const CBigNum& b)$/;"	f
operator /=	../server/bignum.h	/^    CBigNum& operator\/=(const CBigNum& b)$/;"	f	class:CBigNum
operator <	../server/base58.h	/^		bool operator< (const CBase58Data& b58) const { return CompareTo(b58) <  0; }$/;"	f	class:CBase58Data
operator <	../server/bignum.h	/^inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }$/;"	f
operator <	../server/block.h	/^    friend bool operator<(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator <	../server/key.h	/^		friend bool operator<(const CPubKey &a, const CPubKey &b) { return a.vchPubKey < b.vchPubKey; }$/;"	f	class:CPubKey
operator <	../server/mruset.h	/^		bool inline friend operator<(const mruset<T>& a, const mruset<T>& b) { return a.set < b.set; }$/;"	f	class:mruset
operator <	../server/netbase.cpp	/^bool operator<(const CNetAddr& a, const CNetAddr& b)$/;"	f
operator <	../server/netbase.cpp	/^bool operator<(const CService& a, const CService& b)$/;"	f
operator <	../server/protocol.cpp	/^bool operator<(const CInv& a, const CInv& b)$/;"	f
operator <	../server/script.h	/^	friend bool operator<(const WitnessUnknown& w1, const WitnessUnknown& w2) {$/;"	f	struct:WitnessUnknown
operator <	../server/script.h	/^    friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }$/;"	f	class:CNoDestination
operator <	../server/script.h	/^    inline bool operator< (const CScriptNum& rhs) const { return operator< (rhs.m_value); }$/;"	f	class:CScriptNum
operator <	../server/script.h	/^    inline bool operator< (const int64_t& rhs) const    { return m_value <  rhs; }$/;"	f	class:CScriptNum
operator <	../server/txfeerate.h	/^    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK < b.nCoinPerK; }$/;"	f	class:CFeeRate
operator <	../server/txmempool.h	/^    bool operator < (const CPoolTx& ptx) const$/;"	f	class:CPoolTx
operator <	../server/uint256.h	/^    friend inline bool operator<(const base_uint& a, const base_uint& b)$/;"	f	class:base_uint
operator <	../server/uint256.h	/^inline bool operator<(const base_uint160& a, const uint160& b)          { return (base_uint160)a <  (base_uint160)b; }$/;"	f
operator <	../server/uint256.h	/^inline bool operator<(const base_uint256& a, const uint256& b)          { return (base_uint256)a <  (base_uint256)b; }$/;"	f
operator <	../server/uint256.h	/^inline bool operator<(const uint160& a, const base_uint160& b)          { return (base_uint160)a <  (base_uint160)b; }$/;"	f
operator <	../server/uint256.h	/^inline bool operator<(const uint160& a, const uint160& b)               { return (base_uint160)a <  (base_uint160)b; }$/;"	f
operator <	../server/uint256.h	/^inline bool operator<(const uint256& a, const base_uint256& b)          { return (base_uint256)a <  (base_uint256)b; }$/;"	f
operator <	../server/uint256.h	/^inline bool operator<(const uint256& a, const uint256& b)               { return (base_uint256)a <  (base_uint256)b; }$/;"	f
operator <<	../server/bignum.h	/^inline const CBigNum operator<<(const CBigNum& a, unsigned int shift)$/;"	f
operator <<	../server/script.h	/^    CScript& operator<<(const CBigNum& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const CPubKey& key)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const CScript& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const CScriptNum& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const std::vector<unsigned char>& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const uint160& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(const uint256& b)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(int b)            { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(int64 b)          { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(long b)           { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(opcodetype opcode)$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(short b)          { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(signed char b)    { return push_int64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(uint64 b)         { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned char b)  { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned int b)   { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned long b)  { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/script.h	/^    CScript& operator<<(unsigned short b) { return push_uint64(b); }$/;"	f	class:CScript
operator <<	../server/serialize.h	/^    CAutoFile& operator<<(const T& obj)$/;"	f	class:CAutoFile
operator <<	../server/serialize.h	/^    CDataStream& operator<<(const T& obj)$/;"	f	class:CDataStream
operator <<	../server/uint256.h	/^inline const uint160 operator<<(const base_uint160& a, unsigned int shift)   { return uint160(a) <<= shift; }$/;"	f
operator <<	../server/uint256.h	/^inline const uint160 operator<<(const uint160& a, unsigned int shift)        { return uint160(a) <<= shift; }$/;"	f
operator <<	../server/uint256.h	/^inline const uint256 operator<<(const base_uint256& a, unsigned int shift)   { return uint256(a) <<= shift; }$/;"	f
operator <<	../server/uint256.h	/^inline const uint256 operator<<(const uint256& a, unsigned int shift)        { return uint256(a) <<= shift; }$/;"	f
operator <<	../server/util.h	/^    CHashWriter& operator<<(const T& obj) {$/;"	f	class:CHashWriter
operator <<=	../server/bignum.h	/^    CBigNum& operator<<=(unsigned int shift)$/;"	f	class:CBigNum
operator <<=	../server/uint256.h	/^    base_uint& operator<<=(unsigned int shift)$/;"	f	class:base_uint
operator <=	../server/base58.h	/^		bool operator<=(const CBase58Data& b58) const { return CompareTo(b58) <= 0; }$/;"	f	class:CBase58Data
operator <=	../server/bignum.h	/^inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }$/;"	f
operator <=	../server/script.h	/^    inline bool operator<=(const CScriptNum& rhs) const { return operator<=(rhs.m_value); }$/;"	f	class:CScriptNum
operator <=	../server/script.h	/^    inline bool operator<=(const int64_t& rhs) const    { return m_value <= rhs; }$/;"	f	class:CScriptNum
operator <=	../server/txfeerate.h	/^    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK <= b.nCoinPerK; }$/;"	f	class:CFeeRate
operator <=	../server/uint256.h	/^    friend inline bool operator<=(const base_uint& a, const base_uint& b)$/;"	f	class:base_uint
operator <=	../server/uint256.h	/^inline bool operator<=(const base_uint160& a, const uint160& b)         { return (base_uint160)a <= (base_uint160)b; }$/;"	f
operator <=	../server/uint256.h	/^inline bool operator<=(const base_uint256& a, const uint256& b)         { return (base_uint256)a <= (base_uint256)b; }$/;"	f
operator <=	../server/uint256.h	/^inline bool operator<=(const uint160& a, const base_uint160& b)         { return (base_uint160)a <= (base_uint160)b; }$/;"	f
operator <=	../server/uint256.h	/^inline bool operator<=(const uint160& a, const uint160& b)              { return (base_uint160)a <= (base_uint160)b; }$/;"	f
operator <=	../server/uint256.h	/^inline bool operator<=(const uint256& a, const base_uint256& b)         { return (base_uint256)a <= (base_uint256)b; }$/;"	f
operator <=	../server/uint256.h	/^inline bool operator<=(const uint256& a, const uint256& b)              { return (base_uint256)a <= (base_uint256)b; }$/;"	f
operator =	../server/bignum.h	/^    BN_CTX* operator=(BN_CTX* pnew) { return pctx = pnew; }$/;"	f	class:CAutoBN_CTX
operator =	../server/bignum.h	/^    CBigNum& operator=(const CBigNum& b)$/;"	f	class:CBigNum
operator =	../server/dikey.h	/^    DIKey& operator=(const DIKey& b)$/;"	f	class:DIKey
operator =	../server/eckey.h	/^    ECKey& operator=(const ECKey& b)$/;"	f	class:ECKey
operator =	../server/ext/alias.h	/^    CAlias operator=(const CAlias &b)$/;"	f	class:CAlias
operator =	../server/ext/altchain.h	/^    CAltChain operator=(const CAltChain &b)$/;"	f	class:CAltChain
operator =	../server/ext/asset.h	/^    CAsset operator=(const CAsset &b)$/;"	f	class:CAsset
operator =	../server/ext/certificate.h	/^    CCert operator=(const CCert &b) $/;"	f	class:CCert
operator =	../server/ext/certificate.h	/^    CIdent operator=(const CIdent &b)$/;"	f	class:CIdent
operator =	../server/ext/certificate.h	/^    CLicense operator=(const CLicense &b) $/;"	f	class:CLicense
operator =	../server/ext/channel.h	/^    CChannel operator=(const CChannel &b)$/;"	f	class:CChannel
operator =	../server/ext/channel.h	/^    CChannelKey operator=(const CChannelKey &b)$/;"	f	class:CChannelKey
operator =	../server/ext/context.h	/^    CContext operator=(const CContext &b)$/;"	f	class:CContext
operator =	../server/ext/exec.h	/^    CExec operator=(const CExec &b)$/;"	f	class:CExec
operator =	../server/ext/exec.h	/^    CExecCall operator=(const CExecCall &b)$/;"	f	class:CExecCall
operator =	../server/ext/exec.h	/^    CExecCheckpoint operator=(const CExecCheckpoint &b)$/;"	f	class:CExecCheckpoint
operator =	../server/ext/ext_param.h	/^    CParam operator=(const CParam &b)$/;"	f	class:CParam
operator =	../server/ext/offer.h	/^    COffer operator=(const COffer &b)$/;"	f	class:COffer
operator =	../server/ext/txext.h	/^    CExtCore operator=(const CExtCore &b)$/;"	f	class:CExtCore
operator =	../server/ext/txext.h	/^    CSign operator=(const CSign &b)$/;"	f	class:CSign
operator =	../server/hdkey.h	/^    HDMasterPrivKey operator=(const HDMasterPrivKey &b)$/;"	f	class:HDMasterPrivKey
operator =	../server/hdkey.h	/^    HDPrivKey operator=(const HDPrivKey &b)$/;"	f	class:HDPrivKey
operator =	../server/hdkey.h	/^    HDPubKey operator=(const HDPubKey &b)$/;"	f	class:HDPubKey
operator =	../server/json/json_spirit_value.h	/^    Value_impl< Config >& Value_impl< Config >::operator=( const Value_impl& lhs )$/;"	f	class:json_spirit::Value_impl
operator =	../server/key.h	/^    CKey& operator=(const CKey& b)$/;"	f	class:CKey
operator =	../server/matrix.h	/^    CTxMatrix operator=(const CTxMatrix &b)$/;"	f	class:CTxMatrix
operator =	../server/script.h	/^    inline CScriptNum& operator=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator =	../server/serialize.h	/^    FILE* operator=(FILE* pnew) { return file = pnew; }$/;"	f	class:CAutoFile
operator =	../server/uint256.h	/^    base_uint& operator=(uint64 b)$/;"	f	class:base_uint
operator =	../server/uint256.h	/^    uint160& operator=(const basetype& b)$/;"	f	class:uint160
operator =	../server/uint256.h	/^    uint160& operator=(const shkey_t& b)$/;"	f	class:uint160
operator =	../server/uint256.h	/^    uint160& operator=(uint64 b)$/;"	f	class:uint160
operator =	../server/uint256.h	/^    uint256& operator=(const basetype& b)$/;"	f	class:uint256
operator =	../server/uint256.h	/^    uint256& operator=(uint64 b)$/;"	f	class:uint256
operator ==	../server/account.h	/^		friend bool operator==(const CAccountCache& a, const CAccountCache& b)$/;"	f	class:CAccountCache
operator ==	../server/base58.h	/^		bool operator==(const CBase58Data& b58) const { return CompareTo(b58) == 0; }$/;"	f	class:CBase58Data
operator ==	../server/bignum.h	/^inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }$/;"	f
operator ==	../server/block.h	/^    friend bool operator==(const CBlockHeader& a, const CBlockHeader& b)$/;"	f	class:CBlockHeader
operator ==	../server/block.h	/^    friend bool operator==(const CDiskTxPos& a, const CDiskTxPos& b)$/;"	f	class:CDiskTxPos
operator ==	../server/block.h	/^    friend bool operator==(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator ==	../server/block.h	/^    friend bool operator==(const CTransaction& a, const CTransaction& b)$/;"	f	class:CTransaction
operator ==	../server/block.h	/^    friend bool operator==(const CTransactionCore& a, const CTransactionCore& b)$/;"	f	class:CTransactionCore
operator ==	../server/block.h	/^    friend bool operator==(const CTxIn& a, const CTxIn& b)$/;"	f	class:CTxIn
operator ==	../server/block.h	/^    friend bool operator==(const CTxIndex& a, const CTxIndex& b)$/;"	f	class:CTxIndex
operator ==	../server/block.h	/^    friend bool operator==(const CTxOut& a, const CTxOut& b)$/;"	f	class:CTxOut
operator ==	../server/dikey.h	/^		friend bool operator==(const DIKey &a, const DIKey &b) { return a.vch == b.vch; }$/;"	f	class:DIKey
operator ==	../server/dikey.h	/^	friend bool operator==(const DIExtKey& a, const DIExtKey& b)$/;"	f	struct:DIExtKey
operator ==	../server/dikey.h	/^	friend bool operator==(const DIExtPubKey &a, const DIExtPubKey &b)$/;"	f	struct:DIExtPubKey
operator ==	../server/eckey.h	/^		friend bool operator==(const ECKey &a, const ECKey &b) { return a.vch == b.vch; }$/;"	f	class:ECKey
operator ==	../server/eckey.h	/^	friend bool operator==(const ECExtKey& a, const ECExtKey& b)$/;"	f	struct:ECExtKey
operator ==	../server/eckey.h	/^	friend bool operator==(const ECExtPubKey &a, const ECExtPubKey &b)$/;"	f	struct:ECExtPubKey
operator ==	../server/ext/alias.h	/^    friend bool operator==(const CAlias &a, const CAlias &b)$/;"	f	class:CAlias
operator ==	../server/ext/altchain.h	/^		friend bool operator==(const CAltBlock& a, const CAltBlock& b)$/;"	f	class:CAltBlock
operator ==	../server/ext/altchain.h	/^    friend bool operator==(const CAltChain &a, const CAltChain &b)$/;"	f	class:CAltChain
operator ==	../server/ext/altchain.h	/^    friend bool operator==(const CAltTx& a, const CAltTx& b)$/;"	f	class:CAltTx
operator ==	../server/ext/asset.h	/^    friend bool operator==(const CAsset &a, const CAsset &b)$/;"	f	class:CAsset
operator ==	../server/ext/certificate.h	/^    friend bool operator==(const CCert &a, const CCert &b) {$/;"	f	class:CCert
operator ==	../server/ext/certificate.h	/^    friend bool operator==(const CIdent &a, const CIdent &b)$/;"	f	class:CIdent
operator ==	../server/ext/certificate.h	/^    friend bool operator==(const CLicense &a, const CLicense &b) {$/;"	f	class:CLicense
operator ==	../server/ext/channel.h	/^    friend bool operator==(const CChannel &a, const CChannel &b)$/;"	f	class:CChannel
operator ==	../server/ext/channel.h	/^    friend bool operator==(const CChannelKey &a, const CChannelKey &b)$/;"	f	class:CChannelKey
operator ==	../server/ext/context.h	/^    friend bool operator==(const CContext &a, const CContext &b)$/;"	f	class:CContext
operator ==	../server/ext/exec.h	/^    friend bool operator==(const CExec &a, const CExec &b)$/;"	f	class:CExec
operator ==	../server/ext/exec.h	/^    friend bool operator==(const CExecCall &a, const CExecCall &b)$/;"	f	class:CExecCall
operator ==	../server/ext/exec.h	/^    friend bool operator==(const CExecCheckpoint &a, const CExecCheckpoint &b)$/;"	f	class:CExecCheckpoint
operator ==	../server/ext/exec.h	/^    friend bool operator==(const CExecCore &a, const CExecCore &b)$/;"	f	class:CExecCore
operator ==	../server/ext/ext_param.h	/^    friend bool operator==(const CParam &a, const CParam &b)$/;"	f	class:CParam
operator ==	../server/ext/offer.h	/^    friend bool operator==(const COffer &a, const COffer &b) {$/;"	f	class:COffer
operator ==	../server/ext/txext.h	/^    friend bool operator==(const CExtCore &a, const CExtCore &b)$/;"	f	class:CExtCore
operator ==	../server/ext/txext.h	/^    friend bool operator==(const CSign &a, const CSign &b)$/;"	f	class:CSign
operator ==	../server/hdkey.h	/^    friend bool operator==(const HDMasterPrivKey &a, const HDMasterPrivKey &b) $/;"	f	class:HDMasterPrivKey
operator ==	../server/hdkey.h	/^    friend bool operator==(const HDPrivKey &a, const HDPrivKey &b) $/;"	f	class:HDPrivKey
operator ==	../server/hdkey.h	/^    friend bool operator==(const HDPubKey &a, const HDPubKey &b) $/;"	f	class:HDPubKey
operator ==	../server/json/json_spirit_error_position.h	/^    inline bool Error_position::operator==( const Error_position& lhs ) const$/;"	f	class:json_spirit::Error_position
operator ==	../server/json/json_spirit_value.h	/^    bool Pair_impl< Config >::operator==( const Pair_impl< Config >& lhs ) const$/;"	f	class:json_spirit::Pair_impl
operator ==	../server/json/json_spirit_value.h	/^    bool Value_impl< Config >::operator==( const Value_impl& lhs ) const$/;"	f	class:json_spirit::Value_impl
operator ==	../server/key.h	/^		friend bool operator==(const CPubKey &a, const CPubKey &b) { return a.vchPubKey == b.vchPubKey; }$/;"	f	class:CPubKey
operator ==	../server/matrix.h	/^    friend bool operator==(const CTxMatrix& a, const CTxMatrix& b)$/;"	f	class:CTxMatrix
operator ==	../server/mruset.h	/^		bool inline friend operator==(const mruset<T>& a, const mruset<T>& b) { return a.set == b.set; }$/;"	f	class:mruset
operator ==	../server/mruset.h	/^		bool inline friend operator==(const mruset<T>& a, const std::set<T>& b) { return a.set == b; }$/;"	f	class:mruset
operator ==	../server/netbase.cpp	/^bool operator==(const CNetAddr& a, const CNetAddr& b)$/;"	f
operator ==	../server/netbase.cpp	/^bool operator==(const CService& a, const CService& b)$/;"	f
operator ==	../server/script.h	/^	friend bool operator==(const WitnessUnknown& w1, const WitnessUnknown& w2) {$/;"	f	struct:WitnessUnknown
operator ==	../server/script.h	/^    friend bool operator==(const CNoDestination &a, const CNoDestination &b) { return true; }$/;"	f	class:CNoDestination
operator ==	../server/script.h	/^    inline bool operator==(const CScriptNum& rhs) const { return operator==(rhs.m_value); }$/;"	f	class:CScriptNum
operator ==	../server/script.h	/^    inline bool operator==(const int64_t& rhs) const    { return m_value == rhs; }$/;"	f	class:CScriptNum
operator ==	../server/shlib.h	/^    friend bool operator==(const SHPeer &a, const SHPeer &b)$/;"	f	class:SHPeer
operator ==	../server/shlib.h	/^    friend bool operator==(const SHSig &a, const SHSig &b)$/;"	f	class:SHSig
operator ==	../server/txfeerate.h	/^    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK == b.nCoinPerK; }$/;"	f	class:CFeeRate
operator ==	../server/txmempool.h	/^    bool operator == (const CPoolTx& b) const$/;"	f	class:CPoolTx
operator ==	../server/uint256.h	/^    friend inline bool operator==(const base_uint& a, const base_uint& b)$/;"	f	class:base_uint
operator ==	../server/uint256.h	/^    friend inline bool operator==(const base_uint& a, uint64 b)$/;"	f	class:base_uint
operator ==	../server/uint256.h	/^inline bool operator==(const base_uint160& a, const uint160& b)         { return (base_uint160)a == (base_uint160)b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const base_uint256& a, const uint256& b)         { return (base_uint256)a == (base_uint256)b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const uint160& a, const base_uint160& b)         { return (base_uint160)a == (base_uint160)b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const uint160& a, const uint160& b)              { return (base_uint160)a == (base_uint160)b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const uint160& a, uint64 b)                           { return (base_uint160)a == b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const uint256& a, const base_uint256& b)         { return (base_uint256)a == (base_uint256)b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const uint256& a, const uint256& b)              { return (base_uint256)a == (base_uint256)b; }$/;"	f
operator ==	../server/uint256.h	/^inline bool operator==(const uint256& a, uint64 b)                           { return (base_uint256)a == b; }$/;"	f
operator >	../server/base58.h	/^		bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }$/;"	f	class:CBase58Data
operator >	../server/bignum.h	/^inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }$/;"	f
operator >	../server/script.h	/^    inline bool operator> (const CScriptNum& rhs) const { return operator> (rhs.m_value); }$/;"	f	class:CScriptNum
operator >	../server/script.h	/^    inline bool operator> (const int64_t& rhs) const    { return m_value >  rhs; }$/;"	f	class:CScriptNum
operator >	../server/txfeerate.h	/^    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK > b.nCoinPerK; }$/;"	f	class:CFeeRate
operator >	../server/txmempool.h	/^    bool operator > (const CPoolTx& ptx) const$/;"	f	class:CPoolTx
operator >	../server/uint256.h	/^    friend inline bool operator>(const base_uint& a, const base_uint& b)$/;"	f	class:base_uint
operator >	../server/uint256.h	/^inline bool operator>(const base_uint160& a, const uint160& b)          { return (base_uint160)a >  (base_uint160)b; }$/;"	f
operator >	../server/uint256.h	/^inline bool operator>(const base_uint256& a, const uint256& b)          { return (base_uint256)a >  (base_uint256)b; }$/;"	f
operator >	../server/uint256.h	/^inline bool operator>(const uint160& a, const base_uint160& b)          { return (base_uint160)a >  (base_uint160)b; }$/;"	f
operator >	../server/uint256.h	/^inline bool operator>(const uint160& a, const uint160& b)               { return (base_uint160)a >  (base_uint160)b; }$/;"	f
operator >	../server/uint256.h	/^inline bool operator>(const uint256& a, const base_uint256& b)          { return (base_uint256)a >  (base_uint256)b; }$/;"	f
operator >	../server/uint256.h	/^inline bool operator>(const uint256& a, const uint256& b)               { return (base_uint256)a >  (base_uint256)b; }$/;"	f
operator >=	../server/base58.h	/^		bool operator>=(const CBase58Data& b58) const { return CompareTo(b58) >= 0; }$/;"	f	class:CBase58Data
operator >=	../server/bignum.h	/^inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }$/;"	f
operator >=	../server/script.h	/^    inline bool operator>=(const CScriptNum& rhs) const { return operator>=(rhs.m_value); }$/;"	f	class:CScriptNum
operator >=	../server/script.h	/^    inline bool operator>=(const int64_t& rhs) const    { return m_value >= rhs; }$/;"	f	class:CScriptNum
operator >=	../server/txfeerate.h	/^    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nCoinPerK >= b.nCoinPerK; }$/;"	f	class:CFeeRate
operator >=	../server/uint256.h	/^    friend inline bool operator>=(const base_uint& a, const base_uint& b)$/;"	f	class:base_uint
operator >=	../server/uint256.h	/^inline bool operator>=(const base_uint160& a, const uint160& b)         { return (base_uint160)a >= (base_uint160)b; }$/;"	f
operator >=	../server/uint256.h	/^inline bool operator>=(const base_uint256& a, const uint256& b)         { return (base_uint256)a >= (base_uint256)b; }$/;"	f
operator >=	../server/uint256.h	/^inline bool operator>=(const uint160& a, const base_uint160& b)         { return (base_uint160)a >= (base_uint160)b; }$/;"	f
operator >=	../server/uint256.h	/^inline bool operator>=(const uint160& a, const uint160& b)              { return (base_uint160)a >= (base_uint160)b; }$/;"	f
operator >=	../server/uint256.h	/^inline bool operator>=(const uint256& a, const base_uint256& b)         { return (base_uint256)a >= (base_uint256)b; }$/;"	f
operator >=	../server/uint256.h	/^inline bool operator>=(const uint256& a, const uint256& b)              { return (base_uint256)a >= (base_uint256)b; }$/;"	f
operator >>	../server/bignum.h	/^inline const CBigNum operator>>(const CBigNum& a, unsigned int shift)$/;"	f
operator >>	../server/serialize.h	/^    CAutoFile& operator>>(T& obj)$/;"	f	class:CAutoFile
operator >>	../server/serialize.h	/^    CDataStream& operator>>(T& obj)$/;"	f	class:CDataStream
operator >>	../server/uint256.h	/^inline const uint160 operator>>(const base_uint160& a, unsigned int shift)   { return uint160(a) >>= shift; }$/;"	f
operator >>	../server/uint256.h	/^inline const uint160 operator>>(const uint160& a, unsigned int shift)        { return uint160(a) >>= shift; }$/;"	f
operator >>	../server/uint256.h	/^inline const uint256 operator>>(const base_uint256& a, unsigned int shift)   { return uint256(a) >>= shift; }$/;"	f
operator >>	../server/uint256.h	/^inline const uint256 operator>>(const uint256& a, unsigned int shift)        { return uint256(a) >>= shift; }$/;"	f
operator >>=	../server/bignum.h	/^    CBigNum& operator>>=(unsigned int shift)$/;"	f	class:CBigNum
operator >>=	../server/uint256.h	/^    base_uint& operator>>=(unsigned int shift)$/;"	f	class:base_uint
operator BN_CTX*	../server/bignum.h	/^    operator BN_CTX*() { return pctx; }$/;"	f	class:CAutoBN_CTX
operator FILE*	../server/serialize.h	/^    operator FILE*()            { return file; }$/;"	f	class:CAutoFile
operator []	../server/serialize.h	/^    const_reference operator[](size_type pos) const  { return vch[pos + nReadPos]; }$/;"	f	class:CDataStream
operator []	../server/serialize.h	/^    reference operator[](size_type pos)              { return vch[pos + nReadPos]; }$/;"	f	class:CDataStream
operator ^	../server/uint256.h	/^inline const uint160 operator^(const base_uint160& a, const base_uint160& b) { return uint160(a) ^= b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint160 operator^(const base_uint160& a, const uint160& b) { return (base_uint160)a ^  (base_uint160)b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint160 operator^(const uint160& a, const base_uint160& b) { return (base_uint160)a ^  (base_uint160)b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint160 operator^(const uint160& a, const uint160& b)      { return (base_uint160)a ^  (base_uint160)b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint256 operator^(const base_uint256& a, const base_uint256& b) { return uint256(a) ^= b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint256 operator^(const base_uint256& a, const uint256& b) { return (base_uint256)a ^  (base_uint256)b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint256 operator^(const uint256& a, const base_uint256& b) { return (base_uint256)a ^  (base_uint256)b; }$/;"	f
operator ^	../server/uint256.h	/^inline const uint256 operator^(const uint256& a, const uint256& b)      { return (base_uint256)a ^  (base_uint256)b; }$/;"	f
operator ^=	../server/uint256.h	/^    base_uint& operator^=(const base_uint& b)$/;"	f	class:base_uint
operator ^=	../server/uint256.h	/^    base_uint& operator^=(uint64 b)$/;"	f	class:base_uint
operator bool	../server/sync.h	/^		operator bool() {$/;"	f	class:CSemaphoreGrant
operator bool	../server/sync.h	/^		operator bool()$/;"	f	class:CMutexLock
operator |	../server/uint256.h	/^inline const uint160 operator|(const base_uint160& a, const base_uint160& b) { return uint160(a) |= b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint160 operator|(const base_uint160& a, const uint160& b) { return (base_uint160)a |  (base_uint160)b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint160 operator|(const uint160& a, const base_uint160& b) { return (base_uint160)a |  (base_uint160)b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint160 operator|(const uint160& a, const uint160& b)      { return (base_uint160)a |  (base_uint160)b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint256 operator|(const base_uint256& a, const base_uint256& b) { return uint256(a) |= b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint256 operator|(const base_uint256& a, const uint256& b) { return (base_uint256)a |  (base_uint256)b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint256 operator|(const uint256& a, const base_uint256& b) { return (base_uint256)a |  (base_uint256)b; }$/;"	f
operator |	../server/uint256.h	/^inline const uint256 operator|(const uint256& a, const uint256& b)      { return (base_uint256)a |  (base_uint256)b; }$/;"	f
operator |=	../server/uint256.h	/^    base_uint& operator|=(const base_uint& b)$/;"	f	class:base_uint
operator |=	../server/uint256.h	/^    base_uint& operator|=(uint64 b)$/;"	f	class:base_uint
operator ~	../server/uint256.h	/^    const base_uint operator~() const$/;"	f	class:base_uint
options	../server/leveldb.h	/^    leveldb::Options options;$/;"	m	class:CLevelDB
origin	../server/ext/channel.h	/^    CChannelKey origin;$/;"	m	class:CChannel
originPeer	../server/block.h	/^    mutable CNode *originPeer;$/;"	m	class:CBlock
orphan_map	../server/color/color_block.cpp	/^typedef map<uint256, uint256> orphan_map;$/;"	t	file:
orphan_map	../server/emc2/emc2_block.cpp	/^typedef map<uint256, uint256> orphan_map;$/;"	t	file:
orphan_map	../server/ltc/ltc_block.cpp	/^typedef map<uint256, uint256> orphan_map;$/;"	t	file:
orphan_map	../server/shc/shc_block.cpp	/^typedef map<uint256, uint256> orphan_map;$/;"	t	file:
orphan_map	../server/test/test_block.cpp	/^typedef map<uint256, uint256> orphan_map;$/;"	t	file:
orphan_map	../server/testnet/testnet_block.cpp	/^typedef map<uint256, uint256> orphan_map;$/;"	t	file:
os_	../server/json/json_spirit_writer_template.h	/^        Ostream_type& os_;$/;"	m	class:json_spirit::Generator
other	../server/allocators.h	/^    { typedef secure_allocator<_Other> other; };$/;"	t	struct:secure_allocator::rebind
other	../server/allocators.h	/^    { typedef zero_after_free_allocator<_Other> other; };$/;"	t	struct:zero_after_free_allocator::rebind
outer	../server/algo/hmac_sha512.h	/^    CSHA512 outer;$/;"	m	class:CHMAC_SHA512
output	../server/json/json_spirit_writer_template.h	/^        void output( bool b )$/;"	f	class:json_spirit::Generator
output	../server/json/json_spirit_writer_template.h	/^        void output( const Array_type& arr )$/;"	f	class:json_spirit::Generator
output	../server/json/json_spirit_writer_template.h	/^        void output( const Obj_member_type& member )$/;"	f	class:json_spirit::Generator
output	../server/json/json_spirit_writer_template.h	/^        void output( const Object_type& obj )$/;"	f	class:json_spirit::Generator
output	../server/json/json_spirit_writer_template.h	/^        void output( const String_type& s )$/;"	f	class:json_spirit::Generator
output	../server/json/json_spirit_writer_template.h	/^        void output( const Value_type& value )$/;"	f	class:json_spirit::Generator
output_array_or_obj	../server/json/json_spirit_writer_template.h	/^        void output_array_or_obj( const T& t, Char_type start_char, Char_type end_char )$/;"	f	class:json_spirit::Generator
output_int	../server/json/json_spirit_writer_template.h	/^        void output_int( const Value_type& value )$/;"	f	class:json_spirit::Generator
overflow	../server/txmempool.h	/^    pool_map overflow;$/;"	m	class:CPool
pSHA256InitState	../server/main.cpp	/^static const unsigned int pSHA256InitState[8] =$/;"	v	file:
page	../stratum/stratum_http.h	/^	char *page;$/;"	m	struct:http_t
pair_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
param	../server/block.h	/^		CParam param; $/;"	m	class:CTransaction
param1	../server/net.h	/^    void* param1;$/;"	m	class:CRequestTracker
paramFromOp	../server/ext/ext_param.cpp	/^string paramFromOp(int op) {$/;"	f
params	../server/rpc/rpc_parse.cpp	/^    Array params;$/;"	m	class:JSONRequest	file:
params_Bech32HRP	../server/coinaddr.cpp	/^static bool params_Bech32HRP(int ifaceIndex, string strName)$/;"	f	file:
parse	../server/rpc/rpc_parse.cpp	/^void JSONRequest::parse(const Value& valRequest)$/;"	f	class:JSONRequest
pass	../stratum/stratum.h	/^  char pass[256];$/;"	m	struct:user_t
path	../server/chain.h	/^  char path[PATH_MAX+1];$/;"	m	struct:ChainOp
pathAddr	../server/addrman.h	/^    boost::filesystem::path pathAddr;$/;"	m	class:CAddrDB
pathEnv	../server/txidx.h	/^    boost::filesystem::path pathEnv;$/;"	m	class:CDBEnv
pay_channel_tx	../server/ext/channel.cpp	/^int pay_channel_tx(CIface *iface, string strAccount, uint160 hChan, CCoinAddr pay_dest, int64 nValue, CWalletTx& wtx)$/;"	f
pbegin	../server/serialize.h	/^    char* pbegin;$/;"	m	class:CFlatData
pchCommand	../server/protocol.h	/^			char pchCommand[COMMAND_SIZE];$/;"	m	class:CMessageHeader
pchGarliCat	../server/netbase.cpp	/^static const unsigned char pchGarliCat[] = {0xFD,0x60,0xDB,0x4D,0xDD,0xB5};$/;"	v	file:
pchIPv4	../server/netbase.cpp	/^static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };$/;"	v	file:
pchMessageStart	../server/protocol.h	/^			char pchMessageStart[MESSAGE_START_SIZE];$/;"	m	class:CMessageHeader
pchOnionCat	../server/netbase.cpp	/^static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};$/;"	v	file:
pctx	../server/bignum.h	/^    BN_CTX* pctx;$/;"	m	class:CAutoBN_CTX
pdb	../server/leveldb.h	/^    leveldb::DB *pdb;$/;"	m	class:CLevelDB
pdb	../server/txidx.h	/^    Db* pdb;$/;"	m	class:CDB
peer	../server/ext/channel.h	/^    CChannelKey peer;$/;"	m	class:CChannel
peer	../server/net.h	/^		CNode *peer;$/;"	m	class:CValidateState
peer	../server/shlib.h	/^    shpeer_t peer;$/;"	m	class:SHPeer
peer	../stratum/stratum.h	/^  scrypt_peer peer;$/;"	m	struct:user_t
peer	../unet/unet.h	/^  shpeer_t peer;$/;"	m	struct:unet_bind_t
peer	../unet/unet_peerdb.c	/^  shpeer_t peer;$/;"	m	struct:peerdb_t	file:
peer_db	../unet/unet.h	/^  bc_t *peer_db;$/;"	m	struct:unet_bind_t
peerdb_del	../unet/unet_peerdb.c	/^static void peerdb_del(int mode, shkey_t *key)$/;"	f	file:
peerdb_key_hash	../unet/unet_peerdb.c	/^static void peerdb_key_hash(shkey_t *key, bc_hash_t *hash_p)$/;"	f	file:
peerdb_list_free	../unet/unet_peerdb.c	/^static void peerdb_list_free(peerdb_t **p_list)$/;"	f	file:
peerdb_mode_label	../unet/unet_peerdb.c	/^char *peerdb_mode_label(int mode)$/;"	f
peerdb_new	../unet/unet_peerdb.c	/^static peerdb_t *peerdb_new(int mode, shpeer_t *peer)$/;"	f	file:
peerdb_new_host	../unet/unet_peerdb.c	/^static peerdb_t *peerdb_new_host(int mode, char *hostname, unsigned int port)$/;"	f	file:
peerdb_open	../unet/unet_peerdb.c	/^static bc_t *peerdb_open(int mode)$/;"	f	file:
peerdb_read	../unet/unet_peerdb.c	/^static int peerdb_read(bc_t *db, shkey_t *key, peerdb_t **peer_p)$/;"	f	file:
peerdb_read_index	../unet/unet_peerdb.c	/^static int peerdb_read_index(bc_t *db, int pos, peerdb_t **peer_p)$/;"	f	file:
peerdb_sort	../unet/unet_peerdb.c	/^static void peerdb_sort(peerdb_t **ret_list, size_t ret_size, int fact)$/;"	f	file:
peerdb_sort_cmp	../unet/unet_peerdb.c	/^static int peerdb_sort_cmp(void *a_p, void *b_p)$/;"	f	file:
peerdb_sort_revcmp	../unet/unet_peerdb.c	/^static int peerdb_sort_revcmp(void *a_p, void *b_p)$/;"	f	file:
peerdb_t	../unet/unet_peerdb.c	/^typedef struct peerdb_t$/;"	s	file:
peerdb_t	../unet/unet_peerdb.c	/^} peerdb_t;$/;"	t	typeref:struct:peerdb_t	file:
peerdb_track_list	../unet/unet_peerdb.c	/^static peerdb_t **peerdb_track_list(int mode, int ret_max)$/;"	f	file:
peerdb_track_scan	../unet/unet_peerdb.c	/^static peerdb_t **peerdb_track_scan(bc_t *db, int max)$/;"	f	file:
peerdb_write	../unet/unet_peerdb.c	/^static int peerdb_write(bc_t *db, peerdb_t *p)$/;"	f	file:
pend	../server/serialize.h	/^    char* pend;$/;"	m	class:CFlatData
pend_block_height	../stratum/stratum_blake2s.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_groestl.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_keccak.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_qubit.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_sha256d.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_skein.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_task.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pend_block_height	../stratum/stratum_x11.c	/^static uint64_t pend_block_height[MAX_COIN_IFACE];$/;"	v	file:
pending	../server/txmempool.h	/^    pool_map pending;$/;"	m	class:CPool
penv	../server/leveldb.h	/^    leveldb::Env *penv;$/;"	m	class:CLevelDB
personal	../server/algo/blake2s.h	/^	uint8_t  personal[BLAKE2S_PERSONALBYTES];  \/\/ 32$/;"	m	struct:__blake2s_param
pfilter	../server/net.h	/^    CBloomFilter *pfilter;$/;"	m	class:CNode
phashBlock	../server/block.h	/^    const uint256* phashBlock;$/;"	m	class:CBlockIndex
phexdigit	../server/util.cpp	/^static signed char phexdigit[256] =$/;"	v	file:
pid_t	../server/util.h	/^typedef int pid_t; \/* define for windows compatiblity *\/$/;"	t
pindex	../server/rpc/rpcdump.cpp	/^    CBlockIndex *pindex;$/;"	m	class:CTxDump	file:
pindexBest	../server/color/color_block.h	/^    static CBlockIndex *pindexBest;$/;"	m	class:COLORBlock
pindexBest	../server/emc2/emc2_block.h	/^		static CBlockIndex *pindexBest;$/;"	m	class:EMC2Block
pindexBest	../server/ltc/ltc_block.h	/^    static CBlockIndex *pindexBest;$/;"	m	class:LTCBlock
pindexBest	../server/shc/shc_block.h	/^    static CBlockIndex *pindexBest;$/;"	m	class:SHCBlock
pindexBest	../server/test/test_block.h	/^    static CBlockIndex *pindexBest;$/;"	m	class:TESTBlock
pindexBest	../server/testnet/testnet_block.h	/^		static CBlockIndex *pindexBest;$/;"	m	class:TESTNETBlock
pindexBestHeader	../server/wallet.h	/^		CBlockIndex *pindexBestHeader;$/;"	m	class:CWallet
pindexBestHeaderSend	../server/net.h	/^		CBlockIndex *pindexBestHeaderSend;$/;"	m	class:CNode
pindexBestKnownBlock	../server/net.h	/^		CBlockIndex *pindexBestKnownBlock;$/;"	m	class:CNode
pindexGenesisBlock	../proto/color_proto.cpp	/^CBlockIndex *COLORBlock::pindexGenesisBlock = NULL;$/;"	m	class:COLORBlock	file:
pindexGenesisBlock	../proto/emc2_proto.cpp	/^CBlockIndex *EMC2Block::pindexGenesisBlock = NULL;$/;"	m	class:EMC2Block	file:
pindexGenesisBlock	../proto/ltc_proto.cpp	/^CBlockIndex *LTCBlock::pindexGenesisBlock = NULL;$/;"	m	class:LTCBlock	file:
pindexGenesisBlock	../proto/shc_proto.cpp	/^CBlockIndex *SHCBlock::pindexGenesisBlock = NULL;$/;"	m	class:SHCBlock	file:
pindexGenesisBlock	../proto/test_proto.cpp	/^CBlockIndex *TESTBlock::pindexGenesisBlock = NULL;$/;"	m	class:TESTBlock	file:
pindexGenesisBlock	../proto/testnet_proto.cpp	/^CBlockIndex *TESTNETBlock::pindexGenesisBlock = NULL;$/;"	m	class:TESTNETBlock	file:
pindexGenesisBlock	../server/color/color_block.h	/^    static CBlockIndex *pindexGenesisBlock;$/;"	m	class:COLORBlock
pindexGenesisBlock	../server/emc2/emc2_block.h	/^		static CBlockIndex *pindexGenesisBlock;$/;"	m	class:EMC2Block
pindexGenesisBlock	../server/ltc/ltc_block.h	/^    static CBlockIndex *pindexGenesisBlock;$/;"	m	class:LTCBlock
pindexGenesisBlock	../server/shc/shc_block.h	/^    static CBlockIndex *pindexGenesisBlock;$/;"	m	class:SHCBlock
pindexGenesisBlock	../server/test/test_block.h	/^    static CBlockIndex *pindexGenesisBlock;\/\/ = NULL;$/;"	m	class:TESTBlock
pindexGenesisBlock	../server/testnet/testnet_block.h	/^		static CBlockIndex *pindexGenesisBlock;$/;"	m	class:TESTNETBlock
pindexLastBlock	../server/net.h	/^		CBlockIndex *pindexLastBlock;$/;"	m	class:CNode
pindexLastGetBlocksBegin	../server/net.h	/^    CBlockIndex* pindexLastGetBlocksBegin;$/;"	m	class:CNode
pindexLastHeader	../server/net.h	/^		CBlockIndex *pindexLastHeader;$/;"	m	class:CNode
pkey	../server/shlib.h	/^    mutable shkey_t pkey;$/;"	m	class:SHPeer
pn	../server/uint256.h	/^    unsigned int pn[WIDTH];$/;"	m	class:base_uint
pnext	../server/block.h	/^    CBlockIndex* pnext;$/;"	m	class:CBlockIndex
pointer	../server/allocators.h	/^    typedef typename base::pointer pointer;$/;"	t	struct:secure_allocator
pointer	../server/allocators.h	/^    typedef typename base::pointer pointer;$/;"	t	struct:zero_after_free_allocator
pool	../server/block_cmpct.h	/^		CTxMemPool* pool;$/;"	m	class:PartiallyDownloadedBlock
pool_map	../server/txmempool.h	/^typedef map<const uint256, CPoolTx> pool_map;$/;"	t
pop_lock	../server/sync.cpp	/^static void pop_lock()$/;"	f	file:
popstack	../server/script.cpp	/^static inline void popstack(vector<valtype>& stack)$/;"	f	file:
port	../proto/coin_proto.h	/^  int port;$/;"	m	struct:coin_iface_t
port	../server/netbase.h	/^    unsigned short port; \/\/ host order$/;"	m	class:CService
port	../unet/unet.h	/^  int port;$/;"	m	struct:unet_bind_t
pos	../server/block.h	/^    CDiskTxPos pos;$/;"	m	class:CTxIndex
pos	../server/chain.h	/^  int pos;$/;"	m	struct:ChainOp
posn_begin_	../server/json/json_spirit_stream_reader.h	/^        Posn_iter_t posn_begin_, posn_end_;$/;"	m	class:json_spirit::Stream_reader_thrower
posn_end_	../server/json/json_spirit_stream_reader.h	/^        Posn_iter_t posn_begin_, posn_end_;$/;"	m	class:json_spirit::Stream_reader_thrower
post	../server/sync.h	/^		void post() {$/;"	f	class:CSemaphore
potential_deadlock_detected	../server/sync.cpp	/^static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)$/;"	f	file:
ppmutexOpenSSL	../server/util.cpp	/^static CCriticalSection** ppmutexOpenSSL;$/;"	v	file:
pprev	../server/block.h	/^    CBlockIndex* pprev;$/;"	m	class:CBlockIndex
ppszTypeName	../server/protocol.cpp	/^static const char* ppszTypeName[] =$/;"	v	file:
prefilled_count	../server/block_cmpct.h	/^		size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;$/;"	m	class:PartiallyDownloadedBlock
prefilledtxn	../server/block_cmpct.h	/^		std::vector<PrefilledTransaction> prefilledtxn;$/;"	m	class:CBlockHeaderAndShortTxIDs
pretty_	../server/json/json_spirit_writer_template.h	/^        bool pretty_;$/;"	m	class:json_spirit::Generator
prev_hash	../stratum/stratum.h	/^  char prev_hash[256];$/;"	m	struct:task_t
prevout	../server/block.h	/^    COutPoint prevout;$/;"	m	class:CTxIn
priLikely	../server/txfeerate.h	/^    double priLikely, priUnlikely;$/;"	m	class:CBlockPolicyEstimator
priStats	../server/txfeerate.h	/^    TxConfirmStats feeStats, priStats;$/;"	m	class:CBlockPolicyEstimator
priUnlikely	../server/txfeerate.h	/^    double priLikely, priUnlikely;$/;"	m	class:CBlockPolicyEstimator
primary_ipaddr	../unet/unet_local.c	/^static char primary_ipaddr[MAXHOSTNAMELEN+1];$/;"	v	file:
print	../server/block.h	/^    void print() const$/;"	f	class:CBlockIndex
print	../server/block.h	/^    void print() const$/;"	f	class:CDiskBlockIndex
print	../server/block.h	/^    void print() const$/;"	f	class:CDiskTxPos
print	../server/block.h	/^    void print() const$/;"	f	class:COutPoint
print	../server/block.h	/^    void print() const$/;"	f	class:CTxIn
print	../server/block.h	/^    void print() const$/;"	f	class:CTxOut
print	../server/block.h	/^    void print()$/;"	f	class:CBlock
print	../server/block.h	/^    void print(int ifaceIndex)$/;"	f	class:CTransaction
print	../server/netbase.cpp	/^void CNetAddr::print() const$/;"	f	class:CNetAddr
print	../server/netbase.cpp	/^void CService::print() const$/;"	f	class:CService
print	../server/protocol.cpp	/^void CInv::print() const$/;"	f	class:CInv
print	../server/script.h	/^    void print() const$/;"	f	class:CScript
print	../server/wallet.h	/^		void print() const$/;"	f	class:COutput
print_rpc_difficulty	../server/rpc/rpccolor_proto.cpp	/^double print_rpc_difficulty(CBigNum val)$/;"	f
printf	../server/rpc/rpcdump.cpp	32;"	d	file:
processBlock	../server/txfeerate.cpp	/^void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,$/;"	f	class:CBlockPolicyEstimator
processBlockTx	../server/txfeerate.cpp	/^void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, CPoolTx& entry)$/;"	f	class:CBlockPolicyEstimator
processTransaction	../server/txfeerate.cpp	/^void CBlockPolicyEstimator::processTransaction(CPoolTx& entry, bool fCurrentEstimate)$/;"	f	class:CBlockPolicyEstimator
program	../server/script.h	/^	unsigned char program[40];$/;"	m	struct:WitnessUnknown
proto_ver	../proto/coin_proto.h	/^  int proto_ver;$/;"	m	struct:coin_iface_t
proxyInfo	../server/netbase.cpp	/^static proxyType proxyInfo[NET_MAX];$/;"	v	file:
proxyType	../server/netbase.cpp	/^typedef std::pair<CService, int> proxyType;$/;"	t	file:
prv	../test/testcoin_bip32.cpp	/^    std::string prv;$/;"	m	struct:TestDerivation	file:
pskip	../server/block.h	/^    CBlockIndex *pskip;$/;"	m	class:CBlockIndex
pszBase58	../server/base58.cpp	/^static const char* pszBase58 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";$/;"	v	file:
ptr	../server/algo/sph_blake.h	/^	size_t ptr;$/;"	m	struct:__anon19
ptr	../server/algo/sph_blake.h	/^	size_t ptr;$/;"	m	struct:__anon20
ptr	../server/algo/sph_bmw.h	/^	size_t ptr;$/;"	m	struct:__anon21
ptr	../server/algo/sph_bmw.h	/^	size_t ptr;$/;"	m	struct:__anon22
ptr	../server/algo/sph_cubehash.h	/^	size_t ptr;$/;"	m	struct:__anon23
ptr	../server/algo/sph_echo.h	/^	size_t ptr;$/;"	m	struct:__anon24
ptr	../server/algo/sph_echo.h	/^	size_t ptr;$/;"	m	struct:__anon26
ptr	../server/algo/sph_groestl.h	/^	size_t ptr;$/;"	m	struct:__anon28
ptr	../server/algo/sph_groestl.h	/^	size_t ptr;$/;"	m	struct:__anon30
ptr	../server/algo/sph_jh.h	/^	size_t ptr;$/;"	m	struct:__anon32
ptr	../server/algo/sph_keccak.h	/^	size_t ptr, lim;$/;"	m	struct:__anon35
ptr	../server/algo/sph_luffa.h	/^	size_t ptr;$/;"	m	struct:__anon37
ptr	../server/algo/sph_luffa.h	/^	size_t ptr;$/;"	m	struct:__anon38
ptr	../server/algo/sph_luffa.h	/^	size_t ptr;$/;"	m	struct:__anon39
ptr	../server/algo/sph_shavite.h	/^	size_t ptr;$/;"	m	struct:__anon40
ptr	../server/algo/sph_shavite.h	/^	size_t ptr;$/;"	m	struct:__anon41
ptr	../server/algo/sph_simd.h	/^	size_t ptr;$/;"	m	struct:__anon42
ptr	../server/algo/sph_simd.h	/^	size_t ptr;$/;"	m	struct:__anon43
ptr	../server/algo/sph_skein.h	/^	size_t ptr;$/;"	m	struct:__anon44
ptx	../server/block.h	/^    CTransaction* ptx;$/;"	m	class:CInPoint
ptx	../server/rpc/rpcdump.cpp	/^    CWalletTx* ptx;$/;"	m	class:CTxDump	file:
pub	../test/testcoin_bip32.cpp	/^    std::string pub;$/;"	m	struct:TestDerivation	file:
pubkey	../server/dikey.h	/^	CPubKey pubkey;$/;"	m	struct:DIExtPubKey
pubkey	../server/eckey.h	/^	CPubKey pubkey;$/;"	m	struct:ECExtPubKey
pubkey	../server/ext/channel.h	/^    cbuff pubkey;$/;"	m	class:CChannelKey
pubkey	../test/testcoin_sip33.cpp	/^    std::string pubkey;$/;"	m	struct:sip33_TestDerivation	file:
push_int64	../server/script.h	/^    CScript& push_int64(int64 n)$/;"	f	class:CScript
push_lock	../server/sync.cpp	/^static void push_lock(void* c, const CLockLocation& locklocation, bool fTry)$/;"	f	file:
push_uint64	../server/script.h	/^    CScript& push_uint64(uint64 n)$/;"	f	class:CScript
pwallet	../server/wallet.h	/^		CWallet *pwallet;$/;"	m	class:CWalletTx
pwalletdbEncryption	../server/wallet.h	/^		CWalletDB *pwalletdbEncryption;$/;"	m	class:CWallet
qubithash	../server/algo/qubit.c	/^void qubithash(void *output, const void *input)$/;"	f
queryHashes	../server/txmempool.h	/^    void queryHashes(std::vector<uint256>& vtxid)$/;"	f	class:CPool
queue	../server/mruset.h	/^		std::deque<T> queue;$/;"	m	class:mruset
r	../server/ext/altchain_color.c	/^	uint32_t r;$/;"	m	struct:rgb_t	file:
ran	../test/CuTest.h	/^	int ran;$/;"	m	struct:CuTest
raw	../blockchain/bc.h	/^  uint8_t *raw;$/;"	m	struct:bc_map_t
rb1	../server/algo/sph_bmw.c	204;"	d	file:
rb2	../server/algo/sph_bmw.c	205;"	d	file:
rb3	../server/algo/sph_bmw.c	206;"	d	file:
rb4	../server/algo/sph_bmw.c	207;"	d	file:
rb5	../server/algo/sph_bmw.c	208;"	d	file:
rb6	../server/algo/sph_bmw.c	209;"	d	file:
rb7	../server/algo/sph_bmw.c	210;"	d	file:
rdbuf	../server/serialize.h	/^    CDataStream* rdbuf()         { return this; }$/;"	f	class:CDataStream
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( const std::string& s, Value& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( const std::string& s, mValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( const std::wstring& s, wValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( const std::wstring& s, wmValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::istream& is, Value& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::istream& is, mValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::string::const_iterator& begin, std::string::const_iterator end, Value& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::string::const_iterator& begin, std::string::const_iterator end, mValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::wistream& is, wValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::wistream& is, wmValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::wstring::const_iterator& begin, std::wstring::const_iterator end, wValue& value )$/;"	f	class:json_spirit
read	../server/json/json_spirit_reader.cpp	/^bool json_spirit::read( std::wstring::const_iterator& begin, std::wstring::const_iterator end, wmValue& value )$/;"	f	class:json_spirit
read	../server/serialize.h	/^    CAutoFile& read(char* pch, size_t nSize)$/;"	f	class:CAutoFile
read	../server/serialize.h	/^    CDataStream& read(char* pch, int nSize)$/;"	f	class:CDataStream
read_next	../server/json/json_spirit_stream_reader.h	/^        bool read_next( Value_type& value )$/;"	f	class:json_spirit::Stream_reader
read_next	../server/json/json_spirit_stream_reader.h	/^        void read_next( Value_type& value )$/;"	f	class:json_spirit::Stream_reader_thrower
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( const std::string& s, Value& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( const std::string& s, mValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( const std::wstring& s, wValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( const std::wstring& s, wmValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::istream& is, Value& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::istream& is, mValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::string::const_iterator& begin, std::string::const_iterator end, Value& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::string::const_iterator& begin, std::string::const_iterator end, mValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::wistream& is, wValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::wistream& is, wmValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::wstring::const_iterator& begin, std::wstring::const_iterator end, wValue& value )$/;"	f	class:json_spirit
read_or_throw	../server/json/json_spirit_reader.cpp	/^void json_spirit::read_or_throw( std::wstring::const_iterator& begin, std::wstring::const_iterator end, wmValue& value )$/;"	f	class:json_spirit
read_range	../server/json/json_spirit_reader_template.h	/^    bool read_range( Iter_type& begin, Iter_type end, Value_type& value )$/;"	f	namespace:json_spirit
read_range_or_throw	../server/json/json_spirit_reader_template.h	/^    Iter_type read_range_or_throw( Iter_type begin, Iter_type end, Value_type& value )$/;"	f	namespace:json_spirit
read_stream	../server/json/json_spirit_reader_template.h	/^    bool read_stream( Istream_type& is, Value_type& value )$/;"	f	namespace:json_spirit
read_stream_or_throw	../server/json/json_spirit_reader_template.h	/^    void read_stream_or_throw( Istream_type& is, Value_type& value )$/;"	f	namespace:json_spirit
read_string	../server/json/json_spirit_reader_template.h	/^    bool read_string( const String_type& s, Value_type& value )$/;"	f	namespace:json_spirit
read_string_or_throw	../server/json/json_spirit_reader_template.h	/^    void read_string_or_throw( const String_type& s, Value_type& value )$/;"	f	namespace:json_spirit
readoptions	../server/leveldb.h	/^    leveldb::ReadOptions readoptions;$/;"	m	class:CLevelDB
real_strprintf	../server/util.cpp	/^string real_strprintf(const std::string &format, int dummy, ...)$/;"	f
real_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
reason_	../server/json/json_spirit_error_position.h	/^        std::string reason_;$/;"	m	struct:json_spirit::Error_position
rebind	../server/allocators.h	/^    template<typename _Other> struct rebind$/;"	s	struct:secure_allocator
rebind	../server/allocators.h	/^    template<typename _Other> struct rebind$/;"	s	struct:zero_after_free_allocator
reference	../server/allocators.h	/^    typedef typename base::reference reference;$/;"	t	struct:secure_allocator
reference	../server/allocators.h	/^    typedef typename base::reference reference;$/;"	t	struct:zero_after_free_allocator
reference	../server/serialize.h	/^    typedef vector_type::reference        reference;$/;"	t	class:CDataStream
reject	../server/block.cpp	/^void CBlockHeader::reject(CValidateState *state, int err_code, string err_text)$/;"	f	class:CBlockHeader
reject	../server/block.cpp	/^void CTransaction::reject(CValidateState *state, int err_code, string err_text)$/;"	f	class:CTransaction
release	../server/serialize.h	/^    FILE* release()             { FILE* ret = file; file = NULL; return ret; }$/;"	f	class:CAutoFile
removeTx	../server/txfeerate.cpp	/^void CBlockPolicyEstimator::removeTx(uint256 hash)$/;"	f	class:CBlockPolicyEstimator
removeTx	../server/txfeerate.cpp	/^void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHeight, unsigned int bucketindex)$/;"	f	class:TxConfirmStats
remove_alias_addr_tx	../server/ext/alias.cpp	/^int remove_alias_addr_tx(CIface *iface, string strAccount, string strTitle, CWalletTx& wtx)$/;"	f
remove_asset_tx	../server/ext/asset.cpp	/^int remove_asset_tx(CIface *iface, string strAccount, const uint160& hashAsset, CWalletTx& wtx)$/;"	f
remove_channel_tx	../server/ext/channel.cpp	/^int remove_channel_tx(CIface *iface, const uint160& hashChannel, CWalletTx& wtx)$/;"	f
remove_exec_tx	../server/ext/exec.cpp	/^int remove_exec_tx(CIface *iface, const uint160& hashExec, CWalletTx& wtx)$/;"	f
reserve	../server/serialize.h	/^    void reserve(size_type n)                        { vch.reserve(n + nReadPos); }$/;"	f	class:CDataStream
resize	../server/serialize.h	/^    void resize(size_type n, value_type c=0)         { vch.resize(n + nReadPos, c); }$/;"	f	class:CDataStream
reverse_iterator	../server/serialize.h	/^    typedef vector_type::reverse_iterator reverse_iterator;$/;"	t	class:CDataStream
revert	../server/color/color_pool.cpp	/^bool COLOR_CTxMemPool::revert(CTransaction &tx)$/;"	f	class:COLOR_CTxMemPool
revert	../server/emc2/emc2_pool.cpp	/^bool EMC2_CTxMemPool::revert(CTransaction &tx)$/;"	f	class:EMC2_CTxMemPool
revert	../server/ltc/ltc_pool.cpp	/^bool LTC_CTxMemPool::revert(CTransaction &tx)$/;"	f	class:LTC_CTxMemPool
revert	../server/shc/shc_pool.cpp	/^bool SHC_CTxMemPool::revert(CTransaction &tx)$/;"	f	class:SHC_CTxMemPool
revert	../server/test/test_pool.cpp	/^bool TEST_CTxMemPool::revert(CTransaction &tx)$/;"	f	class:TEST_CTxMemPool
revert	../server/testnet/testnet_pool.cpp	/^bool TESTNET_CTxMemPool::revert(CTransaction &tx)$/;"	f	class:TESTNET_CTxMemPool
reward_height	../stratum/stratum.h	/^  uint64_t reward_height;$/;"	m	struct:user_t
reward_time	../stratum/stratum.h	/^  time_t reward_time;$/;"	m	struct:user_t
rgb_t	../server/ext/altchain_color.c	/^typedef struct rgb_t {$/;"	s	file:
rgb_t	../server/ext/altchain_color.c	/^} rgb_t;$/;"	t	typeref:struct:rgb_t	file:
rmd160_vstate	../server/bolo/bolo_validation03.cpp	/^struct rmd160_vstate { uint64_t length; uint8_t buf[64]; uint32_t curlen, state[5]; };$/;"	s	file:
rol_off	../server/algo/sph_bmw.c	221;"	d	file:
rollingMinimumFeeRate	../server/txfeerate.h	/^    mutable double rollingMinimumFeeRate;$/;"	m	class:CBlockPolicyEstimator
round	../server/txfeerate.cpp	/^CAmount FeeFilterRounder::round(CAmount currentMinFee)$/;"	f	class:FeeFilterRounder
round_stamp	../stratum/stratum.h	/^  time_t round_stamp;$/;"	m	struct:user_t
roundint	../server/util.h	/^inline int roundint(double d)$/;"	f
roundint64	../server/util.h	/^inline int64 roundint64(double d)$/;"	f
rpc_addmultisigaddress	../server/rpc/rpc_command.cpp	/^Value rpc_addmultisigaddress(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_alias_addr	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_addr(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_fee	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_fee(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_get	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_get(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_getaddr	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_getaddr(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_info	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_info(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_listaddr	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_listaddr(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_pubaddr	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_pubaddr(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alias_pubaddr_update	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_pubaddr_update(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_alias_remove	../server/rpc/rpcalias_proto.cpp	/^Value rpc_alias_remove(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_addr	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_addr(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_addrlist	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_addrlist(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_balance	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_balance(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_block	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_block(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_alt_color	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_color(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_commit	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_commit(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_info	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_info(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_key	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_key(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_alt_key_from_value	../server/rpc/rpccolor_proto.cpp	/^static uint160 rpc_alt_key_from_value(CIface *iface, Value val)$/;"	f	file:
rpc_alt_key_from_value	../server/rpc/rpcoffer_proto.cpp	/^static uint160 rpc_alt_key_from_value(CIface *iface, Value val)$/;"	f	file:
rpc_alt_mine	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_mine(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_new	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_new(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_send	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_send(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_alt_setkey	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_setkey(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_alt_tx	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_tx(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_alt_unspent	../server/rpc/rpccolor_proto.cpp	/^Value rpc_alt_unspent(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_asset_get	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_get(CIface *iface, const Array& params, bool fHelp)$/;"	f
rpc_asset_info	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_info(CIface *iface, const Array& params, bool fHelp)$/;"	f
rpc_asset_list	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_list(CIface *iface, const Array& params, bool fHelp)$/;"	f
rpc_asset_listacc	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_listacc(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_asset_listcert	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_listcert(CIface *iface, const Array& params, bool fHelp)$/;"	f
rpc_asset_new	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_new(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_asset_remove	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_remove(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_asset_update	../server/rpc/rpccert_proto.cpp	/^Value rpc_asset_update(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_block_count	../server/rpc/rpc_command.cpp	/^Value rpc_block_count(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_difficulty	../server/rpc/rpc_command.cpp	/^Value rpc_block_difficulty(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_export	../server/rpc/rpc_command.cpp	/^Value rpc_block_export(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_free	../server/rpc/rpc_command.cpp	/^Value rpc_block_free(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_get	../server/rpc/rpc_command.cpp	/^Value rpc_block_get(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_hash	../server/rpc/rpc_command.cpp	/^Value rpc_block_hash(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_import	../server/rpc/rpc_command.cpp	/^Value rpc_block_import(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_info	../server/rpc/rpc_command.cpp	/^Value rpc_block_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_listsince	../server/rpc/rpc_command.cpp	/^Value rpc_block_listsince(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_mine	../server/rpc/rpc_command.cpp	/^Value rpc_block_mine(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_purge	../server/rpc/rpc_command.cpp	/^Value rpc_block_purge(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_verify	../server/rpc/rpc_command.cpp	/^Value rpc_block_verify(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_work	../server/rpc/rpc_command.cpp	/^Value rpc_block_work(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_block_workex	../server/rpc/rpc_command.cpp	/^Value rpc_block_workex(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_cert_derive	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_derive(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_cert_export	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_export(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_cert_get	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_get(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_cert_info	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_info(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_cert_license	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_license(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_cert_list	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_list(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_cert_new	../server/rpc/rpccert_proto.cpp	/^Value rpc_cert_new(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_command_help	../server/rpc/rpc_parse.cpp	/^static string rpc_command_help(CIface *iface, string strCommand)$/;"	f	file:
rpc_command_usage_help	../server/rpc/rpc_parse.cpp	/^static string rpc_command_usage_help(CIface *iface, string strCommand, RPCOp *op, bool fAbrev = false)$/;"	f	file:
rpc_ctx_fee	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_fee(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_findloc	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_findloc(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_get	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_get(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_getbin	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_getbin(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_getfile	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_getfile(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_getid	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_getid(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_getloc	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_getloc(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_getstr	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_getstr(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_info	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_list	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_loctypes	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_loctypes(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_setbin	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_setbin(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_setfile	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_setfile(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_setid	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_setid(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_setloc	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_setloc(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_ctx_setstr	../server/rpc/rpccontext_proto.cpp	/^Value rpc_ctx_setstr(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_exec_compile	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_compile(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_fee	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_fee(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_get	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_get(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_history	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_history(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_info	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_info(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_list	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_list(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_new	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_new(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_reset	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_reset(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_exec_run	../server/rpc/rpcexec_proto.cpp	/^Value rpc_exec_run(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_getrawtransaction	../server/rpc/rpcrawtransaction.cpp	/^Value rpc_getrawtransaction(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_msg_sign	../server/rpc/rpc_command.cpp	/^Value rpc_msg_sign(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_msg_verify	../server/rpc/rpc_command.cpp	/^Value rpc_msg_verify(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_accept	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_accept(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_cancel	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_cancel(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_commit	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_commit(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_info	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_key_from_value	../server/rpc/rpcoffer_proto.cpp	/^static uint160 rpc_offer_key_from_value(CIface *iface, Value val)$/;"	f	file:
rpc_offer_list	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_new	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_new(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_offer_status	../server/rpc/rpcoffer_proto.cpp	/^Value rpc_offer_status(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_param_get	../server/rpc/rpcparam_proto.cpp	/^Value rpc_param_get(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_param_list	../server/rpc/rpcparam_proto.cpp	/^Value rpc_param_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_param_value	../server/rpc/rpcparam_proto.cpp	/^Value rpc_param_value(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_add	../server/rpc/rpc_command.cpp	/^Value rpc_peer_add(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_count	../server/rpc/rpc_command.cpp	/^Value rpc_peer_count(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_export	../server/rpc/rpc_command.cpp	/^Value rpc_peer_export(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_hashps	../server/rpc/rpc_command.cpp	/^Value rpc_peer_hashps(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_import	../server/rpc/rpc_command.cpp	/^Value rpc_peer_import(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_importdat	../server/rpc/rpc_command.cpp	/^Value rpc_peer_importdat(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_info	../server/rpc/rpc_command.cpp	/^Value rpc_peer_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_list	../server/rpc/rpc_command.cpp	/^Value rpc_peer_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_peer_remove	../server/rpc/rpc_command.cpp	/^Value rpc_peer_remove(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sendrawtransaction	../server/rpc/rpcrawtransaction.cpp	/^Value rpc_sendrawtransaction(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sexe_compile	../server/ext/exec.cpp	/^int rpc_sexe_compile(char *path_out, char *path_fname, char *path_dir, int *exec_size)$/;"	f
rpc_stratum_blocks	../server/rpc/rpc_command.cpp	/^Value rpc_stratum_blocks(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_stratum_info	../server/rpc/rpc_command.cpp	/^Value rpc_stratum_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_stratum_key	../server/rpc/rpc_command.cpp	/^Value rpc_stratum_key(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_stratum_keyadd	../server/rpc/rpc_command.cpp	/^Value rpc_stratum_keyadd(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_stratum_keyremove	../server/rpc/rpc_command.cpp	/^Value rpc_stratum_keyremove(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_stratum_list	../server/rpc/rpc_command.cpp	/^Value rpc_stratum_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sys_config	../server/rpc/rpc_command.cpp	/^Value rpc_sys_config(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sys_echo	../server/rpc/rpc_command.cpp	/^Value rpc_sys_echo(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sys_help	../server/rpc/rpc_parse.cpp	/^Value rpc_sys_help(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sys_info	../server/rpc/rpc_command.cpp	/^Value rpc_sys_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sys_shutdown	../server/rpc/rpc_command.cpp	/^Value rpc_sys_shutdown(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_sys_url	../server/rpc/rpc_command.cpp	/^Value rpc_sys_url(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_decode	../server/rpc/rpc_command.cpp	/^Value rpc_tx_decode(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_get	../server/rpc/rpc_command.cpp	/^Value rpc_tx_get(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_list	../server/rpc/rpc_command.cpp	/^Value rpc_tx_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_pool	../server/rpc/rpc_command.cpp	/^Value rpc_tx_pool(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_prune	../server/rpc/rpc_command.cpp	/^Value rpc_tx_prune(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_purge	../server/rpc/rpc_command.cpp	/^Value rpc_tx_purge(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_tx_validate	../server/rpc/rpc_command.cpp	/^Value rpc_tx_validate(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_addr	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_addr(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_addrlist	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_addrlist(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_balance	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_balance(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_bsend	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_bsend(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_cscript	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_cscript(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_csend	../server/rpc/rpccert_proto.cpp	/^Value rpc_wallet_csend(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_wallet_derive	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_derive(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_donate	../server/rpc/rpccert_proto.cpp	/^Value rpc_wallet_donate(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_wallet_export	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_export(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_extaddrlist	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_extaddrlist(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_fee	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_fee(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_get	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_get(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_getcert	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_getcert(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_import	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_import(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_info	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_info(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_key	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_key(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_keyphrase	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_keyphrase(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_list	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_list(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_listbyaccount	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_listbyaccount(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_listbyaddr	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_listbyaddr(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_multisend	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_multisend(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_new	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_new(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_prune	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_prune(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_recvbyaccount	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_recvbyaccount(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_recvbyaddr	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_recvbyaddr(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_select	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_select(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_send	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_send(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_setcert	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_setcert(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_setkey	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_setkey(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_setkeyphrase	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_setkeyphrase(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_spent	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_spent(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_stamp	../server/rpc/rpccert_proto.cpp	/^Value rpc_wallet_stamp(CIface *iface, const Array& params, bool fStratum) $/;"	f
rpc_wallet_tsend	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_tsend(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_tx	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_tx(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_unconfirm	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_unconfirm(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_unspent	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_unspent(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_validate	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_validate(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_verify	../server/rpc/rpc_wallet.cpp	/^Value rpc_wallet_verify(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpc_wallet_witaddr	../server/rpc/rpc_wallet_addr.cpp	/^Value rpc_wallet_witaddr(CIface *iface, const Array& params, bool fStratum)$/;"	f
rpccolor_GetAccountName	../server/rpc/rpccolor_proto.cpp	/^static string rpccolor_GetAccountName(CWallet *wallet, const CTxDestination& dest)$/;"	f	file:
rpccolor_GetAvailableCoins	../server/rpc/rpccolor_proto.cpp	/^static Value rpccolor_GetAvailableCoins(string strAccount, uint160 hColor, bool fOnlyConfirmed)$/;"	f	file:
rpcfn_alias	../server/rpc/rpc_parse.cpp	/^static rpcfn_map rpcfn_alias[MAX_COIN_IFACE];$/;"	v	file:
rpcfn_arg	../server/rpc/rpc_proto.h	/^typedef int rpcfn_arg[MAX_RPC_ARGS];$/;"	t
rpcfn_map	../server/rpc/rpc_parse.cpp	/^typedef map <string,RPCOp> rpcfn_map;$/;"	t	file:
rpcfn_table	../server/rpc/rpc_parse.cpp	/^static rpcfn_map rpcfn_table[MAX_COIN_IFACE];$/;"	v	file:
rpcfn_type	../server/rpc/rpc_proto.h	/^typedef json_spirit::Value(*rpcfn_type)(CIface *iface, const json_spirit::Array& params, bool fHelp);$/;"	t	class:json_spirit
rpcwallet_GetVerboseAddr	../server/rpc/rpc_wallet_addr.cpp	/^void rpcwallet_GetVerboseAddr(CWallet *wallet, CAccountCache *acc, CTxDestination dest, Object& ent)$/;"	f
rpcwallet_GetWalletAddr	../server/rpc/rpc_wallet.cpp	/^void rpcwallet_GetWalletAddr(CWallet *wallet, shjson_t *tree, string strLabel, const CKeyID& keyID)$/;"	f
rs1	../server/algo/sph_bmw.c	148;"	d	file:
rs2	../server/algo/sph_bmw.c	149;"	d	file:
rs3	../server/algo/sph_bmw.c	150;"	d	file:
rs4	../server/algo/sph_bmw.c	151;"	d	file:
rs5	../server/algo/sph_bmw.c	152;"	d	file:
rs6	../server/algo/sph_bmw.c	153;"	d	file:
rs7	../server/algo/sph_bmw.c	154;"	d	file:
runCommand	../server/util.cpp	/^void runCommand(std::string strCommand)$/;"	f
s	../server/algo/sha512.h	/^    uint64_t s[8];$/;"	m	class:CSHA512
s0	../test/testcoin_algo.cpp	74;"	d	file:
s1	../test/testcoin_algo.cpp	75;"	d	file:
s32	../server/algo/sph_simd.c	/^typedef sph_s32 s32;$/;"	t	file:
sError	../server/net.h	/^		std::string sError;$/;"	m	class:CValidateState
s_ctx	../server/algo/blake2.c	/^static __thread blake2s_state s_ctx;$/;"	v	file:
s_midstate	../server/algo/blake2.c	/^static __thread blake2s_state s_midstate;$/;"	v	file:
salt	../server/algo/blake2s.h	/^	uint8_t  salt[BLAKE2S_SALTBYTES]; \/\/ 24$/;"	m	struct:__blake2s_param
salt_zero_big	../server/algo/sph_blake.c	/^static const sph_u64 salt_zero_big[4] = { 0, 0, 0, 0 };$/;"	v	file:
salt_zero_small	../server/algo/sph_blake.c	/^static const sph_u32 salt_zero_small[4] = { 0, 0, 0, 0 };$/;"	v	file:
sb0	../server/algo/sph_bmw.c	194;"	d	file:
sb1	../server/algo/sph_bmw.c	196;"	d	file:
sb2	../server/algo/sph_bmw.c	198;"	d	file:
sb3	../server/algo/sph_bmw.c	200;"	d	file:
sb4	../server/algo/sph_bmw.c	202;"	d	file:
sb5	../server/algo/sph_bmw.c	203;"	d	file:
scan_freq	../unet/unet.h	/^  double scan_freq;$/;"	m	struct:unet_bind_t
scan_stamp	../unet/unet.h	/^  shtime_t scan_stamp;$/;"	m	struct:unet_bind_t
script	../server/script.cpp	/^    CScript *script;$/;"	m	class:CScriptVisitor	file:
scriptPub	../server/txcreator.h	/^    CScript scriptPub;$/;"	m	class:CTxBatchCreator
scriptPubKey	../server/block.h	/^    CScript scriptPubKey;$/;"	m	class:CTxOut
scriptSig	../server/block.h	/^    CScript scriptSig;$/;"	m	class:CTxIn
scriptWitness	../server/block.h	/^    CScriptWitness scriptWitness;$/;"	m	class:CTxInWitness
scriptnum_error	../server/script.h	/^    explicit scriptnum_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:scriptnum_error
scriptnum_error	../server/script.h	/^class scriptnum_error : public std::runtime_error$/;"	c
scrypt_1024_1_1_256	../server/algo/scrypt.c	/^void scrypt_1024_1_1_256(const char *input, char *output)$/;"	f
scrypt_1024_1_1_256_sp	../server/algo/scrypt.c	/^void scrypt_1024_1_1_256_sp(const char *input, char *output, char *scratchpad)$/;"	f
secp256k1_context_sign	../server/eckey.cpp	/^static secp256k1_context* secp256k1_context_sign = NULL;$/;"	v	file:
secp256k1_context_verify	../server/eckey.cpp	/^static secp256k1_context* secp256k1_context_verify = NULL;$/;"	v	file:
secure_allocator	../server/allocators.h	/^    secure_allocator() throw() {}$/;"	f	struct:secure_allocator
secure_allocator	../server/allocators.h	/^    secure_allocator(const secure_allocator& a) throw() : base(a) {}$/;"	f	struct:secure_allocator
secure_allocator	../server/allocators.h	/^    secure_allocator(const secure_allocator<U>& a) throw() : base(a) {}$/;"	f	struct:secure_allocator
secure_allocator	../server/allocators.h	/^struct secure_allocator : public std::allocator<T>$/;"	s
secure_zero_memory	../server/algo/blake2s.h	/^static inline void secure_zero_memory(void *v, size_t n)$/;"	f
sem	../server/sync.h	/^		CSemaphore *sem;$/;"	m	class:CSemaphoreGrant
ser_streamplaceholder	../server/serialize.h	/^struct ser_streamplaceholder$/;"	s
serialize	../server/script.h	/^    static std::vector<unsigned char> serialize(const int64_t& value)$/;"	f	class:CScriptNum
serv_peer	../test/test_shcoind.c	/^shpeer_t *serv_peer;$/;"	v
serv_state	../server/chain.cpp	/^static bool serv_state(CIface *iface, int flag)$/;"	f	file:
server_shutdown	../server/init.cpp	/^void server_shutdown(void)$/;"	f
server_start_t	../test/test_shcoind.c	/^shtime_t server_start_t;$/;"	v
services	../proto/coin_proto.h	/^  uint64_t services; \/* NODE_XXX *\/$/;"	m	struct:coin_iface_t
set	../server/mruset.h	/^		std::set<T> set;$/;"	m	class:mruset
setAddrKnown	../server/net.h	/^    std::set<CAddress> setAddrKnown;$/;"	m	class:CNode
setAutoLock	../server/txcreator.h	/^		void setAutoLock(bool b)$/;"	f	class:CTxCreator
setAutoParam	../server/txcreator.h	/^		void setAutoParam(bool b)$/;"	f	class:CTxCreator
setBanned	../server/net.h	/^    static std::map<CNetAddr, int64> setBanned;$/;"	m	class:CNode
setBlockIndexValid	../server/block.cpp	/^ValidIndexSet setBlockIndexValid[MAX_COIN_IFACE];$/;"	v
setCoins	../server/txcreator.h	/^    set<pair<const CWalletTx*,unsigned int> > setCoins;$/;"	m	class:CTxBatchCreator
setCoinsRet	../test/testcoin_coin.cpp	/^static CoinSet setCoinsRet, setCoinsRet2;$/;"	v	file:
setCoinsRet2	../test/testcoin_coin.cpp	/^static CoinSet setCoinsRet, setCoinsRet2;$/;"	v	file:
setHighFeeRate	../server/txcreator.h	/^		void setHighFeeRate()$/;"	f	class:CTxCreator
setInput	../server/txcreator.h	/^    coin_set setInput;$/;"	m	class:CTxCreator
setInventoryKnown	../server/net.h	/^    mruset<CInv> setInventoryKnown;$/;"	m	class:CNode
setKnown	../server/net.h	/^    std::set<uint256> setKnown;$/;"	m	class:CNode
setLocal	../server/txmempool.h	/^    void setLocal(bool val)$/;"	f	class:CPoolTx
setLowFeeRate	../server/txcreator.h	/^		void setLowFeeRate()$/;"	f	class:CTxCreator
setSeq	../server/txcreator.h	/^		map<unsigned int,unsigned int> setSeq;$/;"	m	class:CTxCreator
set_serv_state	../server/chain.cpp	/^static void set_serv_state(CIface *iface, int flag)$/;"	f	file:
set_stratum_error	../stratum/stratum_protocol.c	/^void set_stratum_error(shjson_t *reply, int code, char *str)$/;"	f
set_vch	../server/script.h	/^    static int64_t set_vch(const std::vector<unsigned char>& vch)$/;"	f	class:CScriptNum
setint64	../server/bignum.h	/^    void setint64(int64 sn)$/;"	f	class:CBigNum
setstate	../server/serialize.h	/^    void setstate(short bits, const char* psz)$/;"	f	class:CAutoFile
setstate	../server/serialize.h	/^    void setstate(short bits, const char* psz)$/;"	f	class:CDataStream
settxfee	../server/rpc/rpc_command.cpp	/^Value settxfee(const Array& params, bool fStratum)$/;"	f
setuint256	../server/bignum.h	/^    void setuint256(uint256 n)$/;"	f	class:CBigNum
setuint64	../server/bignum.h	/^    void setuint64(uint64 n)$/;"	f	class:CBigNum
setulong	../server/bignum.h	/^    void setulong(unsigned long n)$/;"	f	class:CBigNum
setvch	../server/bignum.h	/^    void setvch(const std::vector<unsigned char>& vch)$/;"	f	class:CBigNum
sexe_ContextCreateEvent	../server/ext/exec.cpp	/^static int sexe_ContextCreateEvent(lua_State *L)$/;"	f	file:
sexe_ContextGetTable	../server/ext/exec.cpp	/^static int sexe_ContextGetTable(lua_State *L)$/;"	f	file:
sha256_BlockMerkleRoot	../server/sha256d_merkle.cpp	/^uint256 sha256_BlockMerkleRoot(const CBlock& block, bool* mutated)$/;"	f
sha256_h	../test/testcoin_algo.cpp	/^static const uint32_t sha256_h[8] = {$/;"	v	file:
sha256_init	../test/testcoin_algo.cpp	/^void sha256_init(uint32_t *state)$/;"	f
sha256_k	../test/testcoin_algo.cpp	/^static const uint32_t sha256_k[64] = {$/;"	v	file:
sha256_transform	../test/testcoin_algo.cpp	/^void sha256_transform(uint32_t *state, const uint32_t *block, int swap)$/;"	f
sha256_vcompress	../server/bolo/bolo_validation03.cpp	/^static inline int32_t sha256_vcompress(struct sha256_vstate * md,uint8_t *buf)$/;"	f	file:
sha256_vdone	../server/bolo/bolo_validation03.cpp	/^static inline int32_t sha256_vdone(struct sha256_vstate *md,uint8_t *out)$/;"	f	file:
sha256_vinit	../server/bolo/bolo_validation03.cpp	/^static inline void sha256_vinit(struct sha256_vstate * md)$/;"	f	file:
sha256_vprocess	../server/bolo/bolo_validation03.cpp	/^static inline int32_t sha256_vprocess(struct sha256_vstate *md,const uint8_t *in,uint64_t inlen)$/;"	f	file:
sha256_vstate	../server/bolo/bolo_validation03.cpp	/^struct sha256_vstate { uint64_t length; uint32_t state[8],curlen; uint8_t buf[64]; };$/;"	s	file:
sha256d	../test/testcoin_algo.cpp	/^extern void sha256d(unsigned char *hash, const unsigned char *data, int len)$/;"	f
sha256d_80_swap	../test/testcoin_algo.cpp	/^static void sha256d_80_swap(uint32_t *hash, const uint32_t *data)$/;"	f	file:
sha256d_BlockMerkleRoot	../server/sha256d_merkle.cpp	/^uint256 sha256d_BlockMerkleRoot(const CBlock& block, bool* mutated)$/;"	f
sha256d_BlockWitnessMerkleRoot	../server/sha256d_merkle.cpp	/^uint256 sha256d_BlockWitnessMerkleRoot(const CBlock& block, bool* mutated)$/;"	f
sha256d_ComputeMerkleRoot	../server/sha256d_merkle.cpp	/^uint256 sha256d_ComputeMerkleRoot(std::vector<uint256> hashes, bool* mutated) $/;"	f
sha256d_hash1	../test/testcoin_algo.cpp	/^static const uint32_t sha256d_hash1[16] = {$/;"	v	file:
sha256d_ms	../test/testcoin_algo.cpp	/^static inline void sha256d_ms(uint32_t *hash, uint32_t *W,$/;"	f	file:
sha256d_preextend	../test/testcoin_algo.cpp	/^static inline void sha256d_preextend(uint32_t *W)$/;"	f	file:
sha256d_prehash	../test/testcoin_algo.cpp	/^static inline void sha256d_prehash(uint32_t *S, const uint32_t *W)$/;"	f	file:
sha512	../server/algo/sha512.cpp	/^namespace sha512$/;"	n	namespace:__anon18	file:
share_geo_save	../server/ext/context.cpp	/^void share_geo_save(CContext *ctx, string label)$/;"	f
sharenet_peer	../server/ext/txext.h	/^inline shpeer_t *sharenet_peer(void)$/;"	f
shavite_big_close	../server/algo/sph_shavite.c	/^shavite_big_close(sph_shavite_big_context *sc,$/;"	f	file:
shavite_big_core	../server/algo/sph_shavite.c	/^shavite_big_core(sph_shavite_big_context *sc, const void *data, size_t len)$/;"	f	file:
shavite_big_init	../server/algo/sph_shavite.c	/^shavite_big_init(sph_shavite_big_context *sc, const sph_u32 *iv)$/;"	f	file:
shavite_small_close	../server/algo/sph_shavite.c	/^shavite_small_close(sph_shavite_small_context *sc,$/;"	f	file:
shavite_small_core	../server/algo/sph_shavite.c	/^shavite_small_core(sph_shavite_small_context *sc, const void *data, size_t len)$/;"	f	file:
shavite_small_init	../server/algo/sph_shavite.c	/^shavite_small_init(sph_shavite_small_context *sc, const sph_u32 *iv)$/;"	f	file:
shc_AddOrphanBlock	../server/shc/shc_block.cpp	/^void shc_AddOrphanBlock(CBlock *block)$/;"	f
shc_AlreadyHave	../server/shc/shc_netmsg.cpp	/^static bool shc_AlreadyHave(CIface *iface, const CInv& inv)$/;"	f	file:
shc_CalculateFee	../server/shc/shc_pool.cpp	/^static int64 shc_CalculateFee(const CTransaction& tx)$/;"	f	file:
shc_CalculateSoftFee	../server/shc/shc_pool.cpp	/^static int64 shc_CalculateSoftFee(CTransaction& tx)$/;"	f	file:
shc_CheckProofOfWork	../server/shc/shc_block.cpp	/^bool shc_CheckProofOfWork(uint256 hash, unsigned int nBits)$/;"	f
shc_CreateGenesisBlock	../server/shc/shc_block.cpp	/^bool shc_CreateGenesisBlock()$/;"	f
shc_CreateNewBlock	../server/shc/shc_block.cpp	/^CBlock* shc_CreateNewBlock(const CPubKey& rkey)$/;"	f
shc_EraseFromWallets	../server/shc/shc_block.cpp	/^static void shc_EraseFromWallets(uint256 hash)$/;"	f	file:
shc_FillBlockIndex	../server/shc/shc_txidx.cpp	/^bool shc_FillBlockIndex(txlist& vSpring, txlist& vCert, txlist& vIdent, txlist& vLicense, txlist& vAlias, txlist& vContext, txlist& vExec, txlist& vOffer)$/;"	f
shc_GetBlockValue	../server/shc/shc_block.cpp	/^int64 shc_GetBlockValue(int nHeight, int64 nFees)$/;"	f
shc_GetLastCheckpoint	../server/shc/shc_block.cpp	/^CBlockIndex *shc_GetLastCheckpoint()$/;"	f
shc_GetMainAccountPubKey	../proto/shc_proto.cpp	/^static CPubKey shc_GetMainAccountPubKey(CWallet *wallet)$/;"	f	file:
shc_GetOrphanBlock	../server/shc/shc_block.cpp	/^CBlock *shc_GetOrphanBlock(const uint256& hash)$/;"	f
shc_GetOrphanNextHash	../server/shc/shc_block.cpp	/^bool shc_GetOrphanNextHash(const uint256& hash, uint256& retNextHash)$/;"	f
shc_GetOrphanPrevHash	../server/shc/shc_block.cpp	/^bool shc_GetOrphanPrevHash(const uint256& hash, uint256& retPrevHash)$/;"	f
shc_GetOrphanRoot	../server/shc/shc_block.cpp	/^uint256 shc_GetOrphanRoot(uint256 hash)$/;"	f
shc_GetTxWeight	../server/shc/shc_block.cpp	/^static int64_t shc_GetTxWeight(const CTransaction& tx)$/;"	f	file:
shc_InitBlockIndex	../server/shc/shc_txidx.cpp	/^bool shc_InitBlockIndex()$/;"	f
shc_IsFromMe	../server/shc/shc_block.cpp	/^static bool shc_IsFromMe(CTransaction& tx)$/;"	f	file:
shc_IsOrphanBlock	../server/shc/shc_block.cpp	/^bool shc_IsOrphanBlock(const uint256& hash)$/;"	f
shc_LoadWallet	../server/shc/shc_wallet.cpp	/^bool shc_LoadWallet(void)$/;"	f
shc_ProcessBlock	../server/shc/shc_block.cpp	/^bool shc_ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
shc_ProcessGetHeaders	../server/shc/shc_netmsg.cpp	/^static void shc_ProcessGetHeaders(CIface *iface, CNode *pfrom, CBlockLocator *locator, uint256 hashStop)$/;"	f	file:
shc_ProcessMessage	../server/shc/shc_netmsg.cpp	/^bool shc_ProcessMessage(CIface *iface, CNode* pfrom, string strCommand, CDataStream& vRecv)$/;"	f
shc_ProcessMessages	../server/shc/shc_netmsg.cpp	/^bool shc_ProcessMessages(CIface *iface, CNode* pfrom)$/;"	f
shc_RegisterRPCOp	../server/shc/shc_rpc.cpp	/^void shc_RegisterRPCOp(int ifaceIndex)$/;"	f
shc_RelayTransaction	../server/shc/shc_netmsg.cpp	/^void shc_RelayTransaction(const CTransaction& tx, const uint256& hash)$/;"	f
shc_RemoveOrphanBlock	../server/shc/shc_block.cpp	/^void shc_RemoveOrphanBlock(const uint256& hash)$/;"	f
shc_RestoreBlockIndex	../server/shc/shc_txidx.cpp	/^bool shc_RestoreBlockIndex()$/;"	f
shc_SendMessages	../server/shc/shc_netmsg.cpp	/^bool shc_SendMessages(CIface *iface, CNode* pto, bool fSendTrickle)$/;"	f
shc_SetBestChainInner	../server/shc/shc_block.cpp	/^bool shc_SetBestChainInner(CBlock *block, CTxDB& txdb, CBlockIndex *pindexNew)$/;"	f
shc_Truncate	../server/shc/shc_block.cpp	/^bool shc_Truncate(uint256 hash)$/;"	f
shc_UpdatedTransaction	../server/shc/shc_block.cpp	/^static void shc_UpdatedTransaction(const uint256& hashTx)$/;"	f	file:
shc_VerifyCheckpointHeight	../server/shc/shc_block.cpp	/^bool shc_VerifyCheckpointHeight(int nHeight, uint256 hash)$/;"	f
shc_bind	../proto/shc_proto.cpp	/^static int shc_bind(CIface *iface, void *_unused_)$/;"	f	file:
shc_block_new	../proto/shc_proto.cpp	/^static int shc_block_new(CIface *iface, CBlock **block_p)$/;"	f	file:
shc_block_process	../proto/shc_proto.cpp	/^static int shc_block_process(CIface *iface, CBlock *block)$/;"	f	file:
shc_block_templ	../proto/shc_proto.cpp	/^static int shc_block_templ(CIface *iface, CBlock **block_p)$/;"	f	file:
shc_coin_iface	../proto/shc_proto.cpp	/^coin_iface_t shc_coin_iface = {$/;"	v
shc_init	../proto/shc_proto.cpp	/^static int shc_init(CIface *iface, void *_unused_)$/;"	f	file:
shc_msg_recv	../proto/shc_proto.cpp	/^static int shc_msg_recv(CIface *iface, CNode *pnode)$/;"	f	file:
shc_msg_send	../proto/shc_proto.cpp	/^static int shc_msg_send(CIface *iface, CNode *pnode)$/;"	f	file:
shc_nBytesPerSigOp	../server/shc/shc_wallet.cpp	/^static unsigned int shc_nBytesPerSigOp = SHC_DEFAULT_BYTES_PER_SIGOP;$/;"	v	file:
shc_peer_add	../proto/shc_proto.cpp	/^static int shc_peer_add(CIface *iface, void *arg)$/;"	f	file:
shc_peer_recv	../proto/shc_proto.cpp	/^static int shc_peer_recv(CIface *iface, void *arg)$/;"	f	file:
shc_seed_list	../unet/unet_seed.h	/^static char *shc_seed_list[SHC_SEED_LIST_SIZE] = {$/;"	v
shc_term	../proto/shc_proto.cpp	/^static int shc_term(CIface *iface, void *_unused_)$/;"	f	file:
shc_tx_new	../proto/shc_proto.cpp	/^static int shc_tx_new(CIface *iface, void *arg)$/;"	f	file:
shc_tx_pool	../proto/shc_proto.cpp	/^static int shc_tx_pool(CIface *iface, CTxMemPool **pool_p)$/;"	f	file:
shcoind_peer	../test/test_shcoind.c	/^shpeer_t *shcoind_peer(void)$/;"	f
shnet_inform	../server/shlib.h	/^inline int shnet_inform(CIface *iface, int tx_op, void *data, size_t data_len)$/;"	f
shorttxidk0	../server/block_cmpct.h	/^		mutable uint64_t shorttxidk0, shorttxidk1;$/;"	m	class:CBlockHeaderAndShortTxIDs
shorttxidk1	../server/block_cmpct.h	/^		mutable uint64_t shorttxidk0, shorttxidk1;$/;"	m	class:CBlockHeaderAndShortTxIDs
shorttxids	../server/block_cmpct.h	/^		std::vector<uint64_t> shorttxids;$/;"	m	class:CBlockHeaderAndShortTxIDs
shscrypt_swab256	../stratum/stratum_message.c	/^static void shscrypt_swab256(void *dest_p, const void *src_p)$/;"	f	file:
sig	../server/shlib.h	/^    shsig_t sig;$/;"	m	class:SHSig
sigma	../server/algo/sph_blake.c	/^static const unsigned sigma[16][16] = {$/;"	v	file:
sigma0	../server/algo/sha512.cpp	/^uint64_t inline sigma0(uint64_t x) { return (x >> 1 | x << 63) ^ (x >> 8 | x << 56) ^ (x >> 7); }$/;"	f	namespace:__anon18::sha512
sigma1	../server/algo/sha512.cpp	/^uint64_t inline sigma1(uint64_t x) { return (x >> 19 | x << 45) ^ (x >> 61 | x << 3) ^ (x >> 6); }$/;"	f	namespace:__anon18::sha512
signature	../server/ext/certificate.h	/^    CSign signature;$/;"	m	class:CCert
signature	../server/ext/exec.h	/^		CSign signature;$/;"	m	class:CExecCore
sip33_TestDerivation	../test/testcoin_sip33.cpp	/^struct sip33_TestDerivation {$/;"	s	file:
sip33_TestVector	../test/testcoin_sip33.cpp	/^    explicit sip33_TestVector(std::string strHexMasterIn) : strHexMaster(strHexMasterIn) {}$/;"	f	struct:sip33_TestVector
sip33_TestVector	../test/testcoin_sip33.cpp	/^struct sip33_TestVector {$/;"	s	file:
size	../blockchain/bc.h	/^  bcsize_t size;$/;"	m	struct:bc_idx_t
size	../blockchain/bc.h	/^  volatile size_t size;$/;"	m	struct:bc_map_t
size	../proto/coin_proto.h	/^  uint32_t size;$/;"	m	struct:coinhdr_t
size	../server/addrman.h	/^    int size()$/;"	f	class:CAddrMan
size	../server/key.h	/^		unsigned int size() const { return (vch.size()); }$/;"	f	class:CKey
size	../server/key.h	/^		unsigned int size() const { return vchPubKey.size(); }$/;"	f	class:CPubKey
size	../server/mruset.h	/^		size_type size() const { return set.size(); }$/;"	f	class:mruset
size	../server/serialize.h	/^    size_type size() const                           { return vch.size() - nReadPos; }$/;"	f	class:CDataStream
size	../server/txmempool.h	/^    int size()$/;"	f	class:CTxMemPool
size	../server/uint256.h	/^    unsigned int size()$/;"	f	class:base_uint
size	../server/util.h	/^    int size() const$/;"	f	class:CMedianFilter
size	../test/CuTest.h	/^	int size;$/;"	m	struct:__anon16
size_type	../server/allocators.h	/^    typedef typename base::size_type size_type;$/;"	t	struct:secure_allocator
size_type	../server/allocators.h	/^    typedef typename base::size_type size_type;$/;"	t	struct:zero_after_free_allocator
size_type	../server/mruset.h	/^		typedef typename std::set<T>::size_type size_type;$/;"	t	class:mruset
size_type	../server/serialize.h	/^    typedef vector_type::size_type        size_type;$/;"	t	class:CDataStream
skein_big_close	../server/algo/sph_skein.c	/^skein_big_close(sph_skein_big_context *sc, unsigned ub, unsigned n,$/;"	f	file:
skein_big_core	../server/algo/sph_skein.c	/^skein_big_core(sph_skein_big_context *sc, const void *data, size_t len)$/;"	f	file:
skein_big_init	../server/algo/sph_skein.c	/^skein_big_init(sph_skein_big_context *sc, const sph_u64 *iv)$/;"	f	file:
skeinhash	../server/algo/skein.c	/^void skeinhash(void *state, const void *input)$/;"	f
skipspaces	../server/util.h	/^void skipspaces(T& it)$/;"	f
socklen_t	../unet/unet.h	/^typedef int socklen_t;$/;"	t
sort_forward	../stratum/stratum_api.cpp	/^static bool sort_forward(Object a, Object b) {$/;"	f	file:
sort_reverse	../stratum/stratum_api.cpp	/^static bool sort_reverse(Object a, Object b) {$/;"	f	file:
sorted	../server/util.h	/^    std::vector<T> sorted () const$/;"	f	class:CMedianFilter
source	../server/addrman.h	/^    CNetAddr source;$/;"	m	class:CAddrInfo
sourceFile	../server/sync.cpp	/^    std::string sourceFile;$/;"	m	struct:CLockLocation	file:
sourceLine	../server/sync.cpp	/^    int sourceLine;$/;"	m	struct:CLockLocation	file:
space	../server/json/json_spirit_writer_template.h	/^        void space()$/;"	f	class:json_spirit::Generator
special_modulo	../server/mnemonic.cpp	/^uint32_t special_modulo(int u, int v)$/;"	f
speed	../stratum/stratum.h	/^double speed[MAX_SPEED_STEP];$/;"	m	struct:user_t
sph_blake224	../server/algo/sph_blake.c	/^sph_blake224(void *cc, const void *data, size_t len)$/;"	f
sph_blake224_addbits_and_close	../server/algo/sph_blake.c	/^sph_blake224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_blake224_close	../server/algo/sph_blake.c	/^sph_blake224_close(void *cc, void *dst)$/;"	f
sph_blake224_context	../server/algo/sph_blake.h	/^typedef sph_blake_small_context sph_blake224_context;$/;"	t
sph_blake224_init	../server/algo/sph_blake.c	/^sph_blake224_init(void *cc)$/;"	f
sph_blake256	../server/algo/sph_blake.c	/^sph_blake256(void *cc, const void *data, size_t len)$/;"	f
sph_blake256_addbits_and_close	../server/algo/sph_blake.c	/^sph_blake256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_blake256_close	../server/algo/sph_blake.c	/^sph_blake256_close(void *cc, void *dst)$/;"	f
sph_blake256_context	../server/algo/sph_blake.h	/^typedef sph_blake_small_context sph_blake256_context;$/;"	t
sph_blake256_init	../server/algo/sph_blake.c	/^sph_blake256_init(void *cc)$/;"	f
sph_blake384	../server/algo/sph_blake.c	/^sph_blake384(void *cc, const void *data, size_t len)$/;"	f
sph_blake384_addbits_and_close	../server/algo/sph_blake.c	/^sph_blake384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_blake384_close	../server/algo/sph_blake.c	/^sph_blake384_close(void *cc, void *dst)$/;"	f
sph_blake384_context	../server/algo/sph_blake.h	/^typedef sph_blake_big_context sph_blake384_context;$/;"	t
sph_blake384_init	../server/algo/sph_blake.c	/^sph_blake384_init(void *cc)$/;"	f
sph_blake512	../server/algo/sph_blake.c	/^sph_blake512(void *cc, const void *data, size_t len)$/;"	f
sph_blake512_addbits_and_close	../server/algo/sph_blake.c	/^sph_blake512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_blake512_close	../server/algo/sph_blake.c	/^sph_blake512_close(void *cc, void *dst)$/;"	f
sph_blake512_context	../server/algo/sph_blake.h	/^typedef sph_blake_big_context sph_blake512_context;$/;"	t
sph_blake512_init	../server/algo/sph_blake.c	/^sph_blake512_init(void *cc)$/;"	f
sph_blake_big_context	../server/algo/sph_blake.h	/^} sph_blake_big_context;$/;"	t	typeref:struct:__anon20
sph_blake_small_context	../server/algo/sph_blake.h	/^} sph_blake_small_context;$/;"	t	typeref:struct:__anon19
sph_bmw224	../server/algo/sph_bmw.c	/^sph_bmw224(void *cc, const void *data, size_t len)$/;"	f
sph_bmw224_addbits_and_close	../server/algo/sph_bmw.c	/^sph_bmw224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_bmw224_close	../server/algo/sph_bmw.c	/^sph_bmw224_close(void *cc, void *dst)$/;"	f
sph_bmw224_context	../server/algo/sph_bmw.h	/^typedef sph_bmw_small_context sph_bmw224_context;$/;"	t
sph_bmw224_init	../server/algo/sph_bmw.c	/^sph_bmw224_init(void *cc)$/;"	f
sph_bmw256	../server/algo/sph_bmw.c	/^sph_bmw256(void *cc, const void *data, size_t len)$/;"	f
sph_bmw256_addbits_and_close	../server/algo/sph_bmw.c	/^sph_bmw256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_bmw256_close	../server/algo/sph_bmw.c	/^sph_bmw256_close(void *cc, void *dst)$/;"	f
sph_bmw256_context	../server/algo/sph_bmw.h	/^typedef sph_bmw_small_context sph_bmw256_context;$/;"	t
sph_bmw256_init	../server/algo/sph_bmw.c	/^sph_bmw256_init(void *cc)$/;"	f
sph_bmw384	../server/algo/sph_bmw.c	/^sph_bmw384(void *cc, const void *data, size_t len)$/;"	f
sph_bmw384_addbits_and_close	../server/algo/sph_bmw.c	/^sph_bmw384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_bmw384_close	../server/algo/sph_bmw.c	/^sph_bmw384_close(void *cc, void *dst)$/;"	f
sph_bmw384_context	../server/algo/sph_bmw.h	/^typedef sph_bmw_big_context sph_bmw384_context;$/;"	t
sph_bmw384_init	../server/algo/sph_bmw.c	/^sph_bmw384_init(void *cc)$/;"	f
sph_bmw512	../server/algo/sph_bmw.c	/^sph_bmw512(void *cc, const void *data, size_t len)$/;"	f
sph_bmw512_addbits_and_close	../server/algo/sph_bmw.c	/^sph_bmw512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_bmw512_close	../server/algo/sph_bmw.c	/^sph_bmw512_close(void *cc, void *dst)$/;"	f
sph_bmw512_context	../server/algo/sph_bmw.h	/^typedef sph_bmw_big_context sph_bmw512_context;$/;"	t
sph_bmw512_init	../server/algo/sph_bmw.c	/^sph_bmw512_init(void *cc)$/;"	f
sph_bmw_big_context	../server/algo/sph_bmw.h	/^} sph_bmw_big_context;$/;"	t	typeref:struct:__anon22
sph_bmw_small_context	../server/algo/sph_bmw.h	/^} sph_bmw_small_context;$/;"	t	typeref:struct:__anon21
sph_bswap32	../server/algo/sph_types.h	/^sph_bswap32(sph_u32 x)$/;"	f
sph_bswap64	../server/algo/sph_types.h	/^sph_bswap64(sph_u64 x)$/;"	f
sph_cubehash224	../server/algo/sph_cubehash.c	/^sph_cubehash224(void *cc, const void *data, size_t len)$/;"	f
sph_cubehash224_addbits_and_close	../server/algo/sph_cubehash.c	/^sph_cubehash224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_cubehash224_close	../server/algo/sph_cubehash.c	/^sph_cubehash224_close(void *cc, void *dst)$/;"	f
sph_cubehash224_context	../server/algo/sph_cubehash.h	/^typedef sph_cubehash_context sph_cubehash224_context;$/;"	t
sph_cubehash224_init	../server/algo/sph_cubehash.c	/^sph_cubehash224_init(void *cc)$/;"	f
sph_cubehash256	../server/algo/sph_cubehash.c	/^sph_cubehash256(void *cc, const void *data, size_t len)$/;"	f
sph_cubehash256_addbits_and_close	../server/algo/sph_cubehash.c	/^sph_cubehash256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_cubehash256_close	../server/algo/sph_cubehash.c	/^sph_cubehash256_close(void *cc, void *dst)$/;"	f
sph_cubehash256_context	../server/algo/sph_cubehash.h	/^typedef sph_cubehash_context sph_cubehash256_context;$/;"	t
sph_cubehash256_init	../server/algo/sph_cubehash.c	/^sph_cubehash256_init(void *cc)$/;"	f
sph_cubehash384	../server/algo/sph_cubehash.c	/^sph_cubehash384(void *cc, const void *data, size_t len)$/;"	f
sph_cubehash384_addbits_and_close	../server/algo/sph_cubehash.c	/^sph_cubehash384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_cubehash384_close	../server/algo/sph_cubehash.c	/^sph_cubehash384_close(void *cc, void *dst)$/;"	f
sph_cubehash384_context	../server/algo/sph_cubehash.h	/^typedef sph_cubehash_context sph_cubehash384_context;$/;"	t
sph_cubehash384_init	../server/algo/sph_cubehash.c	/^sph_cubehash384_init(void *cc)$/;"	f
sph_cubehash512	../server/algo/sph_cubehash.c	/^sph_cubehash512(void *cc, const void *data, size_t len)$/;"	f
sph_cubehash512_addbits_and_close	../server/algo/sph_cubehash.c	/^sph_cubehash512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_cubehash512_close	../server/algo/sph_cubehash.c	/^sph_cubehash512_close(void *cc, void *dst)$/;"	f
sph_cubehash512_context	../server/algo/sph_cubehash.h	/^typedef sph_cubehash_context sph_cubehash512_context;$/;"	t
sph_cubehash512_init	../server/algo/sph_cubehash.c	/^sph_cubehash512_init(void *cc)$/;"	f
sph_cubehash_context	../server/algo/sph_cubehash.h	/^} sph_cubehash_context;$/;"	t	typeref:struct:__anon23
sph_dec16be	../server/algo/sph_types.h	/^sph_dec16be(const void *src)$/;"	f
sph_dec16le	../server/algo/sph_types.h	/^sph_dec16le(const void *src)$/;"	f
sph_dec32be	../server/algo/sph_types.h	/^sph_dec32be(const void *src)$/;"	f
sph_dec32be_aligned	../server/algo/sph_types.h	/^sph_dec32be_aligned(const void *src)$/;"	f
sph_dec32le	../server/algo/sph_types.h	/^sph_dec32le(const void *src)$/;"	f
sph_dec32le_aligned	../server/algo/sph_types.h	/^sph_dec32le_aligned(const void *src)$/;"	f
sph_dec64be	../server/algo/sph_types.h	/^sph_dec64be(const void *src)$/;"	f
sph_dec64be_aligned	../server/algo/sph_types.h	/^sph_dec64be_aligned(const void *src)$/;"	f
sph_dec64le	../server/algo/sph_types.h	/^sph_dec64le(const void *src)$/;"	f
sph_dec64le_aligned	../server/algo/sph_types.h	/^sph_dec64le_aligned(const void *src)$/;"	f
sph_echo224	../server/algo/sph_echo.c	/^sph_echo224(void *cc, const void *data, size_t len)$/;"	f
sph_echo224_addbits_and_close	../server/algo/sph_echo.c	/^sph_echo224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_echo224_close	../server/algo/sph_echo.c	/^sph_echo224_close(void *cc, void *dst)$/;"	f
sph_echo224_context	../server/algo/sph_echo.h	/^typedef sph_echo_small_context sph_echo224_context;$/;"	t
sph_echo224_init	../server/algo/sph_echo.c	/^sph_echo224_init(void *cc)$/;"	f
sph_echo256	../server/algo/sph_echo.c	/^sph_echo256(void *cc, const void *data, size_t len)$/;"	f
sph_echo256_addbits_and_close	../server/algo/sph_echo.c	/^sph_echo256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_echo256_close	../server/algo/sph_echo.c	/^sph_echo256_close(void *cc, void *dst)$/;"	f
sph_echo256_context	../server/algo/sph_echo.h	/^typedef sph_echo_small_context sph_echo256_context;$/;"	t
sph_echo256_init	../server/algo/sph_echo.c	/^sph_echo256_init(void *cc)$/;"	f
sph_echo384	../server/algo/sph_echo.c	/^sph_echo384(void *cc, const void *data, size_t len)$/;"	f
sph_echo384_addbits_and_close	../server/algo/sph_echo.c	/^sph_echo384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_echo384_close	../server/algo/sph_echo.c	/^sph_echo384_close(void *cc, void *dst)$/;"	f
sph_echo384_context	../server/algo/sph_echo.h	/^typedef sph_echo_big_context sph_echo384_context;$/;"	t
sph_echo384_init	../server/algo/sph_echo.c	/^sph_echo384_init(void *cc)$/;"	f
sph_echo512	../server/algo/sph_echo.c	/^sph_echo512(void *cc, const void *data, size_t len)$/;"	f
sph_echo512_addbits_and_close	../server/algo/sph_echo.c	/^sph_echo512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_echo512_close	../server/algo/sph_echo.c	/^sph_echo512_close(void *cc, void *dst)$/;"	f
sph_echo512_context	../server/algo/sph_echo.h	/^typedef sph_echo_big_context sph_echo512_context;$/;"	t
sph_echo512_init	../server/algo/sph_echo.c	/^sph_echo512_init(void *cc)$/;"	f
sph_echo_big_context	../server/algo/sph_echo.h	/^} sph_echo_big_context;$/;"	t	typeref:struct:__anon26
sph_echo_small_context	../server/algo/sph_echo.h	/^} sph_echo_small_context;$/;"	t	typeref:struct:__anon24
sph_enc16be	../server/algo/sph_types.h	/^sph_enc16be(void *dst, unsigned val)$/;"	f
sph_enc16le	../server/algo/sph_types.h	/^sph_enc16le(void *dst, unsigned val)$/;"	f
sph_enc32be	../server/algo/sph_types.h	/^sph_enc32be(void *dst, sph_u32 val)$/;"	f
sph_enc32be_aligned	../server/algo/sph_types.h	/^sph_enc32be_aligned(void *dst, sph_u32 val)$/;"	f
sph_enc32le	../server/algo/sph_types.h	/^sph_enc32le(void *dst, sph_u32 val)$/;"	f
sph_enc32le_aligned	../server/algo/sph_types.h	/^sph_enc32le_aligned(void *dst, sph_u32 val)$/;"	f
sph_enc64be	../server/algo/sph_types.h	/^sph_enc64be(void *dst, sph_u64 val)$/;"	f
sph_enc64be_aligned	../server/algo/sph_types.h	/^sph_enc64be_aligned(void *dst, sph_u64 val)$/;"	f
sph_enc64le	../server/algo/sph_types.h	/^sph_enc64le(void *dst, sph_u64 val)$/;"	f
sph_enc64le_aligned	../server/algo/sph_types.h	/^sph_enc64le_aligned(void *dst, sph_u64 val)$/;"	f
sph_groestl224	../server/algo/sph_groestl.c	/^sph_groestl224(void *cc, const void *data, size_t len)$/;"	f
sph_groestl224_addbits_and_close	../server/algo/sph_groestl.c	/^sph_groestl224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_groestl224_close	../server/algo/sph_groestl.c	/^sph_groestl224_close(void *cc, void *dst)$/;"	f
sph_groestl224_context	../server/algo/sph_groestl.h	/^typedef sph_groestl_small_context sph_groestl224_context;$/;"	t
sph_groestl224_init	../server/algo/sph_groestl.c	/^sph_groestl224_init(void *cc)$/;"	f
sph_groestl256	../server/algo/sph_groestl.c	/^sph_groestl256(void *cc, const void *data, size_t len)$/;"	f
sph_groestl256_addbits_and_close	../server/algo/sph_groestl.c	/^sph_groestl256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_groestl256_close	../server/algo/sph_groestl.c	/^sph_groestl256_close(void *cc, void *dst)$/;"	f
sph_groestl256_context	../server/algo/sph_groestl.h	/^typedef sph_groestl_small_context sph_groestl256_context;$/;"	t
sph_groestl256_init	../server/algo/sph_groestl.c	/^sph_groestl256_init(void *cc)$/;"	f
sph_groestl384	../server/algo/sph_groestl.c	/^sph_groestl384(void *cc, const void *data, size_t len)$/;"	f
sph_groestl384_addbits_and_close	../server/algo/sph_groestl.c	/^sph_groestl384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_groestl384_close	../server/algo/sph_groestl.c	/^sph_groestl384_close(void *cc, void *dst)$/;"	f
sph_groestl384_context	../server/algo/sph_groestl.h	/^typedef sph_groestl_big_context sph_groestl384_context;$/;"	t
sph_groestl384_init	../server/algo/sph_groestl.c	/^sph_groestl384_init(void *cc)$/;"	f
sph_groestl512	../server/algo/sph_groestl.c	/^sph_groestl512(void *cc, const void *data, size_t len)$/;"	f
sph_groestl512_addbits_and_close	../server/algo/sph_groestl.c	/^sph_groestl512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_groestl512_close	../server/algo/sph_groestl.c	/^sph_groestl512_close(void *cc, void *dst)$/;"	f
sph_groestl512_context	../server/algo/sph_groestl.h	/^typedef sph_groestl_big_context sph_groestl512_context;$/;"	t
sph_groestl512_init	../server/algo/sph_groestl.c	/^sph_groestl512_init(void *cc)$/;"	f
sph_groestl_big_context	../server/algo/sph_groestl.h	/^} sph_groestl_big_context;$/;"	t	typeref:struct:__anon30
sph_groestl_small_context	../server/algo/sph_groestl.h	/^} sph_groestl_small_context;$/;"	t	typeref:struct:__anon28
sph_jh224	../server/algo/sph_jh.c	/^sph_jh224(void *cc, const void *data, size_t len)$/;"	f
sph_jh224_addbits_and_close	../server/algo/sph_jh.c	/^sph_jh224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_jh224_close	../server/algo/sph_jh.c	/^sph_jh224_close(void *cc, void *dst)$/;"	f
sph_jh224_context	../server/algo/sph_jh.h	/^typedef sph_jh_context sph_jh224_context;$/;"	t
sph_jh224_init	../server/algo/sph_jh.c	/^sph_jh224_init(void *cc)$/;"	f
sph_jh256	../server/algo/sph_jh.c	/^sph_jh256(void *cc, const void *data, size_t len)$/;"	f
sph_jh256_addbits_and_close	../server/algo/sph_jh.c	/^sph_jh256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_jh256_close	../server/algo/sph_jh.c	/^sph_jh256_close(void *cc, void *dst)$/;"	f
sph_jh256_context	../server/algo/sph_jh.h	/^typedef sph_jh_context sph_jh256_context;$/;"	t
sph_jh256_init	../server/algo/sph_jh.c	/^sph_jh256_init(void *cc)$/;"	f
sph_jh384	../server/algo/sph_jh.c	/^sph_jh384(void *cc, const void *data, size_t len)$/;"	f
sph_jh384_addbits_and_close	../server/algo/sph_jh.c	/^sph_jh384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_jh384_close	../server/algo/sph_jh.c	/^sph_jh384_close(void *cc, void *dst)$/;"	f
sph_jh384_context	../server/algo/sph_jh.h	/^typedef sph_jh_context sph_jh384_context;$/;"	t
sph_jh384_init	../server/algo/sph_jh.c	/^sph_jh384_init(void *cc)$/;"	f
sph_jh512	../server/algo/sph_jh.c	/^sph_jh512(void *cc, const void *data, size_t len)$/;"	f
sph_jh512_addbits_and_close	../server/algo/sph_jh.c	/^sph_jh512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_jh512_close	../server/algo/sph_jh.c	/^sph_jh512_close(void *cc, void *dst)$/;"	f
sph_jh512_context	../server/algo/sph_jh.h	/^typedef sph_jh_context sph_jh512_context;$/;"	t
sph_jh512_init	../server/algo/sph_jh.c	/^sph_jh512_init(void *cc)$/;"	f
sph_jh_context	../server/algo/sph_jh.h	/^} sph_jh_context;$/;"	t	typeref:struct:__anon32
sph_keccak224	../server/algo/sph_keccak.c	/^sph_keccak224(void *cc, const void *data, size_t len)$/;"	f
sph_keccak224_addbits_and_close	../server/algo/sph_keccak.c	/^sph_keccak224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_keccak224_close	../server/algo/sph_keccak.c	/^sph_keccak224_close(void *cc, void *dst)$/;"	f
sph_keccak224_context	../server/algo/sph_keccak.h	/^typedef sph_keccak_context sph_keccak224_context;$/;"	t
sph_keccak224_init	../server/algo/sph_keccak.c	/^sph_keccak224_init(void *cc)$/;"	f
sph_keccak256	../server/algo/sph_keccak.c	/^sph_keccak256(void *cc, const void *data, size_t len)$/;"	f
sph_keccak256_addbits_and_close	../server/algo/sph_keccak.c	/^sph_keccak256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_keccak256_close	../server/algo/sph_keccak.c	/^sph_keccak256_close(void *cc, void *dst)$/;"	f
sph_keccak256_context	../server/algo/sph_keccak.h	/^typedef sph_keccak_context sph_keccak256_context;$/;"	t
sph_keccak256_init	../server/algo/sph_keccak.c	/^sph_keccak256_init(void *cc)$/;"	f
sph_keccak384	../server/algo/sph_keccak.c	/^sph_keccak384(void *cc, const void *data, size_t len)$/;"	f
sph_keccak384_addbits_and_close	../server/algo/sph_keccak.c	/^sph_keccak384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_keccak384_close	../server/algo/sph_keccak.c	/^sph_keccak384_close(void *cc, void *dst)$/;"	f
sph_keccak384_context	../server/algo/sph_keccak.h	/^typedef sph_keccak_context sph_keccak384_context;$/;"	t
sph_keccak384_init	../server/algo/sph_keccak.c	/^sph_keccak384_init(void *cc)$/;"	f
sph_keccak512	../server/algo/sph_keccak.c	/^sph_keccak512(void *cc, const void *data, size_t len)$/;"	f
sph_keccak512_addbits_and_close	../server/algo/sph_keccak.c	/^sph_keccak512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_keccak512_close	../server/algo/sph_keccak.c	/^sph_keccak512_close(void *cc, void *dst)$/;"	f
sph_keccak512_context	../server/algo/sph_keccak.h	/^typedef sph_keccak_context sph_keccak512_context;$/;"	t
sph_keccak512_init	../server/algo/sph_keccak.c	/^sph_keccak512_init(void *cc)$/;"	f
sph_keccak_context	../server/algo/sph_keccak.h	/^} sph_keccak_context;$/;"	t	typeref:struct:__anon35
sph_luffa224	../server/algo/sph_luffa.c	/^sph_luffa224(void *cc, const void *data, size_t len)$/;"	f
sph_luffa224_addbits_and_close	../server/algo/sph_luffa.c	/^sph_luffa224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_luffa224_close	../server/algo/sph_luffa.c	/^sph_luffa224_close(void *cc, void *dst)$/;"	f
sph_luffa224_context	../server/algo/sph_luffa.h	/^} sph_luffa224_context;$/;"	t	typeref:struct:__anon37
sph_luffa224_init	../server/algo/sph_luffa.c	/^sph_luffa224_init(void *cc)$/;"	f
sph_luffa256	../server/algo/sph_luffa.c	/^sph_luffa256(void *cc, const void *data, size_t len)$/;"	f
sph_luffa256_addbits_and_close	../server/algo/sph_luffa.c	/^sph_luffa256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_luffa256_close	../server/algo/sph_luffa.c	/^sph_luffa256_close(void *cc, void *dst)$/;"	f
sph_luffa256_context	../server/algo/sph_luffa.h	/^typedef sph_luffa224_context sph_luffa256_context;$/;"	t
sph_luffa256_init	../server/algo/sph_luffa.c	/^sph_luffa256_init(void *cc)$/;"	f
sph_luffa384	../server/algo/sph_luffa.c	/^sph_luffa384(void *cc, const void *data, size_t len)$/;"	f
sph_luffa384_addbits_and_close	../server/algo/sph_luffa.c	/^sph_luffa384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_luffa384_close	../server/algo/sph_luffa.c	/^sph_luffa384_close(void *cc, void *dst)$/;"	f
sph_luffa384_context	../server/algo/sph_luffa.h	/^} sph_luffa384_context;$/;"	t	typeref:struct:__anon38
sph_luffa384_init	../server/algo/sph_luffa.c	/^sph_luffa384_init(void *cc)$/;"	f
sph_luffa512	../server/algo/sph_luffa.c	/^sph_luffa512(void *cc, const void *data, size_t len)$/;"	f
sph_luffa512_addbits_and_close	../server/algo/sph_luffa.c	/^sph_luffa512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_luffa512_close	../server/algo/sph_luffa.c	/^sph_luffa512_close(void *cc, void *dst)$/;"	f
sph_luffa512_context	../server/algo/sph_luffa.h	/^} sph_luffa512_context;$/;"	t	typeref:struct:__anon39
sph_luffa512_init	../server/algo/sph_luffa.c	/^sph_luffa512_init(void *cc)$/;"	f
sph_s32	../server/algo/sph_types.h	/^typedef __arch_dependant__ sph_s32;$/;"	t
sph_s32	../server/algo/sph_types.h	/^typedef int sph_s32;$/;"	t
sph_s32	../server/algo/sph_types.h	/^typedef int32_t sph_s32;$/;"	t
sph_s32	../server/algo/sph_types.h	/^typedef int_fast32_t sph_s32;$/;"	t
sph_s32	../server/algo/sph_types.h	/^typedef long sph_s32;$/;"	t
sph_s64	../server/algo/sph_types.h	/^typedef __arch_dependant__ sph_s64;$/;"	t
sph_s64	../server/algo/sph_types.h	/^typedef int64_t sph_s64;$/;"	t
sph_s64	../server/algo/sph_types.h	/^typedef int_fast64_t sph_s64;$/;"	t
sph_s64	../server/algo/sph_types.h	/^typedef long long sph_s64;$/;"	t
sph_s64	../server/algo/sph_types.h	/^typedef long sph_s64;$/;"	t
sph_shavite224	../server/algo/sph_shavite.c	/^sph_shavite224(void *cc, const void *data, size_t len)$/;"	f
sph_shavite224_addbits_and_close	../server/algo/sph_shavite.c	/^sph_shavite224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_shavite224_close	../server/algo/sph_shavite.c	/^sph_shavite224_close(void *cc, void *dst)$/;"	f
sph_shavite224_context	../server/algo/sph_shavite.h	/^typedef sph_shavite_small_context sph_shavite224_context;$/;"	t
sph_shavite224_init	../server/algo/sph_shavite.c	/^sph_shavite224_init(void *cc)$/;"	f
sph_shavite256	../server/algo/sph_shavite.c	/^sph_shavite256(void *cc, const void *data, size_t len)$/;"	f
sph_shavite256_addbits_and_close	../server/algo/sph_shavite.c	/^sph_shavite256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_shavite256_close	../server/algo/sph_shavite.c	/^sph_shavite256_close(void *cc, void *dst)$/;"	f
sph_shavite256_context	../server/algo/sph_shavite.h	/^typedef sph_shavite_small_context sph_shavite256_context;$/;"	t
sph_shavite256_init	../server/algo/sph_shavite.c	/^sph_shavite256_init(void *cc)$/;"	f
sph_shavite384	../server/algo/sph_shavite.c	/^sph_shavite384(void *cc, const void *data, size_t len)$/;"	f
sph_shavite384_addbits_and_close	../server/algo/sph_shavite.c	/^sph_shavite384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_shavite384_close	../server/algo/sph_shavite.c	/^sph_shavite384_close(void *cc, void *dst)$/;"	f
sph_shavite384_context	../server/algo/sph_shavite.h	/^typedef sph_shavite_big_context sph_shavite384_context;$/;"	t
sph_shavite384_init	../server/algo/sph_shavite.c	/^sph_shavite384_init(void *cc)$/;"	f
sph_shavite512	../server/algo/sph_shavite.c	/^sph_shavite512(void *cc, const void *data, size_t len)$/;"	f
sph_shavite512_addbits_and_close	../server/algo/sph_shavite.c	/^sph_shavite512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_shavite512_close	../server/algo/sph_shavite.c	/^sph_shavite512_close(void *cc, void *dst)$/;"	f
sph_shavite512_context	../server/algo/sph_shavite.h	/^typedef sph_shavite_big_context sph_shavite512_context;$/;"	t
sph_shavite512_init	../server/algo/sph_shavite.c	/^sph_shavite512_init(void *cc)$/;"	f
sph_shavite_big_context	../server/algo/sph_shavite.h	/^} sph_shavite_big_context;$/;"	t	typeref:struct:__anon41
sph_shavite_small_context	../server/algo/sph_shavite.h	/^} sph_shavite_small_context;$/;"	t	typeref:struct:__anon40
sph_simd224	../server/algo/sph_simd.c	/^sph_simd224(void *cc, const void *data, size_t len)$/;"	f
sph_simd224_addbits_and_close	../server/algo/sph_simd.c	/^sph_simd224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_simd224_close	../server/algo/sph_simd.c	/^sph_simd224_close(void *cc, void *dst)$/;"	f
sph_simd224_context	../server/algo/sph_simd.h	/^typedef sph_simd_small_context sph_simd224_context;$/;"	t
sph_simd224_init	../server/algo/sph_simd.c	/^sph_simd224_init(void *cc)$/;"	f
sph_simd256	../server/algo/sph_simd.c	/^sph_simd256(void *cc, const void *data, size_t len)$/;"	f
sph_simd256_addbits_and_close	../server/algo/sph_simd.c	/^sph_simd256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_simd256_close	../server/algo/sph_simd.c	/^sph_simd256_close(void *cc, void *dst)$/;"	f
sph_simd256_context	../server/algo/sph_simd.h	/^typedef sph_simd_small_context sph_simd256_context;$/;"	t
sph_simd256_init	../server/algo/sph_simd.c	/^sph_simd256_init(void *cc)$/;"	f
sph_simd384	../server/algo/sph_simd.c	/^sph_simd384(void *cc, const void *data, size_t len)$/;"	f
sph_simd384_addbits_and_close	../server/algo/sph_simd.c	/^sph_simd384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_simd384_close	../server/algo/sph_simd.c	/^sph_simd384_close(void *cc, void *dst)$/;"	f
sph_simd384_context	../server/algo/sph_simd.h	/^typedef sph_simd_big_context sph_simd384_context;$/;"	t
sph_simd384_init	../server/algo/sph_simd.c	/^sph_simd384_init(void *cc)$/;"	f
sph_simd512	../server/algo/sph_simd.c	/^sph_simd512(void *cc, const void *data, size_t len)$/;"	f
sph_simd512_addbits_and_close	../server/algo/sph_simd.c	/^sph_simd512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_simd512_close	../server/algo/sph_simd.c	/^sph_simd512_close(void *cc, void *dst)$/;"	f
sph_simd512_context	../server/algo/sph_simd.h	/^typedef sph_simd_big_context sph_simd512_context;$/;"	t
sph_simd512_init	../server/algo/sph_simd.c	/^sph_simd512_init(void *cc)$/;"	f
sph_simd_big_context	../server/algo/sph_simd.h	/^} sph_simd_big_context;$/;"	t	typeref:struct:__anon43
sph_simd_small_context	../server/algo/sph_simd.h	/^} sph_simd_small_context;$/;"	t	typeref:struct:__anon42
sph_skein224	../server/algo/sph_skein.c	/^sph_skein224(void *cc, const void *data, size_t len)$/;"	f
sph_skein224_addbits_and_close	../server/algo/sph_skein.c	/^sph_skein224_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_skein224_close	../server/algo/sph_skein.c	/^sph_skein224_close(void *cc, void *dst)$/;"	f
sph_skein224_context	../server/algo/sph_skein.h	/^typedef sph_skein_big_context sph_skein224_context;$/;"	t
sph_skein224_init	../server/algo/sph_skein.c	/^sph_skein224_init(void *cc)$/;"	f
sph_skein256	../server/algo/sph_skein.c	/^sph_skein256(void *cc, const void *data, size_t len)$/;"	f
sph_skein256_addbits_and_close	../server/algo/sph_skein.c	/^sph_skein256_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_skein256_close	../server/algo/sph_skein.c	/^sph_skein256_close(void *cc, void *dst)$/;"	f
sph_skein256_context	../server/algo/sph_skein.h	/^typedef sph_skein_big_context sph_skein256_context;$/;"	t
sph_skein256_init	../server/algo/sph_skein.c	/^sph_skein256_init(void *cc)$/;"	f
sph_skein384	../server/algo/sph_skein.c	/^sph_skein384(void *cc, const void *data, size_t len)$/;"	f
sph_skein384_addbits_and_close	../server/algo/sph_skein.c	/^sph_skein384_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_skein384_close	../server/algo/sph_skein.c	/^sph_skein384_close(void *cc, void *dst)$/;"	f
sph_skein384_context	../server/algo/sph_skein.h	/^typedef sph_skein_big_context sph_skein384_context;$/;"	t
sph_skein384_init	../server/algo/sph_skein.c	/^sph_skein384_init(void *cc)$/;"	f
sph_skein512	../server/algo/sph_skein.c	/^sph_skein512(void *cc, const void *data, size_t len)$/;"	f
sph_skein512_addbits_and_close	../server/algo/sph_skein.c	/^sph_skein512_addbits_and_close(void *cc, unsigned ub, unsigned n, void *dst)$/;"	f
sph_skein512_close	../server/algo/sph_skein.c	/^sph_skein512_close(void *cc, void *dst)$/;"	f
sph_skein512_context	../server/algo/sph_skein.h	/^typedef sph_skein_big_context sph_skein512_context;$/;"	t
sph_skein512_init	../server/algo/sph_skein.c	/^sph_skein512_init(void *cc)$/;"	f
sph_skein_big_context	../server/algo/sph_skein.h	/^} sph_skein_big_context;$/;"	t	typeref:struct:__anon44
sph_u32	../server/algo/sph_types.h	/^typedef __arch_dependant__ sph_u32;$/;"	t
sph_u32	../server/algo/sph_types.h	/^typedef uint32_t sph_u32;$/;"	t
sph_u32	../server/algo/sph_types.h	/^typedef uint_fast32_t sph_u32;$/;"	t
sph_u32	../server/algo/sph_types.h	/^typedef unsigned int sph_u32;$/;"	t
sph_u32	../server/algo/sph_types.h	/^typedef unsigned long sph_u32;$/;"	t
sph_u64	../server/algo/sph_types.h	/^typedef __arch_dependant__ sph_u64;$/;"	t
sph_u64	../server/algo/sph_types.h	/^typedef uint64_t sph_u64;$/;"	t
sph_u64	../server/algo/sph_types.h	/^typedef uint_fast64_t sph_u64;$/;"	t
sph_u64	../server/algo/sph_types.h	/^typedef unsigned long long sph_u64;$/;"	t
sph_u64	../server/algo/sph_types.h	/^typedef unsigned long sph_u64;$/;"	t
spirit_namespace	../server/json/json_spirit_reader_template.h	24;"	d
spirit_namespace	../server/json/json_spirit_reader_template.h	31;"	d
spring_bits	../server/spring.c	/^typedef struct spring_bits$/;"	s	file:
spring_bits	../server/spring.c	/^} spring_bits;$/;"	t	typeref:struct:spring_bits	file:
spring_loc_bits	../server/spring.c	/^static void spring_loc_bits(spring_bits *bits)$/;"	f	file:
spring_loc_claim	../server/spring.c	/^void spring_loc_claim(double lat, double lon)$/;"	f
spring_loc_search	../server/spring.c	/^int spring_loc_search(double cur_lat, double cur_lon, double *lat_p, double *lon_p)$/;"	f
spring_loc_set	../server/spring.c	/^void spring_loc_set(double lat, double lon)$/;"	f
spring_matrix_bit	../server/spring.c	/^static unsigned int spring_matrix_bit(uint64_t seed)$/;"	f	file:
spring_matrix_compress	../server/spring.c	/^void spring_matrix_compress(uint32_t matrix[3][3])$/;"	f
spring_render_fractal	../server/spring.c	/^int spring_render_fractal(char *img_path, double zoom, double span, double x_of, double y_of)$/;"	f
ss0	../server/algo/sph_bmw.c	138;"	d	file:
ss1	../server/algo/sph_bmw.c	140;"	d	file:
ss2	../server/algo/sph_bmw.c	142;"	d	file:
ss3	../server/algo/sph_bmw.c	144;"	d	file:
ss4	../server/algo/sph_bmw.c	146;"	d	file:
ss5	../server/algo/sph_bmw.c	147;"	d	file:
stack	../server/block.h	/^    cstack_t stack;$/;"	m	struct:CScriptWitness
stack_	../server/json/json_spirit_reader_template.h	/^        std::vector< Value_type* > stack_;   \/\/ previous child objects and arrays$/;"	m	class:json_spirit::Semantic_actions
stacktop	../server/script.cpp	101;"	d	file:
stale	../server/txmempool.h	/^    pool_map stale;$/;"	m	class:CPool
stamp	../blockchain/bc.h	/^  shtime_t stamp;$/;"	m	struct:bc_hdr_t
stamp	../blockchain/bc.h	/^  time_t stamp; $/;"	m	struct:bc_map_t
stamp	../server/txmempool.h	/^    time_t stamp;$/;"	m	class:CPoolTx
stamp	../stratum/stratum_task.c	/^  time_t stamp;$/;"	m	struct:task_stat_t	file:
start	../server/json/json_spirit_reader_template.h	/^            const spirit_namespace::rule< ScannerT >& start() const { return json_; }$/;"	f	class:json_spirit::Json_grammer::definition
stat	../proto/coin_proto.h	/^  } stat;$/;"	m	struct:coin_iface_t	typeref:struct:coin_iface_t::coin_stat_t
state	../server/algo/sph_cubehash.h	/^	sph_u32 state[32];$/;"	m	struct:__anon23
state	../server/algo/sph_groestl.h	/^	} state;$/;"	m	struct:__anon28	typeref:union:__anon28::__anon29
state	../server/algo/sph_groestl.h	/^	} state;$/;"	m	struct:__anon30	typeref:union:__anon30::__anon31
state	../server/algo/sph_simd.h	/^	sph_u32 state[16];$/;"	m	struct:__anon42
state	../server/algo/sph_simd.h	/^	sph_u32 state[32];$/;"	m	struct:__anon43
state	../server/bolo/bolo_validation03.cpp	/^struct rmd160_vstate { uint64_t length; uint8_t buf[64]; uint32_t curlen, state[5]; };$/;"	m	struct:rmd160_vstate	file:
state	../server/bolo/bolo_validation03.cpp	/^struct sha256_vstate { uint64_t length; uint32_t state[8],curlen; uint8_t buf[64]; };$/;"	m	struct:sha256_vstate	file:
state	../server/serialize.h	/^    short state;$/;"	m	class:CAutoFile
state	../server/serialize.h	/^    short state;$/;"	m	class:CDataStream
stats	../server/txfeerate.h	/^        TxConfirmStats *stats;$/;"	m	struct:CBlockPolicyEstimator::TxStatsInfo
stop	../server/rpc/rpc_command.cpp	/^Value stop(const Array& params, bool fStratum)$/;"	f
store32	../server/algo/blake2s.h	/^static inline void store32(void *dst, uint32_t w)$/;"	f
store48	../server/algo/blake2s.h	/^static inline void store48(void *dst, uint64_t w)$/;"	f
str	../server/serialize.h	/^    std::string str() const$/;"	f	class:CDataStream
strAccount	../server/account.h	/^		string strAccount;$/;"	m	class:CAccountCache
strAccount	../server/wallet.h	/^		std::string strAccount;$/;"	m	class:CAccountingEntry
strComment	../server/wallet.h	/^		std::string strComment;$/;"	m	class:CAccountingEntry
strComment	../server/wallet.h	/^		std::string strComment;$/;"	m	class:CWalletKey
strError	../server/txcreator.h	/^    string strError; $/;"	m	class:CTxCreator
strFile	../server/txidx.h	/^    std::string strFile;$/;"	m	class:CDB
strFromAccount	../server/wallet.h	/^		std::string strFromAccount;$/;"	m	class:CWalletTx
strHexMaster	../test/testcoin_bip32.cpp	/^    std::string strHexMaster;$/;"	m	struct:TestVector	file:
strHexMaster	../test/testcoin_sip33.cpp	/^    std::string strHexMaster;$/;"	m	struct:sip33_TestVector	file:
strMethod	../server/rpc/rpc_parse.cpp	/^    string strMethod;$/;"	m	class:JSONRequest	file:
strMiscWarning	../server/util.cpp	/^string strMiscWarning;$/;"	v
strOtherAccount	../server/wallet.h	/^		std::string strOtherAccount;$/;"	m	class:CAccountingEntry
strRPCUserColonPass	../server/rpc/rpc_parse.cpp	/^static std::string strRPCUserColonPass;$/;"	v	file:
strSubVer	../server/net.h	/^    std::string strSubVer;$/;"	m	class:CNode
strSubVer	../server/net.h	/^    std::string strSubVer;$/;"	m	class:CNodeStats
strWalletFile	../server/wallet.h	/^		std::string strWalletFile;$/;"	m	class:CWallet
str_type	../server/json/json_spirit_value.h	/^    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type };$/;"	e	enum:json_spirit::Value_type
stratum_accept	../stratum/stratum.c	/^void stratum_accept(int fd, struct sockaddr *net_addr)$/;"	f
stratum_api_account_addr	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_addr(int ifaceIndex, string strAccount, shjson_t *params)$/;"	f	file:
stratum_api_account_bsend	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_bsend(int ifaceIndex, string strAccount, shjson_t *params, string& strError, uint160 hColor = 0)$/;"	f	file:
stratum_api_account_create	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_create(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_account_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_list(int ifaceIndex, string strAccount, shjson_t *params)$/;"	f	file:
stratum_api_account_secret	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_secret(int ifaceIndex, string strAccount, shjson_t *params)$/;"	f	file:
stratum_api_account_send	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_send(int ifaceIndex, string strAccount, shjson_t *params, string& strError, uint160 hColor = 0)$/;"	f	file:
stratum_api_account_tsend	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_tsend(int ifaceIndex, string strAccount, shjson_t *params, string& strError, uint160 hColor = 0)$/;"	f	file:
stratum_api_account_txlist	../stratum/stratum_api.cpp	/^const ApiItems& stratum_api_account_txlist(int ifaceIndex, string strAccount, shjson_t *params)$/;"	f
stratum_api_account_unspent	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_account_unspent(int ifaceIndex, string strAccount, shjson_t *params, uint160 hColor = 0)$/;"	f	file:
stratum_api_alias_get	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alias_get(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_alias_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alias_list(int ifaceIndex, string strAccount, shjson_t *params, int64 begin_t, bool fSelf)$/;"	f	file:
stratum_api_alias_set	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alias_set(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_alt_balance	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alt_balance(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_alt_block	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alt_block(int ifaceIndex, user_t *user, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_alt_get	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alt_get(int ifaceIndex, user_t *user, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_alt_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alt_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_alt_send	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alt_send(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_alt_tx	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_alt_tx(int ifaceIndex, user_t *user, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_asset_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_asset_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_block_mined	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_block_mined(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_book	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_book(int ifaceIndex, user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_cert_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_cert_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_context_get	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_context_get(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_context_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_context_list(int ifaceIndex, string strAccount, shjson_t *params, int64 begin_t, bool fSelf)$/;"	f	file:
stratum_api_context_set	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_context_set(int ifaceIndex, string strAccount, shjson_t *params, string& strError)$/;"	f	file:
stratum_api_exec_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_exec_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_faucet_info	../stratum/stratum_api_faucet.cpp	/^const ApiItems& stratum_api_faucet_info(int ifaceIndex, string strAccount, shjson_t *params)$/;"	f
stratum_api_faucet_list	../stratum/stratum_api_faucet.cpp	/^const ApiItems& stratum_api_faucet_list(int ifaceIndex, string strAccount, shjson_t *params)$/;"	f
stratum_api_faucet_recv	../stratum/stratum_api_faucet.cpp	/^const ApiItems& stratum_api_faucet_recv(int ifaceIndex, string strAccount, shjson_t *params, string& strError, uint160 hColor)$/;"	f
stratum_api_faucet_send	../stratum/stratum_api_faucet.cpp	/^const ApiItems& stratum_api_faucet_send(int ifaceIndex, string strAccount, shjson_t *params, string& strError, uint160 hColor)$/;"	f
stratum_api_ident_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_ident_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_license_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_license_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_offer_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_offer_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_api_order_create	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_order_create(user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_order_fills	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_order_fills(user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_order_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_order_list(user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_order_remove	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_order_remove(user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_order_ticker	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_order_ticker(user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_order_trades	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_order_trades(user_t *user, shjson_t *params)$/;"	f	file:
stratum_api_validate_list	../stratum/stratum_api.cpp	/^static const ApiItems& stratum_api_validate_list(int ifaceIndex, user_t *user, shjson_t *params, int64 begin_t)$/;"	f	file:
stratum_blake2s_accept	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_blake2s_close	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_blake2s_init	../stratum/stratum_blake2s.c	/^int stratum_blake2s_init(void)$/;"	f
stratum_blake2s_task_gen	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_blake2s_term	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_term(void)$/;"	f	file:
stratum_blake2s_timer	../stratum/stratum_blake2s.c	/^static void stratum_blake2s_timer(void)$/;"	f	file:
stratum_close	../stratum/stratum.c	/^void stratum_close(int fd, struct sockaddr *net_addr)$/;"	f
stratum_close_all	../stratum/stratum.c	/^static void stratum_close_all(void)$/;"	f	file:
stratum_close_free	../stratum/stratum.c	/^static void stratum_close_free(void)$/;"	f	file:
stratum_command_api	../stratum/stratum_command.c	/^int stratum_command_api(int ifaceIndex, user_t *user, const char *method, shjson_t *param)$/;"	f
stratum_command_f	../stratum/stratum_command.c	/^typedef int (*stratum_command_f)(CIface *, user_t *, shjson_t *, shjson_t **);$/;"	t	file:
stratum_command_t	../stratum/stratum_command.c	/^typedef struct stratum_command_t$/;"	s	file:
stratum_command_t	../stratum/stratum_command.c	/^} stratum_command_t;$/;"	t	typeref:struct:stratum_command_t	file:
stratum_command_table	../stratum/stratum_command.c	/^static stratum_command_t stratum_command_table[] =$/;"	v	file:
stratum_find_netid	../stratum/stratum_sync.c	/^user_t *stratum_find_netid(shkey_t *netid, char *worker)$/;"	f
stratum_generic_error	../stratum/stratum_protocol.c	/^static shjson_t *stratum_generic_error(void)$/;"	f	file:
stratum_get_iface	../stratum/stratum_protocol.c	/^int stratum_get_iface(char *iface_str)$/;"	f
stratum_groestl_accept	../stratum/stratum_groestl.c	/^static void stratum_groestl_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_groestl_close	../stratum/stratum_groestl.c	/^static void stratum_groestl_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_groestl_init	../stratum/stratum_groestl.c	/^int stratum_groestl_init(void)$/;"	f
stratum_groestl_task_gen	../stratum/stratum_groestl.c	/^static void stratum_groestl_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_groestl_term	../stratum/stratum_groestl.c	/^static void stratum_groestl_term(void)$/;"	f	file:
stratum_groestl_timer	../stratum/stratum_groestl.c	/^static void stratum_groestl_timer(void)$/;"	f	file:
stratum_html_content	../stratum/stratum_http.c	/^shbuf_t *stratum_html_content(httpreq_t *req)$/;"	f
stratum_html_header	../stratum/stratum_http.c	/^void stratum_html_header(shbuf_t *buff)$/;"	f
stratum_html_main_content	../stratum/stratum_http.c	/^shbuf_t *stratum_html_main_content(struct httpreq_t *req)$/;"	f
stratum_http_args	../stratum/stratum_http.c	/^static shjson_t *stratum_http_args(char *url, char *ret_url)$/;"	f	file:
stratum_http_block_html	../stratum/stratum_http.c	/^void stratum_http_block_html(int ifaceIndex, shbuf_t *buff)$/;"	f
stratum_http_call	../stratum/stratum_http.c	/^int stratum_http_call(const char *url, shbuf_t *buff)$/;"	f
stratum_http_header	../stratum/stratum_http.c	/^void stratum_http_header(http_t *h, shbuf_t *buff, size_t data_len)$/;"	f
stratum_http_main_html	../stratum/stratum_http.c	/^void stratum_http_main_html(unsigned int sk, char *url, shbuf_t *buff)$/;"	f
stratum_http_request	../stratum/stratum_http.c	/^void stratum_http_request(unsigned int sk, char *url)$/;"	f
stratum_http_response	../stratum/stratum_http.c	/^char *stratum_http_response(unsigned int sk, char *url, int *idx_p)$/;"	f
stratum_http_spring_html	../stratum/stratum_http.c	/^void stratum_http_spring_html(unsigned int sk, char *url, shbuf_t *buff)$/;"	f
stratum_http_spring_img	../stratum/stratum_http.c	/^void stratum_http_spring_img(char *args, shbuf_t *buff)$/;"	f
stratum_http_spring_img_html	../stratum/stratum_http.c	/^void stratum_http_spring_img_html(shbuf_t *buff)$/;"	f
stratum_http_validate_img	../stratum/stratum_http.c	/^void stratum_http_validate_img(char *args, shbuf_t *buff)$/;"	f
stratum_http_validate_img_html	../stratum/stratum_http.c	/^void stratum_http_validate_img_html(shbuf_t *buff)$/;"	f
stratum_init	../stratum/stratum.c	/^int stratum_init(void)$/;"	f
stratum_json	../stratum/stratum.c	/^shjson_t *stratum_json(const char *json_text)$/;"	f
stratum_keccak_accept	../stratum/stratum_keccak.c	/^static void stratum_keccak_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_keccak_close	../stratum/stratum_keccak.c	/^static void stratum_keccak_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_keccak_init	../stratum/stratum_keccak.c	/^int stratum_keccak_init(void)$/;"	f
stratum_keccak_task_gen	../stratum/stratum_keccak.c	/^static void stratum_keccak_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_keccak_term	../stratum/stratum_keccak.c	/^static void stratum_keccak_term(void)$/;"	f	file:
stratum_keccak_timer	../stratum/stratum_keccak.c	/^static void stratum_keccak_timer(void)$/;"	f	file:
stratum_miner_extranonce_subscribe	../stratum/stratum_miner.cpp	/^int stratum_miner_extranonce_subscribe(CIface *iface, user_t *user, shjson_t *param, shjson_t **reply_p)$/;"	f
stratum_miner_get_transactions	../stratum/stratum_miner.cpp	/^int stratum_miner_get_transactions(CIface *iface, user_t *user, shjson_t *param, shjson_t **reply_p)$/;"	f
stratum_miner_getblocktemplate	../stratum/stratum_miner.cpp	/^shjson_t *stratum_miner_getblocktemplate(int ifaceIndex, int nAlg)$/;"	f
stratum_miner_lastminerblock	../stratum/stratum_miner.cpp	/^shjson_t *stratum_miner_lastminerblock(int ifaceIndex)$/;"	f
stratum_miner_minerblockvalue	../stratum/stratum_miner.cpp	/^int64 stratum_miner_minerblockvalue(int ifaceIndex, const CWalletTx& wtx)$/;"	f
stratum_miner_submitblock	../stratum/stratum_miner.cpp	/^int stratum_miner_submitblock(unsigned int workId, unsigned int nTime, unsigned int nNonce, char *xn_hex, char *ret_hash, double *ret_diff)$/;"	f
stratum_qubit_accept	../stratum/stratum_qubit.c	/^static void stratum_qubit_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_qubit_close	../stratum/stratum_qubit.c	/^static void stratum_qubit_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_qubit_init	../stratum/stratum_qubit.c	/^int stratum_qubit_init(void)$/;"	f
stratum_qubit_task_gen	../stratum/stratum_qubit.c	/^static void stratum_qubit_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_qubit_term	../stratum/stratum_qubit.c	/^static void stratum_qubit_term(void)$/;"	f	file:
stratum_qubit_timer	../stratum/stratum_qubit.c	/^static void stratum_qubit_timer(void)$/;"	f	file:
stratum_register_client	../stratum/stratum.c	/^user_t *stratum_register_client(int fd)$/;"	f
stratum_register_client_task	../stratum/stratum.c	/^int stratum_register_client_task(user_t *user, char *json_text)$/;"	f
stratum_register_html_task	../stratum/stratum.c	/^int stratum_register_html_task(user_t *user, char *html_text)$/;"	f
stratum_request_account_address	../stratum/stratum_protocol.c	/^static int stratum_request_account_address(int ifaceIndex, user_t *user, char *hash)$/;"	f	file:
stratum_request_account_alias	../stratum/stratum_protocol.c	/^static int stratum_request_account_alias(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *mode, char *alias_name, char *alias_addr)$/;"	f	file:
stratum_request_account_certificate	../stratum/stratum_protocol.c	/^static int stratum_request_account_certificate(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *mode, char *ctx_name, char *ctx_issuer, double ctx_fee)$/;"	f	file:
stratum_request_account_context	../stratum/stratum_protocol.c	/^static int stratum_request_account_context(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *mode, char *ctx_name, char *ctx_value)$/;"	f	file:
stratum_request_account_create	../stratum/stratum_protocol.c	/^static int stratum_request_account_create(int ifaceIndex, user_t *user, char *account)$/;"	f	file:
stratum_request_account_import	../stratum/stratum_protocol.c	/^static int stratum_request_account_import(int ifaceIndex, user_t *user, char *hash, const char *privaddr_str)$/;"	f	file:
stratum_request_account_info	../stratum/stratum_protocol.c	/^static int stratum_request_account_info(int ifaceIndex, user_t *user, char *account, char *pkey_str)$/;"	f	file:
stratum_request_account_secret	../stratum/stratum_protocol.c	/^static int stratum_request_account_secret(int ifaceIndex, user_t *user, char *hash, const char *pkey_str)$/;"	f	file:
stratum_request_account_transfer	../stratum/stratum_protocol.c	/^static int stratum_request_account_transfer(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *dest, double amount)$/;"	f	file:
stratum_request_account_tx	../stratum/stratum_protocol.c	/^static int stratum_request_account_tx(int ifaceIndex, user_t *user, char *account, char *pkey_str)$/;"	f	file:
stratum_request_account_verify_transfer	../stratum/stratum_protocol.c	/^static int stratum_request_account_verify_transfer(int ifaceIndex, user_t *user, char *account, char *pkey_str, char *dest, double amount)$/;"	f	file:
stratum_request_api	../stratum/stratum_api.cpp	/^shjson_t *stratum_request_api(int ifaceIndex, user_t *user, char *method, shjson_t *params, shjson_t *auth)$/;"	f
stratum_request_api_list	../stratum/stratum_api.cpp	/^shjson_t *stratum_request_api_list(int ifaceIndex, user_t *user, string strAccount, char *method, shjson_t *params)$/;"	f
stratum_request_id	../stratum/stratum_protocol.c	/^uint32_t stratum_request_id(void)$/;"	f
stratum_request_message	../stratum/stratum_protocol.c	/^int stratum_request_message(user_t *user, shjson_t *json)$/;"	f
stratum_request_wallet_sync	../stratum/stratum_protocol.c	/^static int stratum_request_wallet_sync(int ifaceIndex, user_t *user, uint32_t pin, shjson_t *pub_obj)$/;"	f	file:
stratum_round_reset	../stratum/stratum_task.c	/^void stratum_round_reset(time_t stamp)$/;"	f
stratum_runtime_session	../stratum/stratum_protocol.c	/^char *stratum_runtime_session(void)$/;"	f
stratum_send_client_ver	../stratum/stratum_protocol.c	/^int stratum_send_client_ver(user_t *user)$/;"	f
stratum_send_difficulty	../stratum/stratum_protocol.c	/^int stratum_send_difficulty(user_t *user)$/;"	f
stratum_send_error	../stratum/stratum_message.c	/^int stratum_send_error(user_t *user, int err_code)$/;"	f
stratum_send_message	../stratum/stratum_message.c	/^int stratum_send_message(user_t *user, shjson_t *msg)$/;"	f
stratum_send_subscribe	../stratum/stratum_message.c	/^int stratum_send_subscribe(user_t *user)$/;"	f
stratum_send_task	../stratum/stratum_message.c	/^int stratum_send_task(user_t *user, task_t *task, int clean)$/;"	f
stratum_session_nonce	../stratum/stratum_protocol.c	/^int stratum_session_nonce(void)$/;"	f
stratum_set_difficulty	../stratum/stratum_protocol.c	/^int stratum_set_difficulty(user_t *user, int diff)$/;"	f
stratum_sha256d_accept	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_sha256d_close	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_sha256d_init	../stratum/stratum_sha256d.c	/^int stratum_sha256d_init(void)$/;"	f
stratum_sha256d_task_gen	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_sha256d_term	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_term(void)$/;"	f	file:
stratum_sha256d_timer	../stratum/stratum_sha256d.c	/^static void stratum_sha256d_timer(void)$/;"	f	file:
stratum_skein_accept	../stratum/stratum_skein.c	/^static void stratum_skein_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_skein_close	../stratum/stratum_skein.c	/^static void stratum_skein_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_skein_init	../stratum/stratum_skein.c	/^int stratum_skein_init(void)$/;"	f
stratum_skein_task_gen	../stratum/stratum_skein.c	/^static void stratum_skein_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_skein_term	../stratum/stratum_skein.c	/^static void stratum_skein_term(void)$/;"	f	file:
stratum_skein_timer	../stratum/stratum_skein.c	/^static void stratum_skein_timer(void)$/;"	f	file:
stratum_subscribe	../stratum/stratum_protocol.c	/^static int stratum_subscribe(user_t *user)$/;"	f	file:
stratum_sync	../stratum/stratum_sync.c	/^void stratum_sync(void)$/;"	f
stratum_sync_connect	../stratum/stratum_sync.c	/^int stratum_sync_connect(user_t *user)$/;"	f
stratum_sync_cycle	../stratum/stratum_sync.c	/^void stratum_sync_cycle(CIface *iface, user_t *user)$/;"	f
stratum_sync_elevate_req	../stratum/stratum_sync.c	/^static int stratum_sync_elevate_req(user_t *user)$/;"	f	file:
stratum_sync_ident_req	../stratum/stratum_sync.c	/^static int stratum_sync_ident_req(user_t *user)$/;"	f	file:
stratum_sync_init	../stratum/stratum_sync.c	/^void stratum_sync_init(void)$/;"	f
stratum_sync_ping_req	../stratum/stratum_sync.c	/^static int stratum_sync_ping_req(user_t *user)$/;"	f	file:
stratum_sync_recv	../stratum/stratum_sync.c	/^int stratum_sync_recv(user_t *peer, char *json_text)$/;"	f
stratum_sync_resp	../stratum/stratum_sync.c	/^int stratum_sync_resp(user_t *user, shjson_t *tree)$/;"	f
stratum_sync_userlist_req	../stratum/stratum_sync.c	/^static int stratum_sync_userlist_req(user_t *user)$/;"	f	file:
stratum_sync_userlist_resp	../stratum/stratum_sync.c	/^int stratum_sync_userlist_resp(user_t *user, shjson_t *tree)$/;"	f
stratum_sync_wallet_listaddr_req	../stratum/stratum_sync.c	/^static int stratum_sync_wallet_listaddr_req(user_t *user)$/;"	f	file:
stratum_sync_wallet_setkey_req	../stratum/stratum_sync.c	/^static int stratum_sync_wallet_setkey_req(user_t *user)$/;"	f	file:
stratum_sync_walletlist_resp	../stratum/stratum_sync.c	/^int stratum_sync_walletlist_resp(user_t *user, shjson_t *tree)$/;"	f
stratum_task_gen	../stratum/stratum_task.c	/^void stratum_task_gen(task_attr_t *attr)$/;"	f
stratum_task_weight	../stratum/stratum_task.c	/^void stratum_task_weight(task_attr_t *attr)$/;"	f
stratum_task_work	../stratum/stratum_task.c	/^void stratum_task_work(task_t *task, task_attr_t *attr)$/;"	f
stratum_term	../stratum/stratum.c	/^void stratum_term(void)$/;"	f
stratum_timer	../stratum/stratum.c	/^static void stratum_timer(void)$/;"	f	file:
stratum_user	../stratum/stratum_user.c	/^user_t *stratum_user(user_t *user, char *username)$/;"	f
stratum_user_block	../stratum/stratum_user.c	/^void stratum_user_block(user_t *user, double share_diff)$/;"	f
stratum_user_broadcast_task	../stratum/stratum_user.c	/^int stratum_user_broadcast_task(task_t *task, task_attr_t *attr)$/;"	f
stratum_user_count	../stratum/stratum_user.c	/^int stratum_user_count(user_t *user)$/;"	f
stratum_user_find	../stratum/stratum_user.c	/^user_t *stratum_user_find(char *username)$/;"	f
stratum_user_free	../stratum/stratum_user.c	/^void stratum_user_free(user_t *f_user)$/;"	f
stratum_user_get	../stratum/stratum_user.c	/^user_t *stratum_user_get(int fd)$/;"	f
stratum_user_init	../stratum/stratum_user.c	/^user_t *stratum_user_init(int fd)$/;"	f
stratum_user_max_height	../stratum/stratum_task.c	/^static uint64_t stratum_user_max_height(void)$/;"	f	file:
stratum_user_speed	../stratum/stratum_user.c	/^double stratum_user_speed(user_t *user)$/;"	f
stratum_validate_submit	../stratum/stratum_protocol.c	/^int stratum_validate_submit(user_t *user, shjson_t *json)$/;"	f
stratum_work_cycle	../stratum/stratum.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_blake2s.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_groestl.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_keccak.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_qubit.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_sha256d.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_skein.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_work_cycle	../stratum/stratum_x11.c	/^static volatile time_t stratum_work_cycle;$/;"	v	file:
stratum_x11_accept	../stratum/stratum_x11.c	/^static void stratum_x11_accept(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_x11_close	../stratum/stratum_x11.c	/^static void stratum_x11_close(int fd, struct sockaddr *net_addr)$/;"	f	file:
stratum_x11_init	../stratum/stratum_x11.c	/^int stratum_x11_init(void)$/;"	f
stratum_x11_task_gen	../stratum/stratum_x11.c	/^static void stratum_x11_task_gen(task_attr_t *attr)$/;"	f	file:
stratum_x11_term	../stratum/stratum_x11.c	/^static void stratum_x11_term(void)$/;"	f	file:
stratum_x11_timer	../stratum/stratum_x11.c	/^static void stratum_x11_timer(void)$/;"	f	file:
string	../server/emc2/emc2_netmsg.cpp	/^    std::string& string;$/;"	m	class:LimitedString	file:
string	../server/ltc/ltc_netmsg.cpp	/^    std::string& string;$/;"	m	class:LimitedString	file:
string	../server/shc/shc_netmsg.cpp	/^    std::string& string;$/;"	m	class:LimitedString	file:
string	../server/testnet/testnet_netmsg.cpp	/^    std::string& string;$/;"	m	class:LimitedString	file:
stringFromVch	../server/ext/txext.h	/^inline std::string stringFromVch(const std::vector<unsigned char> &vch) $/;"	f
string_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
string_list	../server/mnemonic.h	/^typedef vector<string> string_list;$/;"	t
strlcat	../server/strlcpy.h	/^inline size_t strlcat(char *dst, const char *src, size_t siz)$/;"	f
strlcpy	../server/strlcpy.h	/^inline size_t strlcpy(char *dst, const char *src, size_t siz)$/;"	f
strprintf	../server/util.h	97;"	d
substitute_esc_chars	../server/json/json_spirit_reader_template.h	/^    String_type substitute_esc_chars( typename String_type::const_iterator begin, $/;"	f	namespace:json_spirit
sync_acc	../stratum/stratum.h	/^  char sync_acc[256];$/;"	m	struct:user_t
sync_addr	../stratum/stratum.h	/^  time_t sync_addr;$/;"	m	struct:user_t
sync_flags	../stratum/stratum.h	/^  int sync_flags;$/;"	m	struct:user_t
sync_pubkey	../stratum/stratum.h	/^  char sync_pubkey[256];$/;"	m	struct:user_t
sync_user	../stratum/stratum.h	/^  time_t sync_user;$/;"	m	struct:user_t
syncoptions	../server/leveldb.h	/^    leveldb::WriteOptions syncoptions;$/;"	m	class:CLevelDB
sys_user	../stratum/stratum_task.c	/^static user_t *sys_user;$/;"	v	file:
szMemMax	../server/txmempool.h	/^    size_t szMemMax;$/;"	m	class:CPool
t	../server/algo/blake2s.h	/^	uint32_t t[2];$/;"	m	struct:__blake2s_state
tExpire	../server/ext/txext.h	/^    shtime_t tExpire;$/;"	m	class:CExtCore
tab_map	../blockchain/bc.h	/^  bc_map_t tab_map;$/;"	m	struct:bc_t
tableBlockIndex	../server/block.cpp	/^blkidx_t tableBlockIndex[MAX_COIN_IFACE];$/;"	v
tallyitem	../server/rpc/rpc_wallet_addr.cpp	/^    tallyitem()$/;"	f	struct:tallyitem
tallyitem	../server/rpc/rpc_wallet_addr.cpp	/^struct tallyitem$/;"	s	file:
target	../stratum/stratum.h	/^  double target;$/;"	m	struct:task_t
task_attr_t	../stratum/stratum.h	/^typedef struct task_attr_t$/;"	s
task_attr_t	../stratum/stratum.h	/^} task_attr_t;$/;"	t	typeref:struct:task_attr_t
task_free	../stratum/stratum_task.c	/^void task_free(task_t **task_p)$/;"	f
task_id	../stratum/stratum.h	/^  unsigned int task_id;$/;"	m	struct:task_t
task_init	../stratum/stratum_task.c	/^task_t *task_init(task_attr_t *attr)$/;"	f
task_stat_t	../stratum/stratum_task.c	/^typedef struct task_stat_t$/;"	s	file:
task_stat_t	../stratum/stratum_task.c	/^} task_stat_t;$/;"	t	typeref:struct:task_stat_t	file:
task_t	../stratum/stratum.h	/^typedef struct task_t$/;"	s
task_t	../stratum/stratum.h	/^} task_t;$/;"	t	typeref:struct:task_t
task_verify	../stratum/stratum_task.c	/^static int task_verify(int ifaceIndex, int *work_reset_p)$/;"	f	file:
test	../test/testcoin_bip32.cpp	/^static TestVector test =$/;"	v	file:
test	../test/testcoin_sip33.cpp	/^static sip33_TestVector test =$/;"	v	file:
test_AddOrphanBlock	../server/test/test_block.cpp	/^void test_AddOrphanBlock(CBlock *block)$/;"	f
test_CalculateSoftFee	../server/test/test_pool.cpp	/^static int64 test_CalculateSoftFee(CTransaction& tx)$/;"	f	file:
test_CheckProofOfWork	../server/test/test_block.cpp	/^bool test_CheckProofOfWork(uint256 hash, unsigned int nBits, int alg)$/;"	f
test_ConnectInputs	../server/test/test_block.cpp	/^bool test_ConnectInputs(CTransaction *tx, MapPrevTx inputs, map<uint256, CTxIndex>& mapTestPool, const CDiskTxPos& posThisTx, const CBlockIndex* pindexBlock, bool fBlock, bool fMiner, bool fStrictPayToScriptHash=true)$/;"	f
test_CreateGenesisBlock	../server/test/test_block.cpp	/^bool test_CreateGenesisBlock()$/;"	f
test_CreateNewBlock	../server/test/test_block.cpp	/^CBlock* test_CreateNewBlock(const CPubKey& rkey, CBlockIndex *pindexPrev)$/;"	f
test_EraseFromWallets	../server/test/test_block.cpp	/^static void test_EraseFromWallets(uint256 hash)$/;"	f	file:
test_GenerateBlock	../server/test/test_block.cpp	/^CBlock *test_GenerateBlock(CBlockIndex *pindexPrev)$/;"	f
test_GetBlockValue	../server/test/test_block.cpp	/^int64 test_GetBlockValue(int nHeight, int64 nFees)$/;"	f
test_GetMainAccountPubKey	../proto/test_proto.cpp	/^static CPubKey test_GetMainAccountPubKey(CWallet *wallet)$/;"	f	file:
test_GetOrphanBlock	../server/test/test_block.cpp	/^CBlock *test_GetOrphanBlock(const uint256& hash)$/;"	f
test_GetOrphanNextHash	../server/test/test_block.cpp	/^bool test_GetOrphanNextHash(const uint256& hash, uint256& retNextHash)$/;"	f
test_GetOrphanPrevHash	../server/test/test_block.cpp	/^bool test_GetOrphanPrevHash(const uint256& hash, uint256& retPrevHash)$/;"	f
test_GetOrphanRoot	../server/test/test_block.cpp	/^uint256 test_GetOrphanRoot(uint256 hash)$/;"	f
test_GetTxWeight	../server/test/test_block.cpp	/^static int64_t test_GetTxWeight(const CTransaction& tx)$/;"	f	file:
test_IsFromMe	../server/test/test_block.cpp	/^static bool test_IsFromMe(CTransaction& tx)$/;"	f	file:
test_IsOrphanBlock	../server/test/test_block.cpp	/^bool test_IsOrphanBlock(const uint256& hash)$/;"	f
test_LoadWallet	../server/test/test_wallet.cpp	/^bool test_LoadWallet(void)$/;"	f
test_ProcessBlock	../server/test/test_block.cpp	/^bool test_ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
test_RemoveOrphanBlock	../server/test/test_block.cpp	/^void test_RemoveOrphanBlock(const uint256& hash)$/;"	f
test_Reorganize	../server/test/test_block.cpp	/^bool static test_Reorganize(CTxDB& txdb, CBlockIndex* pindexNew, TEST_CTxMemPool *mempool)$/;"	f	file:
test_SetBestChainInner	../server/test/test_block.cpp	/^bool test_SetBestChainInner(CTxDB& txdb, CBlock *block, CBlockIndex *pindexNew)$/;"	f
test_Truncate	../server/test/test_block.cpp	/^bool test_Truncate(uint256 hash)$/;"	f
test_UpdatedTransaction	../server/test/test_block.cpp	/^static void test_UpdatedTransaction(const uint256& hashTx)$/;"	f	file:
test_bind	../proto/test_proto.cpp	/^static int test_bind(CIface *iface, void *_unused_)$/;"	f	file:
test_block_new	../proto/test_proto.cpp	/^static int test_block_new(CIface *iface, CBlock **block_p)$/;"	f	file:
test_block_process	../proto/test_proto.cpp	/^static int test_block_process(CIface *iface, CBlock *block)$/;"	f	file:
test_block_templ	../proto/test_proto.cpp	/^static int test_block_templ(CIface *iface, CBlock **block_p)$/;"	f	file:
test_coin_iface	../proto/test_proto.cpp	/^coin_iface_t test_coin_iface = {$/;"	v
test_init	../proto/test_proto.cpp	/^static int test_init(CIface *iface, void *_unused_)$/;"	f	file:
test_nBytesPerSigOp	../server/test/test_wallet.cpp	/^static unsigned int test_nBytesPerSigOp = TEST_DEFAULT_BYTES_PER_SIGOP;$/;"	v	file:
test_peer_add	../proto/test_proto.cpp	/^static int test_peer_add(CIface *iface, void *arg)$/;"	f	file:
test_peer_recv	../proto/test_proto.cpp	/^static int test_peer_recv(CIface *iface, void *arg)$/;"	f	file:
test_shcoind_init	../test/test_init.cpp	/^void test_shcoind_init(void)$/;"	f
test_term	../proto/test_proto.cpp	/^static int test_term(CIface *iface, void *_unused_)$/;"	f	file:
test_tx_new	../proto/test_proto.cpp	/^static int test_tx_new(CIface *iface, void *arg)$/;"	f	file:
test_tx_pool	../proto/test_proto.cpp	/^static int test_tx_pool(CIface *iface, CTxMemPool **pool_p)$/;"	f	file:
testnet_AddOrphanBlock	../server/testnet/testnet_block.cpp	/^void testnet_AddOrphanBlock(CBlock *block)$/;"	f
testnet_AlreadyHave	../server/testnet/testnet_netmsg.cpp	/^static bool testnet_AlreadyHave(CIface *iface, const CInv& inv)$/;"	f	file:
testnet_CalculateFee	../server/testnet/testnet_pool.cpp	/^static int64 testnet_CalculateFee(const CTransaction& tx)$/;"	f	file:
testnet_CalculateSoftFee	../server/testnet/testnet_pool.cpp	/^static int64 testnet_CalculateSoftFee(CTransaction& tx)$/;"	f	file:
testnet_CheckProofOfWork	../server/testnet/testnet_block.cpp	/^bool testnet_CheckProofOfWork(uint256 hash, unsigned int nBits)$/;"	f
testnet_CreateGenesisBlock	../server/testnet/testnet_block.cpp	/^bool testnet_CreateGenesisBlock()$/;"	f
testnet_CreateNewBlock	../server/testnet/testnet_block.cpp	/^CBlock* testnet_CreateNewBlock(const CPubKey& rkey)$/;"	f
testnet_EraseFromWallets	../server/testnet/testnet_block.cpp	/^static void testnet_EraseFromWallets(uint256 hash)$/;"	f	file:
testnet_FillBlockIndex	../server/testnet/testnet_txidx.cpp	/^bool testnet_FillBlockIndex(txlist& vSpring, txlist& vCert, txlist& vIdent, txlist& vLicense, txlist& vAlias, txlist& vContext, txlist& vExec, txlist& vOffer)$/;"	f
testnet_GetBlockValue	../server/testnet/testnet_block.cpp	/^int64 testnet_GetBlockValue(int nHeight, int64 nFees)$/;"	f
testnet_GetLastCheckpoint	../server/testnet/testnet_netmsg.cpp	/^CBlockIndex *testnet_GetLastCheckpoint()$/;"	f
testnet_GetMainAccountPubKey	../proto/testnet_proto.cpp	/^static CPubKey testnet_GetMainAccountPubKey(CWallet *wallet)$/;"	f	file:
testnet_GetOrphanBlock	../server/testnet/testnet_block.cpp	/^CBlock *testnet_GetOrphanBlock(const uint256& hash)$/;"	f
testnet_GetOrphanNextHash	../server/testnet/testnet_block.cpp	/^bool testnet_GetOrphanNextHash(const uint256& hash, uint256& retNextHash)$/;"	f
testnet_GetOrphanPrevHash	../server/testnet/testnet_block.cpp	/^bool testnet_GetOrphanPrevHash(const uint256& hash, uint256& retPrevHash)$/;"	f
testnet_GetOrphanRoot	../server/testnet/testnet_block.cpp	/^uint256 testnet_GetOrphanRoot(uint256 hash)$/;"	f
testnet_GetTxWeight	../server/testnet/testnet_block.cpp	/^static int64_t testnet_GetTxWeight(const CTransaction& tx)$/;"	f	file:
testnet_InitBlockIndex	../server/testnet/testnet_txidx.cpp	/^bool testnet_InitBlockIndex()$/;"	f
testnet_IsFromMe	../server/testnet/testnet_block.cpp	/^static bool testnet_IsFromMe(CTransaction& tx)$/;"	f	file:
testnet_IsOrphanBlock	../server/testnet/testnet_block.cpp	/^bool testnet_IsOrphanBlock(const uint256& hash)$/;"	f
testnet_LoadBlockIndex	../server/testnet/testnet_txidx.cpp	/^static bool testnet_LoadBlockIndex()$/;"	f	file:
testnet_LoadWallet	../server/testnet/testnet_wallet.cpp	/^bool testnet_LoadWallet(void)$/;"	f
testnet_ProcessBlock	../server/testnet/testnet_block.cpp	/^bool testnet_ProcessBlock(CNode* pfrom, CBlock* pblock)$/;"	f
testnet_ProcessGetHeaders	../server/testnet/testnet_netmsg.cpp	/^static void testnet_ProcessGetHeaders(CIface *iface, CNode *pfrom, CBlockLocator *locator, uint256 hashStop)$/;"	f	file:
testnet_ProcessMessage	../server/testnet/testnet_netmsg.cpp	/^bool testnet_ProcessMessage(CIface *iface, CNode* pfrom, string strCommand, CDataStream& vRecv)$/;"	f
testnet_ProcessMessages	../server/testnet/testnet_netmsg.cpp	/^bool testnet_ProcessMessages(CIface *iface, CNode* pfrom)$/;"	f
testnet_RelayTransaction	../server/testnet/testnet_netmsg.cpp	/^void testnet_RelayTransaction(const CTransaction& tx, const uint256& hash)$/;"	f
testnet_RemoveOrphanBlock	../server/testnet/testnet_block.cpp	/^void testnet_RemoveOrphanBlock(const uint256& hash)$/;"	f
testnet_RestoreBlockIndex	../server/testnet/testnet_txidx.cpp	/^bool testnet_RestoreBlockIndex()$/;"	f
testnet_SendMessages	../server/testnet/testnet_netmsg.cpp	/^bool testnet_SendMessages(CIface *iface, CNode* pto, bool fSendTrickle)$/;"	f
testnet_UpdatedTransaction	../server/testnet/testnet_block.cpp	/^static void testnet_UpdatedTransaction(const uint256& hashTx)$/;"	f	file:
testnet_bind	../proto/testnet_proto.cpp	/^static int testnet_bind(CIface *iface, void *_unused_)$/;"	f	file:
testnet_block_new	../proto/testnet_proto.cpp	/^static int testnet_block_new(CIface *iface, CBlock **block_p)$/;"	f	file:
testnet_block_process	../proto/testnet_proto.cpp	/^static int testnet_block_process(CIface *iface, CBlock *block)$/;"	f	file:
testnet_block_templ	../proto/testnet_proto.cpp	/^static int testnet_block_templ(CIface *iface, CBlock **block_p)$/;"	f	file:
testnet_coin_iface	../proto/testnet_proto.cpp	/^coin_iface_t testnet_coin_iface = {$/;"	v
testnet_init	../proto/testnet_proto.cpp	/^static int testnet_init(CIface *iface, void *_unused_)$/;"	f	file:
testnet_msg_recv	../proto/testnet_proto.cpp	/^static int testnet_msg_recv(CIface *iface, CNode *pnode)$/;"	f	file:
testnet_msg_send	../proto/testnet_proto.cpp	/^static int testnet_msg_send(CIface *iface, CNode *pnode)$/;"	f	file:
testnet_nBytesPerSigOp	../server/testnet/testnet_wallet.cpp	/^static unsigned int testnet_nBytesPerSigOp = TESTNET_DEFAULT_BYTES_PER_SIGOP;$/;"	v	file:
testnet_peer_add	../proto/testnet_proto.cpp	/^static int testnet_peer_add(CIface *iface, void *arg)$/;"	f	file:
testnet_peer_recv	../proto/testnet_proto.cpp	/^static int testnet_peer_recv(CIface *iface, void *arg)$/;"	f	file:
testnet_seed_list	../unet/unet_seed.h	/^static char *testnet_seed_list[TESTNET_SEED_LIST_SIZE] = {$/;"	v
testnet_term	../proto/testnet_proto.cpp	/^static int testnet_term(CIface *iface, void *_unused_)$/;"	f	file:
testnet_tx_new	../proto/testnet_proto.cpp	/^static int testnet_tx_new(CIface *iface, void *arg)$/;"	f	file:
testnet_tx_pool	../proto/testnet_proto.cpp	/^static int testnet_tx_pool(CIface *iface, CTxMemPool **pool_p)$/;"	f	file:
th_timer	../unet/unet.h	/^	pthread_t th_timer;$/;"	m	struct:unet_bind_t
threadId	../server/net.h	/^enum threadId$/;"	g
throw_error	../server/json/json_spirit_reader_template.h	/^    void throw_error( Iter_type i, const std::string& reason )$/;"	f	namespace:json_spirit
throw_error	../server/json/json_spirit_reader_template.h	/^    void throw_error( spirit_namespace::position_iterator< Iter_type > i, const std::string& reason )$/;"	f	namespace:json_spirit
throw_not_array	../server/json/json_spirit_reader_template.h	/^        static void throw_not_array( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Json_grammer
throw_not_colon	../server/json/json_spirit_reader_template.h	/^        static void throw_not_colon( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Json_grammer
throw_not_object	../server/json/json_spirit_reader_template.h	/^        static void throw_not_object( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Json_grammer
throw_not_pair	../server/json/json_spirit_reader_template.h	/^        static void throw_not_pair( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Json_grammer
throw_not_string	../server/json/json_spirit_reader_template.h	/^        static void throw_not_string( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Json_grammer
throw_not_value	../server/json/json_spirit_reader_template.h	/^        static void throw_not_value( Iter_type begin, Iter_type end )$/;"	f	class:json_spirit::Json_grammer
timer_stamp	../unet/unet.h	/^  shtime_t timer_stamp;$/;"	m	struct:unet_bind_t
title	../stratum/stratum_http.h	/^	char *title;$/;"	m	struct:http_t
tmpl_merkle	../stratum/stratum.h	/^  char tmpl_merkle[256];$/;"	m	struct:task_t
tmpl_xnonce1	../stratum/stratum.h	/^  char tmpl_xnonce1[16];$/;"	m	struct:task_t
tnow	../stratum/stratum.h	/^  time_t tnow;$/;"	m	struct:task_attr_t
to_hex_char	../server/json/json_spirit_writer_template.h	/^    inline char to_hex_char( unsigned int c )$/;"	f	namespace:json_spirit
to_str	../server/json/json_spirit_value.h	/^    String_type to_str( const char* c_str )$/;"	f	namespace:json_spirit
tot_block_accept	../proto/coin_proto.h	/^    uint64_t tot_block_accept;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_block_orphan	../proto/coin_proto.h	/^    uint64_t tot_block_orphan;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_block_submit	../proto/coin_proto.h	/^    uint64_t tot_block_submit;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_spring_accept	../proto/coin_proto.h	/^    uint64_t tot_spring_accept;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_spring_submit	../proto/coin_proto.h	/^    uint64_t tot_spring_submit;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_accept	../proto/coin_proto.h	/^    uint64_t tot_tx_accept;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_mint	../proto/coin_proto.h	/^		uint64_t tot_tx_mint;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_return	../proto/coin_proto.h	/^		uint64_t tot_tx_return;$/;"	m	struct:coin_iface_t::coin_stat_t
tot_tx_submit	../proto/coin_proto.h	/^    uint64_t tot_tx_submit;$/;"	m	struct:coin_iface_t::coin_stat_t
total	../server/chain.h	/^  unsigned int total;$/;"	m	struct:ChainOp
total	../stratum/stratum_task.c	/^  uint32_t total;$/;"	m	struct:task_stat_t	file:
trust	../server/block.cpp	/^bool CBlock::trust(int deg, const char *msg, ...)$/;"	f	class:CBlock
trust	../unet/unet_peerdb.c	/^  int64_t trust;$/;"	m	struct:peerdb_t	file:
try_wait	../server/sync.h	/^		bool try_wait() {$/;"	f	class:CSemaphore
tx	../server/block_cmpct.h	/^		CTransactionRef& tx;$/;"	m	struct:TransactionCompressor
tx	../server/block_cmpct.h	/^	CTransactionRef tx;$/;"	m	struct:PrefilledTransaction
tx	../server/txmempool.h	/^    CTransaction tx;$/;"	m	class:CPoolTx
tx	../server/txsignature.h	/^    CTransaction *tx;$/;"	m	class:CSignature
tx	../server/wallet.h	/^		const CWalletTx *tx;$/;"	m	class:COutput
txCtAvg	../server/txfeerate.h	/^    std::vector<double> txCtAvg;$/;"	m	class:TxConfirmStats
tx_HasValidOps	../server/block.cpp	/^static bool tx_HasValidOps(CIface *iface, const CScript& script)$/;"	f	file:
tx_cache	../server/block.h	/^typedef std::map<uint256, CTransaction> tx_cache;$/;"	t
tx_map	../server/block.h	/^typedef map< uint256, vector<uint256> > tx_map;$/;"	t
tx_map	../server/coin.cpp	/^typedef map< uint256, vector<uint256> > tx_map;$/;"	t	file:
tx_tot	../proto/coin_proto.h	/^  uint64_t tx_tot; \/* nTransactionsUpdated *\/$/;"	m	struct:coin_iface_t
txcreator_AddDummySignature	../server/txcreator.cpp	/^static void txcreator_AddDummySignature(CIface *iface, const CTransaction& tx, int nOut, CTxIn& in, CTxInWitness& wit)$/;"	f	file:
txcreator_RecentBlockHeight	../server/txcreator.cpp	/^static uint32_t txcreator_RecentBlockHeight(CIface *iface)$/;"	f	file:
txid	../server/bolo/bolo_validation03.cpp	/^union _bits256 { uint8_t bytes[32]; uint16_t ushorts[16]; uint32_t uints[8]; uint64_t ulongs[4]; uint64_t txid; };$/;"	m	union:_bits256	file:
txlist	../server/color/color_txidx.cpp	/^typedef vector<CBlockIndex*> txlist;$/;"	t	file:
txlist	../server/shc/shc_txidx.cpp	/^typedef vector<CBlockIndex*> txlist;$/;"	t	file:
txlist	../server/testnet/testnet_txidx.cpp	/^typedef vector<CBlockIndex*> txlist;$/;"	t	file:
txn	../server/block_cmpct.h	/^		std::vector<CTransactionRef> txn;$/;"	m	class:BlockTransactions
txn	../server/bloom.h	/^    CPartialMerkleTree txn;$/;"	m	class:CMerkleBlock
txn_available	../server/block_cmpct.h	/^		std::vector<CTransactionRef> txn_available;$/;"	m	class:PartiallyDownloadedBlock
txnouttype	../server/script.h	/^enum txnouttype$/;"	g
type	../server/json/json_spirit_value.h	/^    Value_type Value_impl< Config >::type() const$/;"	f	class:json_spirit::Value_impl
type	../server/protocol.h	/^		int type;$/;"	m	class:CInv
type	../unet/unet.h	/^  int type;$/;"	m	struct:uevent_t
type_	../server/json/json_spirit_value.h	/^        Value_type type_;$/;"	m	class:json_spirit::Value_impl
u	../server/algo/sph_echo.h	/^	} u;$/;"	m	struct:__anon24	typeref:union:__anon24::__anon25
u	../server/algo/sph_echo.h	/^	} u;$/;"	m	struct:__anon26	typeref:union:__anon26::__anon27
u	../server/algo/sph_keccak.h	/^	} u;$/;"	m	struct:__anon35	typeref:union:__anon35::__anon36
u32	../server/algo/sph_simd.c	/^typedef sph_u32 u32;$/;"	t	file:
uevent_clear	../unet/unet_event.c	/^void uevent_clear(uevent_t *e)$/;"	f
uevent_clear_pos	../unet/unet_event.c	/^void uevent_clear_pos(int idx)$/;"	f
uevent_cycle	../unet/unet_event.c	/^void uevent_cycle(void)$/;"	f
uevent_cycle_peer_conn	../unet/unet_event.c	/^int uevent_cycle_peer_conn(uevent_t *e)$/;"	f
uevent_cycle_peer_verify	../unet/unet_event.c	/^int uevent_cycle_peer_verify(uevent_t *e)$/;"	f
uevent_new	../unet/unet_event.c	/^uevent_t *uevent_new(int umode, int type, void *data)$/;"	f
uevent_peer_verify	../unet/unet_event.c	/^int uevent_peer_verify(uevent_t *e)$/;"	f
uevent_t	../unet/unet.h	/^typedef struct uevent_t$/;"	s
uevent_t	../unet/unet.h	/^} uevent_t;$/;"	t	typeref:struct:uevent_t
uevent_type_count	../unet/unet_event.c	/^unsigned int uevent_type_count(int type)$/;"	f
uint160	../server/uint256.h	/^    explicit uint160(const std::string& str)$/;"	f	class:uint160
uint160	../server/uint256.h	/^    explicit uint160(const std::vector<unsigned char>& vch)$/;"	f	class:uint160
uint160	../server/uint256.h	/^    uint160()$/;"	f	class:uint160
uint160	../server/uint256.h	/^    uint160(const basetype& b)$/;"	f	class:uint160
uint160	../server/uint256.h	/^    uint160(uint64 b)$/;"	f	class:uint160
uint160	../server/uint256.h	/^class uint160 : public base_uint160$/;"	c
uint256	../server/uint256.h	/^    explicit uint256(const std::string& str)$/;"	f	class:uint256
uint256	../server/uint256.h	/^    explicit uint256(const std::vector<unsigned char>& vch)$/;"	f	class:uint256
uint256	../server/uint256.h	/^    uint256()$/;"	f	class:uint256
uint256	../server/uint256.h	/^    uint256(const basetype& b)$/;"	f	class:uint256
uint256	../server/uint256.h	/^    uint256(uint64 b)$/;"	f	class:uint256
uint256	../server/uint256.h	/^class uint256 : public base_uint256$/;"	c
uint64	../proto/types.h	/^typedef unsigned long long  uint64;$/;"	t
uint64	../server/uint256.h	/^typedef unsigned long long  uint64;$/;"	t
uint64_p	../server/json/json_spirit_reader_template.h	/^    const spirit_namespace::uint_parser< boost::uint64_t > uint64_p = spirit_namespace::uint_parser< boost::uint64_t >();$/;"	m	namespace:json_spirit
uints	../server/bolo/bolo_validation03.cpp	/^union _bits256 { uint8_t bytes[32]; uint16_t ushorts[16]; uint32_t uints[8]; uint64_t ulongs[4]; uint64_t txid; };$/;"	m	union:_bits256	file:
ulongs	../server/bolo/bolo_validation03.cpp	/^union _bits256 { uint8_t bytes[32]; uint16_t ushorts[16]; uint32_t uints[8]; uint64_t ulongs[4]; uint64_t txid; };$/;"	m	union:_bits256	file:
unconfTxs	../server/txfeerate.h	/^    std::vector<std::vector<int> > unconfTxs;  \/\/unconfTxs[Y][X]$/;"	m	class:TxConfirmStats
unet_accept	../unet/unet_accept.c	/^int unet_accept(int mode, unsigned int *sk_p)$/;"	f
unet_add	../unet/unet.c	/^int unet_add(int mode, unsigned int sk)$/;"	f
unet_addr_op	../unet/unet.h	/^typedef void (*unet_addr_op)(int, struct sockaddr *);$/;"	t
unet_bind	../unet/unet_bind.c	/^int unet_bind(int mode, int port, char *host)$/;"	f
unet_bind_flag_set	../unet/unet_bind.c	/^void unet_bind_flag_set(int mode, int flags)$/;"	f
unet_bind_flag_unset	../unet/unet_bind.c	/^void unet_bind_flag_unset(int mode, int flags)$/;"	f
unet_bind_t	../unet/unet.h	/^typedef struct unet_bind_t$/;"	s
unet_bind_t	../unet/unet.h	/^} unet_bind_t;$/;"	t	typeref:struct:unet_bind_t
unet_bind_table	../unet/unet_bind.c	/^unet_bind_t *unet_bind_table(int mode)$/;"	f
unet_close	../unet/unet_close.c	/^int unet_close(unsigned int sk, char *tag)$/;"	f
unet_close_all	../unet/unet_close.c	/^int unet_close_all(int mode)$/;"	f
unet_close_idle	../unet/unet_close.c	/^void unet_close_idle(void)$/;"	f
unet_connect	../unet/unet_connect.c	/^int unet_connect(int mode, struct sockaddr *net_addr, unsigned int *sk_p)$/;"	f
unet_connop_set	../unet/unet_bind.c	/^void unet_connop_set(int mode, unet_addr_op accept_op)$/;"	f
unet_cycle	../unet/unet.c	/^void unet_cycle(double max_t)$/;"	f
unet_disconnop_set	../unet/unet_bind.c	/^void unet_disconnop_set(int mode, unet_addr_op close_op)$/;"	f
unet_hostname	../unet/unet_accept.c	/^static const char *unet_hostname(struct sockaddr *addr)$/;"	f	file:
unet_idle	../unet/unet.c	/^void unet_idle(void)$/;"	f
unet_local_add	../unet/unet_local.c	/^void unet_local_add(char *ipaddr_in)$/;"	f
unet_local_discover1	../unet/unet_local.c	/^int unet_local_discover1(shnum_t *lat_p, shnum_t *lon_p) \/* ipv4 *\/$/;"	f
unet_local_discover2	../unet/unet_local.c	/^void unet_local_discover2(void) \/* ipv4 *\/$/;"	f
unet_local_host	../unet/unet_local.c	/^const char *unet_local_host(void)$/;"	f
unet_local_init	../unet/unet_local.c	/^void unet_local_init(void)$/;"	f
unet_local_set	../unet/unet_local.c	/^void unet_local_set(char *ipaddr)$/;"	f
unet_local_verify	../unet/unet_local.c	/^int unet_local_verify(char *ipaddr)$/;"	f
unet_local_verify_fd	../unet/unet_accept.c	/^int unet_local_verify_fd(int fd)$/;"	f
unet_log	../unet/unet.h	198;"	d
unet_mode	../unet/unet.c	/^int unet_mode(unsigned int sk)$/;"	f
unet_mode_label	../unet/unet.c	/^const char *unet_mode_label(int mode)$/;"	f
unet_netaddr_str	../unet/unet_peerdb.c	/^const char *unet_netaddr_str(struct sockaddr *addr)$/;"	f
unet_op	../unet/unet.h	/^typedef void (*unet_op)(void);$/;"	t
unet_peer_decr	../unet/unet_peerdb.c	/^void unet_peer_decr(int mode, shpeer_t *peer)$/;"	f
unet_peer_export_path	../unet/unet_peerdb.c	/^int unet_peer_export_path(int ifaceIndex, char *path)$/;"	f
unet_peer_fill	../unet/unet_peerdb.c	/^void unet_peer_fill(int mode)$/;"	f
unet_peer_fill_seed	../unet/unet_peerdb.c	/^void unet_peer_fill_seed(int mode)$/;"	f
unet_peer_find	../unet/unet_peerdb.c	/^int unet_peer_find(int mode, struct sockaddr *addr)$/;"	f
unet_peer_incr	../unet/unet_peerdb.c	/^void unet_peer_incr(int mode, shpeer_t *peer)$/;"	f
unet_peer_prune	../unet/unet_peerdb.c	/^void unet_peer_prune(int mode)$/;"	f
unet_peer_scan	../unet/unet_peerdb.c	/^void unet_peer_scan(void)$/;"	f
unet_peer_total	../unet/unet_peerdb.c	/^unsigned int unet_peer_total(int mode)$/;"	f
unet_peer_track_add	../unet/unet_peerdb.c	/^void unet_peer_track_add(int ifaceIndex, shpeer_t *peer)$/;"	f
unet_peer_track_list	../unet/unet_peerdb.c	/^shpeer_t **unet_peer_track_list(int mode, int max_peer)$/;"	f
unet_peer_track_remove	../unet/unet_peerdb.c	/^void unet_peer_track_remove(int ifaceIndex, shpeer_t *peer)$/;"	f
unet_peer_wait	../unet/unet_peerdb.c	/^int unet_peer_wait(unet_bind_t *bind)$/;"	f
unet_shutdown	../unet/unet.c	/^void unet_shutdown(unsigned int sk)$/;"	f
unet_table_t	../unet/unet.h	/^typedef struct desc_t unet_table_t;$/;"	t	typeref:struct:desc_t
unet_thread_free	../unet/unet_thread.c	/^void unet_thread_free(int mode)$/;"	f
unet_thread_init	../unet/unet_thread.c	/^void unet_thread_init(int mode)$/;"	f
unet_thread_timer	../unet/unet_thread.c	/^void *unet_thread_timer(unet_bind_t *bind)$/;"	f
unet_timer_cycle	../unet/unet_timer.c	/^void unet_timer_cycle(void)$/;"	f
unet_timer_cycle_mode	../unet/unet_timer.c	/^void unet_timer_cycle_mode(unet_bind_t *bind)$/;"	f
unet_timer_set	../unet/unet_timer.c	/^int unet_timer_set(int mode, unet_op timer_f)$/;"	f
unet_timer_unset	../unet/unet_timer.c	/^void unet_timer_unset(int mode)$/;"	f
unet_unbind	../unet/unet_bind.c	/^int unet_unbind(int mode)$/;"	f
unet_write	../unet/unet_io.c	/^int unet_write(unsigned int sk, char *data, size_t data_len)$/;"	f
unicode_str_to_char	../server/json/json_spirit_reader_template.h	/^    Char_type unicode_str_to_char( Iter_type& begin )$/;"	f	namespace:json_spirit
unset_serv_state	../server/chain.cpp	/^static void unset_serv_state(CIface *iface, int flag)$/;"	f	file:
update_alias_addr_tx	../server/ext/alias.cpp	/^int update_alias_addr_tx(CIface *iface, const char *title, CCoinAddr& addr, CWalletTx& wtx)$/;"	f
update_altchain_tx	../server/ext/altchain.cpp	/^int update_altchain_tx(CIface *iface, string strAccount, uint160 hColor, const CCoinAddr& addrTo, int64 nValueTo, CWalletTx& wtx)$/;"	f
update_altchain_tx	../server/ext/altchain.cpp	/^int update_altchain_tx(CIface *iface, string strAccount, uint160 hColor, const CPubKey& addrTo, int64 nValueTo, CWalletTx& wtx)$/;"	f
update_altchain_tx	../server/ext/altchain.cpp	/^int update_altchain_tx(CIface *iface, string strAccount, uint160 hColor, const CScript& addrTo, int64 nValueTo, CWalletTx& wtx)$/;"	f
update_altchain_tx	../server/ext/altchain.cpp	/^int update_altchain_tx(CIface *iface, string strAccount, uint160 hColor, vector<CTransaction> vAltTx, CWalletTx& wtx)$/;"	f
update_asset_tx	../server/ext/asset.cpp	/^int update_asset_tx(CIface *iface, string strAccount, const uint160& hashAsset, string strTitle, string strHash, CWalletTx& wtx)$/;"	f
update_big	../server/algo/sph_simd.c	/^update_big(void *cc, const void *data, size_t len)$/;"	f	file:
update_ctx_tx	../server/ext/context.cpp	/^int update_ctx_tx(CIface *iface, CWalletTx& wtx, string strAccount, string strName, cbuff vchValue, shgeo_t *loc, bool fAddr)$/;"	f
update_exec_tx	../server/ext/exec.cpp	/^int update_exec_tx(CIface *iface, string strAccount, const uint160& hExec, CWalletTx& wtx)$/;"	f
update_param_tx	../server/ext/ext_param.cpp	/^int update_param_tx(CIface *iface, string strParam, int64_t valParam, CWalletTx& wtx)$/;"	f
update_small	../server/algo/sph_simd.c	/^update_small(void *cc, const void *data, size_t len)$/;"	f	file:
usage	../server/rpc/rpc_proto.h	/^  string usage;$/;"	m	class:RPCOp
user_flag_label	../stratum/stratum_user.c	/^static const char *user_flag_label[MAX_USER_FLAGS] = {$/;"	v	file:
user_t	../stratum/stratum.h	/^typedef struct user_t$/;"	s
user_t	../stratum/stratum.h	/^} user_t;$/;"	t	typeref:struct:user_t
ushorts	../server/bolo/bolo_validation03.cpp	/^union _bits256 { uint8_t bytes[32]; uint16_t ushorts[16]; uint32_t uints[8]; uint64_t ulongs[4]; uint64_t txid; };$/;"	m	union:_bits256	file:
uthread_t	../unet/unet.h	/^typedef void *(*uthread_t)(void *);$/;"	t
vAddr	../server/account.h	/^		CCoinAddr vAddr[MAX_ACCADDR];$/;"	m	class:CAccountCache
vAddr	../server/ext/certificate.h	/^    cbuff vAddr;$/;"	m	class:CIdent
vAddrKey	../server/ext/txext.h	/^    cbuff vAddrKey;$/;"	m	class:CSign
vAddrToSend	../server/net.h	/^    std::vector<CAddress> vAddrToSend;$/;"	m	class:CNode
vArg	../server/ext/exec.h	/^		vector<cbuff> vArg;	$/;"	m	class:CExecCore
vBatchIn	../server/txcreator.h	/^    vector<CTxIn> vBatchIn;$/;"	m	class:CTxBatchCreator
vBits	../server/bloom.h	/^    std::vector<bool> vBits;$/;"	m	class:CPartialMerkleTree
vBlockHashesToAnnounce	../server/net.h	/^		std::vector<uint256> vBlockHashesToAnnounce;$/;"	m	class:CNode
vBytes	../server/bloom.h	/^        std::vector<unsigned char> vBytes;$/;"	m	class:CPartialMerkleTree
vCoins	../test/testcoin_coin.cpp	/^static vector<COutput> vCoins;$/;"	v	file:
vContext	../server/ext/certificate.h	/^    cbuff vContext;$/;"	m	class:CCert
vContext	../server/ext/exec.h	/^		cbuff vContext;$/;"	m	class:CExecCore
vData	../server/matrix.h	/^    uint32_t vData[3][3];$/;"	m	class:CTxMatrix
vData	../server/net.h	/^    std::vector<unsigned char> vData;$/;"	m	class:CBloomFilter
vDeployments	../proto/coin_proto.h	/^  BIP9Deployment vDeployments[MAX_VERSION_BITS_DEPLOYMENTS];  $/;"	m	struct:coin_iface_t
vDerive	../test/testcoin_bip32.cpp	/^    std::vector<TestDerivation> vDerive;$/;"	m	struct:TestVector	file:
vDerive	../test/testcoin_sip33.cpp	/^    std::vector<sip33_TestDerivation> vDerive;$/;"	m	struct:sip33_TestVector	file:
vGenBlocks	../stratum/stratum_miner.cpp	/^map<const uint256, CBlockIndex *> vGenBlocks[MAX_COIN_IFACE];$/;"	v
vHash	../server/bloom.h	/^    std::vector<uint256> vHash;$/;"	m	class:CPartialMerkleTree
vHave	../server/block.h	/^		std::vector<uint256> vHave;$/;"	m	class:CBlockLocator
vInventoryToSend	../server/net.h	/^    std::vector<CInv> vInventoryToSend;$/;"	m	class:CNode
vMatchedTxn	../server/bloom.h	/^    std::vector<std::pair<unsigned int, uint256> > vMatchedTxn;$/;"	m	class:CMerkleBlock
vMerkleBranch	../server/main.h	/^    std::vector<uint256> vMerkleBranch;$/;"	m	class:CMerkleTx
vOrderForm	../server/wallet.h	/^		std::vector<std::pair<std::string, std::string> > vOrderForm;$/;"	m	class:CWalletTx
vPubKey	../server/ext/txext.h	/^    cbuff vPubKey;$/;"	m	class:CSign
vRandom	../server/addrman.h	/^    std::vector<int> vRandom;$/;"	m	class:CAddrMan
vRecv	../server/net.h	/^    CDataStream vRecv;$/;"	m	class:CNode
vSend	../server/net.h	/^    CDataStream vSend;$/;"	m	class:CNode
vSig	../server/ext/txext.h	/^    std::vector<cbuff> vSig;$/;"	m	class:CSign
vSorted	../server/util.h	/^    std::vector<T> vSorted;$/;"	m	class:CMedianFilter
vSpent	../server/block.h	/^    std::vector<CDiskTxPos> vSpent;$/;"	m	class:CTxIndex
vTx	../server/ext/exec.h	/^		vector<uint256> vTx;$/;"	m	class:CExecCore
vTxList	../server/txcreator.h	/^    vector<CWalletTx> vTxList;$/;"	m	class:CTxBatchCreator
vValues	../server/util.h	/^    std::vector<T> vValues;$/;"	m	class:CMedianFilter
v_	../server/json/json_spirit_value.h	/^        Variant v_;$/;"	m	class:json_spirit::Value_impl
valid_pkey_hash	../stratum/stratum_api.cpp	/^static bool valid_pkey_hash(const string strAccount, uint256 in_pkey)$/;"	f	file:
validate_channel_tx	../server/ext/channel.cpp	/^int validate_channel_tx(CIface *iface, CTransaction *txCommit, CWalletTx& wtx)$/;"	f
validate_render_fractal	../server/matrix.cpp	/^int validate_render_fractal(int ifaceIndex, char *img_path, double zoom, double span, double x_of, double y_of)$/;"	f
valtype	../server/coinaddr.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
valtype	../server/script.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
valtype	../server/txmempool.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
valtype	../server/txsignature.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
value	../server/sync.h	/^		int value;$/;"	m	class:CSemaphore
value_	../server/json/json_spirit_reader_template.h	/^            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;$/;"	m	class:json_spirit::Json_grammer::definition
value_	../server/json/json_spirit_reader_template.h	/^        Value_type& value_;             \/\/ this is the object or array that is being created$/;"	m	class:json_spirit::Semantic_actions
value_	../server/json/json_spirit_value.h	/^        Value_type value_;$/;"	m	struct:json_spirit::Pair_impl
value_type	../server/allocators.h	/^    typedef typename base::value_type value_type;$/;"	t	struct:secure_allocator
value_type	../server/allocators.h	/^    typedef typename base::value_type value_type;$/;"	t	struct:zero_after_free_allocator
value_type	../server/mruset.h	/^		typedef T value_type;$/;"	t	class:mruset
value_type	../server/serialize.h	/^    typedef vector_type::value_type       value_type;$/;"	t	class:CDataStream
vcalc_sha256	../server/bolo/bolo_validation03.cpp	/^void vcalc_sha256(char deprecated[(256 >> 3) * 2 + 1],uint8_t hash[256 >> 3],uint8_t *src,int32_t len)$/;"	f
vch	../server/key.h	/^    CSecret vch;$/;"	m	class:CKey
vch	../server/serialize.h	/^    vector_type vch;$/;"	m	class:CDataStream
vchAux	../server/ext/altchain.h	/^		cbuff vchAux;$/;"	m	class:CAltTx
vchChain	../server/hdkey.h	/^    cbuff vchChain;$/;"	m	class:HDPrivKey
vchChain	../server/hdkey.h	/^    cbuff vchChain;$/;"	m	class:HDPubKey
vchCryptedKey	../server/crypter.h	/^    std::vector<unsigned char> vchCryptedKey;$/;"	m	class:CMasterKey
vchData	../server/base58.h	/^		cbuff vchData;$/;"	m	class:CBase58Data
vchDefaultKey	../server/wallet.h	/^		CPubKey vchDefaultKey;$/;"	m	class:CWallet
vchFingerprint	../server/dikey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:DIExtKey
vchFingerprint	../server/dikey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:DIExtPubKey
vchFingerprint	../server/eckey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:ECExtKey
vchFingerprint	../server/eckey.h	/^	uint8_t vchFingerprint[4];$/;"	m	struct:ECExtPubKey
vchFromString	../server/shlib.h	/^inline std::vector<unsigned char> vchFromString(const std::string &str) {$/;"	f
vchFromValue	../server/rpc/rpc_proto.h	/^inline vector<unsigned char> vchFromValue(const json_spirit::Value& value) {$/;"	f
vchLabel	../server/ext/txext.h	/^    cbuff vchLabel;$/;"	m	class:CExtCore
vchMethod	../server/ext/exec.h	/^		cbuff vchMethod;$/;"	m	class:CExecCore
vchOtherDerivationParameters	../server/crypter.h	/^    std::vector<unsigned char> vchOtherDerivationParameters;$/;"	m	class:CMasterKey
vchPayAddr	../server/ext/offer.h	/^    cbuff vchPayAddr;$/;"	m	class:COffer
vchPayCoin	../server/ext/offer.h	/^		cbuff vchPayCoin;$/;"	m	class:COffer
vchPrivKey	../server/wallet.h	/^		CPrivKey vchPrivKey;$/;"	m	class:CWalletKey
vchPub	../server/key.h	/^    cbuff vchPub;$/;"	m	class:CKey
vchPubKey	../server/key.h	/^		std::vector<unsigned char> vchPubKey;$/;"	m	class:CPubKey
vchPubKey	../server/wallet.h	/^		CPubKey vchPubKey;$/;"	m	class:CAccount
vchSalt	../server/crypter.h	/^    std::vector<unsigned char> vchSalt;$/;"	m	class:CMasterKey
vchVersion	../server/base58.h	/^		cbuff vchVersion;$/;"	m	class:CBase58Data
vchXferAddr	../server/ext/offer.h	/^    cbuff vchXferAddr;$/;"	m	class:COffer
vchXferCoin	../server/ext/offer.h	/^		cbuff vchXferCoin;$/;"	m	class:COffer
vector_type	../server/serialize.h	/^    typedef std::vector<char, zero_after_free_allocator<char> > vector_type;$/;"	t	class:CDataStream
version	../server/script.h	/^	unsigned int version;$/;"	m	struct:WitnessUnknown
version	../stratum/stratum.h	/^  int version;$/;"	m	struct:task_t
vfSpent	../server/wallet.h	/^		std::vector<char> vfSpent; \/\/ which outputs are already spent$/;"	m	class:CWalletTx
vin	../server/block.h	/^    std::vector<CTxIn> vin;$/;"	m	class:CTransactionCore
vin	../server/ext/altchain.h	/^		std::vector<CTxIn> vin;$/;"	m	class:CAltTx
vout	../server/block.h	/^    std::vector<CTxOut> vout;$/;"	m	class:CTransactionCore
vout	../server/ext/altchain.h	/^		std::vector<CTxOut> vout;$/;"	m	class:CAltTx
vstrprintf	../server/util.cpp	/^string vstrprintf(const std::string &format, va_list ap)$/;"	f
vtx	../server/block.h	/^    std::vector<CTransaction> vtx;$/;"	m	class:CBlock
vtx	../server/ext/altchain.h	/^		std::vector<CAltTx> vtx;$/;"	m	class:CAltChain
vtxPrev	../server/wallet.h	/^		std::vector<CMerkleTx> vtxPrev;$/;"	m	class:CWalletTx
vtxinwit	../server/block.h	/^    std::vector<CTxInWitness> vtxinwit;$/;"	m	class:CTxWitness
vvNew	../server/addrman.h	/^    std::vector<std::set<int> > vvNew;$/;"	m	class:CAddrMan
vvTried	../server/addrman.h	/^    std::vector<std::vector<int> > vvTried;$/;"	m	class:CAddrMan
wArray	../server/json/json_spirit_value.h	/^    typedef wConfig::Array_type  wArray;$/;"	t	namespace:json_spirit
wConfig	../server/json/json_spirit_value.h	/^    typedef Config_vector< std::wstring > wConfig;$/;"	t	namespace:json_spirit
wMapped_obj	../server/json/json_spirit_utils.h	/^    typedef std::map< std::wstring, wValue > wMapped_obj;$/;"	t	namespace:json_spirit
wObject	../server/json/json_spirit_value.h	/^    typedef wConfig::Object_type wObject;$/;"	t	namespace:json_spirit
wPair	../server/json/json_spirit_value.h	/^    typedef wConfig::Pair_type   wPair;$/;"	t	namespace:json_spirit
wValue	../server/json/json_spirit_value.h	/^    typedef wConfig::Value_type  wValue;$/;"	t	namespace:json_spirit
wait	../server/sync.h	/^		void wait() {$/;"	f	class:CSemaphore
wallet	../server/account.h	/^		mutable CWallet *wallet;$/;"	m	class:CAccountCache
wallet_MergeTx	../server/wallettx.cpp	/^static bool wallet_MergeTx(CWallet *wallet, const uint256& hash, const CWalletTx& wtxIn, CWalletTx& wtx)$/;"	f	file:
wallet_wtx_filename	../server/wallet.cpp	/^static const char *wallet_wtx_filename(CWallet *wallet)$/;"	f	file:
weight	../stratum/stratum.h	/^  double weight[MAX_COIN_IFACE];$/;"	m	struct:task_attr_t
wide	../server/algo/sph_groestl.h	/^		sph_u64 wide[16];$/;"	m	union:__anon30::__anon31
wide	../server/algo/sph_groestl.h	/^		sph_u64 wide[8];$/;"	m	union:__anon28::__anon29
wide	../server/algo/sph_jh.h	/^		sph_u64 wide[16];$/;"	m	union:__anon32::__anon33
wide	../server/algo/sph_keccak.h	/^		sph_u64 wide[25];$/;"	m	union:__anon35::__anon36
wit	../server/block.h	/^    CTxWitness wit;$/;"	m	class:CTransactionCore
witness_v0_SignatureHash	../server/txsignature.cpp	/^static uint256 witness_v0_SignatureHash(CScript scriptCode, CTransaction& txTo, unsigned int nIn, int nHashType, int64 nAmount)$/;"	f	file:
wmArray	../server/json/json_spirit_value.h	/^    typedef wmConfig::Array_type  wmArray;$/;"	t	namespace:json_spirit
wmConfig	../server/json/json_spirit_value.h	/^    typedef Config_map< std::wstring > wmConfig;$/;"	t	namespace:json_spirit
wmObject	../server/json/json_spirit_value.h	/^    typedef wmConfig::Object_type wmObject;$/;"	t	namespace:json_spirit
wmValue	../server/json/json_spirit_value.h	/^    typedef wmConfig::Value_type  wmValue;$/;"	t	namespace:json_spirit
work	../stratum/stratum.h	/^  scrypt_work work;$/;"	m	struct:task_t
work_diff	../stratum/stratum.h	/^  int work_diff;$/;"	m	struct:user_t
work_map	../stratum/stratum_miner.cpp	/^typedef map<unsigned int, CBlock*> work_map;$/;"	t	file:
work_reset	../stratum/stratum.h	/^  int work_reset;$/;"	m	struct:task_t
work_reset	../stratum/stratum_task.c	/^static int work_reset[MAX_COIN_IFACE];$/;"	v	file:
work_stamp	../proto/coin_proto.h	/^  time_t work_stamp;$/;"	m	struct:coin_iface_t
work_stamp	../stratum/stratum.h	/^  time_t work_stamp;$/;"	m	struct:user_t
worker	../stratum/stratum.h	/^  char worker[128];$/;"	m	struct:user_t
write	../server/json/json_spirit_writer.cpp	/^std::string json_spirit::write( const Value& value )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^std::string json_spirit::write( const mValue& value )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^std::wstring json_spirit::write( const wValue&  value )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^std::wstring json_spirit::write( const wmValue&  value )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^void json_spirit::write( const Value& value, std::ostream& os )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^void json_spirit::write( const mValue& value, std::ostream& os )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^void json_spirit::write( const wValue& value, std::wostream& os )$/;"	f	class:json_spirit
write	../server/json/json_spirit_writer.cpp	/^void json_spirit::write( const wmValue& value, std::wostream& os )$/;"	f	class:json_spirit
write	../server/serialize.h	/^    CAutoFile& write(const char* pch, size_t nSize)$/;"	f	class:CAutoFile
write	../server/serialize.h	/^    CDataStream& write(const char* pch, int nSize)$/;"	f	class:CDataStream
write	../server/util.h	/^    CHashWriter& write(const char *pch, size_t size) {$/;"	f	class:CHashWriter
write_formatted	../server/json/json_spirit_writer.cpp	/^std::string json_spirit::write_formatted( const Value& value )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^std::string json_spirit::write_formatted( const mValue& value )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^std::wstring json_spirit::write_formatted( const wValue&  value )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^std::wstring json_spirit::write_formatted( const wmValue&  value )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^void json_spirit::write_formatted( const Value& value, std::ostream& os )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^void json_spirit::write_formatted( const mValue& value, std::ostream& os )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^void json_spirit::write_formatted( const wValue& value, std::wostream& os )$/;"	f	class:json_spirit
write_formatted	../server/json/json_spirit_writer.cpp	/^void json_spirit::write_formatted( const wmValue& value, std::wostream& os )$/;"	f	class:json_spirit
write_stream	../server/json/json_spirit_writer_template.h	/^    void write_stream( const Value_type& value, Ostream_type& os, bool pretty )$/;"	f	namespace:json_spirit
write_string	../server/json/json_spirit_writer_template.h	/^    typename Value_type::String_type write_string( const Value_type& value, bool pretty )$/;"	f	namespace:json_spirit
writeoptions	../server/leveldb.h	/^    leveldb::WriteOptions writeoptions;$/;"	m	class:CLevelDB
writer	../server/ext/exec.cpp	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
x	../server/spring.c	/^  unsigned int x, y;$/;"	m	struct:spring_bits	file:
x0	../server/algo/sph_cubehash.c	143;"	d	file:
x1	../server/algo/sph_cubehash.c	144;"	d	file:
x11hash	../server/algo/x11.c	/^void x11hash(void *output, const void *input)$/;"	f
x2	../server/algo/sph_cubehash.c	145;"	d	file:
x3	../server/algo/sph_cubehash.c	146;"	d	file:
x4	../server/algo/sph_cubehash.c	147;"	d	file:
x5	../server/algo/sph_cubehash.c	148;"	d	file:
x6	../server/algo/sph_cubehash.c	149;"	d	file:
x7	../server/algo/sph_cubehash.c	150;"	d	file:
x8	../server/algo/sph_cubehash.c	151;"	d	file:
x9	../server/algo/sph_cubehash.c	152;"	d	file:
xa	../server/algo/sph_cubehash.c	153;"	d	file:
xb	../server/algo/sph_cubehash.c	154;"	d	file:
xc	../server/algo/sph_cubehash.c	155;"	d	file:
xd	../server/algo/sph_cubehash.c	156;"	d	file:
xe	../server/algo/sph_cubehash.c	157;"	d	file:
xf	../server/algo/sph_cubehash.c	158;"	d	file:
xg	../server/algo/sph_cubehash.c	159;"	d	file:
xh	../server/algo/sph_cubehash.c	160;"	d	file:
xi	../server/algo/sph_cubehash.c	161;"	d	file:
xj	../server/algo/sph_cubehash.c	162;"	d	file:
xk	../server/algo/sph_cubehash.c	163;"	d	file:
xl	../server/algo/sph_cubehash.c	164;"	d	file:
xm	../server/algo/sph_cubehash.c	165;"	d	file:
xn	../server/algo/sph_cubehash.c	166;"	d	file:
xnonce2	../stratum/stratum.h	/^  char xnonce2[16];$/;"	m	struct:task_t
xo	../server/algo/sph_cubehash.c	167;"	d	file:
xor_salsa8	../server/algo/scrypt.c	/^static inline void xor_salsa8(uint32_t B[16], const uint32_t Bx[16])$/;"	f	file:
xp	../server/algo/sph_cubehash.c	168;"	d	file:
xq	../server/algo/sph_cubehash.c	169;"	d	file:
xr	../server/algo/sph_cubehash.c	170;"	d	file:
xs	../server/algo/sph_cubehash.c	171;"	d	file:
xt	../server/algo/sph_cubehash.c	172;"	d	file:
xu	../server/algo/sph_cubehash.c	173;"	d	file:
xv	../server/algo/sph_cubehash.c	174;"	d	file:
y	../server/spring.c	/^  unsigned int x, y;$/;"	m	struct:spring_bits	file:
yoff_b_f	../server/algo/sph_simd.c	/^static const unsigned short yoff_b_f[] = {$/;"	v	file:
yoff_b_n	../server/algo/sph_simd.c	/^static const unsigned short yoff_b_n[] = {$/;"	v	file:
yoff_s_f	../server/algo/sph_simd.c	/^static const unsigned short yoff_s_f[] = {$/;"	v	file:
yoff_s_n	../server/algo/sph_simd.c	/^static const unsigned short yoff_s_n[] = {$/;"	v	file:
zero_after_free_allocator	../server/allocators.h	/^    zero_after_free_allocator() throw() {}$/;"	f	struct:zero_after_free_allocator
zero_after_free_allocator	../server/allocators.h	/^    zero_after_free_allocator(const zero_after_free_allocator& a) throw() : base(a) {}$/;"	f	struct:zero_after_free_allocator
zero_after_free_allocator	../server/allocators.h	/^    zero_after_free_allocator(const zero_after_free_allocator<U>& a) throw() : base(a) {}$/;"	f	struct:zero_after_free_allocator
zero_after_free_allocator	../server/allocators.h	/^struct zero_after_free_allocator : public std::allocator<T>$/;"	s
~CAutoBN_CTX	../server/bignum.h	/^    ~CAutoBN_CTX()$/;"	f	class:CAutoBN_CTX
~CAutoFile	../server/serialize.h	/^    ~CAutoFile()$/;"	f	class:CAutoFile
~CBase58Data	../server/base58.h	/^		~CBase58Data()$/;"	f	class:CBase58Data
~CBigNum	../server/bignum.h	/^    ~CBigNum()$/;"	f	class:CBigNum
~CCrypter	../server/crypter.h	/^    ~CCrypter()$/;"	f	class:CCrypter
~CDB	../server/txidx.h	/^    ~CDB() { Close(); }$/;"	f	class:CDB
~CDBEnv	../server/txidx.cpp	/^CDBEnv::~CDBEnv()$/;"	f	class:CDBEnv
~CInit	../server/util.cpp	/^    ~CInit()$/;"	f	class:CInit
~CKeyStore	../server/keystore.h	/^    virtual ~CKeyStore() {}$/;"	f	class:CKeyStore
~CLevelDB	../server/leveldb.cpp	/^CLevelDB::~CLevelDB() {$/;"	f	class:CLevelDB
~CMutexLock	../server/sync.h	/^		~CMutexLock()$/;"	f	class:CMutexLock
~CNode	../server/net.h	/^    ~CNode()$/;"	f	class:CNode
~CSemaphoreGrant	../server/sync.h	/^		~CSemaphoreGrant() {$/;"	f	class:CSemaphoreGrant
~secure_allocator	../server/allocators.h	/^    ~secure_allocator() throw() {}$/;"	f	struct:secure_allocator
~zero_after_free_allocator	../server/allocators.h	/^    ~zero_after_free_allocator() throw() {}$/;"	f	struct:zero_after_free_allocator
